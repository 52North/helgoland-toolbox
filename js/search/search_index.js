var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/Address.html",[0,0.081,1,3.073]],["body/interfaces/Address.html",[0,0.128,1,5.123,2,0.053,3,0.049,4,0.04,5,3.426,6,0.195,7,0.621,8,6.206,9,5.293,10,6.206,11,5.293,12,6.206,13,5.293,14,6.206,15,5.293,16,5.293,17,5.293,18,4.697,19,6.206,20,5.293,21,0.706,22,0.473,23,0.005,24,0.421,25,3.426,26,5.152,27,1.855,28,1.427,29,0.59,30,3.594,31,1.067,32,4.075,33,3.323,34,2.925,35,2.127,36,3.815,37,3.815,38,2.387,39,3.7,40,2.595,41,4.632,42,4.885,43,2.275,44,4.593,45,4.593,46,4.593,47,0.777,48,0.059,49,4.632,50,3.426,51,3.426,52,3.426,53,3.426,54,0.08,55,3.249,56,1.266,57,1.445,58,2.974,59,3.426,60,0.849,61,2.39,62,0.583,63,2.764,64,0.877,65,4.7,66,1.165,67,3.426,68,2.611,69,3.426,70,3.426,71,1.596,72,3.426,73,3.101,74,4.885,75,4.421,76,3.426,77,3.426,78,3.426,79,1.205,80,4.885,81,4.632,82,3.249,83,3.426,84,3.426,85,1.373,86,0.003,87,3.426,88,0.852,89,3.426,90,4.121,91,1.76,92,3.426,93,3.426,94,3.426,95,3.426,96,3.426,97,1.855,98,2.233,99,4.885,100,2.974,101,3.426,102,3.426,103,2.764,104,3.426,105,3.426,106,3.426,107,3.426,108,2.764,109,3.426,110,3.426,111,3.426,112,2.764,113,3.426,114,3.426,115,2.764,116,3.426,117,3.426,118,2.764,119,3.426,120,3.426,121,2.764,122,3.426,123,3.426,124,3.426,125,3.426,126,3.426,127,2.764,128,3.426,129,3.426,130,3.426,131,0.003]],["title/classes/ApiInterface.html",[54,0.092,132,2.817]],["body/classes/ApiInterface.html",[2,0.08,3,0.073,4,0.06,6,0.294,21,0.69,22,0.395,23,0.005,24,0.385,48,0.054,54,0.15,57,2.271,64,0.99,79,1.421,86,0.004,88,1.121,131,0.004,132,4.599,133,8.059,134,8.059,135,5.946,136,1.695,137,7.402,138,7.402,139,7.402,140,2.199,141,1.183,142,6.628,143,1.247,144,7.402,145,6.941,146,2.064,147,6.628,148,4.645,149,4.031,150,4.727,151,4.48,152,3.013,153,4.164,154,4.313,155,5.497,156,4.313,157,6.628,158,8.983,159,6.628,160,6.628]],["title/interfaces/AxesOptions.html",[0,0.081,161,4.191]],["body/interfaces/AxesOptions.html",[0,0.135,2,0.082,3,0.075,4,0.062,6,0.301,7,0.828,21,0.699,22,0.486,23,0.005,47,1.602,48,0.055,64,1.262,86,0.004,131,0.004,161,6.939,162,6.78,163,9.476,164,9.476,165,3.665,166,1.947,167,9.476,168,9.476,169,9.476,170,4.581,171,1.684,172,1.08,173,6.78]],["title/components/AxesOptionsComponent.html",[174,0.805,175,1.833]],["body/components/AxesOptionsComponent.html",[2,0.059,3,0.054,4,0.044,6,0.216,21,0.324,22,0.233,23,0.005,24,0.228,29,0.653,38,1.591,48,0.04,54,0.088,62,0.775,64,0.808,66,1.251,79,0.736,86,0.003,88,0.916,98,1.365,131,0.003,136,1.385,140,1.757,141,0.966,166,1.001,174,1.394,175,3.024,176,1.638,177,1.854,178,1.854,179,7.725,180,6.93,181,4.371,182,1.502,183,3.318,184,3.226,185,3.276,186,2.138,187,6.045,188,8.335,189,2.721,190,7.725,191,1.638,192,2.721,193,4.371,194,4.371,195,1.094,196,1.568,197,4.872,198,1.402,199,2.407,200,2.444,201,2.407,202,3.121,203,1.854,204,2.564,205,1.568,206,1.824,207,2.94,208,1.767,209,1.197,210,3.767,211,1.767,212,2.254,213,2.266,214,2.095,215,3.444,216,1.714,217,1.74,218,2.676,219,1.74,220,1.251,221,1.888,222,1.795,223,1.854,224,1.767,225,1.688,226,1.767,227,1.714,228,2.94,229,1.767,230,1.638,231,1.767,232,2.334,233,1.795,234,1.795,235,1.945,236,1.854,237,1.767,238,1.767,239,1.854,240,1.767,241,2.138,242,1.767,243,1.74,244,1.767,245,1.614,246,1.614,247,1.854,248,1.74,249,1.767,250,1.999,251,2.266,252,1.767,253,2.847,254,1.854,255,1.767,256,1.854,257,1.767,258,1.854,259,1.767,260,1.383,261,1.688,262,1.688,263,2.559,264,1.767,265,1.74,266,1.767,267,2.94,268,1.767,269,1.568,270,1.824,271,2.564,272,1.767,273,1.767,274,1.795,275,1.568,276,1.767,277,1.863,278,1.767,279,1.402,280,1.854,281,1.74,282,1.767,283,1.767,284,1.824,285,1.767,286,1.767,287,1.294,288,1.714,289,1.854]],["title/injectables/BasicAuthService.html",[28,1.149,290,4.533]],["body/injectables/BasicAuthService.html",[2,0.07,3,0.064,4,0.053,6,0.256,7,0.748,21,0.683,22,0.403,23,0.005,24,0.417,27,2.435,28,1.915,29,0.774,34,3.369,48,0.047,54,0.105,60,1.458,61,4.104,62,0.945,64,0.907,66,1.073,79,1.486,85,1.654,86,0.004,88,1.027,97,3.186,131,0.004,136,1.553,141,1.364,143,1.142,171,1.284,195,1.697,235,1.348,290,6.779,291,9.69,292,5.776,293,2.469,294,6.956,295,7.556,296,8.933,297,8.933,298,8.933,299,4.79,300,5.118,301,7.556,302,7.556,303,8.933,304,2.359,305,5.776,306,5.776,307,5.776,308,5.776,309,5.776,310,6.779,311,3.629,312,4.79,313,8.014,314,5.181,315,5.776,316,5.884,317,5.181,318,5.776,319,4.264,320,5.776,321,8.933]],["title/interfaces/BlacklistedService.html",[0,0.081,322,3.175]],["body/interfaces/BlacklistedService.html",[0,0.162,2,0.082,3,0.075,4,0.062,6,0.3,7,0.828,21,0.703,22,0.4,23,0.005,24,0.316,47,1.195,48,0.081,86,0.004,88,1.232,131,0.004,140,2.154,148,4.896,166,1.863,171,1.54,304,1.896,322,5.697,323,4.769,324,6.4,325,4.769,326,2.906,327,5.9,328,4.574,329,4.769,330,4.769,331,5.9,332,4.574,333,4.115,334,3.272,335,4.769,336,5.648,337,5.648,338,4.403]],["title/components/BoolTogglerComponent.html",[174,0.805,205,1.626]],["body/components/BoolTogglerComponent.html",[2,0.056,3,0.051,4,0.042,6,0.206,21,0.572,22,0.391,23,0.005,24,0.217,29,0.623,38,1.518,48,0.038,54,0.084,62,0.851,66,1.211,79,0.703,86,0.003,88,0.886,98,1.302,131,0.003,136,1.34,140,1.714,141,1.233,166,0.955,171,1.108,174,1.37,175,1.686,176,1.563,177,1.769,178,1.769,182,1.434,183,3.31,184,3.218,185,1.741,186,2.069,189,2.667,191,1.563,192,2.667,195,1.044,196,2.87,198,1.338,199,2.329,200,2.366,201,2.329,202,3.058,203,1.769,204,2.482,205,2.628,206,3.221,207,2.867,208,1.686,209,1.142,210,3.736,211,1.686,212,2.198,213,2.193,214,2.059,215,3.393,216,1.635,217,1.66,218,2.61,219,1.66,220,1.211,221,1.827,222,1.713,223,1.769,224,1.686,225,1.61,226,1.686,227,1.635,228,2.867,229,1.686,230,1.563,231,1.686,232,2.259,233,1.713,234,1.713,235,1.906,236,1.769,237,1.686,238,1.686,239,1.769,240,1.686,241,2.069,242,1.686,243,1.66,244,1.686,245,1.54,246,1.54,247,1.769,248,1.66,249,1.686,250,1.949,251,2.193,252,1.686,253,2.776,254,1.769,255,1.686,256,1.769,257,1.686,258,1.769,259,1.686,260,1.32,261,1.61,262,1.61,263,2.496,264,1.686,265,1.66,266,1.686,267,2.867,268,1.686,269,1.496,270,1.741,271,2.482,272,1.686,273,1.686,274,1.713,275,1.496,276,1.686,277,1.803,278,1.686,279,1.338,280,1.769,281,1.66,282,1.686,283,1.686,284,1.741,285,1.686,286,1.686,287,1.235,288,1.635,289,1.769,339,8.918,340,8,341,3.856,342,5.409,343,5.409,344,5.52,345,6.759,346,6.248,347,1.692,348,6.759,349,4.171,350,4.171,351,4.171,352,4.171,353,4.649,354,4.649]],["title/classes/BufferedTime.html",[54,0.092,355,3.731]],["body/classes/BufferedTime.html",[2,0.081,3,0.074,4,0.061,6,0.297,7,0.822,22,0.432,23,0.005,47,1.814,48,0.073,54,0.171,60,1.741,62,0.941,64,0.804,86,0.004,88,0.91,131,0.004,140,1.523,141,1.294,143,1.012,152,3.045,172,1.437,355,6.131,356,5.554,357,5.927,358,8.397,359,3.369,360,6.697,361,4.094,362,8.304,363,6.697,364,5.217,365,5.554,366,6.887,367,4.526,368,5.554]],["title/interfaces/Cache.html",[0,0.081,369,2.613]],["body/interfaces/Cache.html",[0,0.143,2,0.079,3,0.072,4,0.059,6,0.289,21,0.543,23,0.005,24,0.416,27,2.748,28,1.857,29,0.874,47,1.441,48,0.053,54,0.118,61,4.433,62,0.759,66,1.516,79,1.234,85,1.787,86,0.004,97,2.748,131,0.004,141,0.934,146,1.742,172,1.038,277,2.583,293,1.801,361,3.381,369,4.831,370,6.357,371,4.811,372,6.942,373,6.516,374,5.257,375,6.584,376,5.311,377,4.592,378,6.258,379,5.311,380,4.811,381,4.811,382,6.942,383,5.404,384,6.77,385,6.357,386,5.404,387,3.963,388,4.811,389,6.027,390,3.734,391,5.404]],["title/interfaces/CachedItem.html",[0,0.081,372,3.935]],["body/interfaces/CachedItem.html",[0,0.142,2,0.077,3,0.071,4,0.058,6,0.285,7,0.801,21,0.427,22,0.387,23,0.005,24,0.413,27,2.706,28,1.839,29,0.861,47,1.64,48,0.052,54,0.116,61,3.486,62,0.752,66,1.502,79,1.222,85,1.77,86,0.004,97,2.706,131,0.004,146,1.37,172,1.022,277,2.569,293,1.774,361,3.349,369,4.577,370,4.999,371,4.739,372,6.894,374,5.221,375,6.891,376,5.261,377,4.523,378,6.413,379,6.233,380,4.739,381,4.739,382,6.894,383,5.324,384,6.706,385,6.297,386,5.324,387,3.903,388,4.739,389,5.97,390,3.678,391,5.324]],["title/classes/CachedMapComponent.html",[54,0.092,392,4.533]],["body/classes/CachedMapComponent.html",[2,0.035,3,0.032,4,0.027,6,0.129,7,0.456,21,0.431,22,0.465,23,0.005,24,0.302,29,0.391,48,0.024,54,0.083,56,1.325,57,2.225,60,0.888,62,0.887,64,0.941,68,1.041,71,2.068,79,1.38,85,1.543,86,0.002,88,1.018,97,1.229,131,0.002,136,0.946,141,1.431,143,1.133,146,0.982,149,1.773,152,1.325,166,0.599,174,0.733,195,2.094,196,2.813,235,2.416,293,2.787,347,1.033,387,2.798,392,4.129,393,8.977,394,2.615,395,2.699,396,4.729,397,5.702,398,3.854,399,6.476,400,6.476,401,6.476,402,6.476,403,6.476,404,6.476,405,6.476,406,7.05,407,4.602,408,4.602,409,6.476,410,6.476,411,5.81,412,2.38,413,6.476,414,4.068,415,4.602,416,4.602,417,6.476,418,6.476,419,5.702,420,5.702,421,5.702,422,4.21,423,5.702,424,5.702,425,5.702,426,2.152,427,4.419,428,3.71,429,7.249,430,4.602,431,2.915,432,2.915,433,2.915,434,5.702,435,2.915,436,4.21,437,2.915,438,2.637,439,7.493,440,1.46,441,2.915,442,2.915,443,5.702,444,2.915,445,4.602,446,7.86,447,2.915,448,4.602,449,2.915,450,2.915,451,2.915,452,2.915,453,2.178,454,3.003,455,2.915,456,3.084,457,2.915,458,2.915,459,4.602,460,2.915,461,4.602,462,2.915,463,2.915,464,2.915,465,2.915,466,3.584,467,2.915,468,4.602,469,2.915,470,2.915,471,4.602,472,2.915,473,2.915,474,4.602,475,2.915,476,1.773,477,1.544,478,1.897,479,4.129,480,2.615,481,2.615,482,2.615,483,4.129,484,2.27,485,2.615,486,2.418,487,1.583,488,1.897,489,1.97,490,1.773,491,2.915,492,2.152,493,3.243,494,3.817,495,4.602,496,4.602,497,4.602,498,5.115,499,1.773,500,2.915,501,7.493,502,2.915,503,4.602,504,2.915,505,4.602,506,2.915,507,4.602,508,2.915,509,4.602,510,2.915,511,5.702,512,2.915,513,2.915,514,2.915,515,2.915,516,5.702,517,4.602,518,0.851,519,2.915,520,2.915,521,4.602,522,4.602,523,2.915,524,2.052,525,2.915,526,2.915,527,2.915,528,2.915,529,2.915,530,2.915,531,1.409,532,6.517,533,2.27,534,2.27,535,2.27,536,2.27,537,2.27,538,2.915,539,4.602,540,4.602,541,4.602,542,4.602,543,2.915,544,2.915,545,1.325,546,0.966,547,2.418,548,2.915,549,2.615,550,2.915,551,4.602,552,2.915,553,2.915,554,4.602,555,2.915,556,2.915,557,2.915,558,2.915,559,2.915,560,2.915,561,2.915,562,4.602,563,2.915,564,2.915]],["title/injectables/CachingInterceptor.html",[28,1.149,565,4.191]],["body/injectables/CachingInterceptor.html",[2,0.066,3,0.061,4,0.05,6,0.244,22,0.351,23,0.005,24,0.46,27,2.324,28,1.872,29,0.739,31,1.337,34,3.653,35,3.542,48,0.045,54,0.1,56,1.586,57,1.688,60,1.413,62,0.765,64,0.879,66,1.024,79,1.419,85,1.604,86,0.003,88,0.996,131,0.003,136,1.691,141,1.051,143,1.108,154,4.767,182,2.816,319,4.07,369,4.953,374,5.173,375,5.163,376,5.707,377,3.884,379,5.355,390,3.158,565,6.076,566,8.23,567,5.512,568,7.383,569,4.945,570,8.23,571,6.476,572,5.512,573,4.07,574,5.928,575,4.24,576,6.18,577,5.512,578,4.603,579,5.512,580,5.512,581,4.292,582,5.163,583,5.512,584,5.512,585,4.945,586,5.512,587,4.511,588,4.945,589,3.884,590,5.512,591,5.512,592,8.23,593,5.512,594,3.463,595,4.292,596,5.17,597,7.327,598,5.512,599,3.884,600,5.512,601,4.571,602,4.07,603,5.512,604,4.07,605,5.512,606,5.512,607,5.512,608,5.512,609,5.512,610,5.512,611,5.512,612,6.573,613,5.512,614,5.512,615,4.455,616,5.512,617,5.512,618,5.512,619,5.512,620,5.163,621,2.506,622,4.945,623,5.512]],["title/interfaces/Category.html",[0,0.081,624,2.443]],["body/interfaces/Category.html",[0,0.148,2,0.096,3,0.088,4,0.072,23,0.005,24,0.371,48,0.064,86,0.004,131,0.004,143,1.509,172,1.464,624,4.444,625,3.02,626,7.936]],["title/interfaces/CollectionMetadata.html",[0,0.081,627,3.288]],["body/interfaces/CollectionMetadata.html",[0,0.162,2,0.078,3,0.071,4,0.059,6,0.285,7,0.802,21,0.661,22,0.424,23,0.005,47,1.847,48,0.081,62,0.753,86,0.004,131,0.004,146,2.203,166,1.821,172,1.411,176,2.162,182,2.496,334,3.108,347,1.444,359,2.162,627,6.05,628,4.346,629,4.925,630,4.401,631,6.285,632,3.91,633,4.922,634,4.346,635,4.346,636,3.792,637,4.346,638,3.023,639,4.346,640,4.346,641,4.346,642,4.346,643,4.346,644,3.792,645,3.91,646,4.922,647,4.346,648,5.267,649,4.346,650,3.91]],["title/components/ColorSelectorComponent.html",[174,0.805,208,1.833]],["body/components/ColorSelectorComponent.html",[2,0.058,3,0.053,4,0.044,6,0.214,21,0.58,22,0.368,23,0.005,24,0.226,29,0.647,38,1.577,48,0.039,54,0.088,62,0.715,66,1.244,86,0.003,88,0.91,98,1.353,131,0.003,140,1.749,141,1.102,166,0.992,174,1.389,175,1.752,176,1.624,177,1.838,178,1.838,182,1.489,183,3.321,184,3.225,185,1.808,186,2.125,189,2.711,191,1.624,192,2.711,196,2.807,198,1.39,199,2.392,200,2.43,201,2.392,202,3.109,203,1.838,204,2.549,205,1.554,206,1.808,207,2.926,208,3.012,209,2.318,210,3.761,211,1.752,212,2.243,213,2.252,214,2.088,215,3.434,216,1.699,217,1.725,218,2.664,219,1.725,220,1.244,221,1.876,222,1.78,223,1.838,224,1.752,225,1.673,226,1.752,227,1.699,228,2.926,229,1.752,230,1.624,231,1.752,232,2.32,233,1.78,234,1.78,235,1.937,236,1.838,237,1.752,238,1.752,239,1.838,240,1.752,241,2.125,242,1.752,243,1.725,244,1.752,245,1.6,246,1.6,247,1.838,248,1.725,249,1.752,250,1.989,251,2.252,252,1.752,253,2.833,254,1.838,255,1.752,256,1.838,257,1.752,258,1.838,259,1.752,260,1.371,261,1.673,262,1.673,263,2.547,264,1.752,265,1.725,266,1.752,267,2.926,268,1.752,269,1.554,270,1.808,271,2.549,272,1.752,273,1.752,274,1.78,275,1.554,276,1.752,277,1.851,278,1.752,279,1.39,280,1.838,281,1.725,282,1.752,283,1.752,284,1.808,285,1.752,286,1.752,287,1.283,288,1.699,289,1.838,332,5.197,651,8.304,652,7.449,653,2.692,654,3.734,655,7.689,656,4.332,657,4.005,658,4.005]],["title/injectables/ColorService.html",[28,1.149,659,3.288]],["body/injectables/ColorService.html",[2,0.089,3,0.082,4,0.067,6,0.327,21,0.649,23,0.005,24,0.344,28,2.139,29,0.987,48,0.06,54,0.133,62,0.875,71,2.67,79,1.422,85,1.612,86,0.004,131,0.004,136,1.807,141,1.261,209,1.808,293,2.6,659,5.723,660,7.361,661,9.745,662,9.745,663,7.361,664,7.361,665,7.361,666,7.361,667,7.361]],["title/interfaces/D3GraphOptions.html",[0,0.081,668,3.935]],["body/interfaces/D3GraphOptions.html",[0,0.144,2,0.092,3,0.084,4,0.069,6,0.338,7,0.889,22,0.457,23,0.005,24,0.356,48,0.062,86,0.004,131,0.004,171,1.622,212,2.224,668,6.993,669,5.936,670,3.608,671,6.322,672,8.175,673,6.946,674,7.676,675,3.851]],["title/components/D3OverviewTimeseriesGraphComponent.html",[174,0.805,211,1.833]],["body/components/D3OverviewTimeseriesGraphComponent.html",[2,0.038,3,0.034,4,0.028,6,0.138,7,0.479,21,0.396,22,0.448,23,0.005,24,0.278,29,0.417,31,0.754,38,1.015,47,0.855,48,0.025,54,0.056,56,1.393,57,1.115,60,0.934,62,0.935,64,0.872,66,1.246,68,1.111,79,1.099,85,0.681,86,0.002,88,1.046,98,0.871,131,0.002,136,0.995,140,2.207,141,1.374,143,1.014,166,0.639,171,1.14,174,1.158,175,1.128,176,1.046,177,1.183,178,1.183,182,0.959,183,3.224,184,3.134,185,1.164,186,1.536,189,2.514,191,1.999,192,2.85,195,1.805,196,2.675,198,0.895,199,1.729,200,1.756,201,1.729,202,2.512,203,1.183,204,1.842,205,1.001,206,1.164,207,2.262,208,1.128,209,0.764,210,3.437,211,2.434,212,2.492,213,3.486,214,2.487,215,2.93,216,1.094,217,1.111,218,2.059,219,1.111,220,0.899,221,1.356,222,1.146,223,1.183,224,1.128,225,1.077,226,1.128,227,1.094,228,2.262,229,1.128,230,1.046,231,1.128,232,1.677,233,1.146,234,1.146,235,1.796,236,1.183,237,1.128,238,1.128,239,1.183,240,1.128,241,1.536,242,1.128,243,1.111,244,1.128,245,1.03,246,1.03,247,1.183,248,1.111,249,1.128,250,1.538,251,1.628,252,1.128,253,2.191,254,1.183,255,1.128,256,1.183,257,1.128,258,1.183,259,1.128,260,0.883,261,1.077,262,1.077,263,1.97,264,1.128,265,1.111,266,1.128,267,2.262,268,1.128,269,1.001,270,1.164,271,1.842,272,1.128,273,1.128,274,1.146,275,1.001,276,1.128,277,2.128,278,1.128,279,0.895,280,1.183,281,1.111,282,1.128,283,1.128,284,1.164,285,1.128,286,1.128,287,0.826,288,1.094,289,1.183,293,2.128,347,0.698,357,4.837,395,2.814,412,2.503,440,0.987,453,2.292,454,3.111,456,1.36,518,1.413,531,2.34,546,1.97,670,2.292,676,6.798,677,6.52,678,1.782,679,3.314,680,4.018,681,2.201,682,2.855,683,2.855,684,6.019,685,4.728,686,6.019,687,6.019,688,3.74,689,4.842,690,4.343,691,3.868,692,3.176,693,4.93,694,5.333,695,3.735,696,5.333,697,4.389,698,2.579,699,4.389,700,5.225,701,4.842,702,2.629,703,3.11,704,3.11,705,4.018,706,3.11,707,3.11,708,3.11,709,2.79,710,3.11,711,3.11,712,3.11,713,3.11,714,3.11,715,4.842,716,3.11,717,2.392,718,4.343,719,3.11,720,2.79,721,2.79,722,3.11,723,2.296,724,2.192,725,2.024,726,2.422,727,3.77,728,2.422,729,5.333,730,4.343,731,4.343,732,2.79,733,2.422,734,2.79,735,3.11,736,2.579,737,1.954,738,2.79,739,2.79]],["title/interfaces/D3PlotOptions.html",[0,0.081,705,3.415]],["body/interfaces/D3PlotOptions.html",[0,0.118,2,0.066,3,0.061,4,0.05,6,0.244,7,0.725,22,0.489,23,0.005,48,0.045,64,1.23,86,0.003,131,0.003,171,1.793,174,1.31,212,1.606,213,3.155,220,1.359,287,1.944,344,4.947,347,1.968,489,4.947,493,6.748,518,2.136,546,2.425,587,3.616,638,2.498,669,4.286,670,3.465,671,4.565,675,3.698,705,6.655,725,5.703,740,3.246,741,6.177,742,6.612,743,7.307,744,5.33,745,6.177,746,5.507,747,3.465,748,5.573,749,5.706,750,5.17,751,5.158,752,6.567,753,6.071,754,5.158,755,5.404,756,4.451,757,3.877]],["title/classes/D3SelectionRange.html",[54,0.092,758,3.935]],["body/classes/D3SelectionRange.html",[2,0.092,3,0.085,4,0.07,6,0.339,7,0.89,22,0.431,23,0.005,47,1.799,48,0.062,54,0.163,62,0.948,86,0.004,131,0.004,141,1.289,669,7.44,758,7.001,759,4.028,760,7.638,761,7.638,762,7.638]],["title/interfaces/Data.html",[0,0.081,638,1.724]],["body/interfaces/Data.html",[0,0.162,2,0.083,3,0.076,4,0.063,6,0.306,7,0.837,21,0.609,22,0.405,23,0.005,43,3.568,47,1.683,48,0.082,54,0.125,86,0.004,91,3.384,98,2.37,131,0.004,172,1.518,347,2.264,359,3.075,524,3.077,625,2.626,638,2.886,763,4.664,764,4.628,765,4.513,766,5.951,767,5.503,768,4.196,769,4.49,770,4.715,771,5.717,772,4.07]],["title/interfaces/DataConst.html",[0,0.081,773,3.935]],["body/interfaces/DataConst.html",[0,0.076,2,0.012,3,0.011,4,0.009,6,0.195,7,0.175,18,0.535,21,0.553,22,0.046,23,0.005,24,0.206,29,0.129,31,0.233,32,1.366,34,1.216,35,0.853,47,1.617,48,0.008,54,0.017,56,0.508,57,1.35,60,0.185,62,0.372,64,0.48,65,3.924,66,0.743,68,1.699,71,3.113,79,1.193,85,1.625,86,0.001,90,0.497,91,2.651,97,1.498,100,2.974,131,0.001,140,0.691,141,0.138,146,1.535,150,1.012,153,0.603,154,0.625,156,1.978,165,2.074,166,1.452,170,3.279,171,1.222,172,0.39,174,0.39,183,0.3,184,0.292,186,0.305,189,0.8,191,1.599,192,1.16,195,1.14,196,0.568,199,0.631,200,0.889,209,1.081,212,1.036,213,1.022,214,1.054,216,0.338,220,1.45,225,1.053,227,0.338,232,0.333,235,0.412,245,1.177,246,0.585,265,0.343,277,1.988,279,2.316,287,0.944,288,0.621,293,2.62,304,0.495,326,1.525,347,0.798,359,1.346,428,0.625,438,3.97,440,0.305,456,2.459,488,2.311,489,2.705,499,2.676,518,1.933,531,3.815,532,0.748,533,0.748,534,0.748,535,0.748,536,0.748,537,0.748,545,3.084,546,2.341,575,0.464,594,0.603,596,0.603,615,0.584,621,1.615,629,0.935,630,0.455,638,2.664,659,1.594,670,2.876,673,0.677,675,3.694,676,0.677,677,0.649,678,0.55,679,0.984,681,0.437,682,0.566,683,0.566,688,0.535,692,1.439,695,0.603,702,0.959,705,1.656,724,0.677,725,1.149,728,0.748,737,0.603,741,0.677,742,2.503,743,1.375,744,0.584,745,0.677,746,1.91,747,2.083,748,1.742,749,1.074,750,3.7,751,4.128,754,4.78,756,0.584,757,3.323,759,2.37,773,1.375,774,1.352,775,1.109,776,1.49,777,0.603,778,0.649,779,0.758,780,1.041,781,0.819,782,2.232,783,4.485,784,2.946,785,0.796,786,0.796,787,0.796,788,0.796,789,2.623,790,2.367,791,2.821,792,2.955,793,2.955,794,2.032,795,2.521,796,2.032,797,2.032,798,2.705,799,1.193,800,1.464,801,2.032,802,1.193,803,2.032,804,1.149,805,0.649,806,0.649,807,0.796,808,5.355,809,2.521,810,0.796,811,0.796,812,0.796,813,0.709,814,0.709,815,0.625,816,0.796,817,0.796,818,0.796,819,1.49,820,1.375,821,2.521,822,1.193,823,0.649,824,0.649,825,0.796,826,0.709,827,0.796,828,0.796,829,0.709,830,0.709,831,0.796,832,4.125,833,2.032,834,0.796,835,0.796,836,0.796,837,3.658,838,3.576,839,1.464,840,0.796,841,0.677,842,1.298,843,0.603,844,0.709,845,0.984,846,1.656,847,0.677,848,1.074,849,2.676,850,0.709,851,1.304,852,4.886,853,1.809,854,1.304,855,1.304,856,0.709,857,0.709,858,0.709,859,0.709,860,0.796,861,0.709,862,0.709,863,0.796,864,0.796,865,0.796,866,0.796,867,2.777,868,1.244,869,0.709,870,0.709,871,0.748,872,0.796,873,0.819,874,1.074,875,0.603,876,1.464,877,0.796,878,1.809,879,0.796,880,0.709,881,2.623,882,1.109,883,2.623,884,1.809,885,1.304,886,2.955,887,0.853,888,1.304,889,1.304,890,0.709,891,2.946,892,1.464,893,2.032,894,0.584,895,0.584,896,0.748,897,1.464,898,0.796,899,0.55,900,0.796,901,0.566,902,0.709,903,1.464,904,0.796,905,0.796,906,0.796,907,1.464,908,0.796,909,0.584,910,1.464,911,1.464,912,2.521,913,3.32,914,1.464,915,4.208,916,1.464,917,1.464,918,3.944,919,0.584,920,0.584,921,0.796,922,2.032,923,0.584,924,1.074,925,0.709,926,0.796,927,0.584,928,0.796,929,0.796,930,0.566,931,0.796,932,0.709,933,0.649,934,0.677,935,0.584,936,1.464,937,0.796,938,0.796,939,0.709,940,1.304,941,0.796,942,0.796,943,0.796,944,0.796,945,1.375,946,0.796,947,0.55,948,0.748,949,0.796,950,0.796,951,1.375,952,1.464,953,1.109,954,3.101,955,0.603,956,0.748,957,1.656,958,0.796,959,0.796,960,2.521,961,0.796,962,1.464,963,0.748,964,1.464,965,0.796,966,0.649,967,0.796,968,0.796,969,0.796,970,0.796,971,0.796,972,0.796,973,0.796,974,0.796,975,0.796,976,0.796,977,0.796,978,0.796,979,0.796,980,1.882,981,0.796,982,1.809,983,0.748,984,2.401,985,0.748,986,2.032,987,0.796,988,0.649,989,0.796,990,0.796,991,0.796,992,0.796,993,0.796,994,0.796,995,1.375,996,0.796,997,0.796,998,0.796,999,1.464,1000,0.796,1001,2.521,1002,2.032,1003,0.796,1004,0.796,1005,0.796,1006,0.709,1007,1.464,1008,0.796,1009,0.796,1010,0.796,1011,0.365,1012,2.032,1013,2.032,1014,0.796,1015,0.796,1016,0.796,1017,1.464,1018,0.796,1019,1.464,1020,0.796,1021,0.796,1022,0.796,1023,0.796,1024,0.796,1025,0.796,1026,0.796,1027,0.796,1028,2.596,1029,0.796,1030,0.796,1031,2.032,1032,0.796,1033,1.464,1034,1.464,1035,0.796,1036,0.796,1037,1.464,1038,1.464,1039,0.796,1040,0.796,1041,1.464,1042,2.244,1043,2.032,1044,3.511,1045,0.796,1046,0.796,1047,1.464,1048,0.796,1049,0.796,1050,3.799,1051,0.709,1052,2.032,1053,0.796,1054,0.796,1055,0.796,1056,1.244,1057,2.623,1058,0.709,1059,3.958,1060,3.746,1061,2.623,1062,3.746,1063,2.955,1064,1.304,1065,0.796,1066,0.709,1067,0.709,1068,0.709,1069,0.709,1070,0.709,1071,1.304,1072,1.304,1073,0.709,1074,4.632,1075,3.511,1076,1.304,1077,1.304,1078,1.304,1079,1.304,1080,1.809,1081,1.304,1082,0.709,1083,2.244,1084,0.709,1085,2.244,1086,1.809,1087,1.809,1088,2.623,1089,1.304,1090,2.521,1091,0.709,1092,0.677,1093,0.709,1094,1.304,1095,0.796,1096,0.796,1097,1.464,1098,0.796,1099,0.796,1100,0.796,1101,2.032,1102,0.796,1103,0.796,1104,0.796,1105,0.796,1106,0.796,1107,0.796,1108,1.978,1109,0.796,1110,1.464,1111,0.796,1112,0.796,1113,0.796,1114,0.796,1115,0.796,1116,1.464,1117,0.796,1118,0.796,1119,0.796,1120,0.796,1121,0.796,1122,1.375,1123,0.796,1124,0.796,1125,0.796,1126,0.796,1127,0.796,1128,0.603,1129,0.796,1130,1.375,1131,1.464,1132,0.796,1133,0.796,1134,0.796,1135,1.464,1136,1.464,1137,0.709,1138,0.796,1139,0.625,1140,1.464,1141,1.742,1142,0.796,1143,0.748,1144,0.796,1145,0.796,1146,0.796,1147,1.464,1148,1.464,1149,2.521,1150,2.521,1151,3.944,1152,0.796,1153,0.796,1154,3.944,1155,3.32,1156,2.521,1157,2.521,1158,2.946,1159,0.796,1160,2.946,1161,0.796,1162,2.946,1163,2.946,1164,2.032,1165,2.946,1166,3.32,1167,2.367,1168,1.375,1169,0.796,1170,1.464,1171,0.796,1172,0.748,1173,2.946,1174,4.632,1175,0.796,1176,1.464,1177,0.796,1178,2.032,1179,2.032,1180,0.796,1181,1.464,1182,0.796,1183,1.464,1184,0.677,1185,0.796,1186,0.796,1187,0.748,1188,0.796,1189,1.375,1190,1.304,1191,0.796,1192,2.521,1193,0.796,1194,1.304,1195,0.677,1196,1.464,1197,2.946,1198,1.464,1199,0.796,1200,0.796,1201,1.464,1202,2.16,1203,1.91,1204,0.796,1205,0.796,1206,0.796,1207,0.796,1208,1.464,1209,0.731,1210,0.796,1211,0.796,1212,2.054,1213,2.521,1214,2.946,1215,1.464,1216,2.521,1217,1.809,1218,1.464,1219,1.464,1220,1.464,1221,1.464,1222,1.304,1223,0.796,1224,1.375,1225,2.623,1226,1.809,1227,1.304,1228,0.796,1229,1.809,1230,1.539,1231,1.809,1232,0.796,1233,1.809,1234,0.497,1235,0.709,1236,0.796,1237,1.149,1238,1.304,1239,3.249,1240,3.249,1241,0.709,1242,1.366,1243,0.796,1244,2.563,1245,0.796,1246,2.521,1247,1.464,1248,0.796,1249,1.464,1250,0.796,1251,2.032,1252,0.796,1253,1.539,1254,0.709,1255,0.796,1256,0.709,1257,1.304,1258,0.796,1259,0.796,1260,0.796,1261,0.709,1262,0.709,1263,0.709,1264,0.709,1265,0.796,1266,1.304,1267,0.709,1268,0.709,1269,1.464,1270,0.796,1271,1.464,1272,0.796,1273,0.796,1274,0.796,1275,0.796,1276,0.796,1277,0.796,1278,1.464,1279,0.748,1280,0.796,1281,0.796,1282,0.649,1283,0.796,1284,0.796,1285,0.796,1286,0.796,1287,0.796,1288,0.796,1289,0.796,1290,0.796,1291,0.796,1292,0.796,1293,0.796,1294,0.796,1295,0.796,1296,1.464,1297,0.796,1298,0.796,1299,0.796,1300,2.032,1301,0.796,1302,0.796,1303,0.796,1304,0.796,1305,1.464,1306,0.796,1307,0.748,1308,1.149,1309,0.709,1310,2.032,1311,0.796,1312,0.796,1313,0.796,1314,0.796,1315,1.464,1316,0.796,1317,0.748,1318,0.709,1319,0.796,1320,0.709,1321,1.464,1322,0.796,1323,1.464,1324,0.709,1325,0.709,1326,0.796,1327,0.796,1328,0.796,1329,0.796,1330,0.796,1331,0.796,1332,0.709,1333,0.796,1334,0.796,1335,0.709,1336,0.709,1337,0.796,1338,0.709,1339,0.796,1340,0.709,1341,0.796,1342,1.375,1343,0.796,1344,0.709,1345,1.464,1346,1.464,1347,1.464,1348,0.796,1349,3.944,1350,0.709,1351,0.709,1352,0.796,1353,0.796,1354,0.748,1355,0.796,1356,0.796,1357,0.709,1358,1.464,1359,2.521,1360,0.796,1361,0.796,1362,0.796,1363,0.796,1364,0.796,1365,0.796,1366,1.375,1367,0.796,1368,0.796,1369,1.464,1370,0.796,1371,1.464,1372,0.796,1373,0.796,1374,0.796,1375,2.032,1376,1.464,1377,0.796,1378,1.464,1379,0.677,1380,0.796,1381,0.796,1382,1.464,1383,0.709,1384,0.709,1385,1.695,1386,0.796,1387,2.521,1388,2.032,1389,1.464,1390,0.796,1391,0.796,1392,2.032,1393,0.796,1394,1.464,1395,1.464,1396,1.464,1397,2.032,1398,1.464,1399,1.464,1400,0.796,1401,0.796,1402,1.464,1403,0.796,1404,0.796,1405,0.796,1406,1.809,1407,1.304,1408,0.796,1409,0.796,1410,0.709,1411,0.796,1412,0.796,1413,0.709,1414,0.748,1415,0.796,1416,0.796,1417,0.796,1418,0.796,1419,0.796,1420,2.032,1421,1.464,1422,0.796,1423,0.796,1424,0.748,1425,0.796,1426,1.304,1427,2.521,1428,2.946,1429,0.796,1430,0.796,1431,0.796,1432,2.946,1433,0.796,1434,2.434,1435,1.464,1436,1.244,1437,2.032,1438,4.325,1439,0.709,1440,3.511,1441,2.521,1442,1.464,1443,0.796,1444,1.464,1445,1.304,1446,1.464,1447,1.727,1448,0.796,1449,0.796,1450,1.193,1451,0.796,1452,0.709,1453,1.809,1454,1.304,1455,2.032,1456,1.304,1457,0.796,1458,0.709,1459,0.796,1460,1.375,1461,0.796,1462,0.796,1463,0.796,1464,0.709,1465,0.709,1466,0.796,1467,0.709,1468,0.709,1469,0.709,1470,1.809,1471,0.709,1472,2.244,1473,2.244,1474,0.709,1475,0.709,1476,0.709,1477,0.709,1478,0.709,1479,0.709,1480,0.603,1481,1.464,1482,0.796,1483,3.944,1484,0.796,1485,0.796,1486,0.796,1487,0.709]],["title/interfaces/DataParameterFilter.html",[0,0.081,1488,3.415]],["body/interfaces/DataParameterFilter.html",[0,0.155,2,0.085,3,0.078,4,0.064,6,0.314,7,0.851,21,0.698,22,0.443,23,0.005,48,0.075,64,1.202,86,0.004,131,0.004,140,2.187,171,1.674,172,1.368,250,1.831,294,5.512,524,3.156,747,4.552,934,6.777,935,4.304,1488,5.806,1489,5.87,1490,5.87,1491,4.672,1492,3.422,1493,5.512,1494,3.66,1495,5.512,1496,4.447,1497,4.784]],["title/interfaces/DataSeries.html",[0,0.081,824,3.415]],["body/interfaces/DataSeries.html",[0,0.154,2,0.092,3,0.084,4,0.069,6,0.338,7,0.889,21,0.635,22,0.43,23,0.005,48,0.073,86,0.004,131,0.004,165,3.813,171,1.295,172,1.43,638,3.363,759,3.214,824,6.069,1498,6.839,1499,7.447,1500,6.839,1501,6.839]],["title/classes/Dataset.html",[54,0.092,220,0.938]],["body/classes/Dataset.html",[0,0.131,2,0.055,3,0.051,4,0.042,6,0.203,7,0.639,21,0.696,22,0.469,23,0.005,24,0.349,47,1.14,48,0.078,54,0.165,56,2.152,62,0.993,64,0.775,86,0.003,88,0.623,131,0.003,141,1.404,143,1.52,146,1.826,165,3.434,166,1.824,170,4.291,171,0.778,172,1.191,209,1.586,214,1.097,220,1.199,221,2.274,250,1.186,260,1.301,304,2.487,347,1.029,359,1.541,518,1.337,545,2.083,624,2.215,625,3.757,764,4.452,774,3.088,1234,2.37,1492,2.215,1494,4.962,1502,2.787,1503,5.492,1504,5.086,1505,5.226,1506,4.935,1507,4.583,1508,5.46,1509,4.583,1510,4.583,1511,4.583,1512,4.583,1513,4.583,1514,5.379,1515,4.583,1516,4.583,1517,4.583,1518,4.583,1519,4.583,1520,4.583,1521,2.555,1522,4.299,1523,2.169,1524,2.215,1525,2.215,1526,2.787,1527,3.808,1528,4.77,1529,2.626,1530,2.626,1531,2.626,1532,2.703]],["title/interfaces/DatasetApi.html",[0,0.081,327,3.288]],["body/interfaces/DatasetApi.html",[0,0.162,2,0.082,3,0.075,4,0.062,6,0.3,7,0.828,21,0.703,22,0.4,23,0.005,24,0.316,47,1.195,48,0.081,86,0.004,88,1.347,131,0.004,140,2.154,148,3.499,166,1.863,171,1.54,304,2.653,322,5.251,323,4.769,324,4.574,325,4.769,326,2.906,327,6.161,328,4.574,329,4.769,330,4.769,331,5.9,332,4.574,333,4.115,334,3.272,335,4.769,336,5.648,337,5.648,338,4.403]],["title/injectables/DatasetApiMapping.html",[28,1.149,1533,3.731]],["body/injectables/DatasetApiMapping.html",[2,0.072,3,0.066,4,0.054,6,0.264,7,0.763,21,0.569,22,0.433,23,0.005,24,0.399,27,2.51,28,1.944,29,0.798,34,3.999,48,0.063,54,0.108,57,1.372,60,1.487,61,4.185,62,0.795,64,1.025,66,1.587,79,1.292,86,0.004,88,1.161,131,0.004,136,1.584,141,1.296,143,1.292,148,3.078,195,1.337,235,2.184,260,1.691,293,2.651,299,4.938,300,5.178,311,3.74,347,1.337,369,4.673,440,1.889,620,4.195,1521,3.319,1533,5.69,1534,5.218,1535,6.911,1536,5.341,1537,7.707,1538,7.707,1539,7.707,1540,7.707,1541,6.35,1542,7.495,1543,5.954,1544,7.707,1545,5.954,1546,5.341,1547,5.341,1548,4.396,1549,5.954,1550,7.707,1551,5.954,1552,5.954,1553,5.341,1554,5.954,1555,4.636,1556,5.341,1557,5.954,1558,5.954]],["title/interfaces/DatasetApiV2.html",[0,0.081,1559,4.191]],["body/interfaces/DatasetApiV2.html",[0,0.113,2,0.062,3,0.057,4,0.047,6,0.229,21,0.697,22,0.441,23,0.005,24,0.44,34,3.998,48,0.042,64,1.241,65,4.937,79,1.35,86,0.003,88,1.214,131,0.003,136,1.441,140,2.143,141,1.281,143,1.393,146,1.966,148,5.231,149,5.976,151,3.491,172,1.117,220,0.959,260,1.467,311,3.245,587,2.552,638,1.763,765,2.445,873,2.395,1488,5.774,1491,5.083,1496,6.416,1534,5.135,1559,5.817,1560,9.212,1561,5.165,1562,7.964,1563,6.605,1564,8.264,1565,8.264,1566,5.165,1567,5.165,1568,5.165,1569,5.165,1570,5.165,1571,5.165,1572,5.165,1573,5.165,1574,5.165,1575,5.165,1576,5.612,1577,4.284,1578,3.814,1579,4.634,1580,4.284,1581,5.165,1582,5.165]],["title/components/DatasetByStationSelectorComponent.html",[174,0.805,219,1.805]],["body/components/DatasetByStationSelectorComponent.html",[2,0.044,3,0.04,4,0.033,6,0.16,7,0.537,21,0.434,22,0.406,23,0.005,24,0.253,29,0.484,31,0.875,38,1.178,47,1.15,48,0.044,54,0.098,56,1.561,57,0.831,60,1.046,62,0.907,64,0.651,66,1.007,71,1.308,79,0.985,85,1.427,86,0.003,88,0.985,98,1.01,131,0.003,132,3.023,136,1.114,140,1.482,141,1.302,143,0.82,146,0.77,166,0.741,171,0.613,172,0.574,174,1.238,175,1.308,176,1.213,177,1.372,178,1.372,182,1.112,183,3.266,184,3.169,185,1.35,186,1.72,189,2.366,191,1.213,192,2.366,195,1.463,196,2.627,198,1.038,199,1.937,200,1.967,201,1.937,202,2.714,203,1.372,204,2.064,205,1.161,206,1.35,207,2.48,208,1.308,209,0.886,210,3.556,211,1.308,212,1.901,213,1.823,214,2.174,215,3.106,216,1.269,217,1.288,218,2.257,219,2.589,220,1.618,221,2.901,222,1.329,223,1.372,224,1.308,225,1.249,226,1.308,227,1.269,228,2.48,229,1.308,230,1.213,231,1.308,232,1.879,233,1.329,234,1.329,235,1.691,236,1.372,237,1.308,238,1.308,239,1.372,240,1.308,241,1.72,242,1.308,243,1.288,244,1.308,245,1.195,246,1.195,247,1.372,248,1.288,249,1.308,250,1.686,251,1.823,252,1.308,253,2.401,254,1.372,255,1.308,256,1.372,257,1.308,258,1.372,259,1.308,260,1.024,261,1.249,262,1.249,263,2.159,264,1.308,265,1.288,266,1.308,267,2.48,268,1.308,269,1.161,270,1.35,271,2.064,272,1.308,273,1.308,274,1.329,275,1.161,276,1.308,277,1.499,278,1.308,279,1.038,280,1.372,281,1.288,282,1.308,283,1.308,284,1.35,285,1.308,286,1.308,287,0.958,288,1.269,289,1.372,293,1.801,304,1.826,344,3.665,347,1.218,361,2.246,398,4.404,414,4.553,440,1.72,518,1.582,621,1.64,653,2.011,654,3.023,658,2.991,681,2.465,717,2.679,759,2.287,779,3.112,1583,8.274,1584,7.649,1585,3.821,1586,5.753,1587,6.502,1588,6.502,1589,5.846,1590,5.075,1591,2.663,1592,4.498,1593,3.236,1594,3.236,1595,3.236,1596,3.236,1597,4.865,1598,7.227,1599,3.607,1600,3.607,1601,2.809,1602,4.865,1603,3.236,1604,4.865,1605,3.236,1606,6.502,1607,3.236,1608,3.236,1609,3.236,1610,2.809,1611,3.236,1612,3.236,1613,3.236,1614,3.236,1615,4.865,1616,4.865,1617,3.236,1618,3.236,1619,3.236,1620,5.423,1621,5.423,1622,5.423,1623,5.423,1624,5.423,1625,5.423,1626,4.498]],["title/interfaces/DatasetConstellation.html",[0,0.081,1627,4.191]],["body/interfaces/DatasetConstellation.html",[0,0.081,2,0.023,3,0.021,4,0.018,6,0.224,7,0.325,21,0.511,22,0.314,23,0.005,24,0.307,29,0.259,31,0.469,47,1.578,48,0.016,54,0.035,56,1.233,57,1.813,60,0.373,62,0.642,64,1.063,66,1.219,68,0.69,71,3.07,79,1.392,85,2.003,86,0.002,91,0.773,97,2.386,131,0.002,146,1.474,150,1.882,166,1.163,170,1.588,171,1.045,172,0.523,174,0.523,183,0.605,184,0.588,186,0.613,189,1.649,191,1.903,192,2.143,195,1.674,196,1.057,209,0.807,212,1.474,217,0.69,218,1.96,220,1.051,225,0.67,227,0.68,235,0.766,277,1.184,279,0.945,293,2.771,304,0.542,361,0.801,395,1.555,440,1.602,453,0.915,454,1.523,518,1.651,545,0.879,546,1.088,594,2.064,630,1.555,638,2.1,668,3.335,670,2.027,672,1.603,673,1.362,674,1.505,675,3.977,676,1.362,677,1.306,678,1.108,679,1.831,681,0.879,682,1.14,683,1.14,688,1.078,692,1.555,702,1.784,724,3.018,727,1.505,737,1.214,742,2.315,747,0.915,750,3.629,751,3.988,757,3.259,758,3.335,759,1.806,768,3.441,774,2.153,775,2.064,776,2.604,777,1.214,778,1.306,779,1.41,780,1.937,781,1.523,783,6.156,789,3.729,791,5.254,792,4.178,793,4.178,805,1.306,806,1.306,813,1.427,819,1.175,826,1.427,829,1.427,830,1.427,832,4.2,841,1.362,842,2.269,843,1.214,844,1.427,845,1.831,846,2.22,847,1.362,848,1.997,849,1.997,850,1.427,851,1.427,853,1.427,854,1.427,855,1.427,856,1.427,857,1.427,858,1.427,859,1.427,861,1.427,862,1.427,867,2.796,870,1.427,873,1.523,874,1.997,875,1.214,878,2.425,880,1.427,881,3.162,882,2.064,883,3.162,884,2.425,885,1.427,886,4.543,887,2.07,888,2.425,889,2.425,890,2.425,894,1.175,895,1.175,899,1.108,901,1.14,902,1.427,909,1.175,919,1.175,920,1.175,923,1.175,924,1.997,925,1.427,927,1.175,930,1.14,933,1.306,940,1.427,955,1.214,1006,1.427,1028,3.629,1042,4.178,1044,5.317,1050,4.159,1051,1.427,1057,1.427,1058,1.427,1059,4.178,1060,4.845,1061,3.162,1062,5.1,1063,3.729,1064,1.427,1066,1.427,1067,1.427,1068,1.427,1069,1.427,1070,1.427,1071,1.427,1072,1.427,1073,1.427,1074,5.317,1075,3.729,1076,2.425,1077,2.425,1078,1.427,1079,2.425,1080,3.162,1081,1.427,1082,1.427,1083,2.425,1084,1.427,1085,3.162,1086,1.427,1087,3.729,1088,3.162,1089,2.425,1091,1.427,1092,1.362,1093,1.427,1094,2.425,1128,1.214,1174,1.427,1184,1.362,1190,1.427,1195,2.315,1202,1.997,1217,1.427,1222,1.427,1225,4.178,1226,2.425,1227,1.427,1229,2.425,1230,2.064,1231,2.425,1233,1.427,1234,0.999,1235,2.425,1237,2.137,1238,2.425,1239,4.178,1240,4.178,1241,2.425,1242,2.388,1244,0.846,1253,2.691,1254,1.427,1256,1.427,1257,1.427,1261,1.427,1262,1.427,1263,1.427,1264,1.427,1266,2.425,1267,1.427,1268,1.427,1318,1.427,1320,1.427,1324,1.427,1325,1.427,1332,1.427,1335,1.427,1336,1.427,1338,1.427,1340,1.427,1344,1.427,1350,1.427,1351,2.425,1383,1.427,1384,1.427,1406,3.729,1407,3.162,1410,1.427,1426,1.427,1434,1.175,1438,5.668,1439,1.427,1440,5.317,1445,1.427,1452,1.427,1453,3.162,1454,2.425,1456,2.425,1458,1.427,1464,1.427,1465,1.427,1467,1.427,1468,1.427,1469,1.427,1470,2.425,1471,1.427,1472,3.162,1473,3.162,1474,1.427,1475,1.427,1476,1.427,1477,1.427,1478,1.427,1479,1.427,1480,1.214,1590,1.505,1610,1.505,1627,2.724,1628,6.529,1629,4.531,1630,4.531,1631,5.888,1632,3.842,1633,1.734,1634,1.734,1635,1.734,1636,1.734,1637,1.734,1638,1.734,1639,1.734,1640,1.734,1641,1.734,1642,1.734,1643,1.734,1644,1.734,1645,1.734,1646,1.734,1647,1.734,1648,1.734,1649,1.734,1650,1.734,1651,5.52,1652,1.734,1653,1.603,1654,1.734,1655,2.724,1656,2.947,1657,5.52,1658,1.734,1659,1.734,1660,3.842,1661,1.734,1662,3.842,1663,1.734,1664,1.734,1665,1.734,1666,1.362,1667,4.531,1668,1.734,1669,1.734,1670,1.214,1671,1.734,1672,1.734,1673,2.947,1674,2.947,1675,1.603,1676,1.734,1677,1.734,1678,1.734,1679,1.734,1680,1.734,1681,1.734,1682,1.734,1683,1.734,1684,2.947,1685,1.603,1686,1.734,1687,1.734,1688,1.734,1689,5.52,1690,1.734,1691,1.734,1692,1.734,1693,1.734,1694,1.734,1695,1.734,1696,2.947,1697,3.842,1698,2.724,1699,1.734,1700,1.734,1701,2.947,1702,1.734,1703,1.734,1704,1.734,1705,1.734,1706,1.734,1707,1.734,1708,1.734,1709,1.734,1710,1.734,1711,3.729,1712,5.888,1713,5.254,1714,1.734,1715,5.077,1716,1.734,1717,3.842,1718,2.947,1719,1.734,1720,1.734,1721,1.734,1722,4.531,1723,1.734,1724,1.734,1725,2.947,1726,1.734,1727,1.734,1728,1.734,1729,1.734,1730,1.734,1731,1.734,1732,1.734,1733,1.734,1734,2.947,1735,1.734,1736,1.734,1737,1.734,1738,3.842,1739,1.734,1740,4.531,1741,1.734,1742,1.734,1743,1.734,1744,2.947,1745,1.734,1746,1.734,1747,2.947,1748,1.734,1749,1.734,1750,1.734,1751,1.734,1752,1.734,1753,1.734,1754,1.734,1755,1.734,1756,1.734,1757,1.734,1758,1.734,1759,1.734,1760,2.947,1761,2.947,1762,1.734,1763,1.734,1764,1.734,1765,1.734,1766,1.734,1767,1.734,1768,1.734,1769,1.734,1770,1.734,1771,1.734,1772,1.734,1773,1.734,1774,1.734,1775,1.734,1776,1.734,1777,1.734,1778,1.734,1779,2.947,1780,2.947,1781,1.734,1782,1.734,1783,1.734,1784,1.734,1785,1.734,1786,1.734,1787,1.734,1788,1.734,1789,1.734,1790,1.734,1791,1.734,1792,1.734,1793,1.734,1794,1.734,1795,1.734,1796,1.734,1797,1.734,1798,2.315,1799,1.362,1800,1.734,1801,1.734,1802,1.734,1803,1.734,1804,1.734,1805,1.734,1806,1.734,1807,1.734,1808,1.734,1809,1.734,1810,1.734,1811,1.734,1812,1.734,1813,1.734,1814,1.734,1815,1.734,1816,1.734,1817,1.734,1818,1.734,1819,3.842,1820,1.734,1821,1.734,1822,1.734,1823,1.734,1824,1.734,1825,1.734]],["title/classes/DatasetOptions.html",[54,0.092,692,2.392]],["body/classes/DatasetOptions.html",[0,0.095,2,0.049,3,0.045,4,0.037,6,0.179,7,0.584,21,0.664,22,0.486,23,0.005,47,1.705,48,0.066,54,0.139,60,1.344,62,0.97,64,1.148,68,2.107,71,2.14,86,0.003,88,0.549,131,0.003,141,1.372,143,0.611,146,1.487,165,3.484,171,1.703,172,0.644,209,2.372,220,1.706,241,1.872,245,2.538,246,2.538,279,2.005,347,2.096,359,2.343,367,2.731,440,2.787,493,6.577,518,2.482,545,4.094,546,1.954,587,2.914,604,4.356,638,2.013,644,3.479,670,3.626,675,4.298,692,4.572,717,3.785,740,2.383,744,4.659,747,4.027,748,3.38,749,3.587,755,4.356,757,4.506,782,5.345,798,5.178,799,5.178,802,5.178,804,4.985,838,2.848,842,3.125,1826,3.147,1827,2.983,1828,5.966,1829,3.625,1830,5.899,1831,4.041,1832,4.041,1833,3.587,1834,4.041,1835,3.289,1836,4.041,1837,4.594,1838,4.041,1839,4.041,1840,4.594,1841,4.594,1842,4.041,1843,4.356,1844,6.016,1845,4.041,1846,4.041,1847,4.041,1848,4.594,1849,4.356,1850,3.147,1851,3.147,1852,2.457,1853,3.147]],["title/classes/DatasetParameterConstellation.html",[54,0.092,1514,2.98]],["body/classes/DatasetParameterConstellation.html",[0,0.134,2,0.059,3,0.054,4,0.045,6,0.218,7,0.671,21,0.687,22,0.445,23,0.005,24,0.362,47,1.196,48,0.079,54,0.168,56,1.95,62,0.992,86,0.003,88,0.667,131,0.003,141,1.333,143,1.574,146,1.446,165,3,166,1.594,170,3.749,171,0.834,172,1.332,209,1.664,214,1.175,220,0.912,221,2.343,250,2.164,260,2.374,304,2.173,347,1.102,359,1.651,518,1.432,545,2.232,624,4.042,625,2.578,764,4.226,774,2.951,1234,2.538,1492,4.042,1494,4.536,1502,2.985,1503,4.574,1504,4.444,1505,4.791,1506,2.985,1508,5.281,1514,4.932,1521,2.737,1522,5.206,1523,3.958,1524,4.042,1525,4.042,1526,2.985,1527,4.932,1528,4.891,1529,2.813,1530,2.813,1531,2.813,1532,2.895,1854,4.909,1855,5.35,1856,4.909,1857,4.909,1858,4.909,1859,4.909,1860,4.909,1861,4.909]],["title/classes/DatasetPresenterComponent.html",[54,0.092,780,2.98]],["body/classes/DatasetPresenterComponent.html",[0,0.052,2,0.039,3,0.036,4,0.029,6,0.143,7,0.494,21,0.664,22,0.476,23,0.005,24,0.404,29,0.433,48,0.026,54,0.09,56,1.436,57,2.347,60,0.962,62,0.924,64,1.12,66,1.375,79,1.378,85,1.712,86,0.002,88,1.174,131,0.002,136,1.025,140,1.915,141,1.444,143,1.306,146,1.065,151,2.185,152,3.927,165,2.863,171,1.163,172,0.795,189,2.662,191,2.303,192,3.015,195,2.223,196,2.709,220,0.926,235,1.825,277,1.893,293,2.388,304,1.707,347,1.368,357,4.914,364,2.031,395,2.884,396,5.052,411,6.145,412,2.579,440,1.583,453,2.361,454,3.176,456,1.414,499,1.966,524,1.441,531,2.412,680,4.117,685,4.826,691,3.964,692,3.242,693,5.052,695,3.827,697,4.498,702,3.308,717,1.597,727,4.744,733,2.517,736,2.681,737,2.031,765,2.884,776,5.615,779,2.941,780,2.942,781,3.176,873,2.825,874,3.704,894,4.165,895,3.033,901,2.942,909,3.033,919,3.033,920,3.033,923,3.033,924,4.756,927,4.165,930,3.593,1379,3.515,1535,2.387,1675,2.681,1855,1.906,1862,9.032,1863,2.9,1864,5.68,1865,6.849,1866,6.849,1867,6.849,1868,6.849,1869,4.475,1870,4.989,1871,4.989,1872,4.989,1873,3.683,1874,4.989,1875,4.989,1876,6.092,1877,5.465,1878,6.092,1879,3.232,1880,4.989,1881,3.232,1882,3.232,1883,3.232,1884,8.419,1885,3.232,1886,3.232,1887,3.232,1888,4.989,1889,3.232,1890,3.232,1891,3.232,1892,3.232,1893,3.232,1894,3.232,1895,3.232,1896,3.232,1897,3.232,1898,3.232,1899,3.232,1900,3.232,1901,3.232,1902,3.232,1903,3.232,1904,3.232,1905,3.232,1906,3.232,1907,3.232,1908,3.232,1909,2.387,1910,2.681,1911,2.9,1912,3.232,1913,3.232,1914,2.9,1915,2.9,1916,2.9,1917,2.681,1918,2.387,1919,2.517,1920,2.9,1921,3.232,1922,4.989,1923,3.232,1924,2.9,1925,4.989,1926,3.232,1927,3.232,1928,3.232,1929,3.232,1930,3.232,1931,4.989,1932,3.232,1933,3.232,1934,3.232,1935,3.232,1936,3.232,1937,3.232,1938,3.232,1939,6.092,1940,3.232,1941,3.232,1942,4.989,1943,3.232,1944,3.232,1945,3.232,1946,3.232,1947,3.232,1948,3.232,1949,3.232,1950,3.232,1951,3.232,1952,3.232]],["title/classes/DatasetService.html",[54,0.092,1953,4.533]],["body/classes/DatasetService.html",[2,0.061,3,0.056,4,0.046,6,0.226,7,0.688,21,0.675,22,0.45,23,0.005,24,0.324,48,0.041,54,0.126,57,2.258,60,1.34,62,0.963,64,1.176,66,1.29,68,2.48,71,2.519,79,1.465,85,1.114,86,0.003,88,1.208,131,0.003,133,8.945,136,1.427,141,1.418,143,1.343,149,3.095,152,3.86,165,3.548,171,1.18,195,2.146,235,2.074,347,1.56,440,2.203,691,5.525,692,4.206,765,4.523,901,4.096,951,5.408,1279,5.408,1869,6.23,1873,5.127,1911,4.567,1953,6.23,1954,5.09,1955,6.945,1956,8.491,1957,8.491,1958,8.491,1959,8.491,1960,6.945,1961,4.222,1962,5.577,1963,6.945,1964,5.09,1965,6.945,1966,5.09,1967,6.945,1968,5.09,1969,5.09,1970,5.09,1971,5.09,1972,5.09,1973,5.09,1974,6.945,1975,5.09,1976,3.587,1977,3.964,1978,4.222,1979,6.945,1980,5.09,1981,8.491,1982,5.09,1983,5.09,1984,5.09,1985,5.09]],["title/interfaces/DatasetTableData.html",[0,0.081,1986,4.533]],["body/interfaces/DatasetTableData.html",[0,0.146,2,0.093,3,0.086,4,0.07,6,0.343,7,0.896,22,0.434,23,0.005,47,1.804,48,0.063,86,0.004,131,0.004,347,2.223,1986,8.122,1987,7.73,1988,5.707,1989,7.73,1990,9.901]],["title/pipes/DateProxyPipe.html",[319,3.731,1991,3.935]],["body/pipes/DateProxyPipe.html",[2,0.082,3,0.075,4,0.061,21,0.603,22,0.324,23,0.005,24,0.423,29,0.906,48,0.055,54,0.122,56,1.944,57,1.556,60,1.303,62,0.776,64,0.811,66,1.55,79,1.37,85,1.479,86,0.004,88,1.231,131,0.004,136,1.388,141,0.969,143,1.021,182,2.083,319,6.987,333,4.108,347,1.875,361,3.458,440,2.143,518,1.971,601,5.603,621,3.071,887,3.266,1308,4.396,1487,4.988,1991,6.501,1992,6.756,1993,5.261,1994,8.348,1995,9.724,1996,6.756,1997,8.348,1998,6.756,1999,3.871,2000,8.348,2001,5.245,2002,3.413,2003,3.578,2004,6.756,2005,6.756,2006,6.756,2007,5.603,2008,6.756,2009,6.756,2010,6.756,2011,6.756,2012,6.061,2013,6.756,2014,6.061,2015,6.756]],["title/injectables/DefinedTimespanService.html",[28,1.149,2016,3.731]],["body/injectables/DefinedTimespanService.html",[2,0.059,3,0.055,4,0.045,6,0.219,7,0.673,22,0.325,23,0.005,24,0.363,28,1.768,29,0.661,48,0.055,54,0.089,60,1.499,62,0.723,64,0.591,66,1.842,79,1.499,85,2.254,86,0.003,88,0.67,131,0.003,136,1.396,140,1.905,141,1.114,143,0.745,150,3.892,151,3.331,235,2.05,293,2.148,347,1.107,440,1.563,822,6.959,1108,5.45,1521,2.747,2016,5.015,2017,7.514,2018,4.421,2019,6.792,2020,6.792,2021,6.792,2022,6.947,2023,4.928,2024,4.928,2025,4.421,2026,4.421,2027,6.093,2028,6.093,2029,6.093,2030,6.093,2031,6.093,2032,6.093,2033,6.093,2034,6.093,2035,6.093,2036,4.928,2037,9.739,2038,4.928,2039,4.928,2040,8.737,2041,4.928,2042,4.928,2043,6.792,2044,4.928,2045,6.792,2046,4.928,2047,4.928,2048,4.928,2049,4.928,2050,4.928,2051,4.928,2052,4.928,2053,4.928,2054,4.928,2055,4.928,2056,4.928,2057,4.928,2058,4.928,2059,4.928,2060,4.928,2061,4.928,2062,4.928,2063,4.928,2064,4.928,2065,4.928,2066,4.928,2067,4.928]],["title/components/DragOptionsComponent.html",[174,0.805,224,1.833]],["body/components/DragOptionsComponent.html",[2,0.059,3,0.054,4,0.044,6,0.216,21,0.325,22,0.234,23,0.005,24,0.228,29,0.654,38,1.593,48,0.04,54,0.088,62,0.775,64,0.809,66,1.253,79,0.737,86,0.003,88,0.916,98,1.367,131,0.003,136,1.386,140,1.758,141,0.967,166,1.002,174,1.394,175,1.77,176,1.64,177,1.856,178,1.856,181,4.376,182,1.504,183,3.319,184,3.227,185,1.827,186,2.14,187,6.051,189,2.723,191,1.64,192,2.723,193,4.376,194,4.376,195,1.095,198,1.404,199,2.409,200,2.447,201,2.409,202,3.123,203,1.856,204,2.566,205,1.57,206,1.827,207,2.942,208,1.77,209,1.198,210,3.768,211,1.77,212,2.255,213,2.268,214,2.096,215,3.445,216,1.716,217,1.742,218,2.678,219,1.742,220,1.253,221,1.889,222,1.798,223,1.856,224,3.025,225,3.032,226,1.77,227,1.716,228,2.942,229,1.77,230,1.64,231,1.77,232,2.336,233,1.798,234,1.798,235,1.946,236,1.856,237,1.77,238,1.77,239,1.856,240,1.77,241,2.14,242,1.77,243,1.742,244,1.77,245,1.616,246,1.616,247,1.856,248,1.742,249,1.77,250,2,251,2.268,252,1.77,253,2.849,254,1.856,255,1.77,256,1.856,257,1.77,258,1.856,259,1.77,260,1.385,261,1.69,262,1.69,263,2.561,264,1.77,265,1.742,266,1.77,267,2.942,268,1.77,269,1.57,270,1.827,271,2.566,272,1.77,273,1.77,274,1.798,275,1.57,276,1.77,277,1.864,278,1.77,279,1.404,280,1.856,281,1.742,282,1.77,283,1.77,284,1.827,285,1.77,286,1.77,287,1.296,288,1.716,289,1.856,745,5.877,2068,7.73,2069,6.935,2070,7.73,2071,4.878]],["title/interfaces/DrawOptions.html",[0,0.081,1628,4.191]],["body/interfaces/DrawOptions.html",[0,0.082,2,0.023,3,0.022,4,0.018,6,0.225,7,0.327,21,0.572,22,0.296,23,0.005,24,0.308,29,0.261,31,0.472,47,1.606,48,0.016,54,0.035,56,1.24,57,1.818,60,0.376,62,0.644,64,0.832,66,1.223,68,0.696,71,3.076,79,1.394,85,2.006,86,0.002,91,0.779,97,2.397,131,0.002,146,1.643,150,1.894,166,1.168,170,2.748,171,1.177,172,0.526,174,0.526,183,0.609,184,0.592,186,0.618,189,1.657,191,1.911,192,2.151,195,1.679,196,1.064,209,1.396,212,1.481,217,0.696,218,1.969,220,0.614,225,0.675,227,0.685,235,0.771,277,1.19,279,0.951,293,2.774,304,0.546,361,0.807,395,1.565,440,1.61,453,0.922,454,1.533,518,1.658,545,0.885,546,1.095,594,3.571,630,2.691,638,1.47,668,3.354,670,2.039,672,1.615,673,1.372,674,1.517,675,3.987,676,1.372,677,1.316,678,1.116,679,1.843,681,0.885,682,1.149,683,1.149,688,1.086,692,1.565,702,1.795,724,3.035,727,1.517,737,1.224,742,2.329,747,0.922,750,3.644,751,4.005,757,3.272,758,3.354,759,1.816,768,2.619,774,1.639,775,2.077,776,2.619,777,1.224,778,1.316,779,1.419,780,1.95,781,1.533,783,6.169,789,3.747,791,4.642,792,4.197,793,4.197,805,1.316,806,1.316,813,1.438,819,1.184,826,1.438,829,1.438,830,1.438,832,4.214,841,1.372,842,2.281,843,1.224,844,1.438,845,1.843,846,2.234,847,1.372,848,2.01,849,2.01,850,1.438,851,1.438,853,1.438,854,1.438,855,1.438,856,1.438,857,1.438,858,1.438,859,1.438,861,1.438,862,1.438,867,2.808,870,1.438,873,1.533,874,2.01,875,1.224,878,2.441,880,1.438,881,3.18,882,2.077,883,3.18,884,2.441,885,1.438,886,4.561,887,2.082,888,2.441,889,2.441,890,2.441,894,1.184,895,1.184,899,1.116,901,1.149,902,1.438,909,1.184,919,1.184,920,1.184,923,1.184,924,2.01,925,1.438,927,1.184,930,1.149,933,1.316,940,1.438,955,1.224,1006,1.438,1028,3.644,1042,4.197,1044,5.334,1050,4.175,1051,1.438,1057,1.438,1058,1.438,1059,4.197,1060,4.863,1061,3.18,1062,5.117,1063,3.747,1064,1.438,1066,1.438,1067,1.438,1068,1.438,1069,1.438,1070,1.438,1071,1.438,1072,1.438,1073,1.438,1074,5.334,1075,3.747,1076,2.441,1077,2.441,1078,1.438,1079,2.441,1080,3.18,1081,1.438,1082,1.438,1083,2.441,1084,1.438,1085,3.18,1086,1.438,1087,3.747,1088,3.18,1089,2.441,1091,1.438,1092,1.372,1093,1.438,1094,2.441,1128,1.224,1174,1.438,1184,1.372,1190,1.438,1195,2.329,1202,2.01,1217,1.438,1222,1.438,1225,4.197,1226,2.441,1227,1.438,1229,2.441,1230,2.077,1231,2.441,1233,1.438,1234,1.007,1235,2.441,1237,2.151,1238,2.441,1239,4.197,1240,4.197,1241,2.441,1242,2.401,1244,0.852,1253,2.706,1254,1.438,1256,1.438,1257,1.438,1261,1.438,1262,1.438,1263,1.438,1264,1.438,1266,2.441,1267,1.438,1268,1.438,1318,1.438,1320,1.438,1324,1.438,1325,1.438,1332,1.438,1335,1.438,1336,1.438,1338,1.438,1340,1.438,1344,1.438,1350,1.438,1351,2.441,1383,1.438,1384,1.438,1406,3.747,1407,3.18,1410,1.438,1426,1.438,1434,1.184,1438,5.684,1439,1.438,1440,5.334,1445,1.438,1452,1.438,1453,3.18,1454,2.441,1456,2.441,1458,1.438,1464,1.438,1465,1.438,1467,1.438,1468,1.438,1469,1.438,1470,2.441,1471,1.438,1472,3.18,1473,3.18,1474,1.438,1475,1.438,1476,1.438,1477,1.438,1478,1.438,1479,1.438,1480,1.224,1590,1.517,1610,1.517,1627,1.615,1628,5.748,1629,1.747,1630,1.747,1631,5.099,1632,3.864,1633,1.747,1634,1.747,1635,1.747,1636,1.747,1637,1.747,1638,1.747,1639,1.747,1640,1.747,1641,1.747,1642,1.747,1643,1.747,1644,1.747,1645,1.747,1646,1.747,1647,1.747,1648,1.747,1649,1.747,1650,1.747,1651,5.542,1652,1.747,1653,1.615,1654,1.747,1655,2.742,1656,2.966,1657,5.542,1658,1.747,1659,1.747,1660,3.864,1661,1.747,1662,3.864,1663,1.747,1664,1.747,1665,1.747,1666,1.372,1667,4.553,1668,1.747,1669,1.747,1670,1.224,1671,1.747,1672,1.747,1673,2.966,1674,2.966,1675,1.615,1676,1.747,1677,1.747,1678,1.747,1679,1.747,1680,1.747,1681,1.747,1682,1.747,1683,1.747,1684,2.966,1685,1.615,1686,1.747,1687,1.747,1688,1.747,1689,5.542,1690,1.747,1691,1.747,1692,1.747,1693,1.747,1694,1.747,1695,1.747,1696,2.966,1697,3.864,1698,2.742,1699,1.747,1700,1.747,1701,2.966,1702,1.747,1703,1.747,1704,1.747,1705,1.747,1706,1.747,1707,1.747,1708,1.747,1709,1.747,1710,1.747,1711,3.747,1712,5.909,1713,5.269,1714,1.747,1715,5.099,1716,1.747,1717,3.864,1718,2.966,1719,1.747,1720,1.747,1721,1.747,1722,4.553,1723,1.747,1724,1.747,1725,2.966,1726,1.747,1727,1.747,1728,1.747,1729,1.747,1730,1.747,1731,1.747,1732,1.747,1733,1.747,1734,2.966,1735,1.747,1736,1.747,1737,1.747,1738,3.864,1739,1.747,1740,4.553,1741,1.747,1742,1.747,1743,1.747,1744,2.966,1745,1.747,1746,1.747,1747,2.966,1748,1.747,1749,1.747,1750,1.747,1751,1.747,1752,1.747,1753,1.747,1754,1.747,1755,1.747,1756,1.747,1757,1.747,1758,1.747,1759,1.747,1760,2.966,1761,2.966,1762,1.747,1763,1.747,1764,1.747,1765,1.747,1766,1.747,1767,1.747,1768,1.747,1769,1.747,1770,1.747,1771,1.747,1772,1.747,1773,1.747,1774,1.747,1775,1.747,1776,1.747,1777,1.747,1778,1.747,1779,2.966,1780,2.966,1781,1.747,1782,1.747,1783,1.747,1784,1.747,1785,1.747,1786,1.747,1787,1.747,1788,1.747,1789,1.747,1790,1.747,1791,1.747,1792,1.747,1793,1.747,1794,1.747,1795,1.747,1796,1.747,1797,1.747,1798,2.329,1799,1.372,1800,1.747,1801,1.747,1802,1.747,1803,1.747,1804,1.747,1805,1.747,1806,1.747,1807,1.747,1808,1.747,1809,1.747,1810,1.747,1811,1.747,1812,1.747,1813,1.747,1814,1.747,1815,1.747,1816,1.747,1817,1.747,1818,1.747,1819,3.864,1820,1.747,1821,1.747,1822,1.747,1823,1.747,1824,1.747,1825,1.747]],["title/classes/EventingApiService.html",[54,0.092,2072,4.191]],["body/classes/EventingApiService.html",[2,0.066,3,0.06,4,0.05,6,0.241,21,0.7,22,0.448,23,0.005,24,0.408,31,1.32,34,3.93,48,0.044,54,0.132,57,2.01,62,0.937,64,1.241,65,4.521,79,1.414,86,0.003,88,1.271,131,0.003,132,5.068,136,1.493,137,6.517,138,6.517,139,4.882,140,1.86,141,1.341,143,1.414,144,4.882,145,5.364,146,1.863,148,5.08,149,5.807,152,4.133,172,1.157,311,3.419,633,3.309,645,3.309,646,3.309,650,3.309,1496,6.369,1855,4.284,2072,6.025,2073,8.156,2074,5.442,2075,6.795,2076,7.828,2077,6.517,2078,5.442,2079,6.517,2080,6.149,2081,5.442,2082,6.517,2083,5.442,2084,6.517,2085,6.149,2086,5.442,2087,5.442,2088,5.442,2089,4.882,2090,4.882]],["title/interfaces/EventingEvent.html",[0,0.081,633,3.073]],["body/interfaces/EventingEvent.html",[0,0.159,2,0.073,3,0.067,4,0.055,6,0.267,7,0.768,21,0.667,22,0.484,23,0.005,47,1.822,48,0.079,62,0.873,64,0.931,86,0.004,131,0.004,146,2.245,166,1.976,172,1.445,176,2.024,182,2.393,334,2.91,347,1.352,359,3.051,627,5.589,628,4.068,629,3.188,630,2.849,631,4.068,632,3.66,633,5.224,634,6.133,635,6.133,636,5.352,637,6.133,638,3.282,639,4.068,640,4.068,641,4.068,642,4.068,643,4.068,644,3.55,645,3.66,646,4.719,647,4.068,648,5.05,649,4.068,650,3.66,2091,5.73]],["title/interfaces/EventingEventFilter.html",[0,0.081,2080,3.561]],["body/interfaces/EventingEventFilter.html",[0,0.155,2,0.086,3,0.079,4,0.065,6,0.317,7,0.856,21,0.618,22,0.445,23,0.005,24,0.334,31,1.735,47,1.526,48,0.075,64,1.205,86,0.004,131,0.004,140,2.331,171,1.64,172,1.48,629,3.791,630,3.388,636,5.693,935,4.352,2080,6.094,2085,5.043,2092,5.935,2093,7.127,2094,7.127]],["title/interfaces/EventingEventResults.html",[0,0.081,645,3.073]],["body/interfaces/EventingEventResults.html",[0,0.162,2,0.078,3,0.072,4,0.059,6,0.289,7,0.807,21,0.663,22,0.391,23,0.005,47,1.805,48,0.081,62,0.758,86,0.004,131,0.004,146,2.207,166,1.83,172,1.419,176,2.187,182,2.966,334,3.145,347,1.461,359,2.187,627,6.257,628,4.397,629,3.446,630,3.079,631,4.397,632,3.956,633,5.678,634,4.397,635,4.397,636,3.837,637,4.397,638,3.349,639,4.397,640,4.397,641,4.397,642,4.397,643,4.397,644,3.837,645,4.959,646,4.959,647,4.397,648,5.306,649,4.397,650,3.956]],["title/interfaces/EventingFilter.html",[0,0.081,2093,3.731]],["body/interfaces/EventingFilter.html",[0,0.155,2,0.087,3,0.08,4,0.065,6,0.319,7,0.858,21,0.478,22,0.446,23,0.005,24,0.336,31,1.742,47,1.774,48,0.076,64,1.206,86,0.004,131,0.004,140,2.117,171,1.642,172,1.38,629,5.119,630,4.575,636,4.236,935,5.877,2080,5.062,2085,5.062,2092,5.957,2093,7.136,2094,5.304]],["title/injectables/EventingImplApiInterface.html",[28,1.149,2095,4.533]],["body/injectables/EventingImplApiInterface.html",[2,0.045,3,0.041,4,0.034,6,0.164,21,0.678,22,0.444,23,0.005,24,0.399,26,7.377,27,1.56,28,1.505,29,0.496,30,4.722,31,0.897,34,3.711,48,0.03,54,0.067,57,1.899,60,1.066,62,0.874,64,1.228,65,4.129,66,1.459,79,1.511,85,1.87,86,0.003,88,1.242,97,2.331,131,0.003,136,1.136,140,1.875,141,1.31,143,1.402,146,1.567,148,4.54,172,0.589,191,2.225,293,2.526,304,2.201,310,6.586,311,2.325,313,5.937,316,5.717,347,1.764,364,2.325,440,2.492,499,3.361,524,2.95,629,1.96,630,1.751,633,2.25,636,3.903,645,2.25,646,2.25,650,2.25,765,1.751,873,4.302,935,2.25,1496,6.116,2072,4.584,2073,8.323,2075,5.717,2076,6.586,2077,4.959,2079,4.959,2080,5.173,2082,4.959,2084,4.959,2085,5.173,2089,3.319,2090,3.319,2093,6.306,2094,2.732,2095,4.959,2096,8.323,2097,3.319,2098,5.528,2099,5.528,2100,5.528,2101,5.528,2102,5.528,2103,3.319,2104,3.7,2105,5.528,2106,3.7,2107,5.528,2108,3.7,2109,5.528,2110,3.7,2111,3.7,2112,8.242,2113,3.7,2114,3.7,2115,3.7,2116,5.528,2117,3.7,2118,4.959,2119,3.7,2120,4.584,2121,3.7,2122,7.341,2123,5.528,2124,5.528,2125,3.7,2126,7.341,2127,3.7,2128,3.319,2129,3.319,2130,6.617,2131,3.7,2132,3.7,2133,3.7,2134,4.959,2135,3.319]],["title/modules/EventingModule.html",[2136,1.515,2137,4.191]],["body/modules/EventingModule.html",[2,0.095,3,0.087,4,0.071,23,0.005,24,0.427,29,1.053,48,0.074,54,0.142,86,0.004,131,0.004,2136,2.356,2137,7.579,2138,7.856,2139,4.154,2140,3.373,2141,2.895]],["title/interfaces/EventingSubscription.html",[0,0.081,646,3.073]],["body/interfaces/EventingSubscription.html",[0,0.161,2,0.077,3,0.071,4,0.058,6,0.284,7,0.8,21,0.66,22,0.424,23,0.005,47,1.801,48,0.081,62,0.751,86,0.004,131,0.004,146,2.239,166,1.818,172,1.479,176,3.123,182,2.491,334,3.098,347,1.439,359,2.155,627,5.756,628,4.331,629,3.394,630,3.033,631,4.331,632,3.897,633,4.912,634,4.331,635,4.331,636,3.779,637,4.331,638,3.019,639,4.331,640,4.331,641,4.331,642,4.331,643,4.331,644,3.779,645,3.897,646,5.379,647,6.277,648,6.043,649,6.277,650,3.897]],["title/interfaces/EventingSubscriptionFilter.html",[0,0.081,2085,3.561]],["body/interfaces/EventingSubscriptionFilter.html",[0,0.158,2,0.091,3,0.084,4,0.069,21,0.504,23,0.005,24,0.354,31,1.838,47,1.579,48,0.077,86,0.004,131,0.004,140,2.166,171,1.52,172,1.517,629,4.014,630,3.587,636,4.469,935,4.608,2080,5.34,2085,6.306,2092,6.285,2093,7.263,2094,5.595]],["title/interfaces/EventingSubscriptionResults.html",[0,0.081,650,3.073]],["body/interfaces/EventingSubscriptionResults.html",[0,0.162,2,0.078,3,0.072,4,0.059,6,0.289,7,0.807,21,0.663,22,0.391,23,0.005,47,1.805,48,0.081,62,0.758,86,0.004,131,0.004,146,2.207,166,1.83,172,1.419,176,2.187,182,2.966,334,3.145,347,1.461,359,2.187,627,6.257,628,4.397,629,3.446,630,3.079,631,4.397,632,3.956,633,4.959,634,4.397,635,4.397,636,3.837,637,4.397,638,3.349,639,4.397,640,4.397,641,4.397,642,4.397,643,4.397,644,3.837,645,3.956,646,5.678,647,4.397,648,5.306,649,4.397,650,4.959]],["title/interfaces/EventingTemplate.html",[0,0.081,648,3.288]],["body/interfaces/EventingTemplate.html",[0,0.162,2,0.078,3,0.072,4,0.059,6,0.288,7,0.806,21,0.676,22,0.39,23,0.005,47,1.805,48,0.081,62,0.893,86,0.004,131,0.004,146,2.23,166,2.015,172,1.485,176,2.18,182,2.509,334,3.134,347,1.456,359,2.18,627,5.786,628,4.382,629,3.434,630,3.069,631,4.382,632,3.943,633,4.948,634,4.382,635,4.382,636,3.824,637,4.382,638,3.035,639,4.382,640,4.382,641,4.382,642,4.382,643,4.382,644,3.824,645,3.943,646,4.948,647,4.382,648,5.786,649,4.382,650,3.943]],["title/interfaces/ExtendedScatterData.html",[0,0.081,2142,3.731]],["body/interfaces/ExtendedScatterData.html",[0,0.112,2,0.035,3,0.032,4,0.026,6,0.127,7,0.449,21,0.597,22,0.27,23,0.005,24,0.299,29,0.384,31,0.694,47,1.131,48,0.023,54,0.052,56,0.823,57,2.038,60,0.552,62,0.596,64,0.892,66,1.38,68,3.373,71,2.93,79,0.851,85,2.13,86,0.002,88,0.389,91,1.814,108,1.797,131,0.002,140,1.031,146,1.724,153,1.797,165,1.107,171,0.486,172,1.113,174,0.722,183,0.895,184,0.87,186,0.908,189,1.481,192,1.839,195,1.914,209,0.703,212,1.323,220,0.842,235,1.058,261,0.991,262,2.22,263,2.314,277,1.253,279,1.845,293,2.542,304,1.27,326,1.229,359,2.499,361,1.185,387,1.74,476,1.74,518,2.357,524,3.799,546,2.314,575,2.192,630,1.354,638,2.384,670,1.354,675,4.305,678,1.639,679,2.528,681,1.301,682,1.687,683,1.687,688,1.595,702,2.463,746,2.849,750,1.687,756,1.74,757,3.394,759,2.375,765,1.354,770,3.573,774,2.439,775,2.849,776,3.425,777,1.797,779,1.947,780,2.674,781,2.103,823,1.934,832,3.897,842,1.515,843,1.797,845,3.14,848,2.757,849,1.74,867,1.413,873,2.103,874,2.757,875,1.797,882,1.797,894,1.74,895,1.74,899,1.639,901,1.687,909,1.74,919,1.74,920,1.74,923,1.74,924,2.757,927,1.74,930,1.687,947,1.639,955,1.797,957,3.065,980,2.402,988,3.065,1028,2.674,1139,2.95,1202,1.74,1203,1.797,1230,2.849,1242,1.595,1244,1.252,1253,3.539,1450,1.934,1586,2.016,1666,2.016,1670,1.797,1798,4.516,1799,3.969,1833,1.74,1852,3.425,2142,4.732,2143,2.112,2144,2.016,2145,4.546,2146,2.016,2147,2.016,2148,3.348,2149,3.348,2150,3.348,2151,3.348,2152,3.348,2153,2.016,2154,2.228,2155,2.228,2156,2.228,2157,2.228,2158,2.228,2159,2.228,2160,4.159,2161,2.228,2162,2.228,2163,2.228,2164,2.228,2165,2.228,2166,2.228,2167,2.228,2168,2.228,2169,2.228,2170,2.228,2171,2.228,2172,2.228,2173,2.228,2174,2.228,2175,4.386,2176,2.228,2177,5.788,2178,2.757,2179,2.757,2180,2.757,2181,2.228,2182,4.386,2183,2.112,2184,2.228,2185,2.228,2186,2.228,2187,2.228,2188,2.228,2189,2.228,2190,2.228,2191,2.228,2192,2.228,2193,2.228,2194,3.531,2195,2.228,2196,2.228,2197,2.228,2198,2.228,2199,2.228,2200,2.228,2201,2.228,2202,2.228,2203,2.228,2204,2.228,2205,2.228,2206,2.228,2207,2.228,2208,2.228,2209,2.228,2210,2.228,2211,2.228,2212,2.228,2213,2.228,2214,3.531,2215,3.348,2216,2.228,2217,2.228,2218,2.228,2219,2.228,2220,2.112,2221,2.228,2222,2.228,2223,2.228,2224,6.478,2225,6.291,2226,5.44,2227,3.531,2228,4.386,2229,2.228,2230,2.228,2231,6.478,2232,2.228,2233,3.348,2234,3.348,2235,3.531,2236,3.531,2237,2.228,2238,3.531,2239,3.531,2240,2.228,2241,2.228,2242,3.531,2243,3.531,2244,2.228,2245,2.228,2246,2.228,2247,2.228,2248,3.531,2249,2.228,2250,1.934,2251,4.991,2252,3.531,2253,6.478,2254,2.228,2255,2.228,2256,2.228,2257,2.228,2258,3.531,2259,4.386,2260,4.386,2261,3.531,2262,4.386,2263,4.386,2264,3.531,2265,2.228,2266,2.228,2267,2.228,2268,2.228,2269,2.228,2270,2.112,2271,2.228,2272,2.228,2273,2.228,2274,2.228,2275,2.112,2276,2.228,2277,2.228,2278,1.252,2279,2.228,2280,2.228,2281,2.228,2282,2.112]],["title/classes/ExtendedTimeseries.html",[54,0.092,1598,4.191]],["body/classes/ExtendedTimeseries.html",[2,0.058,3,0.053,4,0.043,6,0.212,7,0.658,21,0.651,22,0.472,23,0.005,24,0.31,29,0.64,31,1.158,47,0.843,48,0.054,54,0.139,56,1.374,57,1.1,60,0.921,62,0.98,64,0.797,66,0.887,71,1.732,85,1.673,86,0.004,131,0.003,132,2.662,141,1.425,143,1.155,146,1.764,165,2.957,166,1.571,170,3.695,171,1.298,172,1.058,174,1.058,183,2.079,184,1.452,186,1.515,189,2.17,192,2.496,196,2.659,214,2.408,219,1.706,220,1.42,221,2.832,293,1.32,304,2.315,347,1.072,398,4.492,414,3,440,1.515,518,1.939,621,2.171,653,2.662,654,2.662,681,2.171,759,3.663,764,3.949,779,2.854,1504,4.379,1505,4.379,1508,4.607,1522,3.52,1528,4.843,1529,4.379,1583,5.962,1584,5.512,1585,3.365,1586,3.365,1587,4.284,1588,4.284,1589,4.284,1590,3.719,1597,4.284,1598,7.204,1602,5.962,1603,4.284,1604,5.962,1605,4.284,1606,7.414,1607,4.284,1608,4.284,1609,4.284,1610,3.719,1611,4.284,1612,4.284,1613,4.284,1614,4.284,1615,5.962,1616,5.962,1617,4.284,1618,4.284,1619,4.284,1855,5.818,2283,4.776,2284,4.776,2285,4.776,2286,4.776,2287,4.776,2288,4.776,2289,4.776,2290,4.776,2291,4.776,2292,4.776,2293,4.776,2294,4.776,2295,4.776]],["title/components/ExtentControlComponent.html",[174,0.805,226,1.833]],["body/components/ExtentControlComponent.html",[2,0.057,3,0.052,4,0.043,6,0.21,21,0.506,22,0.364,23,0.005,24,0.308,29,0.634,38,1.544,48,0.038,54,0.086,57,1.089,60,1.273,62,0.805,64,0.567,66,0.878,79,0.715,86,0.003,88,1.033,98,1.325,131,0.003,136,1.356,140,1.729,141,1.18,143,0.715,166,0.972,174,1.379,175,1.715,176,1.59,177,1.799,178,1.799,182,1.458,183,3.313,184,3.221,185,1.771,186,2.094,195,1.062,196,2.786,198,1.361,199,2.357,200,2.394,201,2.357,202,3.081,203,1.799,204,2.512,205,1.522,206,1.771,207,2.893,208,1.715,209,1.162,210,3.748,211,1.715,212,2.218,213,2.219,214,2.072,215,3.412,216,1.663,217,1.689,218,2.634,219,1.689,220,1.226,221,1.849,222,1.743,223,1.799,224,1.715,225,1.638,226,2.985,227,3.301,228,2.893,229,1.715,230,1.59,231,1.715,232,2.286,233,1.743,234,1.743,235,1.92,236,1.799,237,1.715,238,1.715,239,1.799,240,1.715,241,2.094,242,1.715,243,1.689,244,1.715,245,1.567,246,1.567,247,1.799,248,1.689,249,1.715,250,1.967,251,2.219,252,1.715,253,2.802,254,1.799,255,1.715,256,1.799,257,1.715,258,1.799,259,1.715,260,1.343,261,1.638,262,1.638,263,2.519,264,1.715,265,1.689,266,1.715,267,2.893,268,1.715,269,1.522,270,1.771,271,2.512,272,1.715,273,1.715,274,1.743,275,1.522,276,1.715,277,1.824,278,1.715,279,1.361,280,1.799,281,1.689,282,1.715,283,1.715,284,1.771,285,1.715,286,1.715,287,2.02,288,2.674,289,1.799,422,5.614,426,3.491,427,5.288,466,5.14,478,3.077,2296,4.729,2297,6.6,2298,8.229,2299,6.6,2300,4.729,2301,4.729,2302,3.332,2303,4.729]],["title/interfaces/Favorite.html",[0,0.081,230,1.699]],["body/interfaces/Favorite.html",[0,0.137,2,0.062,3,0.057,4,0.047,6,0.227,7,0.691,21,0.653,22,0.334,23,0.005,24,0.326,28,1.587,29,0.687,31,1.243,48,0.069,54,0.093,57,1.18,60,0.989,62,0.89,66,1.296,71,1.859,79,1.509,85,1.95,86,0.003,131,0.003,146,2.043,166,2.077,171,1.513,172,1.111,195,1.567,220,1.296,230,3.378,235,1.987,293,2.462,438,4.878,518,2.035,531,3.372,546,2.951,774,3.497,953,3.219,966,3.463,1244,3.052,1962,4.823,2304,3.611,2305,3.783,2306,5.754,2307,3.783,2308,6,2309,3.219,2310,3.99,2311,3.99,2312,3.99,2313,3.99,2314,3.99,2315,5.432,2316,3.99,2317,7.157,2318,3.99,2319,3.99,2320,3.99,2321,3.99,2322,3.99,2323,3.99,2324,3.99,2325,3.99,2326,3.99,2327,3.99,2328,3.99,2329,3.99,2330,3.99,2331,3.99,2332,3.99,2333,3.99,2334,3.99,2335,3.99,2336,3.99,2337,3.99,2338,3.99,2339,3.99,2340,3.99,2341,3.99,2342,3.99,2343,3.99,2344,3.99,2345,3.99,2346,3.99,2347,3.99,2348,3.99,2349,5.432,2350,3.99,2351,3.99,2352,3.99,2353,5.432,2354,3.99,2355,3.99,2356,3.99,2357,3.783,2358,3.783]],["title/injectables/FavoriteService.html",[28,1.149,2309,3.175]],["body/injectables/FavoriteService.html",[0,0.113,2,0.049,3,0.045,4,0.037,6,0.181,7,0.589,21,0.649,22,0.441,23,0.005,24,0.278,28,1.595,29,0.548,31,0.991,47,1.05,48,0.063,54,0.074,57,0.942,60,1.148,62,0.95,64,1.025,66,1.105,71,2.158,79,1.535,85,1.792,86,0.003,88,1.161,131,0.003,136,1.223,141,1.399,143,1.291,146,1.747,149,3.618,166,2.044,171,1.59,172,0.948,195,1.838,220,1.52,230,3.304,235,2.108,293,2.717,347,0.918,438,4.414,440,1.297,518,1.736,531,2.876,546,2.712,774,3.648,953,2.568,966,2.763,1244,2.603,1961,3.39,1962,5.195,2304,2.881,2305,3.018,2306,5.532,2307,3.018,2308,5.768,2309,3.738,2310,5.999,2311,5.999,2312,5.999,2313,3.183,2314,4.633,2315,4.633,2316,3.183,2317,6.652,2318,4.633,2319,5.999,2320,3.183,2321,4.633,2322,3.183,2323,3.183,2324,3.183,2325,3.183,2326,4.633,2327,3.183,2328,3.183,2329,3.183,2330,5.999,2331,3.183,2332,5.999,2333,3.183,2334,3.183,2335,4.633,2336,3.183,2337,3.183,2338,3.183,2339,3.183,2340,3.183,2341,5.999,2342,3.183,2343,3.183,2344,3.183,2345,3.183,2346,5.999,2347,3.183,2348,3.183,2349,4.633,2350,3.183,2351,3.183,2352,3.183,2353,4.633,2354,3.183,2355,3.183,2356,3.183,2357,3.018,2358,3.018,2359,5.949,2360,5.949,2361,5.949,2362,5.949,2363,5.949,2364,5.949,2365,4.088,2366,4.088,2367,4.088,2368,4.088,2369,4.088,2370,4.088,2371,4.088,2372,4.088,2373,4.088,2374,4.088,2375,4.088,2376,4.088,2377,4.088]],["title/components/FavoriteTogglerComponent.html",[174,0.805,229,1.833]],["body/components/FavoriteTogglerComponent.html",[2,0.05,3,0.046,4,0.038,6,0.184,7,0.596,21,0.276,22,0.372,23,0.005,24,0.362,29,0.557,31,1.007,38,1.356,48,0.034,54,0.075,56,1.732,57,1.631,60,1.161,62,0.873,64,0.722,66,0.771,79,0.91,86,0.003,88,1.055,98,1.164,131,0.003,136,1.237,140,1.61,141,1.181,143,0.91,166,0.854,171,1.202,174,1.312,175,1.507,176,1.397,177,1.581,178,1.581,182,1.281,183,3.289,184,3.198,185,1.555,186,1.909,195,1.59,196,2.498,198,1.196,199,2.15,200,2.183,201,2.15,202,2.906,203,1.581,204,2.29,205,1.337,206,1.555,207,2.694,208,1.507,209,1.02,210,3.66,211,1.507,212,2.065,213,2.024,214,1.972,215,3.269,216,1.461,217,1.484,218,2.452,219,1.484,220,1.53,221,1.686,222,1.531,223,1.581,224,1.507,225,1.439,226,1.507,227,1.461,228,2.694,229,2.815,230,2.77,231,1.507,232,2.085,233,1.531,234,1.531,235,1.811,236,1.581,237,1.507,238,1.507,239,1.581,240,1.507,241,1.909,242,1.507,243,1.484,244,1.507,245,1.376,246,1.376,247,1.581,248,1.484,249,1.507,250,1.831,251,2.024,252,1.507,253,2.608,254,1.581,255,1.507,256,1.581,257,1.507,258,1.581,259,1.507,260,1.179,261,1.439,262,1.439,263,2.345,264,1.507,265,1.484,266,1.507,267,2.694,268,1.507,269,1.337,270,1.555,271,2.29,272,1.507,273,1.507,274,1.531,275,1.337,276,1.507,277,1.664,278,1.507,279,1.196,280,1.581,281,1.484,282,1.507,283,1.507,284,1.555,285,1.507,286,1.507,287,1.103,288,1.461,289,1.581,341,3.445,342,4.992,343,4.992,344,5.246,395,3.35,412,3.112,453,2.849,454,3.599,456,1.817,518,1.212,546,1.376,774,2.694,887,3.422,2001,4.876,2002,2.099,2003,2.2,2309,4.876,2378,8.59,2379,7.706,2380,7.761,2381,4.154,2382,5.87,2383,5.73,2384,6.019,2385,6.019,2386,4.154,2387,4.154,2388,4.154,2389,3.727,2390,4.154,2391,3.067,2392,7.761,2393,4.154,2394,4.154,2395,4.154,2396,6.019,2397,6.019,2398,6.019,2399,4.154,2400,4.154]],["title/interfaces/Feature.html",[0,0.081,1524,2.443]],["body/interfaces/Feature.html",[0,0.148,2,0.096,3,0.088,4,0.072,23,0.005,24,0.371,48,0.064,86,0.004,131,0.004,143,1.509,172,1.464,625,3.02,1524,4.444,2401,7.936]],["title/classes/Filter.html",[54,0.092,251,1.699]],["body/classes/Filter.html",[2,0.086,3,0.079,4,0.065,6,0.316,7,0.854,21,0.686,22,0.462,23,0.005,24,0.333,48,0.058,54,0.156,62,0.973,86,0.004,131,0.004,141,1.382,250,2.494,251,3.373,304,2.701,587,3.522,1491,4.871,2402,7.13,2403,7.996,2404,7.13,2405,7.13,2406,7.13,2407,7.13,2408,5.913]],["title/interfaces/FilteredParameter.html",[0,0.081,2409,3.935]],["body/interfaces/FilteredParameter.html",[0,0.107,2,0.057,3,0.053,4,0.043,6,0.211,7,0.656,21,0.508,22,0.228,23,0.005,24,0.356,29,0.638,31,1.154,48,0.054,54,0.086,56,1.369,57,1.757,60,0.918,62,0.857,64,0.795,66,0.884,71,1.726,79,0.719,85,1.67,86,0.003,131,0.003,132,2.652,143,1.153,145,4.894,172,1.215,174,1.215,183,2.073,184,1.447,186,1.509,189,2.164,192,2.491,195,1.853,196,2.455,220,0.884,241,1.509,248,1.699,249,2.405,250,2.324,251,3.459,260,1.351,293,2.109,304,1.857,395,3.138,440,1.509,453,2.252,454,3.074,487,2.584,546,1.576,615,5.605,621,4.19,624,2.3,653,2.652,654,2.652,717,2.35,759,2.006,779,2.846,887,2.3,1011,1.811,1434,5.017,1491,3.349,1492,2.3,1523,2.252,1524,2.3,1525,2.3,1555,5.162,1711,3.513,1713,6.495,2001,4.164,2002,2.404,2003,2.52,2141,1.753,2403,3.946,2409,6.756,2410,4.268,2411,3.705,2412,6.405,2413,4.313,2414,4.894,2415,3.216,2416,3.946,2417,3.946,2418,5.497,2419,3.946,2420,3.946,2421,3.705,2422,3.946,2423,3.946,2424,4.268,2425,6.092,2426,3.946,2427,8.434,2428,5.497,2429,4.268,2430,8.269,2431,7.644,2432,8.269,2433,7.644,2434,7.644,2435,4.268,2436,4.268,2437,4.268,2438,4.268,2439,4.268,2440,4.268,2441,3.705,2442,3.946,2443,3.946,2444,5.947,2445,3.705,2446,4.268,2447,4.268,2448,3.946,2449,4.268,2450,4.268,2451,4.268]],["title/interfaces/FilteredProvider.html",[0,0.081,2413,3.288]],["body/interfaces/FilteredProvider.html",[0,0.153,2,0.092,3,0.084,4,0.069,6,0.337,7,0.888,21,0.597,22,0.364,23,0.005,24,0.355,48,0.073,86,0.004,131,0.004,146,1.624,172,1.428,251,3.312,304,2.131,587,3.758,1491,4.976,2141,3.515,2408,6.31,2413,5.836,2452,6.825]],["title/classes/FirstLastValue.html",[54,0.092,1508,2.817]],["body/classes/FirstLastValue.html",[0,0.14,2,0.065,3,0.059,4,0.049,6,0.238,7,0.713,21,0.693,22,0.345,23,0.005,24,0.38,47,1.645,48,0.08,54,0.172,56,2.073,62,0.991,86,0.003,88,0.73,131,0.003,141,1.033,143,1.53,146,1.538,165,3.143,166,1.67,170,3.928,171,0.913,172,1.294,209,1.769,214,1.286,220,0.998,221,2.432,250,1.39,260,1.526,304,2.276,347,1.95,359,2.919,518,1.568,545,2.443,624,2.598,625,3.092,764,4.327,774,3.092,1234,2.779,1492,2.598,1494,4.681,1502,3.268,1503,4.792,1504,4.656,1505,4.974,1506,3.268,1508,5.463,1514,4.792,1521,2.996,1522,4.598,1523,2.544,1524,2.598,1525,2.598,1526,3.268,1527,4.248,1528,5.047,1529,3.079,1530,3.079,1531,3.079,1532,3.169,2453,5.374,2454,5.374]],["title/components/FlotOverviewTimeseriesGraphComponent.html",[174,0.805,231,1.833]],["body/components/FlotOverviewTimeseriesGraphComponent.html",[2,0.04,3,0.036,4,0.03,6,0.146,7,0.501,21,0.41,22,0.444,23,0.005,24,0.236,29,0.441,31,0.799,38,1.075,47,0.893,48,0.027,54,0.06,56,1.456,57,1.166,60,0.976,62,0.923,64,0.739,66,1.285,68,1.176,79,1.046,85,0.721,86,0.002,88,1.014,98,0.923,131,0.002,136,1.04,140,2.082,141,1.368,143,0.932,166,0.677,171,0.559,174,1.189,175,1.195,176,1.107,177,1.253,178,1.253,182,1.016,183,3.238,184,3.148,185,1.233,186,1.605,189,2.573,191,2.072,192,2.896,195,1.77,196,2.726,198,0.948,199,1.807,200,1.836,201,1.807,202,2.59,203,1.253,204,1.926,205,1.06,206,1.233,207,2.345,208,1.195,209,0.809,210,3.484,211,1.195,212,1.798,213,3.481,214,2.487,215,2.999,216,1.158,217,1.176,218,2.135,219,1.176,220,0.94,221,1.418,222,1.213,223,1.253,224,1.195,225,1.141,226,1.195,227,1.158,228,2.345,229,1.195,230,1.107,231,2.509,232,2.934,233,1.213,234,1.213,235,1.839,236,1.253,237,1.195,238,1.195,239,1.253,240,1.195,241,1.605,242,1.195,243,1.176,244,1.195,245,1.091,246,1.091,247,1.253,248,1.176,249,1.195,250,1.595,251,1.701,252,1.195,253,2.271,254,1.253,255,1.195,256,1.253,257,1.195,258,1.253,259,1.195,260,0.935,261,1.141,262,1.141,263,2.042,264,1.195,265,1.176,266,1.195,267,2.345,268,1.195,269,1.06,270,1.233,271,1.926,272,1.195,273,1.195,274,1.213,275,1.06,276,1.195,277,2.178,278,1.195,279,0.948,280,1.253,281,1.176,282,1.195,283,1.195,284,1.233,285,1.195,286,1.195,287,0.875,288,1.158,289,1.253,293,2.178,347,0.74,357,4.951,395,2.917,412,2.617,440,1.045,453,2.395,454,3.208,456,1.441,518,1.476,531,2.446,546,1.091,670,2.395,678,1.887,679,3.436,680,4.165,681,2.3,682,2.985,683,2.985,684,6.205,685,4.874,686,6.205,687,6.205,688,3.856,691,4.01,692,3.274,693,5.111,694,5.529,695,3.872,696,5.529,697,4.55,698,2.731,699,4.55,700,5.386,702,2.748,709,2.954,717,1.627,720,2.954,721,4.54,723,2.431,726,2.564,729,5.529,730,4.54,731,4.54,732,2.954,733,2.564,734,2.954,736,2.731,738,2.954,739,2.954,2455,8.624,2456,7.973,2457,5.06,2458,3.293,2459,3.293,2460,3.293,2461,3.293,2462,3.293,2463,3.293,2464,3.293,2465,3.293,2466,3.293,2467,3.293,2468,3.293,2469,5.06,2470,3.293,2471,3.293,2472,2.564,2473,2.731]],["title/classes/GeoCureGeoJSON.html",[54,0.092,2474,4.191]],["body/classes/GeoCureGeoJSON.html",[0,0.089,2,0.066,3,0.061,4,0.05,6,0.244,7,0.725,21,0.366,22,0.437,23,0.005,24,0.342,27,2.321,33,4.356,47,1.292,48,0.059,54,0.133,60,1.412,62,0.916,64,1.211,65,2.661,79,1.38,85,1.801,86,0.003,88,1.191,90,2.846,131,0.003,136,1.504,141,1.345,143,1.325,149,3.347,172,1.31,191,2.947,195,1.847,235,1.708,293,2.594,300,4.712,304,1.542,364,3.458,436,6.928,477,2.915,546,1.823,2075,6.826,2474,6.071,2475,8.591,2476,4.938,2477,7.32,2478,7.32,2479,7.32,2480,5.504,2481,7.942,2482,7.32,2483,6.567,2484,5.504,2485,5.504,2486,6.567,2487,6.567,2488,7.864,2489,5.504,2490,6.567,2491,5.504,2492,6.567,2493,6.567,2494,4.938,2495,4.938,2496,4.565,2497,4.938,2498,4.938,2499,4.938,2500,6.567,2501,4.938,2502,4.938,2503,4.938,2504,4.938,2505,4.938,2506,6.567,2507,6.567,2508,4.938,2509,4.938,2510,4.938,2511,4.938,2512,4.938,2513,4.938,2514,4.938,2515,4.938,2516,4.938]],["title/interfaces/GeoCureGeoJSONOptions.html",[0,0.081,2481,4.191]],["body/interfaces/GeoCureGeoJSONOptions.html",[0,0.126,2,0.073,3,0.067,4,0.055,6,0.269,7,0.773,21,0.574,22,0.436,23,0.005,24,0.365,27,2.562,33,4.136,47,1.702,48,0.063,54,0.11,60,1.172,62,0.802,64,1.192,65,2.937,79,1.18,85,1.889,86,0.004,131,0.004,172,1.374,191,2.901,293,2.158,300,5.691,304,2.551,364,3.817,436,5.765,477,3.218,546,2.013,2075,4.731,2474,5.039,2475,5.451,2476,5.451,2481,7.553,2483,5.451,2486,5.451,2487,5.451,2488,7.005,2490,5.451,2492,7.741,2493,7.005,2494,8.17,2495,8.17,2496,5.039,2497,5.451,2498,5.451,2499,5.451,2500,7.005,2501,5.451,2502,5.451,2503,5.451,2504,5.451,2505,5.451,2506,7.005,2507,7.005,2508,5.451,2509,5.451,2510,5.451,2511,5.451,2512,5.451,2513,5.451,2514,5.451,2515,5.451,2516,5.451]],["title/interfaces/GeoReverseOptions.html",[0,0.081,36,3.073]],["body/interfaces/GeoReverseOptions.html",[0,0.159,1,4.066,2,0.081,3,0.074,4,0.061,9,4.2,11,4.2,13,4.2,15,4.2,16,4.2,17,4.2,18,3.727,20,4.2,21,0.704,23,0.005,24,0.421,32,4.624,33,3.541,34,3.608,35,3.232,36,5.484,37,4.066,38,2.183,39,4.892,40,3.943,43,3.457,44,4.2,45,4.2,46,4.2,48,0.079,54,0.121,62,0.771,63,4.2,64,0.995,86,0.004,88,0.909,90,3.457,98,1.873,103,4.2,112,4.2,115,4.2,118,5.211,121,4.2,127,4.2,131,0.004,152,4.1,171,1.136,477,3.541,575,3.232,2178,4.066,2179,4.066,2180,4.066,2517,4.936,2518,6.124,2519,4.936]],["title/interfaces/GeoReverseResult.html",[0,0.081,37,3.073]],["body/interfaces/GeoReverseResult.html",[0,0.156,1,5.577,2,0.075,3,0.069,4,0.056,6,0.275,7,0.783,9,3.89,11,3.89,13,3.89,15,3.89,16,3.89,17,3.89,18,3.452,20,3.89,21,0.707,22,0.472,23,0.005,24,0.407,32,4.406,33,3.28,34,3.483,35,2.994,36,4.806,37,4.806,38,2.022,39,4.662,40,3.652,43,3.202,44,5.762,45,5.762,46,5.762,48,0.077,54,0.112,62,0.735,63,3.89,64,1.196,86,0.004,88,0.841,90,3.202,98,1.735,103,3.89,112,5.762,115,3.89,118,4.966,121,3.89,127,3.89,131,0.004,152,3.958,171,1.052,477,3.28,575,2.994,2091,5.836,2178,3.766,2179,3.766,2180,3.766,2517,4.572,2518,5.836,2519,4.572]],["title/classes/GeoSearch.html",[38,1.65,54,0.092]],["body/classes/GeoSearch.html",[0,0.152,1,3.748,2,0.074,3,0.068,4,0.056,6,0.273,9,3.872,11,3.872,13,3.872,15,3.872,16,3.872,17,3.872,18,3.436,20,3.872,21,0.701,22,0.377,23,0.005,24,0.406,32,5.275,33,3.264,34,3.785,35,2.979,36,5.567,37,3.748,38,2.573,39,5.4,40,3.635,43,3.187,44,3.872,45,3.872,46,3.872,48,0.077,54,0.143,62,0.9,63,4.951,64,1.195,73,4.343,79,1.191,86,0.004,88,1.18,90,3.187,98,1.726,103,4.951,108,4.951,112,3.872,115,3.872,118,4.951,121,3.872,127,3.872,131,0.004,136,1.619,141,1.13,143,1.191,149,4.792,152,3.949,171,1.047,477,3.264,575,2.979,2178,3.748,2179,3.748,2180,3.748,2517,4.55,2518,5.818,2519,4.55,2520,6.535,2521,6.163,2522,6.163]],["title/interfaces/GeoSearchOptions.html",[0,0.081,39,2.98]],["body/interfaces/GeoSearchOptions.html",[0,0.157,1,3.923,2,0.078,3,0.071,4,0.059,6,0.286,7,0.803,9,4.053,11,4.053,13,4.053,15,4.053,16,4.053,17,4.053,18,3.596,20,4.053,21,0.704,22,0.388,23,0.005,24,0.414,32,4.522,33,3.417,34,3.55,35,3.119,36,4.933,37,3.923,38,2.106,39,5.233,40,3.805,43,3.336,44,4.053,45,4.053,46,4.053,48,0.078,54,0.117,62,0.754,63,4.053,64,1.175,86,0.004,88,0.877,90,3.336,98,1.807,103,4.053,112,4.053,115,4.053,118,6.027,121,4.053,127,4.053,131,0.004,152,4.034,171,1.507,477,3.417,575,3.119,2178,3.923,2179,3.923,2180,3.923,2517,4.763,2518,5.989,2519,6.874]],["title/interfaces/GeoSearchResult.html",[0,0.081,40,2.98]],["body/interfaces/GeoSearchResult.html",[0,0.157,1,3.89,2,0.077,3,0.071,4,0.058,6,0.284,7,0.799,9,4.019,11,4.019,13,4.019,15,4.019,16,4.019,17,4.019,18,3.567,20,4.019,21,0.703,22,0.423,23,0.005,24,0.413,32,4.498,33,3.389,34,3.536,35,3.093,36,4.907,37,3.89,38,2.089,39,4.759,40,4.759,43,4.57,44,4.019,45,4.019,46,4.019,48,0.078,54,0.116,62,0.75,63,4.019,64,1.114,86,0.004,88,1.261,90,4.799,98,2.6,103,4.019,112,4.019,115,4.019,118,5.07,121,4.019,127,4.019,131,0.004,152,4.018,171,1.087,477,3.389,575,3.093,2178,3.89,2179,3.89,2180,3.89,2517,4.724,2518,6.853,2519,4.724]],["title/components/GeosearchControlComponent.html",[174,0.805,237,1.833]],["body/components/GeosearchControlComponent.html",[2,0.047,3,0.043,4,0.035,6,0.172,7,0.566,21,0.558,22,0.426,23,0.005,24,0.351,29,0.519,38,3.017,39,4.008,40,4.426,48,0.031,54,0.07,57,1.317,60,1.103,62,0.935,64,0.9,66,1.062,79,1.134,86,0.004,88,0.923,98,1.084,131,0.003,136,1.175,140,1.546,141,1.344,143,0.585,166,0.795,171,1.154,174,1.275,175,1.404,176,1.301,177,1.473,178,1.473,182,1.194,183,3.274,184,3.184,185,1.449,186,1.813,189,2.45,191,1.301,192,2.45,195,1.526,196,2.576,198,1.114,199,2.041,200,2.073,201,2.041,202,2.81,203,1.473,204,2.175,205,1.246,206,1.449,207,2.586,208,1.404,209,0.951,210,3.609,211,1.404,212,1.983,213,1.922,214,1.917,215,3.188,216,1.361,217,1.382,218,2.354,219,1.382,220,1.062,221,1.601,222,1.426,223,1.473,224,1.404,225,1.341,226,1.404,227,1.361,228,2.586,229,1.404,230,1.301,231,1.404,232,1.98,233,1.426,234,1.426,235,1.751,236,1.473,237,2.722,238,1.404,239,1.473,240,1.404,241,1.813,242,1.404,243,1.382,244,1.404,245,1.282,246,1.282,247,1.473,248,1.382,249,1.404,250,1.758,251,1.922,252,1.404,253,2.504,254,1.473,255,1.404,256,1.473,257,1.404,258,1.473,259,1.404,260,1.099,261,1.341,262,1.341,263,2.251,264,1.404,265,1.382,266,1.404,267,2.586,268,1.404,269,1.246,270,1.449,271,2.175,272,1.404,273,1.404,274,1.426,275,1.246,276,1.404,277,1.58,278,1.404,279,1.114,280,1.473,281,1.382,282,1.404,283,1.404,284,1.449,285,1.404,286,1.404,287,1.028,288,2.39,289,1.473,293,1.878,422,5.018,426,2.858,427,4.942,476,2.354,477,2.05,478,2.518,498,3.473,518,1.129,546,1.282,621,2.598,717,4.139,832,3.476,2302,2.728,2425,4.22,2520,6.224,2523,3.871,2524,5.716,2525,7.505,2526,7.505,2527,7.505,2528,7.505,2529,6.796,2530,5.716,2531,3.871,2532,3.871,2533,3.871,2534,3.871,2535,3.871,2536,3.871,2537,3.871,2538,6.097,2539,3.871,2540,3.871,2541,3.871,2542,5.716,2543,7.505,2544,3.871,2545,3.871,2546,3.871,2547,3.871,2548,5.716,2549,3.871,2550,3.871,2551,3.871,2552,3.871,2553,3.871,2554,3.871,2555,3.871]],["title/interfaces/GroupFavorite.html",[0,0.081,2308,3.561]],["body/interfaces/GroupFavorite.html",[0,0.137,2,0.062,3,0.057,4,0.047,6,0.229,7,0.694,21,0.613,22,0.247,23,0.005,24,0.327,28,1.594,29,0.692,31,1.251,48,0.069,54,0.093,57,1.188,60,0.995,62,0.891,66,1.301,71,1.871,79,1.511,85,1.955,86,0.003,131,0.003,146,1.906,166,2.038,171,1.517,172,1.268,195,1.574,220,1.301,230,3.433,235,1.992,293,2.468,438,4.892,518,2.045,531,3.388,546,2.958,774,3.647,953,3.241,966,3.486,1244,3.065,1962,4.84,2304,3.635,2305,3.809,2306,5.77,2307,3.809,2308,6.291,2309,3.241,2310,4.017,2311,4.017,2312,4.017,2313,4.017,2314,4.017,2315,5.457,2316,4.017,2317,7.171,2318,4.017,2319,4.017,2320,4.017,2321,4.017,2322,4.017,2323,4.017,2324,4.017,2325,4.017,2326,4.017,2327,4.017,2328,4.017,2329,4.017,2330,4.017,2331,4.017,2332,4.017,2333,4.017,2334,4.017,2335,4.017,2336,4.017,2337,4.017,2338,4.017,2339,4.017,2340,4.017,2341,4.017,2342,4.017,2343,4.017,2344,4.017,2345,4.017,2346,4.017,2347,4.017,2348,4.017,2349,5.457,2350,4.017,2351,4.017,2352,4.017,2353,5.457,2354,4.017,2355,4.017,2356,4.017,2357,3.809,2358,3.809]],["title/classes/HasLoadableContent.html",[54,0.092,680,3.415]],["body/classes/HasLoadableContent.html",[2,0.088,3,0.08,4,0.066,6,0.322,7,0.864,22,0.418,23,0.005,24,0.339,29,0.974,48,0.059,54,0.158,62,0.937,64,0.872,79,1.098,86,0.004,88,0.987,131,0.004,136,1.793,141,1.251,143,1.098,171,1.589,189,2.372,192,3.168,195,1.631,680,5.897,685,6.149,695,6.095,717,3.589,1914,8.391,2556,9.353,2557,7.264,2558,7.264,2559,8.726,2560,7.264,2561,7.264]],["title/modules/HelgolandCachingModule.html",[2136,1.515,2562,4.191]],["body/modules/HelgolandCachingModule.html",[2,0.086,3,0.079,4,0.065,23,0.005,24,0.474,29,0.951,31,1.719,48,0.07,54,0.128,61,4.67,86,0.004,131,0.004,249,2.572,369,4.786,376,5.595,377,4.997,380,6.349,546,2.349,565,7.132,571,6.349,589,4.997,1976,6.06,2136,2.127,2139,3.909,2140,3.045,2141,3.546,2562,7.132,2563,7.091,2564,6.06,2565,7.132,2566,6.361,2567,7.208]],["title/modules/HelgolandControlModule.html",[2136,1.515,2568,3.935]],["body/modules/HelgolandControlModule.html",[2,0.079,3,0.072,4,0.059,21,0.434,23,0.005,24,0.459,29,0.874,48,0.076,54,0.118,85,1.427,86,0.004,131,0.004,174,1.42,198,1.876,205,3.312,206,2.44,269,3.312,270,2.44,275,3.312,287,2.168,340,5.846,1011,2.48,1209,2.699,1999,3.734,2136,2.448,2139,3.711,2140,3.828,2141,3.008,2278,2.851,2568,8.086,2569,2.905,2570,5.846,2571,5.846,2572,5.846,2573,5.846,2574,4.964,2575,7.323,2576,5.846,2577,5.846,2578,5.846]],["title/modules/HelgolandCoreModule.html",[2136,1.515,2579,2.817]],["body/modules/HelgolandCoreModule.html",[2,0.071,3,0.065,4,0.053,23,0.005,24,0.476,27,2.476,29,0.787,48,0.073,54,0.106,86,0.004,131,0.004,146,1.253,198,1.69,220,1.577,277,2.641,287,2.029,659,6.216,781,4.431,1011,2.235,1108,3.821,1209,2.432,1533,7.054,1535,4.336,1909,4.336,1910,4.87,1916,5.268,1962,5.81,1976,4.138,1977,4.573,1978,4.87,1991,7.937,2016,7.054,2136,2.291,2139,3.472,2140,3.645,2141,3.128,2278,2.569,2383,7.054,2569,2.618,2579,5.87,2580,5.268,2581,5.268,2582,5.268,2583,5.268,2584,7.44,2585,5.872,2586,7.638,2587,5.872,2588,5.872,2589,5.268,2590,5.872,2591,5.872,2592,5.872,2593,5.872,2594,5.872]],["title/modules/HelgolandD3Module.html",[2136,1.515,2595,3.731]],["body/modules/HelgolandD3Module.html",[2,0.077,3,0.071,4,0.058,23,0.005,24,0.463,29,0.856,31,1.549,48,0.075,54,0.116,86,0.004,131,0.004,198,1.838,211,3.741,212,2.577,213,2.71,214,2.221,216,3.627,217,3.683,218,2.792,287,2.141,677,5.969,1011,2.43,1209,2.645,2136,2.417,2139,3.664,2140,3.792,2141,2.97,2278,2.794,2569,2.848,2579,5.445,2595,7.7,2596,5.73,2597,5.73,2598,6.387,2599,5.73,2600,6.387,2601,7.325]],["title/modules/HelgolandDatasetTableModule.html",[2136,1.515,2602,3.731]],["body/modules/HelgolandDatasetTableModule.html",[2,0.083,3,0.076,4,0.062,23,0.005,24,0.47,29,0.917,31,1.659,48,0.077,54,0.124,86,0.004,131,0.004,198,1.969,220,1.27,222,3.835,287,2.234,1011,2.603,1209,2.833,1999,3.919,2002,3.455,2003,3.623,2136,2.523,2139,3.824,2140,3.912,2141,3.1,2278,2.992,2569,3.049,2574,5.115,2579,5.538,2602,7.563,2603,6.136,2604,6.136,2605,6.84,2606,6.136,2607,6.84,2608,6.84,2609,6.211,2610,6.84]],["title/modules/HelgolandDatasetlistModule.html",[2136,1.515,2611,3.731]],["body/modules/HelgolandDatasetlistModule.html",[2,0.072,3,0.066,4,0.054,23,0.005,24,0.474,29,0.801,31,1.448,48,0.074,54,0.108,85,1.308,86,0.004,131,0.004,166,1.227,174,1.363,198,1.719,205,3.219,214,1.43,218,2.069,263,1.979,266,2.801,269,3.219,275,3.219,281,2.758,285,2.801,287,2.051,1011,2.273,1209,2.474,1999,3.422,2002,3.017,2003,3.163,2136,2.316,2139,3.511,2140,3.675,2141,3.154,2278,2.612,2569,2.663,2574,4.696,2579,5.35,2609,5.702,2611,7.728,2612,5.358,2613,5.972,2614,5.358,2615,5.972,2616,5.358,2617,6.486,2618,7.474,2619,5.358,2620,4.409,2621,5.972,2622,5.358,2623,6.665,2624,5.358,2625,5.358,2626,6.014,2627,4.409]],["title/modules/HelgolandFavoriteModule.html",[2136,1.515,2628,3.935]],["body/modules/HelgolandFavoriteModule.html",[2,0.077,3,0.07,4,0.058,23,0.005,24,0.456,29,0.853,48,0.075,54,0.115,85,1.394,86,0.004,131,0.004,174,1.405,198,1.832,205,3.256,229,2.918,230,2.705,269,3.256,275,3.256,287,2.137,1011,2.422,1209,2.637,1999,3.648,2136,2.412,2139,3.657,2140,3.787,2141,3.25,2278,2.785,2309,6.131,2379,5.711,2389,5.711,2569,2.838,2574,4.892,2575,5.711,2628,8.163,2629,5.711,2630,6.366,2631,6.366,2632,5.711,2633,7.6,2634,5.711,2635,6.366,2636,6.366]],["title/modules/HelgolandFlotModule.html",[2136,1.515,2637,3.935]],["body/modules/HelgolandFlotModule.html",[2,0.08,3,0.074,4,0.061,23,0.005,24,0.461,29,0.893,48,0.077,54,0.121,86,0.004,131,0.004,198,1.918,213,2.783,214,2.254,231,3.762,232,2.867,233,3.822,287,2.199,1011,2.535,1209,2.76,2136,2.482,2139,3.763,2140,3.866,2141,3.05,2278,2.915,2456,6.864,2569,2.97,2601,6.864,2617,6.672,2637,8.076,2638,5.977,2639,5.977,2640,6.663,2641,5.977,2642,6.663,2643,5.188]],["title/modules/HelgolandLabelMapperModule.html",[2136,1.515,2617,3.415]],["body/modules/HelgolandLabelMapperModule.html",[2,0.083,3,0.076,4,0.063,23,0.005,24,0.457,29,0.925,48,0.077,54,0.125,86,0.004,131,0.004,166,1.738,198,1.986,238,3.779,287,2.247,1011,2.626,1209,2.858,1999,3.954,2136,2.537,2139,3.845,2140,3.927,2141,3.37,2278,3.019,2569,3.077,2574,5.143,2617,6.934,2620,5.095,2644,6.191,2645,6.191,2646,6.191,2647,6.191,2648,7.351,2649,5.374,2650,6.901,2651,6.901,2652,6.191]],["title/modules/HelgolandMapControlModule.html",[2136,1.515,2653,3.935]],["body/modules/HelgolandMapControlModule.html",[2,0.073,3,0.067,4,0.055,23,0.005,24,0.478,29,0.807,31,1.459,48,0.074,54,0.109,85,1.318,86,0.004,131,0.004,174,1.368,198,1.732,205,3.223,226,2.815,237,2.815,242,2.815,269,3.223,275,3.223,286,2.815,287,2.062,1011,2.29,1209,2.493,1999,3.449,2136,2.328,2139,3.528,2140,3.688,2141,3.165,2278,2.633,2569,2.683,2574,4.719,2579,5.361,2626,6.044,2627,4.444,2653,8.157,2654,5.4,2655,6.019,2656,5.4,2657,6.019,2658,5.4,2659,6.5,2660,7.101,2661,5.4,2662,4.992,2663,6.019,2664,6.019,2665,6.019,2666,6.019,2667,6.019]],["title/modules/HelgolandMapModule.html",[2136,1.515,2659,3.415]],["body/modules/HelgolandMapModule.html",[2,0.081,3,0.074,4,0.061,23,0.005,24,0.421,29,0.895,48,0.077,54,0.121,85,1.461,86,0.004,131,0.004,174,1.435,198,1.921,205,3.283,235,1.557,269,3.283,275,3.283,287,2.201,427,5.824,478,4.343,1011,2.54,1209,2.764,2136,2.485,2139,3.767,2140,3.869,2141,3.321,2278,2.92,2569,2.976,2659,7.082,2668,5.988,2669,6.674,2670,6.674,2671,5.988,2672,5.988]],["title/modules/HelgolandMapSelectorModule.html",[2136,1.515,2673,3.935]],["body/modules/HelgolandMapSelectorModule.html",[2,0.074,3,0.068,4,0.056,23,0.005,24,0.47,29,0.826,31,1.494,48,0.074,54,0.112,85,1.349,86,0.004,131,0.004,174,1.383,198,1.774,205,3.237,218,2.135,221,1.726,235,2.258,259,2.858,260,1.75,268,2.858,269,3.237,274,2.904,275,3.237,287,2.093,1011,2.345,1209,2.553,1999,3.531,2136,2.363,2139,3.582,2140,3.73,2141,2.904,2278,2.696,2569,2.748,2574,4.792,2579,5.395,2659,6.541,2662,5.111,2673,8.137,2674,5.529,2675,6.163,2676,6.163,2677,6.163,2678,5.529,2679,5.529,2680,5.871,2681,6.163,2682,5.529]],["title/modules/HelgolandMapViewModule.html",[2136,1.515,2683,3.935]],["body/modules/HelgolandMapViewModule.html",[2,0.084,3,0.077,4,0.063,23,0.005,24,0.458,29,0.935,48,0.078,54,0.126,86,0.004,98,1.954,131,0.004,198,2.008,234,3.844,235,1.987,287,2.262,1011,2.654,1209,2.889,2136,2.553,2139,3.87,2140,3.946,2141,3.137,2278,3.051,2569,3.11,2659,6.746,2662,5.785,2683,8.003,2684,6.258,2685,6.258,2686,6.976,2687,6.258,2688,6.976,2689,6.976,2690,6.976]],["title/modules/HelgolandModificationModule.html",[2136,1.515,2691,3.935]],["body/modules/HelgolandModificationModule.html",[2,0.073,3,0.067,4,0.055,23,0.005,24,0.472,29,0.813,31,1.471,48,0.074,54,0.11,86,0.004,131,0.004,175,3.715,180,5.442,185,2.271,198,1.746,208,3.715,209,1.916,224,3.715,225,2.101,244,3.715,245,2.01,246,2.584,287,2.072,652,5.442,1011,2.308,1209,2.512,2002,3.065,2069,5.442,2136,2.339,2139,3.546,2140,3.702,2141,2.874,2278,2.654,2569,2.704,2579,5.372,2626,6.074,2627,4.479,2680,4.1,2691,8.144,2692,5.442,2693,5.442,2694,6.066,2695,5.442,2696,6.066,2697,7.8,2698,5.442,2699,7.8,2700,5.442,2701,6.066]],["title/modules/HelgolandPermalinkModule.html",[2136,1.515,2702,3.935]],["body/modules/HelgolandPermalinkModule.html",[2,0.078,3,0.072,4,0.059,23,0.005,24,0.458,29,0.869,48,0.076,54,0.117,66,1.511,85,1.42,86,0.004,131,0.004,174,1.416,198,1.866,205,3.267,252,2.952,253,3.277,255,2.952,257,2.952,269,3.267,275,3.267,287,2.161,1011,2.467,1209,2.685,2002,3.276,2136,2.44,2139,3.699,2140,3.819,2141,2.999,2278,2.836,2569,2.891,2702,8.081,2703,5.817,2704,6.484,2705,6.484,2706,5.817,2707,8.137,2708,5.377,2709,5.817,2710,6.484,2711,5.817,2712,6.484,2713,5.817,2714,6.484]],["title/modules/HelgolandPlotlyModule.html",[2136,1.515,2715,3.935]],["body/modules/HelgolandPlotlyModule.html",[2,0.084,3,0.077,4,0.064,23,0.005,24,0.459,29,0.937,31,1.695,48,0.078,54,0.127,86,0.004,131,0.004,198,2.011,261,3.614,262,2.421,263,2.824,287,2.264,1011,2.659,1209,2.894,2136,2.556,2139,3.875,2140,3.949,2141,3.141,2144,4.924,2278,3.057,2569,3.116,2579,5.567,2601,5.796,2715,8.006,2716,6.269,2717,6.269,2718,6.988,2719,6.269,2720,6.988]],["title/modules/HelgolandSelectorModule.html",[2136,1.515,2721,3.935]],["body/modules/HelgolandSelectorModule.html",[2,0.066,3,0.06,4,0.05,23,0.005,24,0.476,29,0.73,31,1.32,48,0.071,54,0.099,86,0.003,131,0.003,198,1.566,219,3.599,220,1.011,221,2.035,240,3.656,241,2.305,248,3.599,249,1.974,250,2.352,251,2.934,272,3.656,273,3.656,287,1.93,1011,2.071,1209,2.254,1584,4.513,1999,3.118,2002,2.749,2003,2.882,2136,2.179,2139,3.302,2140,3.511,2141,3.013,2278,2.381,2411,4.238,2569,2.426,2574,4.418,2579,5.214,2609,5.364,2617,6.321,2643,4.238,2680,6.145,2721,8.201,2722,4.882,2723,4.882,2724,5.442,2725,4.882,2726,4.882,2727,6.591,2728,6.906,2729,5.442,2730,5.657,2731,6.025,2732,6.368]],["title/modules/HelgolandTimeModule.html",[2136,1.515,2733,3.935]],["body/modules/HelgolandTimeModule.html",[2,0.075,3,0.068,4,0.056,23,0.005,24,0.474,29,0.829,31,1.499,48,0.074,54,0.112,85,1.354,86,0.004,131,0.004,140,2.085,174,1.386,198,1.779,205,3.239,241,2.505,264,2.864,265,2.208,269,3.239,275,3.239,276,2.864,277,1.709,282,2.864,283,2.864,284,2.956,287,2.097,1011,2.353,1209,2.561,1999,3.542,2136,2.368,2139,3.589,2140,3.736,2141,2.278,2278,2.705,2569,2.756,2574,4.801,2577,5.547,2579,5.399,2626,6.149,2627,4.565,2680,5.88,2733,8.093,2734,5.547,2735,6.183,2736,6.183,2737,6.183,2738,5.547,2739,5.547,2740,5.547,2741,5.547,2742,5.547]],["title/modules/HelgolandTimeRangeSliderModule.html",[2136,1.515,2743,3.935]],["body/modules/HelgolandTimeRangeSliderModule.html",[2,0.084,3,0.077,4,0.063,23,0.005,24,0.458,29,0.932,48,0.078,54,0.126,86,0.004,131,0.004,198,2,277,2.348,278,3.782,279,2.751,287,2.257,1011,2.645,1209,2.879,1999,3.982,2136,2.548,2139,3.862,2140,3.94,2141,3.381,2278,3.04,2569,3.099,2574,5.166,2743,7.998,2744,6.235,2745,6.235,2746,6.235,2747,6.235,2748,7.363,2749,5.413,2750,5.764,2751,6.951,2752,6.951,2753,6.235]],["title/interfaces/HighlightDataset.html",[0,0.081,790,3.935]],["body/interfaces/HighlightDataset.html",[0,0.076,2,0.012,3,0.011,4,0.009,6,0.195,7,0.175,18,0.535,21,0.561,22,0.084,23,0.005,24,0.205,29,0.129,31,0.233,32,1.365,34,1.215,35,0.853,47,1.617,48,0.008,54,0.017,56,0.508,57,1.349,60,0.185,62,0.372,64,0.364,65,3.923,66,0.743,68,1.698,71,3.112,79,1.193,85,1.625,86,0.001,90,0.496,91,2.65,97,1.497,100,2.973,131,0.001,140,0.691,141,0.138,146,1.606,150,1.011,153,0.603,154,0.624,156,1.977,165,2.073,166,1.452,170,3.278,171,1.261,172,0.281,174,0.39,183,0.3,184,0.292,186,0.304,189,0.799,191,1.598,192,1.159,195,1.139,196,0.568,199,0.63,200,0.888,209,1.08,212,1.036,213,1.021,214,1.053,216,0.338,220,1.45,225,1.052,227,0.338,232,0.332,235,0.412,245,1.176,246,0.585,265,0.343,277,1.988,279,2.315,287,0.943,288,0.621,293,2.619,304,0.494,326,1.525,347,0.797,359,1.345,428,0.624,438,3.969,440,0.304,456,2.744,488,2.31,489,2.704,499,2.675,518,1.933,531,3.814,532,0.747,533,0.747,534,0.747,535,0.747,536,0.747,537,0.747,545,3.083,546,2.34,575,0.464,594,0.603,596,0.603,615,0.584,621,1.614,629,0.934,630,0.454,638,2.494,659,1.593,670,2.875,673,0.676,675,3.693,676,0.676,677,0.649,678,0.55,679,0.984,681,0.436,682,0.566,683,0.566,688,0.535,692,1.438,695,0.603,702,0.958,705,1.655,724,0.676,725,1.148,728,0.747,737,0.603,741,0.676,742,2.502,743,1.374,744,0.584,745,0.676,746,1.909,747,2.082,748,1.741,749,1.073,750,3.699,751,4.127,754,4.779,756,0.584,757,3.322,759,2.369,773,0.747,774,1.156,775,1.108,776,1.489,777,0.603,778,0.649,779,0.758,780,1.041,781,0.818,782,2.231,783,4.484,784,2.945,785,0.796,786,0.796,787,0.796,788,0.796,789,2.621,790,2.765,791,2.819,792,2.954,793,2.954,794,2.031,795,2.519,796,2.031,797,2.031,798,2.704,799,1.192,800,1.463,801,2.031,802,1.192,803,2.031,804,1.148,805,0.649,806,0.649,807,0.796,808,5.354,809,2.519,810,0.796,811,0.796,812,0.796,813,0.709,814,0.709,815,0.624,816,0.796,817,0.796,818,0.796,819,1.489,820,1.374,821,2.519,822,1.192,823,0.649,824,0.649,825,0.796,826,0.709,827,0.796,828,0.796,829,0.709,830,0.709,831,0.796,832,4.124,833,2.031,834,0.796,835,0.796,836,0.796,837,3.656,838,3.574,839,1.463,840,0.796,841,0.676,842,1.297,843,0.603,844,0.709,845,0.984,846,1.655,847,0.676,848,1.073,849,2.675,850,0.709,851,1.303,852,4.884,853,1.808,854,1.303,855,1.303,856,0.709,857,0.709,858,0.709,859,0.709,860,0.796,861,0.709,862,0.709,863,0.796,864,0.796,865,0.796,866,0.796,867,2.776,868,1.243,869,0.709,870,0.709,871,0.747,872,0.796,873,0.818,874,1.073,875,0.603,876,1.463,877,0.796,878,1.808,879,0.796,880,0.709,881,2.621,882,1.108,883,2.621,884,1.808,885,1.303,886,2.954,887,0.853,888,1.303,889,1.303,890,0.709,891,2.945,892,1.463,893,2.031,894,0.584,895,0.584,896,0.747,897,1.463,898,0.796,899,0.55,900,0.796,901,0.566,902,0.709,903,1.463,904,0.796,905,0.796,906,0.796,907,1.463,908,0.796,909,0.584,910,1.463,911,1.463,912,2.519,913,3.318,914,1.463,915,4.207,916,1.463,917,1.463,918,3.943,919,0.584,920,0.584,921,0.796,922,2.031,923,0.584,924,1.073,925,0.709,926,0.796,927,0.584,928,0.796,929,0.796,930,0.566,931,0.796,932,0.709,933,0.649,934,0.676,935,0.584,936,1.463,937,0.796,938,0.796,939,0.709,940,1.303,941,0.796,942,0.796,943,0.796,944,0.796,945,1.374,946,0.796,947,0.55,948,0.747,949,0.796,950,0.796,951,1.374,952,1.463,953,1.108,954,3.1,955,0.603,956,0.747,957,1.655,958,0.796,959,0.796,960,2.519,961,0.796,962,1.463,963,0.747,964,1.463,965,0.796,966,0.649,967,0.796,968,0.796,969,0.796,970,0.796,971,0.796,972,0.796,973,0.796,974,0.796,975,0.796,976,0.796,977,0.796,978,0.796,979,0.796,980,1.881,981,0.796,982,1.808,983,0.747,984,2.4,985,0.747,986,2.031,987,0.796,988,0.649,989,0.796,990,0.796,991,0.796,992,0.796,993,0.796,994,0.796,995,1.374,996,0.796,997,0.796,998,0.796,999,1.463,1000,0.796,1001,2.519,1002,2.031,1003,0.796,1004,0.796,1005,0.796,1006,0.709,1007,1.463,1008,0.796,1009,0.796,1010,0.796,1011,0.365,1012,2.031,1013,2.031,1014,0.796,1015,0.796,1016,0.796,1017,1.463,1018,0.796,1019,1.463,1020,0.796,1021,0.796,1022,0.796,1023,0.796,1024,0.796,1025,0.796,1026,0.796,1027,0.796,1028,2.594,1029,0.796,1030,0.796,1031,2.031,1032,0.796,1033,1.463,1034,1.463,1035,0.796,1036,0.796,1037,1.463,1038,1.463,1039,0.796,1040,0.796,1041,1.463,1042,2.243,1043,2.031,1044,3.51,1045,0.796,1046,0.796,1047,1.463,1048,0.796,1049,0.796,1050,3.798,1051,0.709,1052,2.031,1053,0.796,1054,0.796,1055,0.796,1056,1.243,1057,2.621,1058,0.709,1059,3.957,1060,3.745,1061,2.621,1062,3.745,1063,2.954,1064,1.303,1065,0.796,1066,0.709,1067,0.709,1068,0.709,1069,0.709,1070,0.709,1071,1.303,1072,1.303,1073,0.709,1074,4.631,1075,3.51,1076,1.303,1077,1.303,1078,1.303,1079,1.303,1080,1.808,1081,1.303,1082,0.709,1083,2.243,1084,0.709,1085,2.243,1086,1.808,1087,1.808,1088,2.621,1089,1.303,1090,2.519,1091,0.709,1092,0.676,1093,0.709,1094,1.303,1095,0.796,1096,0.796,1097,1.463,1098,0.796,1099,0.796,1100,0.796,1101,2.031,1102,0.796,1103,0.796,1104,0.796,1105,0.796,1106,0.796,1107,0.796,1108,1.977,1109,0.796,1110,1.463,1111,0.796,1112,0.796,1113,0.796,1114,0.796,1115,0.796,1116,1.463,1117,0.796,1118,0.796,1119,0.796,1120,0.796,1121,0.796,1122,1.374,1123,0.796,1124,0.796,1125,0.796,1126,0.796,1127,0.796,1128,0.603,1129,0.796,1130,1.374,1131,1.463,1132,0.796,1133,0.796,1134,0.796,1135,1.463,1136,1.463,1137,0.709,1138,0.796,1139,0.624,1140,1.463,1141,1.741,1142,0.796,1143,0.747,1144,0.796,1145,0.796,1146,0.796,1147,1.463,1148,1.463,1149,2.519,1150,2.519,1151,3.943,1152,0.796,1153,0.796,1154,3.943,1155,3.318,1156,2.519,1157,2.519,1158,2.945,1159,0.796,1160,2.945,1161,0.796,1162,2.945,1163,2.945,1164,2.031,1165,2.945,1166,3.318,1167,2.366,1168,1.374,1169,0.796,1170,1.463,1171,0.796,1172,0.747,1173,2.945,1174,4.631,1175,0.796,1176,1.463,1177,0.796,1178,2.031,1179,2.031,1180,0.796,1181,1.463,1182,0.796,1183,1.463,1184,0.676,1185,0.796,1186,0.796,1187,0.747,1188,0.796,1189,1.374,1190,1.303,1191,0.796,1192,2.519,1193,0.796,1194,1.303,1195,0.676,1196,1.463,1197,2.945,1198,1.463,1199,0.796,1200,0.796,1201,1.463,1202,2.159,1203,1.909,1204,0.796,1205,0.796,1206,0.796,1207,0.796,1208,1.463,1209,0.731,1210,0.796,1211,0.796,1212,2.053,1213,2.519,1214,2.945,1215,1.463,1216,2.519,1217,1.808,1218,1.463,1219,1.463,1220,1.463,1221,1.463,1222,1.303,1223,0.796,1224,1.374,1225,2.621,1226,1.808,1227,1.303,1228,0.796,1229,1.808,1230,1.538,1231,1.808,1232,0.796,1233,1.808,1234,0.496,1235,0.709,1236,0.796,1237,1.148,1238,1.303,1239,3.248,1240,3.248,1241,0.709,1242,1.365,1243,0.796,1244,2.562,1245,0.796,1246,2.519,1247,1.463,1248,0.796,1249,1.463,1250,0.796,1251,2.031,1252,0.796,1253,1.538,1254,0.709,1255,0.796,1256,0.709,1257,1.303,1258,0.796,1259,0.796,1260,0.796,1261,0.709,1262,0.709,1263,0.709,1264,0.709,1265,0.796,1266,1.303,1267,0.709,1268,0.709,1269,1.463,1270,0.796,1271,1.463,1272,0.796,1273,0.796,1274,0.796,1275,0.796,1276,0.796,1277,0.796,1278,1.463,1279,0.747,1280,0.796,1281,0.796,1282,0.649,1283,0.796,1284,0.796,1285,0.796,1286,0.796,1287,0.796,1288,0.796,1289,0.796,1290,0.796,1291,0.796,1292,0.796,1293,0.796,1294,0.796,1295,0.796,1296,1.463,1297,0.796,1298,0.796,1299,0.796,1300,2.031,1301,0.796,1302,0.796,1303,0.796,1304,0.796,1305,1.463,1306,0.796,1307,0.747,1308,1.148,1309,0.709,1310,2.031,1311,0.796,1312,0.796,1313,0.796,1314,0.796,1315,1.463,1316,0.796,1317,0.747,1318,0.709,1319,0.796,1320,0.709,1321,1.463,1322,0.796,1323,1.463,1324,0.709,1325,0.709,1326,0.796,1327,0.796,1328,0.796,1329,0.796,1330,0.796,1331,0.796,1332,0.709,1333,0.796,1334,0.796,1335,0.709,1336,0.709,1337,0.796,1338,0.709,1339,0.796,1340,0.709,1341,0.796,1342,1.374,1343,0.796,1344,0.709,1345,1.463,1346,1.463,1347,1.463,1348,0.796,1349,3.943,1350,0.709,1351,0.709,1352,0.796,1353,0.796,1354,0.747,1355,0.796,1356,0.796,1357,0.709,1358,1.463,1359,2.519,1360,0.796,1361,0.796,1362,0.796,1363,0.796,1364,0.796,1365,0.796,1366,1.374,1367,0.796,1368,0.796,1369,1.463,1370,0.796,1371,1.463,1372,0.796,1373,0.796,1374,0.796,1375,2.031,1376,1.463,1377,0.796,1378,1.463,1379,0.676,1380,0.796,1381,0.796,1382,1.463,1383,0.709,1384,0.709,1385,1.694,1386,0.796,1387,2.519,1388,2.031,1389,1.463,1390,0.796,1391,0.796,1392,2.031,1393,0.796,1394,1.463,1395,1.463,1396,1.463,1397,2.031,1398,1.463,1399,1.463,1400,0.796,1401,0.796,1402,1.463,1403,0.796,1404,0.796,1405,0.796,1406,1.808,1407,1.303,1408,0.796,1409,0.796,1410,0.709,1411,0.796,1412,0.796,1413,0.709,1414,0.747,1415,0.796,1416,0.796,1417,0.796,1418,0.796,1419,0.796,1420,2.031,1421,1.463,1422,0.796,1423,0.796,1424,0.747,1425,0.796,1426,1.303,1427,2.519,1428,2.945,1429,0.796,1430,0.796,1431,0.796,1432,2.945,1433,0.796,1434,2.433,1435,1.463,1436,1.243,1437,2.031,1438,4.324,1439,0.709,1440,3.51,1441,2.519,1442,1.463,1443,0.796,1444,1.463,1445,1.303,1446,1.463,1447,1.726,1448,0.796,1449,0.796,1450,1.192,1451,0.796,1452,0.709,1453,1.808,1454,1.303,1455,2.031,1456,1.303,1457,0.796,1458,0.709,1459,0.796,1460,1.374,1461,0.796,1462,0.796,1463,0.796,1464,0.709,1465,0.709,1466,0.796,1467,0.709,1468,0.709,1469,0.709,1470,1.808,1471,0.709,1472,2.243,1473,2.243,1474,0.709,1475,0.709,1476,0.709,1477,0.709,1478,0.709,1479,0.709,1480,0.603,1481,1.463,1482,0.796,1483,3.943,1484,0.796,1485,0.796,1486,0.796,1487,0.709]],["title/classes/HttpCache.html",[54,0.092,376,3.288]],["body/classes/HttpCache.html",[2,0.076,3,0.07,4,0.058,6,0.281,22,0.384,23,0.005,24,0.374,27,2.667,34,3.517,35,3.057,47,1.552,48,0.065,54,0.159,62,0.947,64,0.961,79,1.397,86,0.004,88,1.089,97,3.897,131,0.004,136,1.646,141,1.149,143,1.211,152,4.552,171,1.074,195,2.076,361,3.642,369,4.779,374,6.043,375,6.865,376,5.212,378,5.524,379,6.014,381,5.914,388,5.914,389,6.491,571,4.669,578,5.033,581,4.925,587,3.124,980,4.243,1918,5.914,2754,5.674,2755,7.187,2756,6.324,2757,6.324,2758,7.187,2759,5.245,2760,5.245,2761,5.245,2762,5.245]],["title/interfaces/HttpRequestOptions.html",[0,0.081,1496,3.175]],["body/interfaces/HttpRequestOptions.html",[0,0.156,2,0.087,3,0.08,4,0.066,6,0.32,7,0.861,21,0.695,22,0.416,23,0.005,48,0.076,64,1.162,86,0.004,131,0.004,140,1.643,171,1.683,172,1.15,250,1.869,294,7.541,524,3.221,747,3.419,934,5.09,935,4.393,1488,4.882,1489,5.991,1490,5.991,1491,4.393,1492,3.492,1493,5.625,1494,3.735,1495,5.625,1496,5.463,1497,6.545]],["title/injectables/HttpService.html",[28,1.149,30,2.895]],["body/injectables/HttpService.html",[0,0.137,2,0.071,3,0.065,4,0.053,6,0.26,7,0.756,22,0.407,23,0.005,24,0.357,27,2.476,28,2.045,29,0.787,30,4.377,47,1.037,48,0.076,54,0.106,57,1.353,60,1.474,62,0.789,64,1.079,66,1.419,79,1.155,85,1.286,86,0.004,88,1.038,97,3.579,131,0.004,136,1.57,141,1.217,143,1.155,171,0.998,182,3,293,2.347,300,5.151,347,1.319,361,2.432,374,5.007,378,3.689,440,1.863,573,4.336,574,6.076,575,3.692,576,6.732,578,5.333,582,6.335,589,6.568,602,7.282,1141,4.864,1497,3.969,1534,5.012,2145,4.97,2564,4.138,2763,4.336,2764,6.335,2765,5.872,2766,7.44,2767,7.638,2768,5.948,2769,5.872,2770,4.573,2771,4.336,2772,4.573,2773,4.573,2774,4.573,2775,4.573,2776,4.573,2777,4.573,2778,4.573,2779,4.573,2780,4.573]],["title/interfaces/HttpServiceHandler.html",[0,0.081,576,3.561]],["body/interfaces/HttpServiceHandler.html",[0,0.148,2,0.075,3,0.069,4,0.057,6,0.276,22,0.298,23,0.005,24,0.37,27,2.624,28,1.985,29,0.834,30,3.565,47,1.098,48,0.077,54,0.113,57,1.433,60,1.2,62,0.579,64,1.047,66,1.472,79,1.199,85,1.362,86,0.004,88,0.846,97,2.624,131,0.004,136,1.629,141,0.892,143,0.941,171,1.057,182,3.078,293,1.72,300,5,361,2.577,374,5.597,378,3.909,573,4.594,574,5.358,575,3.833,576,6.687,578,5.772,582,5.587,589,6.149,602,7.006,1141,5.437,1497,4.205,1534,4.42,2145,5.978,2564,4.385,2763,4.594,2766,6.795,2768,4.846,2770,4.846,2771,4.594,2772,6.174,2773,4.846,2774,4.846,2775,4.846,2776,4.846,2777,4.846,2778,4.846,2779,4.846,2780,4.846,2781,6.222]],["title/interfaces/HttpServiceInterceptor.html",[0,0.081,582,3.561]],["body/interfaces/HttpServiceInterceptor.html",[0,0.147,2,0.075,3,0.068,4,0.056,6,0.274,22,0.296,23,0.005,24,0.369,27,2.607,28,1.979,29,0.829,30,3.542,47,1.091,48,0.077,54,0.112,57,1.424,60,1.193,62,0.575,64,1.044,66,1.466,79,1.194,85,1.354,86,0.004,88,0.84,97,2.607,131,0.004,136,1.623,141,0.886,143,0.935,171,1.05,182,3.074,293,1.709,300,4.985,361,2.561,374,5.586,378,3.884,568,7.084,573,5.83,574,5.337,575,4.431,576,6.825,578,5.759,582,6.13,589,6.13,602,6.993,1141,4.985,1497,4.179,1534,4.402,2145,5.964,2564,4.357,2763,4.565,2766,6.775,2768,4.815,2770,4.815,2771,4.565,2772,4.815,2773,4.815,2774,4.815,2775,4.815,2776,4.815,2777,4.815,2778,4.815,2779,4.815,2780,4.815,2782,6.183]],["title/interfaces/HttpServiceMetadata.html",[0,0.081,574,3.415]],["body/interfaces/HttpServiceMetadata.html",[0,0.148,2,0.075,3,0.069,4,0.056,6,0.275,7,0.783,22,0.379,23,0.005,24,0.37,27,2.615,28,1.982,29,0.831,30,3.554,47,1.538,48,0.077,54,0.112,57,1.429,60,1.197,62,0.577,64,1.163,66,1.469,79,0.938,85,1.358,86,0.004,97,2.615,131,0.004,171,1.48,182,2.989,293,1.714,300,4.992,361,3.609,374,5.139,378,5.765,573,4.579,574,5.889,575,3.825,576,6.467,578,5.474,582,5.576,589,6.14,602,6.999,1141,4.992,1497,6.202,1534,3.458,2145,5.148,2564,4.371,2763,4.579,2766,6.785,2768,4.83,2770,4.83,2771,4.579,2772,4.83,2773,4.83,2774,4.83,2775,4.83,2776,4.83,2777,4.83,2778,4.83,2779,4.83,2780,4.83]],["title/interfaces/IDataEntry.html",[0,0.081,766,3.288]],["body/interfaces/IDataEntry.html",[0,0.163,2,0.086,3,0.079,4,0.065,21,0.617,23,0.005,43,3.68,47,1.701,48,0.082,54,0.129,86,0.004,91,3.448,98,2.414,131,0.004,172,1.535,347,2.164,359,3.117,524,3.173,625,2.708,638,2.429,763,4.81,764,4.214,765,4.08,766,6.269,767,5.608,768,4.328,769,4.631,770,4.805,771,5.825,772,4.197]],["title/interfaces/IDataset.html",[0,0.081,774,1.923]],["body/interfaces/IDataset.html",[0,0.144,2,0.062,3,0.057,4,0.047,6,0.23,7,0.696,21,0.698,22,0.452,23,0.005,24,0.372,47,1.24,48,0.08,54,0.167,56,2.022,62,0.987,86,0.003,88,0.704,131,0.003,143,1.55,146,1.5,165,3.566,166,1.639,170,4.457,171,0.88,172,1.362,209,1.726,214,1.24,220,0.962,221,2.396,250,1.34,260,1.471,304,2.583,347,1.163,359,1.741,518,1.511,545,2.354,624,2.504,625,1.971,764,4.546,774,3.254,1234,2.678,1492,2.504,1494,4.623,1502,3.149,1503,4.703,1504,5.282,1505,5.403,1506,3.149,1508,5.574,1514,4.703,1521,2.887,1522,4.883,1523,2.451,1524,2.504,1525,2.504,1526,3.149,1527,4.144,1528,4.984,1529,2.968,1530,2.968,1531,2.968,1532,3.054]],["title/interfaces/Id.html",[0,0.081,146,1.079]],["body/interfaces/Id.html",[0,0.162,2,0.078,3,0.072,4,0.059,6,0.289,7,0.807,21,0.685,22,0.391,23,0.005,47,1.805,48,0.081,62,0.758,86,0.004,131,0.004,146,2.237,166,1.83,172,1.419,176,2.187,182,2.515,334,3.145,347,1.461,359,2.187,627,5.795,628,4.397,629,3.446,630,3.079,631,4.397,632,5.678,633,4.959,634,4.397,635,4.397,636,3.837,637,4.397,638,3.04,639,4.397,640,4.397,641,4.397,642,4.397,643,4.397,644,3.837,645,3.956,646,4.959,647,4.397,648,5.306,649,4.397,650,3.956]],["title/classes/IdCache.html",[54,0.092,2783,3.731]],["body/classes/IdCache.html",[2,0.079,3,0.073,4,0.06,6,0.292,7,0.813,21,0.677,22,0.449,23,0.005,48,0.053,54,0.149,62,0.946,64,1.074,66,1.524,79,1.458,86,0.004,88,1.216,131,0.004,136,1.686,141,1.344,143,1.353,146,1.91,171,1.394,195,1.476,235,2.251,293,2.473,326,3.524,347,2.166,369,4.846,371,4.852,440,2.085,765,4.566,2783,6.059,2784,9.646,2785,6.572,2786,8.207,2787,6.572,2788,8.207,2789,6.572,2790,8.207,2791,6.572,2792,6.572,2793,6.572,2794,6.572]],["title/interfaces/Identifiable.html",[0,0.081,2795,4.191]],["body/interfaces/Identifiable.html",[0,0.147,2,0.095,3,0.087,4,0.072,6,0.35,7,0.907,21,0.644,22,0.378,23,0.005,48,0.064,86,0.004,131,0.004,146,2.127,625,3.001,2795,7.597,2796,7.888]],["title/interfaces/InternalDatasetId.html",[0,0.081,2797,3.935]],["body/interfaces/InternalDatasetId.html",[0,0.128,2,0.076,3,0.07,4,0.057,6,0.279,7,0.79,21,0.666,22,0.382,23,0.005,24,0.409,28,1.814,29,0.842,48,0.065,54,0.114,62,0.742,65,3.856,79,1.206,85,1.747,86,0.004,131,0.004,146,2.206,165,3.086,220,1.768,250,1.626,304,2.768,487,3.412,747,4.149,774,3.036,781,2.914,867,3.104,873,3.7,932,4.639,933,4.247,953,3.947,1534,3.503,1576,4.428,1578,4.639,1835,5.306,1909,4.639,2797,6.826,2798,5.211,2799,5.637,2800,6.616,2801,5.211,2802,7.27,2803,5.211,2804,5.637,2805,5.211,2806,5.211,2807,5.637,2808,5.637,2809,5.637,2810,5.637,2811,5.637,2812,5.637,2813,5.637]],["title/injectables/InternalIdHandler.html",[28,1.149,781,2.343]],["body/injectables/InternalIdHandler.html",[0,0.092,2,0.069,3,0.063,4,0.052,6,0.253,21,0.643,22,0.359,23,0.005,24,0.391,28,1.904,29,0.765,48,0.061,54,0.103,62,0.881,64,0.9,65,3.624,79,1.344,85,1.641,86,0.004,88,1.019,131,0.004,136,1.541,141,1.075,143,1.133,146,2.225,165,3.239,195,1.282,220,1.859,250,1.94,304,2.656,487,4.072,740,4.938,747,4.487,774,3.384,781,3.477,867,2.82,873,4.124,932,4.214,933,3.857,953,3.586,1534,4.668,1576,4.022,1578,4.214,1835,5.58,1909,6.182,2797,6.52,2798,4.733,2799,5.12,2800,6.218,2801,4.733,2802,7.659,2803,6.218,2804,6.726,2805,6.218,2806,6.218,2807,6.726,2808,5.12,2809,5.12,2810,5.12,2811,5.12,2812,5.12,2813,5.12,2814,7.497,2815,7.497,2816,5.707,2817,5.707]],["title/injectables/JsonFavoriteExporterService.html",[28,1.149,2633,3.935]],["body/injectables/JsonFavoriteExporterService.html",[2,0.069,3,0.063,4,0.076,6,0.253,22,0.401,23,0.005,24,0.415,28,1.903,29,0.764,34,3.693,35,3.621,48,0.046,54,0.103,57,1.313,60,1.445,62,0.881,64,0.899,66,1.554,71,2.067,75,4.016,79,1.265,85,2.146,86,0.004,88,1.018,131,0.004,136,1.539,141,1.2,143,1.132,191,1.916,195,1.28,230,3.104,620,4.016,845,3.177,1541,3.708,1548,4.208,2306,5.062,2309,5.583,2448,4.726,2633,5.833,2818,8.887,2819,5.699,2820,8.887,2821,7.49,2822,5.699,2823,5.699,2824,7.49,2825,5.699,2826,7.49,2827,5.699,2828,5.699,2829,8.367,2830,5.699,2831,5.699,2832,5.699,2833,5.699,2834,5.699,2835,5.699,2836,5.699,2837,5.113,2838,5.699,2839,5.699,2840,5.699,2841,5.699,2842,5.699,2843,5.699,2844,5.699,2845,5.699,2846,5.113,2847,5.699,2848,5.699,2849,5.699,2850,5.699,2851,5.699,2852,5.699,2853,5.699,2854,5.699,2855,5.699,2856,5.699,2857,5.699,2858,5.699,2859,5.699,2860,5.699,2861,5.113,2862,5.699,2863,5.699,2864,5.699]],["title/components/LabelMapperComponent.html",[174,0.805,238,1.833]],["body/components/LabelMapperComponent.html",[2,0.052,3,0.048,4,0.04,6,0.193,7,0.616,21,0.581,22,0.38,23,0.005,24,0.29,29,0.583,38,1.419,48,0.035,54,0.079,56,1.79,57,1.001,60,1.199,62,0.882,64,0.746,66,0.807,79,0.657,86,0.003,88,1.077,98,1.217,131,0.003,136,1.278,140,1.651,141,1.202,143,0.94,166,1.993,174,1.335,175,1.576,176,1.461,177,1.654,178,1.654,182,1.34,183,3.298,184,3.206,185,1.627,186,1.972,195,1.396,196,2.55,198,1.251,199,2.221,200,2.255,201,2.221,202,2.967,203,1.654,204,2.366,205,1.398,206,1.627,207,2.763,208,1.576,209,1.067,210,3.691,211,1.576,212,2.118,213,2.09,214,2.007,215,3.319,216,1.528,217,1.552,218,2.515,219,1.552,220,1.155,221,1.742,222,1.601,223,1.654,224,1.576,225,1.505,226,1.576,227,1.528,228,2.763,229,1.576,230,1.461,231,1.576,232,2.154,233,1.601,234,1.601,235,1.849,236,1.654,237,1.576,238,2.875,239,1.654,240,1.576,241,1.972,242,1.576,243,1.552,244,1.576,245,1.44,246,1.44,247,1.654,248,1.552,249,1.576,250,1.878,251,2.09,252,1.576,253,2.675,254,1.654,255,1.576,256,1.654,257,1.576,258,1.654,259,1.576,260,1.234,261,1.505,262,1.505,263,2.405,264,1.576,265,1.552,266,1.576,267,2.763,268,1.576,269,1.398,270,1.627,271,2.366,272,1.576,273,1.576,274,1.601,275,1.398,276,1.576,277,1.719,278,1.576,279,1.251,280,1.654,281,1.552,282,1.576,283,1.576,284,1.627,285,1.576,286,1.576,287,1.154,288,1.528,289,1.654,347,0.976,395,3.437,412,3.215,440,1.379,453,2.943,454,3.675,456,1.901,518,1.814,546,2.06,717,4.309,2425,4.591,2620,6.44,2648,5.851,2649,6.793,2652,3.899,2865,4.346,2866,5.578,2867,6.218,2868,8.723,2869,4.346,2870,6.218,2871,6.218,2872,4.346,2873,4.346,2874,4.346,2875,4.346,2876,4.346,2877,4.346,2878,4.346]],["title/injectables/LabelMapperService.html",[28,1.149,2648,3.731]],["body/injectables/LabelMapperService.html",[2,0.061,3,0.077,4,0.046,6,0.224,7,0.685,21,0.644,22,0.425,23,0.005,24,0.414,27,2.132,28,1.792,29,0.678,31,1.226,34,3.871,35,3.342,48,0.041,54,0.092,57,1.593,60,1.334,62,0.732,64,1.016,66,1.463,68,1.806,79,1.384,85,2.052,86,0.003,88,1.151,97,2.915,131,0.003,136,1.421,141,1.271,143,1.28,166,2.047,195,1.136,202,1.893,293,2.675,300,5.245,304,2.372,326,2.171,347,1.136,369,4.378,440,1.604,490,3.075,620,3.564,621,3.143,1237,3.29,1308,3.29,1548,3.734,2012,4.537,2014,4.537,2140,2.171,2620,6.758,2648,5.104,2649,7.128,2783,6.758,2879,4.537,2880,6.913,2881,6.913,2882,6.913,2883,4.537,2884,7.877,2885,5.967,2886,6.913,2887,6.913,2888,5.057,2889,6.913,2890,5.057,2891,6.913,2892,5.057,2893,5.057,2894,8.866,2895,5.057,2896,5.057,2897,5.057,2898,5.057,2899,6.913,2900,5.057,2901,5.057,2902,4.194,2903,5.057,2904,5.057,2905,5.057,2906,5.057,2907,4.537,2908,5.057,2909,6.913,2910,7.877,2911,5.057,2912,5.057,2913,5.057,2914,5.057,2915,5.057,2916,5.057,2917,5.057,2918,6.913,2919,5.057,2920,5.057]],["title/interfaces/Language.html",[0,0.081,333,3.073]],["body/interfaces/Language.html",[0,0.146,2,0.094,3,0.086,4,0.071,6,0.344,7,0.899,21,0.681,22,0.435,23,0.005,48,0.063,86,0.004,131,0.004,166,2.037,333,5.518,334,4.792,2921,7.761]],["title/classes/LanguageChangNotifier.html",[54,0.092,2414,3.731]],["body/classes/LanguageChangNotifier.html",[2,0.089,3,0.081,4,0.067,6,0.326,22,0.352,23,0.005,24,0.343,48,0.06,54,0.159,57,2.243,60,1.695,64,0.882,79,1.111,86,0.004,88,0.998,131,0.004,136,1.805,141,1.26,143,1.111,152,3.994,195,1.973,887,4.247,2001,6.118,2002,3.712,2003,3.891,2414,6.486,2421,7.584,2922,9.399,2923,7.347,2924,6.094,2925,7.347,2926,7.347,2927,7.347,2928,7.347]],["title/interfaces/LayerOptions.html",[0,0.081,446,4.191]],["body/interfaces/LayerOptions.html",[0,0.144,2,0.092,3,0.084,4,0.069,6,0.337,7,0.888,21,0.635,22,0.457,23,0.005,48,0.062,86,0.004,131,0.004,166,2.024,171,1.62,446,7.438,545,4.478,547,8.169,671,6.31,2929,6.825,2930,9.538]],["title/interfaces/Layout.html",[0,0.081,2160,3.731]],["body/interfaces/Layout.html",[0,0.113,2,0.035,3,0.032,4,0.026,6,0.128,21,0.59,22,0.138,23,0.005,24,0.3,29,0.386,31,0.698,47,0.804,48,0.023,54,0.052,56,0.828,57,2.041,60,0.555,62,0.598,64,0.894,66,1.384,68,3.377,71,2.936,79,0.855,85,2.132,86,0.002,88,0.391,91,1.823,108,1.808,131,0.002,140,1.036,141,0.413,146,1.496,153,1.808,165,1.113,171,0.489,172,1.116,174,0.726,183,0.9,184,0.875,186,0.913,189,1.488,192,1.846,195,1.917,209,0.707,212,1.329,220,0.846,235,1.063,261,0.997,262,2.227,263,2.586,277,1.259,279,1.851,293,2.545,304,1.276,326,1.236,359,1.901,361,1.192,387,1.75,476,1.75,518,2.362,524,3.883,546,2.321,575,2.202,630,1.362,638,2.391,670,1.362,675,4.313,678,1.649,679,2.54,681,1.308,682,1.697,683,1.697,688,1.605,702,2.474,746,2.862,750,1.697,756,1.75,757,3.406,759,2.384,765,1.362,770,3.585,774,2.447,775,2.862,776,3.439,777,1.808,779,1.956,780,2.687,781,2.113,823,1.945,832,3.91,842,1.524,843,1.808,845,3.152,848,2.77,849,1.75,867,1.422,873,2.113,874,2.77,875,1.808,882,1.808,894,1.75,895,1.75,899,1.649,901,1.697,909,1.75,919,1.75,920,1.75,923,1.75,924,2.77,927,1.75,930,1.697,947,1.649,955,1.808,957,3.079,980,2.413,988,3.079,1028,2.687,1139,2.964,1202,1.75,1203,1.808,1230,2.862,1242,1.605,1244,1.259,1253,3.553,1450,1.945,1586,2.028,1666,2.028,1670,1.808,1798,4.531,1799,3.985,1833,1.75,1852,3.439,2142,4.175,2143,3.364,2144,3.21,2145,4.559,2146,2.028,2147,2.028,2148,3.364,2149,3.364,2150,3.364,2151,3.364,2152,3.364,2153,2.028,2154,2.241,2155,2.241,2156,2.241,2157,2.241,2158,2.241,2159,2.241,2160,4.747,2161,2.241,2162,2.241,2163,2.241,2164,2.241,2165,2.241,2166,2.241,2167,2.241,2168,2.241,2169,2.241,2170,2.241,2171,2.241,2172,2.241,2173,2.241,2174,2.241,2175,4.403,2176,2.241,2177,5.803,2178,2.77,2179,2.77,2180,2.77,2181,2.241,2182,4.403,2183,2.125,2184,2.241,2185,2.241,2186,2.241,2187,2.241,2188,2.241,2189,2.241,2190,2.241,2191,2.241,2192,2.241,2193,2.241,2194,3.548,2195,2.241,2196,2.241,2197,2.241,2198,2.241,2199,2.241,2200,2.241,2201,2.241,2202,2.241,2203,2.241,2204,2.241,2205,2.241,2206,2.241,2207,2.241,2208,2.241,2209,2.241,2210,2.241,2211,2.241,2212,2.241,2213,2.241,2214,3.548,2215,3.364,2216,2.241,2217,2.241,2218,2.241,2219,2.241,2220,2.125,2221,2.241,2222,2.241,2223,2.241,2224,6.491,2225,6.304,2226,5.456,2227,3.548,2228,4.403,2229,2.241,2230,2.241,2231,6.491,2232,2.241,2233,3.364,2234,3.364,2235,3.548,2236,3.548,2237,2.241,2238,3.548,2239,3.548,2240,2.241,2241,2.241,2242,3.548,2243,3.548,2244,2.241,2245,2.241,2246,2.241,2247,2.241,2248,3.548,2249,2.241,2250,1.945,2251,5.007,2252,3.548,2253,6.491,2254,2.241,2255,2.241,2256,2.241,2257,2.241,2258,3.548,2259,4.403,2260,4.403,2261,3.548,2262,4.403,2263,4.403,2264,3.548,2265,2.241,2266,2.241,2267,2.241,2268,2.241,2269,2.241,2270,2.125,2271,2.241,2272,2.241,2273,2.241,2274,2.241,2275,2.125,2276,2.241,2277,2.241,2278,1.259,2279,2.241,2280,2.241,2281,2.241,2282,2.125,2931,2.878]],["title/classes/ListEntryComponent.html",[54,0.092,2932,3.731]],["body/classes/ListEntryComponent.html",[2,0.066,3,0.06,4,0.049,6,0.241,21,0.645,22,0.457,23,0.005,24,0.339,29,0.729,31,1.318,48,0.044,54,0.132,56,2.089,57,2.009,60,1.4,62,0.959,64,0.98,66,1.348,79,1.374,85,1.19,86,0.003,88,1.11,131,0.003,136,1.492,141,1.435,143,1.235,146,1.744,152,3.299,171,1.481,189,2.967,191,2.44,192,3.117,195,2.144,196,3.009,304,2.289,398,5.523,414,5.479,454,2.52,691,5.317,759,4.025,781,4.336,1282,5.523,1655,6.777,1873,6.439,2932,5.359,2933,10.075,2934,4.232,2935,6.019,2936,7.233,2937,6.019,2938,6.777,2939,6.777,2940,5.434,2941,6.511,2942,5.652,2943,5.434,2944,4.875,2945,4.875,2946,5.434,2947,6.019,2948,4.507,2949,5.434,2950,4.875,2951,5.434,2952,4.875,2953,7.258,2954,5.434,2955,4.875,2956,5.434,2957,5.434,2958,5.434,2959,7.258]],["title/components/ListSelectorComponent.html",[174,0.805,240,1.833]],["body/components/ListSelectorComponent.html",[2,0.038,3,0.035,4,0.029,6,0.301,7,0.487,21,0.572,22,0.428,23,0.005,24,0.317,29,0.425,31,0.77,38,1.036,47,0.868,48,0.026,54,0.058,56,1.416,57,1.387,60,0.949,62,0.855,64,0.881,65,2.911,66,0.913,68,1.757,71,1.151,79,1.327,85,1.077,86,0.003,88,1.101,98,0.889,131,0.004,132,3.357,136,1.011,140,1.37,141,1.282,143,1.299,166,0.652,171,0.836,174,1.29,175,1.151,176,1.067,177,1.208,178,1.208,182,0.979,183,3.237,184,3.139,185,1.188,186,1.56,189,2.215,191,1.067,192,2.215,195,1.352,196,2.606,198,0.914,199,1.757,200,1.784,201,1.757,202,2.54,203,1.208,204,1.872,205,1.021,206,1.188,207,2.292,208,1.151,209,0.78,210,3.454,211,1.151,212,1.757,213,1.654,214,1.757,215,2.954,216,1.116,217,1.134,218,2.086,219,1.134,220,0.913,221,1.378,222,1.17,223,1.208,224,1.151,225,1.099,226,1.151,227,1.116,228,2.292,229,1.151,230,1.067,231,1.151,232,1.704,233,1.17,234,1.17,235,1.583,236,1.208,237,1.151,238,1.151,239,1.208,240,2.461,241,2.726,242,1.151,243,1.134,244,1.151,245,1.052,246,1.052,247,1.208,248,1.134,249,1.784,250,1.899,251,2.889,252,1.151,253,2.219,254,1.208,255,1.151,256,1.208,257,1.151,258,1.208,259,1.151,260,0.901,261,1.099,262,1.099,263,1.995,264,1.151,265,1.134,266,1.151,267,2.292,268,1.151,269,1.021,270,1.188,271,1.872,272,1.151,273,1.151,274,1.17,275,1.021,276,1.151,277,1.36,278,1.151,279,0.914,280,1.208,281,1.134,282,1.151,283,1.151,284,1.188,285,1.151,286,1.151,287,0.843,288,1.116,289,1.208,293,2.146,304,0.889,395,2.851,412,2.543,453,2.328,454,3.146,456,1.388,487,2.671,488,2.065,518,1.979,546,1.63,594,3.09,653,1.769,654,2.742,740,1.872,759,2.074,774,1.208,779,2.913,867,1.568,1011,1.872,1028,2.901,1244,2.634,1424,2.472,1434,3.662,1480,3.09,1491,3.922,1533,5.008,1542,2.632,1553,2.847,1556,2.847,1601,2.472,1877,5.403,2141,1.813,2409,4.69,2411,2.472,2412,2.343,2413,5.591,2415,3.324,2426,4.079,2680,2.145,2727,5.471,2730,7.068,2731,2.632,2960,7.528,2961,7.764,2962,4.919,2963,4.919,2964,4.919,2965,4.994,2966,6.022,2967,3.174,2968,6.022,2969,4.413,2970,4.69,2971,2.632,2972,2.632,2973,3.174,2974,3.174,2975,4.919,2976,6.022,2977,3.174,2978,3.174,2979,3.174,2980,3.174,2981,2.847,2982,4.919,2983,3.174,2984,3.174,2985,3.174,2986,6.783,2987,3.174,2988,3.174,2989,4.919,2990,4.919,2991,3.174,2992,3.174,2993,3.174,2994,4.919,2995,3.174,2996,3.174,2997,3.174,2998,2.472,2999,3.174,3000,2.343,3001,3.174,3002,3.174,3003,3.174,3004,4.919,3005,4.919,3006,3.174,3007,3.174,3008,4.919,3009,3.174,3010,3.174,3011,4.919,3012,3.174,3013,3.174,3014,3.174,3015,3.174,3016,3.174,3017,3.174,3018,3.174,3019,3.174,3020,3.174,3021,3.174,3022,4.919,3023,4.919]],["title/interfaces/ListSelectorParameter.html",[0,0.081,2970,3.935]],["body/interfaces/ListSelectorParameter.html",[0,0.137,2,0.084,3,0.077,4,0.063,6,0.309,7,0.842,21,0.684,22,0.492,23,0.005,24,0.397,28,1.934,29,0.933,31,1.688,48,0.069,54,0.126,62,0.791,64,1.197,66,1.293,86,0.004,131,0.004,171,1.56,235,1.984,316,7.447,369,3.6,2412,7.061,2413,5.534,2727,4.907,2730,5.422,2960,5.775,2965,5.775,2970,6.623,3024,5.775,3025,8.58,3026,8.58]],["title/injectables/ListSelectorService.html",[28,1.149,2727,3.561]],["body/injectables/ListSelectorService.html",[0,0.114,2,0.085,3,0.078,4,0.064,6,0.313,7,0.85,21,0.615,22,0.443,23,0.005,24,0.401,28,2.102,29,0.947,31,1.713,48,0.07,54,0.128,62,0.931,66,1.594,86,0.004,131,0.004,141,1.23,171,1.2,235,2.298,316,5.502,347,1.587,369,4.97,440,2.241,2412,5.216,2413,6.253,2727,6.046,2730,7.196,2960,7.664,2965,7.971,2970,5.502,3024,5.859,3025,6.338,3026,6.338,3027,7.065,3028,7.065]],["title/injectables/LocalHttpCache.html",[28,1.149,380,3.731]],["body/injectables/LocalHttpCache.html",[0,0.123,2,0.071,3,0.065,4,0.054,6,0.261,7,0.757,21,0.391,22,0.407,23,0.005,24,0.397,27,2.48,28,1.932,29,0.788,47,1.588,48,0.048,54,0.107,61,4.885,62,0.889,64,0.917,66,1.42,79,1.36,85,1.674,86,0.004,88,1.039,97,2.48,131,0.004,136,1.571,141,1.218,143,1.156,146,1.255,172,0.937,195,1.321,277,2.486,293,2.348,347,1.321,361,3.726,369,5.101,370,7.005,371,4.342,372,5.954,374,5.739,375,6.858,376,4.975,377,4.144,378,6.266,379,4.975,380,5.645,381,5.645,382,6.616,383,4.878,384,6.341,385,5.954,386,4.878,387,3.576,388,5.645,389,6.641,390,3.37,391,4.878,440,1.866,578,4.803,2755,6.859,3029,5.276,3030,5.881,3031,5.881]],["title/injectables/LocalOngoingHttpCache.html",[28,1.149,2565,4.191]],["body/injectables/LocalOngoingHttpCache.html",[2,0.071,3,0.065,4,0.053,6,0.26,7,0.756,21,0.391,22,0.466,23,0.005,24,0.397,27,2.476,28,1.931,29,0.787,34,3.989,35,2.839,48,0.048,54,0.106,61,5.188,62,0.948,64,1.079,79,1.444,86,0.004,88,1.222,131,0.004,136,1.57,141,1.336,143,1.359,171,1.298,195,1.906,293,2.347,326,3.28,347,1.319,369,4.648,370,7.44,371,4.336,374,6.042,382,6.611,387,3.571,440,1.863,499,3.571,524,2.618,578,5.648,581,4.573,587,4.604,1137,5.64,2091,5.64,2565,6.335,2566,8.571,2759,6.335,2760,6.335,2761,6.335,2762,6.335,3029,5.268,3032,5.872,3033,5.872,3034,5.872,3035,5.872,3036,5.872]],["title/classes/LocalSelectorComponent.html",[54,0.092,3037,4.533]],["body/classes/LocalSelectorComponent.html",[2,0.074,3,0.068,4,0.056,6,0.272,7,0.777,22,0.452,23,0.005,24,0.405,29,0.821,48,0.05,54,0.142,56,2.259,57,1.411,60,1.514,62,0.942,64,1.039,79,1.309,86,0.004,88,1.177,131,0.004,136,1.613,141,1.385,143,1.309,152,2.784,195,2.051,196,2.939,293,2.394,333,6.11,395,4.099,412,4.058,453,3.715,454,4.236,456,2.679,887,3.794,1495,4.769,2001,5.738,2002,3.094,2003,3.243,2924,5.079,3037,7.04,3038,9.823,3039,6.124,3040,9.134,3041,9.134,3042,7.848,3043,8.661,3044,7.848,3045,6.124,3046,6.124,3047,7.848,3048,6.124,3049,6.124,3050,6.124,3051,6.124,3052,7.848,3053,6.124,3054,6.124,3055,6.124,3056,6.124,3057,5.494]],["title/injectables/LocalStorage.html",[28,1.149,1962,3.073]],["body/injectables/LocalStorage.html",[2,0.067,3,0.062,4,0.051,6,0.248,7,0.732,21,0.681,22,0.451,23,0.005,24,0.261,28,1.885,29,0.75,48,0.045,54,0.101,60,1.599,62,0.941,64,1.058,65,4.264,79,1.53,85,1.815,86,0.005,88,1.199,97,3.495,131,0.003,136,1.52,141,1.351,143,1.425,171,1.256,293,2.291,347,1.256,438,4.749,440,1.774,499,3.4,518,2.418,546,2.451,717,3.654,765,4.461,1962,4.498,1977,7.487,2803,6.135,2861,6.636,3058,9.614,3059,5.592,3060,8.821,3061,7.397,3062,7.397,3063,7.397,3064,7.397,3065,5.592,3066,7.397,3067,5.592,3068,7.397,3069,5.592,3070,7.397,3071,5.592,3072,5.592,3073,5.016,3074,9.174,3075,5.592,3076,5.592,3077,8.289]],["title/components/LocateControlComponent.html",[174,0.805,242,1.833]],["body/components/LocateControlComponent.html",[2,0.056,3,0.051,4,0.042,6,0.205,7,0.644,21,0.5,22,0.311,23,0.005,24,0.304,29,0.62,38,1.511,48,0.038,54,0.084,57,1.066,60,1.254,62,0.85,64,0.555,66,0.859,79,0.699,86,0.003,88,1.021,98,1.296,131,0.003,136,1.336,140,1.709,141,1.169,143,0.699,166,0.951,174,1.368,175,1.678,176,1.556,177,1.761,178,1.761,182,1.427,183,3.309,184,3.218,185,1.732,186,2.062,195,1.039,196,2.623,198,1.332,199,2.322,200,2.358,201,2.322,202,3.052,203,1.761,204,2.474,205,1.489,206,1.732,207,2.86,208,1.678,209,1.136,210,3.733,211,1.678,212,2.192,213,2.185,214,2.055,215,3.388,216,1.627,217,1.652,218,2.603,219,1.652,220,1.207,221,1.821,222,1.705,223,1.761,224,1.678,225,1.603,226,1.678,227,1.627,228,2.86,229,1.678,230,1.556,231,1.678,232,2.252,233,1.705,234,1.705,235,1.902,236,1.761,237,1.678,238,1.678,239,1.761,240,1.678,241,2.062,242,2.957,243,3.067,244,1.678,245,1.533,246,1.533,247,1.761,248,1.652,249,1.678,250,1.944,251,2.185,252,1.678,253,2.769,254,1.761,255,1.678,256,1.761,257,1.678,258,1.761,259,1.678,260,1.314,261,1.603,262,1.603,263,2.49,264,1.678,265,1.652,266,1.678,267,2.86,268,1.678,269,1.489,270,1.732,271,2.474,272,1.678,273,1.678,274,1.705,275,1.489,276,1.678,277,1.797,278,1.678,279,1.332,280,1.761,281,1.652,282,1.678,283,1.678,284,1.732,285,1.678,286,1.678,287,1.229,288,2.643,289,1.761,347,1.039,422,5.548,440,1.468,518,1.897,681,2.955,2660,6.574,3078,4.627,3079,6.5,3080,6.5,3081,7.312,3082,8.15,3083,4.627,3084,6.5,3085,4.627,3086,4.627,3087,4.627,3088,6.741,3089,4.627,3090,4.627]],["title/injectables/LocateService.html",[28,1.149,2660,3.731]],["body/injectables/LocateService.html",[2,0.072,3,0.066,4,0.054,6,0.264,21,0.638,22,0.433,23,0.005,24,0.399,28,1.944,29,0.798,48,0.048,54,0.108,57,1.372,60,1.487,62,0.892,64,1.084,79,1.292,85,2.099,86,0.004,88,1.228,131,0.004,136,1.584,141,1.296,143,1.366,146,1.645,195,1.919,235,1.994,243,2.126,293,2.362,390,3.411,426,4.396,427,5.655,436,6.309,476,3.62,477,3.153,478,3.874,546,2.553,621,2.707,1244,2.604,1487,4.396,1833,3.62,2302,4.195,2660,5.69,3091,5.341,3092,7.707,3093,7.707,3094,7.707,3095,5.954,3096,7.707,3097,5.954,3098,7.707,3099,5.954,3100,7.707,3101,5.954,3102,5.341,3103,5.341,3104,5.341,3105,5.341,3106,7.667,3107,7.707,3108,5.954,3109,5.954,3110,5.954,3111,7.707,3112,5.954,3113,5.954,3114,5.954,3115,5.954,3116,5.954,3117,5.954,3118,5.954,3119,5.954,3120,5.954,3121,5.954,3122,5.954,3123,5.954,3124,5.954,3125,5.954]],["title/interfaces/LocatedProfileDataEntry.html",[0,0.081,772,2.98]],["body/interfaces/LocatedProfileDataEntry.html",[0,0.161,2,0.081,3,0.074,4,0.061,6,0.298,7,0.823,21,0.646,22,0.452,23,0.005,43,4.67,47,1.745,48,0.081,54,0.122,86,0.004,91,3.777,98,2.719,131,0.004,172,1.546,347,2.251,359,3.324,524,2.991,625,2.553,638,2.289,763,4.534,764,4.106,765,3.935,766,5.877,767,5.409,768,4.08,769,4.365,770,5.035,771,6.559,772,4.902]],["title/interfaces/LocatedTimeValueEntry.html",[0,0.081,768,3.073]],["body/interfaces/LocatedTimeValueEntry.html",[0,0.162,2,0.084,3,0.077,4,0.063,6,0.309,7,0.842,21,0.611,22,0.333,23,0.005,43,3.6,47,1.688,48,0.082,54,0.126,86,0.004,91,3.402,98,2.748,131,0.004,172,1.562,347,2.148,359,3.087,524,3.104,625,2.65,638,2.376,763,4.706,764,4.174,765,4.026,766,5.975,767,5.975,768,5.172,769,5.975,770,4.741,771,5.748,772,4.107]],["title/injectables/MapCache.html",[28,1.149,427,2.98]],["body/injectables/MapCache.html",[2,0.081,3,0.074,4,0.061,6,0.298,7,0.824,21,0.658,22,0.433,23,0.005,24,0.389,28,2.056,29,0.901,48,0.055,54,0.122,62,0.92,64,0.998,66,1.545,79,1.366,86,0.004,88,1.131,131,0.004,136,1.71,141,1.296,143,1.258,146,1.776,195,1.509,235,2.383,293,2.499,347,1.509,427,5.834,436,7.168,440,2.132,476,4.087,477,3.56,2929,8.475,3126,6.721,3127,8.321,3128,8.321,3129,8.321,3130,6.721,3131,8.321,3132,6.721,3133,6.721,3134,6.721,3135,6.721]],["title/interfaces/MinMaxRange.html",[0,0.081,782,3.175]],["body/interfaces/MinMaxRange.html",[0,0.127,2,0.061,3,0.056,4,0.046,6,0.226,7,0.688,21,0.652,22,0.478,23,0.005,47,1.783,48,0.072,54,0.143,60,1.341,62,0.939,68,1.82,71,1.849,86,0.003,131,0.003,146,1.484,165,3.286,171,1.646,172,0.812,209,2.306,220,1.578,241,1.617,245,3.111,246,3.111,279,2.277,347,1.776,359,2.659,367,3.445,493,6.908,518,2.308,545,3.596,546,1.689,587,2.518,604,3.763,638,1.739,644,3.006,670,3.29,675,3.996,692,4.721,717,2.518,740,3.006,744,3.099,747,3.29,748,2.92,749,3.099,755,3.763,757,4.189,782,5.586,798,3.445,799,3.445,802,3.445,804,3.316,842,2.7,1826,3.969,1828,3.969,1833,3.099,1835,2.841,1837,3.969,1840,3.969,1841,3.969,1843,3.763,1844,5.84,1848,3.969,1849,3.763,1850,3.969,1851,3.969,1852,3.099,1853,3.969]],["title/components/MinMaxRangeComponent.html",[174,0.805,244,1.833]],["body/components/MinMaxRangeComponent.html",[2,0.048,3,0.044,4,0.036,6,0.177,7,0.578,21,0.265,22,0.388,23,0.005,24,0.273,29,0.534,31,0.966,38,1.3,47,1.494,48,0.032,54,0.072,56,1.68,62,0.921,64,0.478,66,1.084,71,2.117,79,1.044,85,1.278,86,0.003,88,0.939,97,3.208,98,1.116,131,0.003,136,1.2,140,1.572,141,1.254,143,0.602,166,0.818,174,1.29,175,1.445,176,1.339,177,1.515,178,1.515,182,1.228,183,3.28,184,3.189,185,1.491,186,1.852,189,2.484,191,1.339,192,2.484,195,1.552,196,2.449,198,1.146,199,2.085,200,2.117,201,2.085,202,2.849,203,1.515,204,2.221,205,1.282,206,1.491,207,2.629,208,1.445,209,0.978,210,3.63,211,1.445,212,2.016,213,1.962,214,1.939,215,3.221,216,1.401,217,1.422,218,2.393,219,1.422,220,1.084,221,1.635,222,1.468,223,1.515,224,1.445,225,1.38,226,1.445,227,1.401,228,2.629,229,1.445,230,1.339,231,1.445,232,2.022,233,1.468,234,1.468,235,1.775,236,1.515,237,1.445,238,1.445,239,1.515,240,1.445,241,1.852,242,1.445,243,1.422,244,2.76,245,3.032,246,3.383,247,1.515,248,1.422,249,1.445,250,1.788,251,1.962,252,1.445,253,2.546,254,1.515,255,1.445,256,1.515,257,1.445,258,1.515,259,1.445,260,1.131,261,1.38,262,1.38,263,2.289,264,1.445,265,1.422,266,1.445,267,2.629,268,1.445,269,1.282,270,1.491,271,2.221,272,1.445,273,1.445,274,1.468,275,1.282,276,1.445,277,1.613,278,1.445,279,2.436,280,1.515,281,1.422,282,1.445,283,1.445,284,1.491,285,1.445,286,1.445,287,1.058,288,1.401,289,1.515,395,3.271,412,3.018,453,2.763,454,3.528,456,1.742,499,3.549,681,2.653,782,4.341,2278,2.553,2700,8.047,3136,8.969,3137,3.983,3138,5.837,3139,5.837,3140,7.608,3141,7.608,3142,7.608,3143,7.608,3144,6.909,3145,3.983,3146,3.983,3147,3.983,3148,3.983,3149,3.983,3150,3.983,3151,3.983,3152,3.983,3153,3.983,3154,8.1,3155,3.983,3156,8.1,3157,3.983,3158,5.837]],["title/components/MultiServiceFilterSelectorComponent.html",[174,0.805,248,1.805]],["body/components/MultiServiceFilterSelectorComponent.html",[0,0.047,2,0.035,3,0.032,4,0.026,6,0.129,7,0.455,21,0.557,22,0.401,23,0.005,24,0.266,29,0.39,31,0.706,38,0.95,47,0.811,48,0.037,54,0.053,56,1.323,57,1.806,60,0.887,62,0.858,64,0.776,66,0.854,71,2.347,79,1.229,85,1.247,86,0.002,88,1.018,98,0.815,131,0.002,132,2.562,136,0.945,140,1.296,141,1.293,143,1.132,145,4.777,166,0.598,172,0.907,174,1.249,175,1.056,176,0.979,177,1.108,178,1.108,182,0.898,183,3.215,184,3.117,185,1.09,186,1.458,189,2.113,191,0.979,192,2.113,195,1.962,196,2.267,198,0.838,199,1.642,200,1.667,201,1.642,202,2.423,203,1.108,204,1.749,205,0.937,206,1.09,207,2.168,208,1.056,209,0.715,210,3.381,211,1.056,212,1.662,213,1.545,214,1.686,215,2.849,216,1.024,217,1.04,218,1.973,219,1.04,220,1.058,221,1.288,222,1.073,223,1.108,224,1.056,225,1.008,226,1.056,227,1.024,228,2.168,229,1.056,230,0.979,231,1.056,232,1.592,233,1.073,234,1.073,235,1.51,236,1.108,237,1.056,238,1.056,239,1.108,240,1.056,241,2.053,242,1.056,243,1.04,244,1.056,245,0.964,246,0.964,247,1.108,248,2.311,249,2.555,250,2.631,251,3.473,252,1.056,253,2.099,254,1.108,255,1.056,256,1.108,257,1.056,258,1.108,259,1.056,260,1.305,261,1.008,262,1.008,263,1.887,264,1.056,265,1.04,266,1.056,267,2.168,268,1.056,269,0.937,270,1.09,271,1.749,272,1.056,273,1.056,274,1.073,275,0.937,276,1.056,277,1.271,278,1.056,279,0.838,280,1.108,281,1.04,282,1.056,283,1.056,284,1.09,285,1.056,286,1.056,287,0.773,288,1.024,289,1.108,293,2.312,304,1.813,347,0.654,395,2.696,412,2.377,440,1.458,453,2.176,454,3.001,456,1.273,487,2.496,546,0.964,615,4.942,621,3.564,624,1.407,653,1.623,654,2.562,717,3.196,740,1.717,759,1.938,779,2.778,887,2.754,1011,1.749,1434,5.087,1491,3.269,1492,1.407,1523,1.378,1524,1.407,1525,1.407,1555,3.58,1591,2.149,1593,2.611,1595,2.611,1711,2.149,1713,5.525,1855,1.717,2001,4.065,2002,1.471,2003,1.542,2141,1.694,2403,2.414,2409,6.67,2410,8.087,2411,7.02,2412,4.777,2413,3.706,2414,4.777,2415,3.107,2416,4.724,2417,2.414,2418,3.812,2419,3.812,2420,2.414,2421,6.105,2422,5.366,2423,2.414,2424,2.611,2425,4.777,2426,2.414,2427,7.291,2428,3.812,2429,2.611,2430,7.034,2431,6.502,2432,7.034,2433,6.502,2434,6.502,2435,2.611,2436,2.611,2437,2.611,2438,2.611,2439,2.611,2440,2.611,2441,2.267,2442,5.366,2443,3.812,2444,5.805,2445,2.267,2446,2.611,2447,2.611,2448,2.414,2449,2.611,2450,2.611,2451,2.611,2972,2.414,3159,4.124,3160,4.124,3161,4.124,3162,2.911,3163,2.911,3164,2.611,3165,2.911,3166,2.911,3167,2.611,3168,2.611,3169,2.611]],["title/injectables/NominatimGeoSearchService.html",[28,1.149,55,3.731]],["body/injectables/NominatimGeoSearchService.html",[0,0.119,1,4.887,2,0.054,3,0.05,4,0.041,5,3.49,6,0.199,7,0.629,8,3.49,9,3.993,10,3.49,11,3.993,12,3.49,13,3.993,14,3.49,15,3.993,16,3.993,17,3.993,18,3.543,19,3.49,20,3.993,21,0.693,22,0.406,23,0.005,24,0.423,25,3.49,26,5.204,27,1.89,28,1.68,29,0.601,30,4.604,31,1.087,32,4.913,33,3.366,34,3.394,35,2.167,36,4.887,37,3.865,38,2.411,39,4.739,40,2.643,41,4.693,42,4.95,43,2.317,44,4.64,45,4.64,46,4.64,47,0.791,48,0.06,49,4.693,50,3.49,51,3.49,52,3.49,53,3.49,54,0.081,55,4.693,56,1.29,57,1.851,58,5.431,59,4.95,60,1.226,61,3.452,62,0.819,63,3.993,64,1.146,65,4.716,66,1.18,67,3.49,68,2.638,69,3.49,70,3.49,71,1.626,72,3.49,73,4.479,74,4.95,75,4.479,76,3.49,77,3.49,78,3.49,79,1.332,80,4.95,81,4.693,82,3.309,83,3.49,84,3.49,85,1.392,86,0.003,87,3.49,88,1.153,89,3.49,90,4.155,91,1.793,92,3.49,93,3.49,94,3.49,95,3.49,96,3.49,97,1.89,98,2.251,99,4.95,100,3.029,101,3.49,102,3.49,103,3.993,104,3.49,105,3.49,106,3.49,107,3.49,108,4.64,109,3.49,110,3.49,111,3.49,112,2.816,113,3.49,114,3.49,115,2.816,116,3.49,117,3.49,118,2.816,119,3.49,120,3.49,121,2.816,122,3.49,123,3.49,124,3.49,125,3.49,126,3.49,127,2.816,128,3.49,129,3.49,130,3.49,131,0.003,136,1.306,141,1.152,143,1.116,149,3.865,299,3.717,347,1.006,440,1.422,2520,5.271,3170,6.356,3171,4.482,3172,4.482]],["title/interfaces/NominatimReverseResult.html",[0,0.081,49,3.731]],["body/interfaces/NominatimReverseResult.html",[0,0.13,1,5.746,2,0.055,3,0.05,4,0.041,5,3.539,6,0.202,7,0.636,8,3.539,9,4.033,10,3.539,11,4.033,12,3.539,13,4.033,14,3.539,15,4.033,16,4.033,17,4.033,18,3.579,19,3.539,20,4.033,21,0.703,22,0.459,23,0.005,24,0.425,25,3.539,26,5.244,27,1.916,28,1.46,29,0.609,30,3.678,31,1.102,32,4.149,33,3.4,34,2.977,35,2.197,36,3.903,37,3.903,38,2.43,39,3.786,40,2.681,41,4.739,42,6.642,43,2.35,44,5.562,45,5.562,46,5.562,47,0.802,48,0.06,49,5.495,50,6.297,51,6.297,52,6.297,53,6.297,54,0.082,55,3.356,56,1.308,57,1.479,58,3.072,59,3.539,60,0.877,61,2.468,62,0.597,63,2.855,64,0.893,65,4.728,66,1.192,67,3.539,68,2.658,69,3.539,70,3.539,71,1.649,72,3.539,73,3.203,74,4.999,75,4.523,76,3.539,77,3.539,78,3.539,79,1.222,80,4.999,81,4.739,82,3.356,83,3.539,84,3.539,85,1.405,86,0.003,87,3.539,88,0.872,89,3.539,90,4.181,91,1.818,92,3.539,93,3.539,94,3.539,95,3.539,96,3.539,97,1.916,98,2.265,99,4.999,100,3.072,101,3.539,102,3.539,103,2.855,104,3.539,105,3.539,106,3.539,107,3.539,108,2.855,109,3.539,110,3.539,111,3.539,112,2.855,113,3.539,114,3.539,115,2.855,116,3.539,117,3.539,118,2.855,119,3.539,120,3.539,121,2.855,122,3.539,123,3.539,124,3.539,125,3.539,126,3.539,127,2.855,128,3.539,129,3.539,130,3.539,131,0.003]],["title/interfaces/NominatimSearchResult.html",[0,0.081,41,3.731]],["body/interfaces/NominatimSearchResult.html",[0,0.132,1,4.985,2,0.057,3,0.052,4,0.043,5,3.651,6,0.208,7,0.65,8,3.651,9,4.122,10,3.651,11,4.122,12,3.651,13,4.122,14,3.651,15,4.122,16,4.122,17,4.122,18,3.658,19,3.651,20,4.122,21,0.697,22,0.428,23,0.005,24,0.429,25,3.651,26,5.333,27,1.977,28,1.492,29,0.629,30,3.759,31,1.137,32,4.219,33,4.57,34,3.028,35,2.267,36,3.99,37,3.99,38,2.471,39,3.869,40,2.765,41,5.588,42,6.719,43,3.913,44,5.618,45,5.618,46,5.618,47,1.336,48,0.061,49,4.844,50,3.651,51,3.651,52,3.651,53,3.651,54,0.085,55,3.462,56,1.349,57,1.511,58,3.169,59,3.651,60,0.904,61,2.546,62,0.61,63,2.946,64,1.035,65,4.754,66,1.218,67,3.651,68,2.703,69,3.651,70,3.651,71,1.701,72,3.651,73,3.304,74,5.109,75,4.623,76,3.651,77,3.651,78,3.651,79,1.239,80,5.109,81,4.844,82,3.462,83,3.651,84,3.651,85,1.436,86,0.004,87,3.651,88,0.892,89,3.651,90,4.239,91,1.876,92,3.651,93,3.651,94,3.651,95,3.651,96,3.651,97,1.977,98,2.297,99,5.109,100,3.169,101,3.651,102,3.651,103,2.946,104,3.651,105,3.651,106,3.651,107,3.651,108,2.946,109,3.651,110,3.651,111,3.651,112,2.946,113,3.651,114,3.651,115,2.946,116,3.651,117,3.651,118,2.946,119,3.651,120,3.651,121,2.946,122,3.651,123,3.651,124,3.651,125,3.651,126,3.651,127,2.946,128,3.651,129,3.651,130,3.651,131,0.003]],["title/injectables/NotifierService.html",[28,1.149,2383,3.731]],["body/injectables/NotifierService.html",[2,0.08,3,0.073,4,0.06,6,0.294,7,0.816,21,0.597,22,0.395,23,0.005,24,0.309,28,2.042,29,0.887,48,0.054,54,0.12,60,1.732,62,0.835,64,0.794,79,1,85,2.157,86,0.004,88,0.899,131,0.004,136,1.694,141,1.287,143,1,146,1.759,195,1.486,293,2.481,748,3.791,749,5.012,1237,5.362,2382,7.444,2383,6.085,3173,5.936,3174,9.395,3175,8.242,3176,8.242,3177,6.617,3178,4.663,3179,7.394,3180,5.936,3181,8.976,3182,8.242,3183,5.936,3184,6.617,3185,6.617,3186,6.617,3187,6.617,3188,6.617,3189,6.617,3190,6.617,3191,6.617,3192,6.617,3193,8.242,3194,6.617,3195,6.617,3196,6.617,3197,6.617]],["title/interfaces/Offering.html",[0,0.081,1523,2.392]],["body/interfaces/Offering.html",[0,0.148,2,0.096,3,0.088,4,0.072,23,0.005,24,0.371,48,0.064,86,0.004,131,0.004,143,1.509,172,1.464,625,3.02,1523,4.352,3198,7.936]],["title/classes/OnGoingHttpCache.html",[54,0.092,571,3.731]],["body/classes/OnGoingHttpCache.html",[2,0.074,3,0.068,4,0.056,6,0.273,22,0.438,23,0.005,24,0.368,27,2.594,34,3.984,35,2.974,47,1.086,48,0.064,54,0.157,62,0.962,64,1.098,79,1.43,86,0.004,88,1.243,97,3.319,131,0.004,136,1.618,141,1.312,143,1.383,152,4.527,171,1.337,195,2.124,326,3.38,361,2.548,369,4.07,374,6.126,375,6.117,376,4.003,378,3.866,379,5.122,381,4.543,388,4.543,389,4.543,571,5.812,578,5.748,581,4.792,587,4.288,980,3.259,1137,5.812,1918,4.543,2754,5.52,2758,5.52,2759,6.529,2760,6.529,2761,6.529,2762,6.529,3199,6.153,3200,6.153,3201,6.153,3202,6.153]],["title/interfaces/Parameter.html",[0,0.081,143,0.764]],["body/interfaces/Parameter.html",[0,0.144,2,0.092,3,0.084,4,0.069,6,0.337,7,0.888,21,0.678,22,0.43,23,0.005,24,0.355,48,0.062,86,0.004,131,0.004,143,1.356,146,2.103,166,2.024,172,1.428,625,2.895,2795,8.169,3203,7.608]],["title/classes/ParameterConstellation.html",[54,0.092,1522,2.676]],["body/classes/ParameterConstellation.html",[0,0.136,2,0.061,3,0.056,4,0.046,6,0.223,7,0.683,21,0.689,22,0.438,23,0.005,24,0.367,47,1.217,48,0.079,54,0.17,56,1.984,62,0.992,86,0.003,88,0.685,131,0.003,141,1.311,143,1.578,146,1.472,165,3.041,166,1.616,170,3.8,171,0.856,172,1.252,209,1.694,214,1.206,220,0.936,221,2.368,250,2.187,260,1.43,304,2.202,347,1.131,359,1.694,518,1.47,545,2.29,624,4.087,625,3.562,764,4.255,774,2.991,1234,2.605,1492,4.087,1494,4.578,1502,3.063,1503,4.636,1504,4.504,1505,4.844,1506,3.063,1508,5.313,1514,4.636,1521,2.808,1522,4.69,1523,4.002,1524,4.087,1525,4.087,1526,3.063,1527,4.066,1528,4.936,1529,2.886,1530,2.886,1531,2.886,1532,2.971,3204,5.037,3205,5.037,3206,5.037,3207,5.037,3208,5.037,3209,5.037]],["title/interfaces/ParameterFilter.html",[0,0.081,1491,2.553]],["body/interfaces/ParameterFilter.html",[0,0.152,2,0.081,3,0.074,4,0.061,6,0.368,7,0.822,21,0.705,22,0.473,23,0.005,48,0.073,64,1.245,86,0.004,131,0.004,140,1.523,141,0.96,171,1.648,172,1.067,250,2.441,294,5.215,524,3.702,747,3.17,934,4.719,935,5.737,1488,4.526,1489,6.887,1490,5.554,1491,4.56,1492,4.561,1493,7.347,1494,4.878,1495,7.347,1496,4.208,1497,4.526,3210,6.697]],["title/interfaces/ParsedTimespanPreset.html",[0,0.081,338,3.288]],["body/interfaces/ParsedTimespanPreset.html",[0,0.161,2,0.079,3,0.073,4,0.06,6,0.292,7,0.813,21,0.701,22,0.449,23,0.005,24,0.307,47,1.162,48,0.08,64,0.986,86,0.004,88,1.337,131,0.004,140,2.315,148,3.404,166,2.023,171,1.639,304,1.844,322,5.161,323,4.639,324,4.449,325,4.639,326,2.827,327,5.827,328,4.449,329,4.639,330,4.639,331,5.827,332,4.449,333,4.003,334,3.182,335,4.639,336,5.552,337,6.523,338,5.345]],["title/components/PermalinkInMailComponent.html",[174,0.805,252,1.833]],["body/components/PermalinkInMailComponent.html",[2,0.057,3,0.053,4,0.043,6,0.211,21,0.507,22,0.317,23,0.005,24,0.222,29,0.636,38,1.55,48,0.039,54,0.086,62,0.806,66,1.229,79,0.717,86,0.003,88,0.899,98,1.33,131,0.003,136,1.36,140,1.733,141,1.092,166,0.975,174,1.38,175,1.722,176,1.596,177,1.806,178,1.806,182,1.464,183,3.314,184,3.222,185,1.777,186,2.099,189,2.691,191,1.596,192,2.691,195,1.066,196,2.652,198,1.366,199,2.363,200,2.4,201,2.363,202,3.086,203,1.806,204,2.518,205,1.527,206,1.777,207,2.899,208,1.722,209,1.166,210,3.75,211,1.722,212,2.223,213,2.225,214,2.075,215,3.416,216,1.669,217,1.695,218,2.639,219,1.695,220,1.229,221,1.854,222,1.749,223,1.806,224,1.722,225,1.644,226,1.722,227,1.669,228,2.899,229,1.722,230,1.596,231,1.722,232,2.292,233,1.749,234,1.749,235,1.923,236,1.806,237,1.722,238,1.722,239,1.806,240,1.722,241,2.099,242,1.722,243,1.695,244,1.722,245,1.572,246,1.572,247,1.806,248,1.695,249,1.722,250,1.971,251,2.225,252,2.99,253,3.394,254,1.806,255,1.722,256,1.806,257,1.722,258,1.806,259,1.722,260,1.348,261,1.644,262,1.644,263,2.524,264,1.722,265,1.695,266,1.722,267,2.899,268,1.722,269,1.527,270,1.777,271,2.518,272,1.722,273,1.722,274,1.749,275,1.527,276,1.722,277,1.829,278,1.722,279,1.366,280,1.806,281,1.695,282,1.722,283,1.722,284,1.777,285,1.722,286,1.722,287,1.261,288,1.669,289,1.806,304,2.134,2709,7.394,3000,4.886,3211,6.835,3212,4.746,3213,7.394,3214,6.617,3215,8.242,3216,6.318,3217,4.746,3218,4.746,3219,4.746,3220,4.258,3221,4.746,3222,4.746,3223,4.258]],["title/components/PermalinkNewWindowComponent.html",[174,0.805,255,1.833]],["body/components/PermalinkNewWindowComponent.html",[2,0.056,3,0.052,4,0.043,6,0.208,21,0.503,22,0.314,23,0.005,24,0.219,29,0.628,38,1.529,48,0.038,54,0.085,62,0.802,66,1.873,79,0.708,86,0.003,88,0.891,98,1.312,131,0.003,136,1.347,140,1.72,141,1.085,166,0.962,174,1.374,175,1.699,176,1.574,177,1.782,178,1.782,182,1.444,183,3.311,184,3.22,185,1.753,186,2.08,189,2.675,191,1.574,192,2.675,195,1.052,196,2.637,198,1.348,199,2.341,200,2.378,201,2.341,202,3.068,203,1.782,204,2.495,205,1.507,206,1.753,207,2.878,208,1.699,209,1.15,210,3.741,211,1.699,212,2.207,213,2.204,214,2.065,215,3.401,216,1.647,217,1.673,218,2.62,219,1.673,220,1.217,221,1.836,222,1.726,223,1.782,224,1.699,225,1.622,226,1.699,227,1.647,228,2.878,229,1.699,230,1.574,231,1.699,232,2.271,233,1.726,234,1.726,235,1.912,236,1.782,237,1.699,238,1.699,239,1.782,240,1.699,241,2.08,242,1.699,243,1.673,244,1.699,245,1.551,246,1.551,247,1.782,248,1.673,249,1.699,250,1.957,251,2.204,252,1.699,253,3.382,254,1.782,255,2.972,256,1.782,257,1.699,258,1.782,259,1.699,260,1.33,261,1.622,262,1.622,263,2.506,264,1.699,265,1.673,266,1.699,267,2.878,268,1.699,269,1.507,270,1.753,271,2.495,272,1.699,273,1.699,274,1.726,275,1.507,276,1.699,277,1.812,278,1.699,279,1.348,280,1.782,281,1.673,282,1.699,283,1.699,284,1.753,285,1.699,286,1.699,287,1.244,288,1.647,289,1.782,304,2.119,2711,7.351,2846,4.201,3000,4.84,3211,6.795,3216,6.273,3223,4.201,3224,4.683,3225,8.194,3226,6.555,3227,8.194,3228,4.683,3229,4.683,3230,4.683,3231,4.683]],["title/classes/PermalinkService.html",[54,0.092,3232,4.533]],["body/classes/PermalinkService.html",[2,0.083,3,0.076,4,0.062,6,0.303,7,0.833,21,0.56,23,0.005,48,0.056,54,0.152,57,2.289,62,0.924,68,2.443,79,1.522,85,1.497,86,0.004,131,0.004,136,1.729,141,1.363,152,4.141,304,2.357,347,1.536,440,2.17,765,3.982,3220,6.136,3232,7.547,3233,6.84,3234,9.505,3235,9.505,3236,9.505,3237,9.505,3238,8.412,3239,6.84,3240,6.84,3241,6.84,3242,6.84,3243,8.412,3244,6.84]],["title/components/PermalinkToClipboardComponent.html",[174,0.805,257,1.833]],["body/components/PermalinkToClipboardComponent.html",[2,0.059,3,0.054,4,0.045,6,0.217,21,0.515,22,0.324,23,0.005,24,0.228,29,0.656,38,1.597,48,0.04,54,0.089,62,0.628,66,1.255,86,0.003,88,0.918,98,1.37,131,0.003,140,1.761,141,0.969,166,1.005,174,1.395,175,1.774,176,1.644,177,1.861,178,1.861,182,1.508,183,3.319,184,3.227,185,1.831,186,2.143,189,2.726,191,1.644,192,2.726,196,2.687,198,1.408,199,2.413,200,2.451,201,2.413,202,3.126,203,1.861,204,2.571,205,1.574,206,1.831,207,2.945,208,1.774,209,1.201,210,3.769,211,1.774,212,2.258,213,2.271,214,2.097,215,3.448,216,1.72,217,1.747,218,2.681,219,1.747,220,1.255,221,1.893,222,1.802,223,1.861,224,1.774,225,1.694,226,1.774,227,1.72,228,2.945,229,1.774,230,1.644,231,1.774,232,2.34,233,1.802,234,1.802,235,1.948,236,1.861,237,1.774,238,1.774,239,1.861,240,1.774,241,2.143,242,1.774,243,1.747,244,1.774,245,1.62,246,1.62,247,1.861,248,1.747,249,1.774,250,2.003,251,2.271,252,1.774,253,3.422,254,1.861,255,1.774,256,1.861,257,3.028,258,1.861,259,1.774,260,1.389,261,1.694,262,1.694,263,2.564,264,1.774,265,1.747,266,1.774,267,2.945,268,1.774,269,1.574,270,1.831,271,2.571,272,1.774,273,1.774,274,1.802,275,1.574,276,1.774,277,1.867,278,1.774,279,1.408,280,1.861,281,1.747,282,1.774,283,1.774,284,1.831,285,1.774,286,1.774,287,1.299,288,1.72,289,1.861,304,2.168,484,5.261,2708,6.924,2713,6.944,3211,6.42,3216,6.42,3245,4.89,3246,6.756,3247,4.89,3248,4.89]],["title/interfaces/Phenomenon.html",[0,0.081,1492,2.443]],["body/interfaces/Phenomenon.html",[0,0.148,2,0.096,3,0.088,4,0.072,23,0.005,24,0.371,48,0.064,86,0.004,131,0.004,143,1.509,172,1.464,625,3.02,1492,4.444,3249,7.936]],["title/interfaces/Platform.html",[0,0.081,260,1.435]],["body/interfaces/Platform.html",[0,0.141,2,0.088,3,0.081,4,0.067,6,0.325,7,0.869,22,0.45,23,0.005,24,0.439,48,0.06,86,0.004,98,2.726,131,0.004,143,1.471,172,1.398,220,1.848,260,2.492,625,2.791,769,6.11,774,3.703,1494,5.322,1521,4.088,3250,7.333]],["title/components/PlatformMapSelectorComponent.html",[174,0.805,259,1.833]],["body/components/PlatformMapSelectorComponent.html",[2,0.042,3,0.038,4,0.032,6,0.154,7,0.521,21,0.35,22,0.444,23,0.005,24,0.375,29,0.464,31,0.84,38,1.131,48,0.028,54,0.063,56,1.514,57,2.104,58,3.555,60,1.015,62,0.82,64,0.763,66,0.643,71,1.257,79,1.154,85,0.758,86,0.003,88,1.038,90,2.72,91,1.386,98,1.474,131,0.002,132,2.933,136,1.081,140,1.446,141,1.37,143,0.961,166,0.712,171,1.297,172,0.838,174,1.216,175,1.257,176,1.165,177,1.318,178,1.318,182,1.068,183,3.257,184,3.16,185,1.297,186,1.669,189,1.718,191,1.769,192,1.718,195,1.715,196,2.285,198,0.997,199,1.879,200,1.908,201,1.879,202,2.659,203,1.318,204,2.002,205,1.115,206,1.297,207,2.42,208,1.257,209,0.851,210,3.524,211,1.257,212,1.855,213,1.769,214,1.828,215,3.059,216,1.218,217,1.237,218,2.203,219,1.237,220,0.977,221,1.474,222,1.277,223,1.318,224,1.257,225,1.2,226,1.257,227,1.218,228,2.42,229,1.257,230,1.165,231,1.257,232,1.822,233,1.277,234,1.277,235,2.312,236,1.318,237,1.257,238,1.257,239,1.318,240,1.257,241,1.669,242,1.257,243,1.237,244,1.257,245,1.148,246,1.148,247,1.318,248,1.237,249,1.257,250,1.645,251,2.387,252,1.257,253,2.343,254,1.318,255,1.257,256,1.318,257,1.257,258,1.318,259,2.576,260,2.016,261,1.2,262,1.2,263,2.107,264,1.257,265,1.237,266,1.257,267,2.42,268,1.257,269,1.115,270,1.297,271,2.002,272,1.257,273,1.257,274,1.277,275,1.115,276,1.257,277,1.454,278,1.257,279,0.997,280,1.318,281,1.237,282,1.257,283,1.257,284,1.297,285,1.257,286,1.257,287,1.689,288,1.218,289,1.318,293,1.758,390,1.985,395,3.01,412,2.72,427,4.927,428,4.62,429,5.889,453,1.64,454,2.44,456,1.515,466,4.096,476,2.107,477,1.835,478,2.254,487,1.881,494,7.852,518,1.011,531,2.543,546,1.743,615,2.107,653,1.931,654,2.933,679,3.545,680,2.341,681,2.391,685,4.481,688,3.545,695,3.305,699,5.243,700,5.53,723,2.558,726,2.698,740,2.043,779,3.049,1050,2.341,1480,3.305,1491,1.75,1585,3.707,1591,2.558,1594,3.108,1833,2.107,1855,5.388,2302,2.441,2445,2.698,2679,6.85,2680,2.341,2902,2.873,2998,2.698,3251,7.635,3252,7.101,3253,5.705,3254,7.494,3255,4.719,3256,6.359,3257,4.719,3258,4.719,3259,4.719,3260,3.108,3261,3.108,3262,3.108,3263,3.108,3264,3.108,3265,3.108,3266,3.108,3267,3.108,3268,3.108,3269,3.108,3270,3.108,3271,6.371,3272,3.108,3273,3.108,3274,2.873,3275,3.108,3276,5.26,3277,3.464,3278,6.359,3279,3.464,3280,3.464,3281,3.464,3282,3.108,3283,3.108,3284,3.464,3285,3.464,3286,3.464,3287,3.464,3288,3.464,3289,3.464,3290,3.464,3291,3.464,3292,3.464,3293,3.108]],["title/interfaces/PlatformParameter.html",[0,0.081,1527,2.98]],["body/interfaces/PlatformParameter.html",[0,0.147,2,0.066,3,0.061,4,0.05,6,0.243,7,0.723,21,0.694,22,0.263,23,0.005,24,0.384,47,1.29,48,0.081,54,0.17,56,2.103,62,0.99,86,0.003,88,0.746,131,0.003,143,1.542,146,1.559,165,3.177,166,1.688,170,3.97,171,0.932,172,1.394,209,1.795,214,1.314,220,1.019,221,2.453,250,1.42,260,1.558,304,2.301,347,1.233,359,1.845,518,1.601,545,2.495,624,2.653,625,2.088,764,4.35,774,3.125,1234,2.838,1492,2.653,1494,5.139,1502,3.337,1503,4.843,1504,4.706,1505,5.017,1506,3.337,1508,5.419,1514,4.843,1521,3.06,1522,4.637,1523,2.598,1524,2.653,1525,2.653,1526,3.337,1527,4.843,1528,5.083,1529,3.145,1530,3.145,1531,3.145,1532,3.237]],["title/interfaces/Plot.html",[0,0.081,725,3.288]],["body/interfaces/Plot.html",[0,0.142,2,0.09,3,0.082,4,0.068,6,0.33,22,0.357,23,0.005,24,0.348,48,0.06,64,0.893,79,1.339,86,0.004,88,1.012,131,0.004,136,1.82,141,1.27,143,1.126,171,1.606,172,1.186,195,1.989,279,2.143,725,5.762,748,5.416,824,6.611,1563,8.112,3294,7.446,3295,8.856,3296,7.446,3297,8.856,3298,7.446,3299,7.446]],["title/interfaces/PlotOptions.html",[0,0.081,869,3.731]],["body/interfaces/PlotOptions.html",[0,0.125,2,0.073,3,0.067,4,0.055,6,0.269,7,0.772,21,0.668,22,0.501,23,0.005,24,0.283,47,1.606,48,0.049,64,1.26,86,0.004,131,0.004,140,1.38,161,8.445,171,1.665,172,0.966,209,1.49,279,1.746,741,6.414,744,5.534,746,5.718,756,5.725,759,3.837,869,5.759,1189,4.724,1224,4.724,2091,7.331,2215,6.72,3300,6.066,3301,8.165,3302,9.101,3303,8.165,3304,9.101,3305,6.066,3306,5.442,3307,7.8,3308,6.066,3309,6.066,3310,6.066,3311,6.066,3312,6.066]],["title/components/PredefinedTimespanSelectorComponent.html",[174,0.805,264,1.833]],["body/components/PredefinedTimespanSelectorComponent.html",[2,0.037,3,0.034,4,0.028,6,0.138,7,0.588,21,0.592,22,0.398,23,0.005,24,0.226,29,0.417,31,0.754,38,1.015,47,0.854,48,0.025,54,0.056,56,1.393,57,0.716,60,0.933,62,0.902,64,0.964,66,1.429,68,1.11,79,1.319,85,1.301,86,0.002,88,1.129,97,1.31,98,0.871,131,0.003,136,0.994,140,2.334,141,1.224,143,1.099,150,3.843,154,2.022,155,2.577,156,3.148,166,0.994,171,1.139,174,1.157,175,1.127,176,1.045,177,1.183,178,1.183,182,0.958,183,3.232,184,3.134,185,1.164,186,1.535,189,2.19,191,1.045,192,2.19,195,1.087,196,2.477,198,0.894,199,1.728,200,1.755,201,1.728,202,2.511,203,1.183,204,1.841,205,1,206,1.164,207,2.261,208,1.127,209,0.763,210,3.436,211,1.127,212,1.734,213,1.627,214,1.74,215,2.929,216,1.093,217,1.11,218,2.058,219,1.11,220,0.899,221,1.355,222,1.145,223,1.183,224,1.127,225,1.076,226,1.127,227,1.093,228,2.261,229,1.127,230,1.045,231,1.127,232,1.676,233,1.145,234,1.145,235,1.565,236,1.183,237,1.127,238,1.127,239,1.183,240,1.127,241,1.535,242,1.127,243,1.11,244,1.127,245,1.03,246,1.03,247,1.183,248,1.11,249,1.127,250,1.537,251,1.627,252,1.127,253,2.19,254,1.183,255,1.127,256,1.183,257,1.127,258,1.183,259,1.127,260,0.882,261,1.076,262,1.076,263,1.969,264,2.433,265,2.87,266,1.127,267,2.261,268,1.127,269,1,270,1.164,271,1.841,272,1.127,273,1.127,274,1.145,275,1,276,1.127,277,1.337,278,1.127,279,0.894,280,1.183,281,1.11,282,1.127,283,1.127,284,1.164,285,1.127,286,1.127,287,0.825,288,1.093,289,1.183,326,2.551,331,5.679,334,1.502,337,2.1,338,5.407,361,2.461,398,4.016,414,4.213,438,2.772,487,2.628,518,0.907,531,3.242,546,1.03,575,1.502,653,1.732,654,2.697,657,2.577,658,2.577,681,2.2,690,4.341,697,4.387,737,1.952,750,1.833,819,2.942,837,2.022,845,2.697,956,3.768,982,2.294,1011,1.841,1212,5.431,1385,2.697,1585,3.41,1713,3.41,2178,1.89,2179,1.89,2739,7.83,2806,4.013,2885,4.726,2971,2.577,3313,8.728,3314,4.839,3315,4.839,3316,4.839,3317,3.108,3318,4.341,3319,4.839,3320,4.839,3321,3.108,3322,6.016,3323,4.839,3324,3.108,3325,5.942,3326,4.839,3327,3.108,3328,4.839,3329,3.108,3330,3.108,3331,3.108,3332,3.108,3333,3.108,3334,3.108,3335,3.108,3336,3.108,3337,3.108,3338,3.108,3339,3.108,3340,3.108,3341,3.108,3342,5.942,3343,3.108,3344,3.108,3345,3.108,3346,3.108,3347,5.942,3348,4.928,3349,3.108,3350,3.108,3351,6.016,3352,3.108,3353,3.108,3354,3.108,3355,3.108,3356,3.108,3357,3.108,3358,2.42,3359,3.108,3360,3.108,3361,3.108,3362,3.108,3363,3.108,3364,4.341,3365,2.788,3366,3.108,3367,3.108,3368,2.788,3369,3.108,3370,2.788,3371,3.108,3372,2.788,3373,4.839,3374,4.839,3375,2.294,3376,3.108,3377,3.108,3378,3.108,3379,3.108,3380,3.108,3381,4.839,3382,3.108,3383,3.108,3384,3.108,3385,3.108,3386,5.942,3387,3.108,3388,3.108,3389,3.108,3390,4.839,3391,3.108,3392,3.108,3393,2.788,3394,3.108,3395,4.341,3396,2.577,3397,3.108,3398,3.108,3399,4.839,3400,3.108,3401,3.108,3402,3.108,3403,3.108,3404,3.108,3405,2.788,3406,5.942,3407,3.108,3408,3.108,3409,3.108,3410,3.108,3411,3.108,3412,3.108,3413,3.108,3414,3.108,3415,3.108,3416,3.108,3417,4.839]],["title/interfaces/PresenterHighlight.html",[0,0.081,2146,3.561]],["body/interfaces/PresenterHighlight.html",[0,0.146,2,0.093,3,0.086,4,0.07,6,0.344,7,0.897,21,0.64,22,0.434,23,0.005,47,1.696,48,0.063,86,0.004,131,0.004,165,3.832,2146,6.387,2275,7.315,3418,6.424,3419,7.745]],["title/interfaces/PresenterMessage.html",[0,0.081,1917,4.191]],["body/interfaces/PresenterMessage.html",[0,0.145,2,0.092,3,0.085,4,0.07,6,0.339,7,0.89,21,0.636,22,0.493,23,0.005,24,0.357,48,0.062,86,0.004,131,0.004,1917,7.456,1918,5.639,1919,7.833,3418,6.335,3420,7.638,3421,8.848]],["title/interfaces/Procedure.html",[0,0.081,1525,2.443]],["body/interfaces/Procedure.html",[0,0.148,2,0.096,3,0.088,4,0.072,23,0.005,24,0.371,48,0.064,86,0.004,131,0.004,143,1.509,172,1.464,625,3.02,1525,4.444,3422,7.936]],["title/interfaces/ProfileDataEntry.html",[0,0.081,770,2.817]],["body/interfaces/ProfileDataEntry.html",[0,0.162,2,0.082,3,0.075,4,0.062,6,0.301,7,0.829,21,0.648,22,0.435,23,0.005,43,3.512,47,1.751,48,0.082,54,0.123,86,0.004,91,3.793,98,2.346,131,0.004,172,1.551,347,2.257,359,3.334,524,3.028,625,2.584,638,2.318,763,4.59,764,4.128,765,3.965,766,6.169,767,5.45,768,4.13,769,4.419,770,5.063,771,6.582,772,4.005]],["title/components/ProfileEntryComponent.html",[174,0.805,266,1.833]],["body/components/ProfileEntryComponent.html",[2,0.035,3,0.032,4,0.026,6,0.129,7,0.454,21,0.614,22,0.465,23,0.005,24,0.265,29,0.388,31,0.703,38,0.946,48,0.024,54,0.053,57,1.803,60,0.884,62,0.951,64,1.094,66,1.454,68,1.035,79,1.379,85,1.003,86,0.002,88,1.186,98,0.812,131,0.002,136,0.941,140,1.599,141,1.421,143,1.263,146,1.212,165,1.121,166,0.595,171,0.965,172,0.729,174,1.12,175,1.051,176,0.974,177,1.103,178,1.103,182,0.894,183,3.205,184,3.116,185,1.085,186,1.453,189,2.649,191,2.631,192,3.091,195,1.96,196,2.077,198,0.834,199,1.636,200,1.661,201,1.636,202,2.417,203,1.103,204,1.743,205,0.933,206,1.085,207,2.161,208,1.051,209,0.712,210,3.377,211,1.051,212,1.657,213,1.54,214,1.683,215,2.844,216,1.019,217,1.035,218,1.967,219,1.035,220,1.621,221,1.283,222,1.068,223,1.103,224,1.051,225,1.004,226,1.051,227,1.019,228,2.161,229,1.051,230,0.974,231,1.051,232,1.587,233,1.068,234,1.068,235,1.506,236,1.103,237,1.051,238,1.051,239,1.103,240,1.051,241,1.802,242,1.051,243,1.035,244,1.051,245,0.96,246,0.96,247,1.103,248,1.035,249,1.051,250,1.47,251,1.54,252,1.051,253,2.093,254,1.103,255,1.051,256,1.103,257,1.051,258,1.103,259,1.051,260,0.823,261,1.004,262,1.004,263,2.767,264,1.051,265,1.035,266,2.341,267,2.161,268,1.051,269,0.933,270,1.085,271,1.743,272,1.051,273,1.051,274,1.068,275,0.933,276,1.051,277,1.266,278,1.051,279,0.834,280,1.103,281,1.035,282,1.051,283,1.051,284,1.085,285,1.051,286,1.051,287,0.77,288,1.019,289,1.103,304,1.969,361,1.897,414,3.568,518,0.845,681,2.082,691,2.98,692,2.688,759,2.721,772,1.709,779,2.771,781,3.63,873,2.124,887,2.214,899,1.66,1244,2.004,1282,3.096,1460,3.567,1494,1.498,1626,3.799,1670,1.82,1685,2.403,1852,5.868,1855,5.045,1873,4.193,2183,2.139,2391,3.382,2622,8.493,2623,2.256,2932,6.648,2934,2.256,2935,5.353,2936,4.71,2937,3.799,2938,3.799,2939,3.799,2942,4.423,2944,2.6,2947,2.403,2948,2.403,2955,2.6,3423,9.467,3424,4.109,3425,3.799,3426,6.454,3427,5.353,3428,3.799,3429,6.454,3430,4.58,3431,4.58,3432,4.109,3433,3.799,3434,5.68,3435,4.71,3436,5.68,3437,5.095,3438,4.71,3439,2.6,3440,4.58,3441,2.898,3442,2.6,3443,2.6,3444,2.6,3445,2.898,3446,2.898,3447,2.898,3448,2.6,3449,2.6,3450,2.6,3451,4.109,3452,2.898,3453,2.898,3454,2.898,3455,4.58,3456,2.898,3457,4.58,3458,2.898,3459,4.58,3460,2.898,3461,4.58,3462,2.898,3463,2.6,3464,2.6,3465,2.6,3466,2.6,3467,2.6,3468,2.898,3469,2.403,3470,2.898,3471,2.6,3472,4.58,3473,2.256,3474,2.898,3475,2.898,3476,2.898,3477,2.898,3478,2.898,3479,2.898,3480,2.898,3481,2.898,3482,2.6,3483,2.898,3484,2.6,3485,4.58,3486,4.58,3487,3.382]],["title/components/ProfileTrajectoryMapSelectorComponent.html",[174,0.805,268,1.833]],["body/components/ProfileTrajectoryMapSelectorComponent.html",[2,0.033,3,0.031,4,0.025,6,0.123,7,0.438,21,0.294,22,0.453,23,0.005,24,0.359,29,0.372,31,0.672,33,2.922,38,0.905,47,0.489,48,0.023,54,0.05,56,1.273,57,1.945,58,2.989,60,0.853,62,0.828,64,0.825,66,1.169,68,1.58,79,1.276,81,2.047,85,1.378,86,0.003,88,1.045,90,2.287,91,1.109,98,1.239,131,0.002,132,2.466,136,0.909,140,1.817,141,1.395,143,1.04,166,0.57,171,0.937,172,0.704,174,1.096,175,1.006,176,0.932,177,1.055,178,1.055,182,0.855,183,3.202,184,3.105,185,1.038,186,1.403,189,2.056,191,1.855,192,2.394,195,1.794,196,2.026,198,0.798,199,1.58,200,1.604,201,1.58,202,2.358,203,1.055,204,1.683,205,0.892,206,1.038,207,2.1,208,1.006,209,1.69,210,3.339,211,1.006,212,1.61,213,1.487,214,1.647,215,2.79,216,0.975,217,0.99,218,2.383,219,0.99,220,1.63,221,1.239,222,1.022,223,1.055,224,1.006,225,0.961,226,1.006,227,0.975,228,2.1,229,1.006,230,0.932,231,1.006,232,1.532,233,1.022,234,1.022,235,2.37,236,1.055,237,1.006,238,1.006,239,1.055,240,1.006,241,1.403,242,1.006,243,0.99,244,1.006,245,0.919,246,0.919,247,1.055,248,0.99,249,1.006,250,1.428,251,2.117,252,1.006,253,2.033,254,1.055,255,1.006,256,1.055,257,1.006,258,1.055,259,1.006,260,0.787,261,0.961,262,0.961,263,2.279,264,1.006,265,0.99,266,1.006,267,2.1,268,2.284,269,0.892,270,1.038,271,1.683,272,1.006,273,1.006,274,1.022,275,0.892,276,1.006,277,1.223,278,1.006,279,0.798,280,1.055,281,0.99,282,1.006,283,1.006,284,1.038,285,1.006,286,1.006,287,1.466,288,0.975,289,1.055,293,2.69,347,0.993,390,1.589,395,2.612,412,3.256,427,4.537,428,4.097,429,5.222,440,1.403,453,2.612,454,3.4,456,1.935,466,3.444,476,1.686,477,1.469,478,1.804,487,1.506,494,7.487,518,0.809,531,2.138,547,5.222,638,2.347,653,1.546,654,2.466,679,3.076,680,1.874,681,2.011,685,3.888,688,3.076,695,2.779,699,4.649,700,4.903,723,2.047,726,2.159,740,1.635,770,2.466,772,4.537,774,2.927,779,2.704,963,2.159,1050,1.874,1092,4.437,1143,3.444,1194,3.265,1242,2.466,1480,2.779,1491,1.401,1585,3.117,1591,2.047,1653,2.3,1855,5.084,2302,1.954,2391,2.047,2538,3.968,2680,1.874,2682,8.099,2981,2.488,3164,2.488,3167,2.488,3168,2.488,3253,4.95,3254,6.577,3255,3.968,3257,3.968,3258,3.968,3260,2.488,3261,2.488,3262,2.488,3263,2.488,3264,2.488,3266,2.488,3267,2.488,3268,2.488,3269,2.488,3270,2.488,3271,4.95,3272,2.488,3273,2.488,3274,2.3,3275,2.488,3282,2.488,3283,2.488,3293,2.488,3306,4.95,3488,9.028,3489,6.296,3490,6.296,3491,6.296,3492,4.423,3493,6.296,3494,5.517,3495,2.773,3496,2.3,3497,2.773,3498,2.773,3499,4.423,3500,2.773,3501,2.773,3502,2.773,3503,2.3,3504,7.332,3505,6.296,3506,4.423,3507,4.423,3508,2.773,3509,2.3,3510,2.773,3511,2.773,3512,2.773,3513,2.773,3514,4.423,3515,2.773,3516,2.773,3517,2.773,3518,2.773,3519,2.773,3520,2.773,3521,2.773,3522,2.773,3523,2.3,3524,2.773,3525,2.773,3526,2.773,3527,2.773,3528,2.773,3529,2.773,3530,2.773,3531,2.773,3532,4.423,3533,2.773,3534,2.773,3535,4.423,3536,2.773,3537,2.773,3538,2.773,3539,2.773,3540,2.773,3541,2.773]],["title/interfaces/Provider.html",[0,0.081,2141,1.862]],["body/interfaces/Provider.html",[0,0.153,2,0.091,3,0.083,4,0.069,6,0.334,7,0.883,21,0.676,22,0.427,23,0.005,24,0.352,48,0.072,86,0.004,131,0.004,146,2.096,172,1.2,251,2.533,304,2.751,587,3.722,1491,4.505,2141,3.5,2408,6.248,2413,4.902,2452,6.759]],["title/interfaces/RawData.html",[0,0.081,2148,3.731]],["body/interfaces/RawData.html",[0,0.112,2,0.034,3,0.032,4,0.026,6,0.126,7,0.448,21,0.578,22,0.306,23,0.005,24,0.299,29,0.382,31,0.691,47,0.798,48,0.023,54,0.052,56,0.82,57,2.036,60,0.55,62,0.595,64,0.997,66,1.378,68,3.371,71,2.926,79,0.849,85,2.129,86,0.002,88,0.387,91,1.809,108,1.791,131,0.002,140,1.028,146,1.489,153,1.791,165,1.103,171,0.484,172,1.019,174,0.72,183,0.892,184,0.867,186,0.904,189,1.476,192,1.835,195,1.912,209,0.7,212,1.319,220,1.295,235,1.055,261,0.987,262,2.215,263,2.31,277,1.25,279,1.841,293,2.54,304,1.267,326,1.224,359,1.889,361,1.181,387,1.733,476,1.733,518,2.354,524,3.795,546,2.31,575,2.186,630,1.349,638,2.753,670,1.349,675,4.301,678,1.633,679,2.52,681,1.296,682,1.681,683,1.681,688,1.589,702,2.455,746,2.84,750,1.681,756,1.733,757,3.387,759,2.369,765,1.349,770,4.137,774,2.824,775,2.84,776,3.417,777,1.791,779,1.941,780,2.666,781,2.097,823,1.927,832,3.889,842,1.51,843,1.791,845,3.132,848,2.749,849,1.733,867,1.408,873,2.097,874,2.749,875,1.791,882,1.791,894,1.733,895,1.733,899,1.633,901,1.681,909,1.733,919,1.733,920,1.733,923,1.733,924,2.749,927,1.733,930,1.681,947,1.633,955,1.791,957,3.056,980,2.395,988,3.056,1028,2.666,1139,2.942,1202,1.733,1203,1.791,1230,2.84,1242,1.589,1244,1.247,1253,3.53,1450,1.927,1586,2.009,1666,2.009,1670,1.791,1798,4.507,1799,3.96,1833,1.733,1852,4.241,2142,4.149,2143,2.105,2144,2.009,2145,4.161,2146,2.009,2147,2.009,2148,4.149,2149,3.338,2150,3.338,2151,3.338,2152,3.338,2153,2.009,2154,2.22,2155,2.22,2156,2.22,2157,2.22,2158,2.22,2159,2.22,2160,4.149,2161,2.22,2162,2.22,2163,2.22,2164,2.22,2165,2.22,2166,2.22,2167,2.22,2168,2.22,2169,2.22,2170,2.22,2171,2.22,2172,2.22,2173,2.22,2174,2.22,2175,4.376,2176,2.22,2177,5.779,2178,2.749,2179,2.749,2180,2.749,2181,2.22,2182,4.376,2183,2.105,2184,2.22,2185,2.22,2186,2.22,2187,2.22,2188,2.22,2189,2.22,2190,2.22,2191,2.22,2192,2.22,2193,2.22,2194,3.521,2195,2.22,2196,2.22,2197,2.22,2198,2.22,2199,2.22,2200,2.22,2201,2.22,2202,2.22,2203,2.22,2204,2.22,2205,2.22,2206,2.22,2207,2.22,2208,2.22,2209,2.22,2210,2.22,2211,2.22,2212,2.22,2213,2.22,2214,3.521,2215,3.338,2216,2.22,2217,2.22,2218,2.22,2219,2.22,2220,2.105,2221,2.22,2222,2.22,2223,2.22,2224,6.47,2225,6.282,2226,5.431,2227,3.521,2228,4.376,2229,2.22,2230,2.22,2231,6.47,2232,2.22,2233,3.338,2234,3.338,2235,3.521,2236,3.521,2237,2.22,2238,3.521,2239,3.521,2240,2.22,2241,2.22,2242,3.521,2243,3.521,2244,2.22,2245,2.22,2246,2.22,2247,2.22,2248,3.521,2249,2.22,2250,1.927,2251,4.98,2252,3.521,2253,6.47,2254,2.22,2255,2.22,2256,2.22,2257,2.22,2258,3.521,2259,4.376,2260,4.376,2261,3.521,2262,4.376,2263,4.376,2264,3.521,2265,2.22,2266,2.22,2267,2.22,2268,2.22,2269,2.22,2270,2.105,2271,2.22,2272,2.22,2273,2.22,2274,2.22,2275,2.105,2276,2.22,2277,2.22,2278,1.247,2279,2.22,2280,2.22,2281,2.22,2282,2.105]],["title/classes/ReferenceValue.html",[54,0.092,764,2.297]],["body/classes/ReferenceValue.html",[0,0.137,2,0.061,3,0.056,4,0.046,6,0.226,7,0.688,21,0.697,22,0.426,23,0.005,24,0.369,47,1.226,48,0.08,54,0.17,56,1.999,62,0.992,64,1.019,86,0.003,88,0.692,131,0.003,141,1.274,143,1.518,146,1.482,165,3.058,166,1.885,170,3.821,171,1.343,172,1.259,209,2.183,214,1.219,220,0.945,221,2.379,250,1.317,260,1.445,304,2.214,347,1.143,359,1.711,518,1.485,545,3.86,624,2.461,625,3.49,764,4.344,774,3.008,1234,2.632,1492,2.461,1494,4.595,1502,3.095,1503,4.662,1504,4.529,1505,5.378,1506,3.095,1508,5.463,1514,4.662,1521,2.838,1522,4.497,1523,2.409,1524,2.461,1525,2.461,1526,5.163,1527,4.096,1528,4.954,1529,2.917,1530,2.917,1531,2.917,1532,3.002,3542,5.09,3543,5.09,3544,5.09,3545,5.09,3546,5.09]],["title/injectables/ReferenceValueColorCache.html",[28,1.149,2618,3.935]],["body/injectables/ReferenceValueColorCache.html",[2,0.052,3,0.048,4,0.039,21,0.631,23,0.005,24,0.338,28,1.647,29,0.58,31,1.049,48,0.05,54,0.112,56,1.245,57,2.006,60,0.835,62,0.961,66,1.469,68,2.214,79,0.654,85,1.731,86,0.003,131,0.003,146,0.923,170,2.091,172,0.987,174,0.987,183,1.353,184,1.316,186,1.372,189,2.733,192,3.05,196,2.545,209,1.943,214,2.147,220,1.555,241,1.372,277,1.713,281,1.545,293,2.002,304,1.212,357,4.55,390,4.531,395,2.934,453,2.048,454,2.874,518,2.113,545,2.817,546,2.62,621,1.967,659,4.033,681,1.967,692,3.428,702,2.349,733,3.369,764,3.595,774,2.358,778,2.924,779,2.661,781,3.358,805,2.924,806,2.924,873,2.006,896,3.369,899,2.479,995,3.369,1028,3.655,1244,1.892,1504,2.479,1505,2.479,1508,4.037,1529,2.479,1555,3.369,1670,2.718,1924,5.56,2391,6.622,2618,5.64,2623,3.369,2624,3.881,2783,4.576,2932,4.576,2934,3.369,2942,3.369,3424,3.881,3425,3.588,3427,3.588,3428,3.588,3432,3.881,3433,3.588,3435,3.588,3437,3.881,3438,3.588,3469,3.588,3473,4.826,3482,3.881,3484,3.881,3547,4.326,3548,4.326,3549,4.326,3550,3.881,3551,3.881,3552,4.326,3553,4.326,3554,4.326,3555,4.326,3556,4.326,3557,4.326,3558,4.326,3559,4.326,3560,4.326,3561,6.198,3562,4.326,3563,6.198,3564,4.326,3565,6.198,3566,4.326,3567,4.326,3568,4.326,3569,5.56,3570,4.326,3571,4.326,3572,6.198,3573,6.198,3574,4.326,3575,7.242,3576,4.326,3577,4.326,3578,6.198,3579,4.326,3580,4.326,3581,4.326,3582,4.326,3583,6.198,3584,4.326,3585,6.198,3586,4.326,3587,4.326,3588,4.326,3589,4.326,3590,4.326,3591,4.326,3592,4.326,3593,4.326,3594,4.326,3595,4.326,3596,4.326,3597,4.326,3598,4.326,3599,4.326,3600,4.326,3601,4.326,3602,4.326,3603,6.198,3604,4.326,3605,4.326,3606,4.326,3607,6.198,3608,4.326,3609,4.326,3610,3.881,3611,4.326,3612,4.326,3613,4.326,3614,4.326,3615,4.326,3616,4.326,3617,4.326,3618,4.326,3619,4.326,3620,4.326,3621,4.326]],["title/classes/ReferenceValueOption.html",[54,0.092,1844,3.731]],["body/classes/ReferenceValueOption.html",[0,0.112,2,0.061,3,0.056,4,0.046,6,0.225,7,0.687,21,0.672,22,0.477,23,0.005,47,1.71,48,0.072,54,0.154,60,1.338,62,0.955,68,1.816,71,1.844,86,0.003,131,0.003,141,0.995,146,1.896,165,3.283,171,1.646,172,0.81,209,2.407,220,1.576,241,1.613,245,2.617,246,2.617,279,1.997,347,1.558,359,2.656,367,3.436,493,6.904,518,2.305,545,3.591,546,1.684,587,2.511,604,3.753,638,1.735,644,2.998,670,3.284,675,3.991,692,4.719,717,2.511,744,3.091,747,3.284,748,2.913,749,3.091,755,3.753,757,4.184,782,5.331,798,3.436,799,3.436,802,3.436,804,3.308,842,2.693,1826,3.959,1828,3.959,1833,3.091,1835,2.834,1837,3.959,1840,3.959,1841,3.959,1843,3.753,1844,6.266,1848,3.959,1849,3.753,1850,3.959,1851,3.959,1852,3.091,1853,3.959,3622,5.084,3623,5.084]],["title/classes/ReferenceValues.html",[54,0.092,764,2.297]],["body/classes/ReferenceValues.html",[0,0.161,2,0.085,3,0.078,4,0.064,6,0.312,21,0.638,23,0.005,43,3.633,47,1.693,48,0.082,54,0.155,86,0.004,91,3.421,98,2.396,131,0.004,141,1.007,172,1.528,347,2.154,359,3.1,524,3.813,625,3.254,638,2.398,763,4.749,764,4.361,765,4.364,766,5.998,767,5.564,768,4.273,769,4.572,770,4.767,771,5.78,772,4.144,3624,7.026]],["title/components/RefreshButtonComponent.html",[174,0.805,269,1.626]],["body/components/RefreshButtonComponent.html",[2,0.046,3,0.042,4,0.034,6,0.168,7,0.557,21,0.252,22,0.398,23,0.005,24,0.263,29,0.508,31,0.918,38,1.237,47,0.993,48,0.031,54,0.069,56,1.619,57,0.872,60,1.085,62,0.878,64,0.675,66,1.045,79,1.301,86,0.003,88,1.009,98,1.061,131,0.003,136,1.156,140,1.526,141,1.354,143,0.85,166,0.778,171,0.955,174,1.264,175,1.374,176,1.273,177,1.441,178,1.441,182,1.168,183,3.27,184,3.179,185,1.418,186,1.784,189,2.424,191,1.273,192,2.424,195,2.028,196,2.553,198,1.09,199,2.009,200,2.04,201,2.009,202,2.78,203,1.441,204,2.14,205,1.219,206,1.418,207,2.553,208,1.374,209,0.93,210,3.593,211,1.374,212,1.958,213,1.891,214,1.899,215,3.163,216,1.332,217,1.353,218,2.324,219,1.353,220,1.045,221,1.576,222,1.396,223,1.441,224,1.374,225,1.312,226,1.374,227,1.332,228,2.553,229,1.374,230,1.273,231,1.374,232,1.948,233,1.396,234,1.396,235,1.733,236,1.441,237,1.374,238,1.374,239,1.441,240,1.374,241,1.784,242,1.374,243,1.353,244,1.374,245,1.255,246,1.255,247,1.441,248,1.353,249,1.374,250,1.736,251,1.891,252,1.374,253,2.472,254,1.441,255,1.374,256,1.441,257,1.374,258,1.441,259,1.374,260,1.075,261,1.312,262,1.312,263,2.223,264,1.374,265,1.353,266,1.374,267,2.553,268,1.374,269,2.39,270,3.535,271,2.14,272,1.374,273,1.374,274,1.396,275,1.219,276,1.374,277,1.555,278,1.374,279,1.09,280,1.441,281,1.353,282,1.374,283,1.374,284,1.418,285,1.374,286,1.374,287,1.006,288,1.332,289,1.441,293,2.682,326,2.881,344,5.817,395,3.176,398,4.535,412,2.908,414,4.665,453,2.662,454,3.444,456,1.657,822,2.56,1108,4.831,2576,8.559,2885,5.233,3625,9.541,3626,3.398,3627,4.665,3628,5.046,3629,7.425,3630,7.425,3631,7.425,3632,6.709,3633,3.787,3634,5.624,3635,3.398,3636,3.398,3637,3.398,3638,3.787,3639,3.787,3640,3.787,3641,3.787,3642,3.787,3643,3.787,3644,3.787,3645,6.709,3646,6.709,3647,5.624,3648,3.787,3649,6.709,3650,3.787,3651,7.425,3652,5.624,3653,3.787,3654,3.787,3655,3.787,3656,3.787,3657,3.787,3658,3.787,3659,5.624]],["title/classes/ResizableComponent.html",[54,0.092,1864,4.191]],["body/classes/ResizableComponent.html",[2,0.09,3,0.082,4,0.068,6,0.33,23,0.005,24,0.348,29,0.998,48,0.06,54,0.16,57,2.177,62,0.692,79,1.126,86,0.004,131,0.004,136,1.82,141,1.27,152,4.026,191,3.289,195,1.989,930,5.769,1864,7.345,3660,7.446,3661,9.452,3662,8.856,3663,7.446,3664,7.446,3665,7.446,3666,7.446,3667,7.446,3668,7.446,3669,7.446]],["title/interfaces/ScatterData.html",[0,0.081,2282,3.731]],["body/interfaces/ScatterData.html",[0,0.112,2,0.035,3,0.032,4,0.026,6,0.127,7,0.449,21,0.597,22,0.27,23,0.005,24,0.299,29,0.384,31,0.694,47,1.131,48,0.023,54,0.052,56,0.823,57,2.038,60,0.552,62,0.596,64,0.892,66,1.38,68,3.373,71,2.93,79,0.851,85,2.13,86,0.002,88,0.389,91,1.814,108,1.797,131,0.002,140,1.031,146,1.724,153,1.797,165,1.107,171,0.486,172,1.113,174,0.722,183,0.895,184,0.87,186,0.908,189,1.481,192,1.839,195,1.914,209,0.703,212,1.323,220,0.842,235,1.058,261,0.991,262,2.22,263,2.314,277,1.253,279,1.845,293,2.542,304,1.27,326,1.229,359,2.499,361,1.185,387,1.74,476,1.74,518,2.357,524,3.799,546,2.314,575,2.192,630,1.354,638,2.384,670,1.354,675,4.305,678,1.639,679,2.528,681,1.301,682,1.687,683,1.687,688,1.595,702,2.463,746,2.849,750,1.687,756,1.74,757,3.394,759,2.375,765,1.354,770,3.573,774,2.439,775,2.849,776,3.425,777,1.797,779,1.947,780,2.674,781,2.103,823,1.934,832,3.897,842,1.515,843,1.797,845,3.14,848,2.757,849,1.74,867,1.413,873,2.103,874,2.757,875,1.797,882,1.797,894,1.74,895,1.74,899,1.639,901,1.687,909,1.74,919,1.74,920,1.74,923,1.74,924,2.757,927,1.74,930,1.687,947,1.639,955,1.797,957,3.065,980,2.402,988,3.065,1028,2.674,1139,2.95,1202,1.74,1203,1.797,1230,2.849,1242,1.595,1244,1.252,1253,3.539,1450,1.934,1586,2.016,1666,2.016,1670,1.797,1798,4.516,1799,3.969,1833,1.74,1852,3.425,2142,4.159,2143,2.112,2144,2.016,2145,4.546,2146,2.016,2147,2.016,2148,3.348,2149,3.348,2150,3.348,2151,3.348,2152,3.348,2153,2.016,2154,2.228,2155,2.228,2156,2.228,2157,2.228,2158,2.228,2159,2.228,2160,4.159,2161,2.228,2162,2.228,2163,2.228,2164,2.228,2165,2.228,2166,2.228,2167,2.228,2168,2.228,2169,2.228,2170,2.228,2171,2.228,2172,2.228,2173,2.228,2174,2.228,2175,4.386,2176,2.228,2177,5.788,2178,2.757,2179,2.757,2180,2.757,2181,2.228,2182,4.386,2183,2.112,2184,2.228,2185,2.228,2186,2.228,2187,2.228,2188,2.228,2189,2.228,2190,2.228,2191,2.228,2192,2.228,2193,2.228,2194,3.531,2195,2.228,2196,2.228,2197,2.228,2198,2.228,2199,2.228,2200,2.228,2201,2.228,2202,2.228,2203,2.228,2204,2.228,2205,2.228,2206,2.228,2207,2.228,2208,2.228,2209,2.228,2210,2.228,2211,2.228,2212,2.228,2213,2.228,2214,3.531,2215,3.348,2216,2.228,2217,2.228,2218,2.228,2219,2.228,2220,2.112,2221,2.228,2222,2.228,2223,2.228,2224,6.478,2225,6.291,2226,5.44,2227,3.531,2228,4.386,2229,2.228,2230,2.228,2231,6.478,2232,2.228,2233,3.348,2234,3.348,2235,3.531,2236,3.531,2237,2.228,2238,3.531,2239,3.531,2240,2.228,2241,2.228,2242,3.531,2243,3.531,2244,2.228,2245,2.228,2246,2.228,2247,2.228,2248,3.531,2249,2.228,2250,1.934,2251,4.991,2252,3.531,2253,6.478,2254,2.228,2255,2.228,2256,2.228,2257,2.228,2258,3.531,2259,4.386,2260,4.386,2261,3.531,2262,4.386,2263,4.386,2264,3.531,2265,2.228,2266,2.228,2267,2.228,2268,2.228,2269,2.228,2270,2.112,2271,2.228,2272,2.228,2273,2.228,2274,2.228,2275,2.112,2276,2.228,2277,2.228,2278,1.252,2279,2.228,2280,2.228,2281,2.228,2282,3.348]],["title/interfaces/SeriesOptions.html",[0,0.081,1499,4.191]],["body/interfaces/SeriesOptions.html",[0,0.154,2,0.093,3,0.085,4,0.07,6,0.34,7,0.892,21,0.51,22,0.367,23,0.005,48,0.073,64,1.081,86,0.004,131,0.004,165,2.966,171,1.626,172,1.435,638,2.617,759,4.164,824,5.183,1498,6.879,1499,7.936,1500,6.879,1501,6.879]],["title/interfaces/Service.html",[0,0.081,250,1.307]],["body/interfaces/Service.html",[0,0.148,2,0.076,3,0.069,4,0.057,6,0.278,7,0.789,21,0.702,22,0.497,23,0.005,24,0.293,47,1.781,48,0.071,64,1.166,86,0.004,131,0.004,143,1.393,146,1.967,148,4.765,166,1.894,171,1.488,172,1.269,214,1.502,220,1.165,221,1.757,250,2.062,260,1.781,490,3.815,624,3.032,625,2.387,632,5.604,1523,2.969,1524,3.032,1525,3.032,1541,5.996,1835,3.497,3670,5.203,3671,7.643,3672,7.176,3673,7.785,3674,7.643,3675,7.176,3676,5.203]],["title/components/ServiceFilterSelectorComponent.html",[174,0.805,272,1.833]],["body/components/ServiceFilterSelectorComponent.html",[2,0.039,3,0.035,4,0.029,6,0.142,7,0.49,21,0.541,22,0.429,23,0.005,24,0.283,29,0.429,31,0.777,38,1.046,48,0.026,54,0.058,56,1.426,57,1.872,58,4.094,60,0.956,62,0.89,64,0.818,66,0.92,79,1.228,86,0.003,88,1.059,91,1.281,98,0.897,131,0.002,132,3.376,136,1.018,140,1.378,141,1.349,143,1.409,145,5.032,166,0.658,171,1.029,172,0.789,174,1.294,175,1.162,176,1.077,177,1.219,178,1.219,182,0.988,183,3.239,184,3.141,185,1.199,186,1.571,189,2.225,191,1.077,192,2.225,195,1.977,196,2.615,198,0.922,199,1.769,200,1.797,201,1.769,202,2.552,203,1.219,204,1.885,205,1.031,206,1.199,207,2.305,208,1.162,209,0.787,210,3.461,211,1.162,212,1.767,213,1.665,214,1.764,215,2.965,216,1.126,217,1.144,218,2.098,219,1.144,220,0.92,221,1.388,222,1.18,223,1.219,224,1.162,225,1.11,226,1.162,227,1.126,228,2.305,229,1.162,230,1.077,231,1.162,232,1.716,233,1.18,234,1.18,235,1.59,236,1.219,237,1.162,238,1.162,239,1.219,240,1.162,241,2.162,242,1.162,243,1.144,244,1.162,245,1.061,246,1.061,247,1.219,248,1.144,249,1.162,250,2.102,251,3.469,252,1.162,253,2.232,254,1.219,255,1.162,256,1.219,257,1.162,258,1.219,259,1.162,260,0.909,261,1.11,262,1.11,263,2.007,264,1.162,265,1.144,266,1.162,267,2.305,268,1.162,269,1.031,270,1.199,271,1.885,272,2.472,273,1.162,274,1.18,275,1.031,276,1.162,277,1.369,278,1.162,279,0.922,280,1.219,281,1.144,282,1.162,283,1.162,284,1.199,285,1.162,286,1.162,287,0.851,288,1.126,289,1.219,293,2.382,390,1.835,395,2.867,412,2.561,440,1.016,453,2.345,454,3.161,456,1.401,487,2.69,518,1.445,546,1.061,615,3.683,621,3.35,624,1.548,653,1.786,654,2.761,717,3.85,740,1.889,759,2.089,779,2.927,887,2.395,1011,1.885,1434,4.941,1480,3.112,1491,3.06,1492,1.548,1523,1.516,1524,1.548,1525,1.548,1592,2.656,1601,2.494,1711,2.365,1713,5.194,1855,1.889,2001,4.282,2002,1.618,2003,1.696,2141,1.825,2414,5.032,2415,3.348,2416,5.023,2417,2.656,2418,4.108,2419,4.108,2420,2.656,2421,6.328,2422,5.653,2423,4.108,2425,4.472,2428,4.108,2431,6.113,2433,6.113,2434,6.113,2441,2.494,2442,5.653,2443,4.108,2732,7.329,2902,6.113,2924,2.656,2971,2.656,2972,4.108,2998,5.739,3159,4.444,3160,4.444,3169,2.873,3259,2.873,3318,2.873,3496,2.656,3503,2.656,3677,7.805,3678,6.057,3679,2.873,3680,3.203,3681,3.203,3682,3.203,3683,3.203,3684,3.203,3685,3.203,3686,3.203,3687,3.203,3688,3.203,3689,3.203]],["title/interfaces/ServiceQuantities.html",[0,0.081,3675,3.935]],["body/interfaces/ServiceQuantities.html",[0,0.148,2,0.075,3,0.069,4,0.057,6,0.277,7,0.787,21,0.657,22,0.487,23,0.005,24,0.292,47,1.876,48,0.071,64,1.258,86,0.004,131,0.004,143,1.321,146,1.333,148,3.228,166,1.283,171,1.06,172,0.994,214,2.202,220,1.708,221,2.577,250,1.615,260,2.612,490,3.796,624,4.447,625,2.375,632,3.796,1523,4.354,1524,4.447,1525,4.447,1541,4.062,1835,3.48,3670,5.177,3671,5.177,3672,4.861,3673,6.805,3674,5.177,3675,6.805,3676,7.629]],["title/components/ServiceSelectorComponent.html",[174,0.805,273,1.833]],["body/components/ServiceSelectorComponent.html",[2,0.038,3,0.035,4,0.029,6,0.141,7,0.486,21,0.211,22,0.44,23,0.005,24,0.281,29,0.425,31,0.768,38,1.035,47,0.867,48,0.026,54,0.057,56,1.414,57,0.73,60,0.948,62,0.925,64,0.722,66,0.912,68,1.132,71,2.936,79,1.224,86,0.002,88,0.997,91,1.268,98,0.888,131,0.002,136,1.01,140,1.368,141,1.333,143,0.909,166,0.651,171,1.246,174,1.289,175,1.149,176,1.065,177,1.206,178,1.206,182,0.977,183,3.236,184,3.139,185,1.186,186,1.558,189,2.213,191,1.065,192,2.213,195,1.103,196,2.764,198,0.912,199,1.754,200,1.782,201,1.754,202,2.538,203,1.206,204,1.869,205,1.02,206,1.186,207,2.289,208,1.149,209,0.778,210,3.453,211,1.149,212,1.755,213,1.652,214,1.756,215,2.952,216,1.114,217,1.132,218,2.084,219,1.132,220,0.912,221,1.376,222,1.168,223,1.206,224,1.149,225,1.098,226,1.149,227,1.114,228,2.289,229,1.149,230,1.065,231,1.149,232,1.702,233,1.168,234,1.168,235,1.581,236,1.206,237,1.149,238,1.149,239,1.206,240,1.149,241,2.15,242,1.149,243,1.132,244,1.149,245,1.05,246,1.05,247,1.206,248,1.132,249,1.149,250,2.663,251,2.721,252,1.149,253,2.217,254,1.206,255,1.149,256,1.206,257,1.149,258,1.206,259,1.149,260,0.9,261,1.098,262,1.098,263,1.993,264,1.149,265,1.132,266,1.149,267,2.289,268,1.149,269,1.02,270,1.186,271,1.869,272,1.149,273,2.458,274,1.168,275,1.02,276,1.149,277,1.358,278,1.149,279,0.912,280,1.206,281,1.132,282,1.149,283,1.149,284,1.186,285,1.149,286,1.149,287,0.842,288,1.114,289,1.206,304,1.376,322,3.779,327,5.048,328,4.066,347,0.712,390,1.816,398,4.066,414,4.258,440,1.005,487,2.668,518,0.925,587,2.427,615,3.658,621,1.44,653,1.766,654,2.739,681,2.233,740,1.869,759,2.071,871,6.042,887,4.386,939,2.34,945,4.685,1011,1.869,1203,1.991,1308,3.196,1434,2.987,1491,3.039,1585,3.462,1592,2.628,1596,2.843,2141,2.497,2415,3.32,2445,2.468,2728,5.728,2731,4.989,2732,7.313,2969,2.843,2998,4.685,3265,2.843,3496,4.074,3503,2.628,3677,7.789,3690,6.777,3691,4.407,3692,4.912,3693,6.016,3694,6.016,3695,6.016,3696,6.016,3697,6.016,3698,3.169,3699,2.843,3700,3.169,3701,3.169,3702,2.843,3703,4.912,3704,3.169,3705,4.912,3706,3.169,3707,3.169,3708,6.016,3709,3.169,3710,3.169,3711,3.169,3712,3.169,3713,3.169,3714,3.169,3715,3.169,3716,3.169,3717,3.169,3718,3.169,3719,3.169,3720,3.169,3721,3.169,3722,3.169,3723,3.169,3724,3.169,3725,3.169,3726,3.169,3727,3.169,3728,6.016,3729,3.169,3730,4.912,3731,4.912,3732,4.912,3733,4.912,3734,4.912,3735,4.912,3736,4.912,3737,4.912,3738,4.912,3739,4.912,3740,4.912,3741,4.912,3742,4.912,3743,4.912,3744,4.407]],["title/injectables/ServiceSelectorService.html",[28,1.149,2728,3.731]],["body/injectables/ServiceSelectorService.html",[2,0.068,3,0.063,4,0.052,6,0.252,21,0.659,22,0.4,23,0.005,24,0.451,28,1.899,29,0.761,31,2.151,34,3.687,35,3.61,48,0.046,54,0.103,57,1.307,60,1.441,62,0.776,64,1.002,66,1.054,79,1.393,85,1.242,86,0.004,88,1.134,91,2.27,131,0.004,132,4.163,136,1.535,141,1.197,143,1.262,171,1.269,250,2.385,251,2.983,293,2.308,304,2.703,322,6.061,324,5.048,390,3.251,518,1.655,546,1.88,620,5.263,621,2.579,622,5.09,779,3.809,939,4.189,1491,4.482,1548,4.189,1591,4.189,2728,5.514,2732,6.908,3024,4.706,3677,7.357,3745,8.349,3746,7.468,3747,5.674,3748,5.674,3749,9.648,3750,5.674,3751,7.468,3752,5.674,3753,5.674,3754,5.674,3755,5.674,3756,5.674,3757,5.674,3758,8.349,3759,5.674,3760,5.674,3761,5.674]],["title/interfaces/Settings.html",[0,0.081,326,2.17]],["body/interfaces/Settings.html",[0,0.158,2,0.074,3,0.068,4,0.056,6,0.272,7,0.777,21,0.697,22,0.485,23,0.005,24,0.286,47,1.529,48,0.078,64,1.249,86,0.004,88,1.177,131,0.004,140,2.077,148,3.166,166,1.78,171,1.604,304,1.716,322,5.738,323,4.315,324,4.139,325,4.315,326,3.37,327,6.473,328,6.173,329,6.436,330,6.436,331,6.473,332,6.173,333,5.554,334,2.96,335,6.436,336,5.304,337,5.304,338,3.984,2091,5.794]],["title/classes/SettingsService.html",[54,0.092,2885,3.561]],["body/classes/SettingsService.html",[2,0.083,3,0.077,4,0.063,6,0.307,7,0.838,22,0.406,23,0.005,24,0.323,48,0.056,54,0.153,57,2.109,60,1.766,62,0.851,64,0.829,79,1.384,86,0.004,88,0.939,131,0.004,136,1.74,141,1.368,143,1.045,152,3.143,195,1.552,293,2.53,326,4.373,440,2.193,765,4.821,2180,4.204,2270,6.758,2885,5.967,3762,6.913,3763,9.54,3764,8.467,3765,8.467,3766,6.913,3767,8.467,3768,6.913,3769,6.913]],["title/interfaces/SingleFavorite.html",[0,0.081,2306,3.415]],["body/interfaces/SingleFavorite.html",[0,0.137,2,0.062,3,0.057,4,0.047,6,0.229,7,0.694,21,0.613,22,0.247,23,0.005,24,0.327,28,1.594,29,0.692,31,1.251,48,0.069,54,0.093,57,1.188,60,0.995,62,0.891,66,1.301,71,1.871,79,1.511,85,1.955,86,0.003,131,0.003,146,1.906,166,2.038,171,1.517,172,1.268,195,1.574,220,1.301,230,3.433,235,1.992,293,2.468,438,4.892,518,2.045,531,3.388,546,2.958,774,3.647,953,3.241,966,3.486,1244,3.065,1962,4.84,2304,3.635,2305,3.809,2306,6.034,2307,3.809,2308,6.016,2309,3.241,2310,4.017,2311,4.017,2312,4.017,2313,4.017,2314,4.017,2315,5.457,2316,4.017,2317,7.171,2318,4.017,2319,4.017,2320,4.017,2321,4.017,2322,4.017,2323,4.017,2324,4.017,2325,4.017,2326,4.017,2327,4.017,2328,4.017,2329,4.017,2330,4.017,2331,4.017,2332,4.017,2333,4.017,2334,4.017,2335,4.017,2336,4.017,2337,4.017,2338,4.017,2339,4.017,2340,4.017,2341,4.017,2342,4.017,2343,4.017,2344,4.017,2345,4.017,2346,4.017,2347,4.017,2348,4.017,2349,5.457,2350,4.017,2351,4.017,2352,4.017,2353,5.457,2354,4.017,2355,4.017,2356,4.017,2357,3.809,2358,3.809]],["title/injectables/SplittedDataDatasetApiInterface.html",[28,1.149,3770,3.935]],["body/injectables/SplittedDataDatasetApiInterface.html",[2,0.063,3,0.058,4,0.047,6,0.231,21,0.615,22,0.383,23,0.005,24,0.464,28,1.819,29,0.698,30,5.291,34,3.199,48,0.042,54,0.094,57,1.842,60,1.36,62,0.744,64,1.133,65,4.33,66,0.967,79,1.354,85,1.961,86,0.003,88,0.958,91,2.083,131,0.003,136,1.449,140,2.185,141,1.011,143,1.209,146,1.707,148,4.631,150,4.041,151,3.519,156,4.589,172,0.829,220,0.967,235,1.215,311,3.271,312,4.318,347,1.584,440,1.652,524,2.321,575,3.409,587,3.484,638,3.056,764,2.367,765,2.465,781,3.975,822,4.766,873,3.975,887,4.143,1308,3.388,1385,3.931,1488,5.793,1496,5.385,1534,4.458,1576,3.669,1577,4.318,1580,4.318,1835,2.903,1910,4.318,2001,5.385,2002,2.631,2003,2.758,2096,4.671,2097,4.671,2103,4.671,2472,4.055,2473,4.318,2797,6.675,3770,5.492,3771,7.997,3772,7.174,3773,5.207,3774,5.207,3775,5.207,3776,4.671,3777,7.052,3778,5.207,3779,4.671,3780,5.207,3781,7.052,3782,5.207,3783,5.207,3784,5.207,3785,5.207,3786,5.207,3787,7.052,3788,5.207,3789,5.207,3790,5.207,3791,5.207,3792,4.671,3793,5.207,3794,5.207,3795,5.207,3796,5.207,3797,5.207,3798,5.207,3799,5.207,3800,5.207,3801,5.207]],["title/classes/Station.html",[54,0.092,221,1.416]],["body/classes/Station.html",[0,0.112,2,0.084,3,0.077,4,0.063,6,0.308,7,0.988,21,0.636,22,0.439,23,0.005,24,0.397,48,0.075,54,0.166,62,0.955,86,0.004,98,2.677,131,0.004,141,1.316,143,1.387,146,2.04,172,1.107,214,2.196,220,1.291,221,2.38,524,3.099,625,3.637,1522,4.5,3802,5.764,3803,7.609,3804,6.951,3805,6.951,3806,7.443,3807,6.951,3808,6.616]],["title/interfaces/StationProperties.html",[0,0.081,3806,3.935]],["body/interfaces/StationProperties.html",[0,0.14,2,0.087,3,0.08,4,0.066,6,0.322,7,0.925,21,0.58,22,0.347,23,0.005,24,0.407,48,0.076,54,0.158,62,0.869,86,0.004,98,2.031,131,0.004,143,1.466,146,1.548,172,1.388,214,2.459,220,1.347,221,2.031,524,3.233,625,2.759,1522,4.616,3802,6.013,3803,6.013,3806,7.278,3808,7.55]],["title/injectables/StatusCheckService.html",[28,1.149,3809,4.533]],["body/injectables/StatusCheckService.html",[2,0.051,3,0.047,4,0.039,6,0.368,7,0.604,21,0.676,22,0.437,23,0.005,24,0.366,27,1.786,28,1.628,29,0.568,34,3.998,48,0.034,54,0.13,60,1.178,62,0.919,64,1.069,66,0.787,68,2.556,79,1.503,85,1.567,86,0.003,88,1.211,91,1.695,131,0.003,136,1.61,141,1.332,143,1.347,154,5.936,195,1.371,235,0.988,293,2.608,300,4.955,304,2.907,311,2.661,312,3.513,347,0.951,396,5.063,440,1.344,487,4.253,585,5.477,587,3.536,615,2.576,620,4.302,621,1.926,740,2.498,980,3.233,1139,3.972,1244,2.67,1413,6.385,1447,5.519,1548,3.127,1835,4.821,2883,3.8,3364,5.477,3372,5.477,3744,8.66,3776,3.8,3809,5.477,3810,9.434,3811,9.434,3812,4.236,3813,6.105,3814,4.754,3815,6.105,3816,5.063,3817,6.105,3818,7.832,3819,7.832,3820,6.105,3821,6.105,3822,6.105,3823,6.105,3824,4.236,3825,7.832,3826,4.236,3827,6.105,3828,6.105,3829,4.236,3830,6.105,3831,4.236,3832,6.105,3833,4.236,3834,6.105,3835,4.236,3836,6.105,3837,4.236,3838,4.236,3839,4.236,3840,4.236,3841,6.105,3842,4.236,3843,4.236,3844,4.236,3845,4.236,3846,4.236,3847,4.236,3848,4.236,3849,4.236,3850,4.236,3851,4.236]],["title/interfaces/StatusInterval.html",[0,0.081,1528,2.817]],["body/interfaces/StatusInterval.html",[0,0.145,2,0.064,3,0.059,4,0.049,6,0.237,7,0.711,21,0.702,22,0.415,23,0.005,24,0.378,47,1.267,48,0.08,54,0.169,56,2.066,62,0.989,86,0.003,88,1.177,131,0.003,143,1.529,146,1.532,165,3.135,166,1.665,170,3.917,171,0.908,172,1.291,209,2.22,214,1.279,220,0.992,221,2.427,250,1.383,260,1.517,304,2.27,347,1.2,359,1.797,518,1.559,545,2.429,624,2.583,625,2.034,764,4.321,774,3.084,1234,4.479,1492,2.583,1494,4.672,1502,3.25,1503,4.779,1504,4.643,1505,4.963,1506,3.25,1508,5.387,1514,4.779,1521,2.979,1522,4.588,1523,2.53,1524,2.583,1525,2.583,1526,3.25,1527,4.233,1528,5.187,1529,3.062,1530,3.062,1531,3.062,1532,5.109]],["title/injectables/StatusIntervalResolverService.html",[28,1.149,2584,3.935]],["body/injectables/StatusIntervalResolverService.html",[2,0.083,3,0.076,4,0.063,6,0.306,22,0.33,23,0.005,24,0.395,28,2.079,29,0.923,47,1.613,48,0.056,54,0.125,60,1.763,62,0.85,64,0.826,79,1.277,85,1.85,86,0.004,88,0.936,131,0.004,136,1.736,141,1.211,143,1.041,347,1.897,1108,5.946,1234,3.562,1528,5.753,1532,4.983,1534,5.095,1576,4.854,1578,5.086,2584,6.58,2589,8.199,3852,6.889,3853,8.449,3854,6.889,3855,8.449,3856,6.889,3857,6.889,3858,6.889,3859,6.889,3860,6.889,3861,6.889,3862,6.889,3863,6.889]],["title/components/StringTogglerComponent.html",[174,0.805,275,1.626]],["body/components/StringTogglerComponent.html",[2,0.052,3,0.048,4,0.039,6,0.19,7,0.61,21,0.65,22,0.429,23,0.005,24,0.2,29,0.575,38,1.401,48,0.035,54,0.078,56,1.774,62,0.915,64,0.945,66,1.145,79,0.932,86,0.003,88,0.98,98,1.202,131,0.003,136,1.267,140,1.64,141,1.313,143,0.649,166,0.882,171,1.225,174,1.329,175,1.557,176,1.443,177,1.633,178,1.633,182,1.324,183,3.295,184,3.204,185,1.607,186,1.955,189,2.573,191,1.443,192,2.573,195,1.384,196,2.88,198,1.235,199,2.201,200,2.236,201,2.201,202,2.951,203,1.633,204,2.345,205,1.381,206,1.607,207,2.744,208,1.557,209,1.054,210,3.683,211,1.557,212,2.104,213,2.072,214,1.998,215,3.306,216,1.51,217,1.533,218,2.498,219,1.533,220,1.145,221,1.727,222,1.582,223,1.633,224,1.557,225,1.487,226,1.557,227,1.51,228,2.744,229,1.557,230,1.443,231,1.557,232,2.135,233,1.582,234,1.582,235,1.839,236,1.633,237,1.557,238,1.557,239,1.633,240,1.557,241,1.955,242,1.557,243,1.533,244,1.557,245,1.422,246,1.422,247,1.633,248,1.533,249,1.557,250,1.866,251,2.072,252,1.557,253,2.657,254,1.633,255,1.557,256,1.633,257,1.557,258,1.633,259,1.557,260,1.219,261,1.487,262,1.487,263,2.389,264,1.557,265,1.533,266,1.557,267,2.744,268,1.557,269,1.381,270,1.607,271,2.345,272,1.557,273,1.557,274,1.582,275,2.536,276,1.557,277,1.704,278,1.557,279,1.235,280,1.633,281,1.533,282,1.557,283,1.557,284,1.607,285,1.557,286,1.557,287,1.14,288,1.51,289,1.633,341,3.56,342,5.111,343,5.111,344,5.326,345,6.469,346,5.98,347,1.619,348,6.469,349,3.851,350,3.851,351,3.851,352,3.851,395,3.413,412,3.187,453,2.917,454,3.654,456,1.878,2496,3.56,2578,8.364,3081,7.069,3088,3.851,3864,9.323,3865,4.292,3866,4.292,3867,4.292,3868,4.292,3869,4.292,3870,4.292,3871,4.292]],["title/interfaces/SupportedMimeTypes.html",[0,0.081,3673,3.935]],["body/interfaces/SupportedMimeTypes.html",[0,0.156,2,0.087,3,0.08,4,0.066,21,0.677,22,0.346,23,0.005,24,0.337,47,1.824,48,0.076,86,0.004,131,0.004,143,1.41,146,1.542,148,3.735,166,1.484,171,1.227,172,1.15,214,1.729,220,1.342,221,2.024,250,1.869,260,2.051,490,4.393,624,3.492,625,2.749,632,4.393,1523,3.419,1524,3.492,1525,3.492,1541,4.7,1835,4.027,3670,5.991,3671,5.991,3672,5.625,3673,7.541,3674,5.991,3675,6.772,3676,5.991]],["title/injectables/Time.html",[28,1.149,277,1.397]],["body/injectables/Time.html",[2,0.049,3,0.045,4,0.037,6,0.181,21,0.568,22,0.448,23,0.005,24,0.382,28,1.593,29,0.547,47,1.625,48,0.033,54,0.108,57,0.94,60,1.146,62,0.956,64,1.122,65,2.872,66,1.636,75,4.937,79,1.534,85,2.222,86,0.003,88,1.271,97,1.72,131,0.003,136,1.221,140,2.393,141,1.359,143,1.414,150,3.404,151,2.757,156,3.865,171,1.009,195,0.916,277,1.936,293,1.936,355,4.386,357,6.021,361,3.649,390,3.404,518,1.19,546,1.351,822,6.477,867,2.935,1108,2.654,1354,4.626,1385,2.274,1961,3.383,1962,5.191,1976,2.875,1977,3.177,1978,3.383,1993,3.177,2040,7.337,2441,3.177,2472,3.177,3872,4.079,3873,5.94,3874,5.94,3875,5.94,3876,5.94,3877,7.696,3878,5.94,3879,5.94,3880,5.94,3881,5.94,3882,4.079,3883,5.94,3884,4.079,3885,5.94,3886,4.079,3887,5.94,3888,7.006,3889,4.079,3890,5.94,3891,4.079,3892,5.94,3893,4.079,3894,5.94,3895,4.079,3896,5.94,3897,4.079,3898,5.94,3899,4.079,3900,5.94,3901,4.079,3902,5.94,3903,4.079,3904,4.079,3905,4.079,3906,5.94,3907,4.079,3908,4.079,3909,7.006,3910,5.94,3911,4.079,3912,4.079,3913,4.079,3914,4.079,3915,4.079,3916,4.079,3917,4.079,3918,4.079,3919,4.079,3920,4.079,3921,5.94,3922,4.079,3923,4.079,3924,4.079,3925,4.079,3926,3.177,3927,4.079,3928,4.079,3929,4.079,3930,4.079,3931,4.079,3932,4.079]],["title/classes/TimeInterval.html",[54,0.092,357,3.175]],["body/classes/TimeInterval.html",[2,0.087,3,0.08,4,0.066,23,0.005,47,1.777,48,0.076,54,0.176,60,1.68,62,0.901,86,0.004,131,0.004,140,1.646,152,3.29,172,1.387,355,5.343,356,6.002,357,6.087,358,7.744,359,3.14,361,3.606,364,5.47,365,6.002,366,7.22,367,4.891,368,6.002]],["title/components/TimeListSelectorComponent.html",[174,0.805,276,1.833]],["body/components/TimeListSelectorComponent.html",[2,0.056,3,0.051,4,0.042,6,0.205,21,0.308,22,0.36,23,0.005,24,0.216,29,0.62,38,1.511,47,1.516,48,0.038,54,0.084,62,0.798,64,0.555,66,1.207,79,0.699,86,0.003,88,1.021,98,1.296,131,0.003,136,1.336,140,1.709,141,1.077,143,0.699,166,0.951,174,1.368,175,1.678,176,1.556,177,1.761,178,1.761,182,1.427,183,3.314,184,3.218,185,1.732,186,2.062,189,2.661,191,1.556,192,2.661,195,1.039,196,2.623,198,1.332,199,2.322,200,2.358,201,2.322,202,3.052,203,1.761,204,2.474,205,1.489,206,1.732,207,2.86,208,1.678,209,1.136,210,3.733,211,1.678,212,2.192,213,2.185,214,2.055,215,3.388,216,1.627,217,1.652,218,2.603,219,1.652,220,1.207,221,1.821,222,1.705,223,1.761,224,1.678,225,1.603,226,1.678,227,1.627,228,2.86,229,1.678,230,1.556,231,1.678,232,2.252,233,1.705,234,1.705,235,1.902,236,1.761,237,1.678,238,1.678,239,1.761,240,1.678,241,3.158,242,1.678,243,1.652,244,1.678,245,1.533,246,1.533,247,1.761,248,1.652,249,1.678,250,1.944,251,2.185,252,1.678,253,2.769,254,1.761,255,1.678,256,1.761,257,1.678,258,1.761,259,1.678,260,1.314,261,1.603,262,1.603,263,2.49,264,1.678,265,1.652,266,1.678,267,2.86,268,1.678,269,1.489,270,1.732,271,2.474,272,1.678,273,1.678,274,1.705,275,1.489,276,2.957,277,2.58,278,1.678,279,1.332,280,1.761,281,1.652,282,1.678,283,1.678,284,1.732,285,1.678,286,1.678,287,1.229,288,1.627,289,1.761,359,1.556,361,2.692,653,2.579,654,3.624,656,4.151,657,3.837,2740,7.312,3523,6.232,3679,4.151,3933,8.15,3934,6.5,3935,7.515,3936,6.5,3937,4.627,3938,5.391]],["title/injectables/TimeRangeSliderCache.html",[28,1.149,2748,3.731]],["body/injectables/TimeRangeSliderCache.html",[2,0.094,3,0.086,4,0.071,23,0.005,24,0.425,28,2.193,29,1.047,31,1.893,48,0.063,54,0.141,86,0.004,131,0.004,140,1.776,172,1.244,279,2.621,2748,6.724,2749,6.08,2750,6.475,2783,6.724,3939,7.808]],["title/components/TimeRangeSliderComponent.html",[174,0.805,278,1.833]],["body/components/TimeRangeSliderComponent.html",[2,0.043,3,0.039,4,0.032,6,0.156,7,0.528,21,0.235,22,0.415,23,0.005,24,0.359,29,0.473,31,0.855,38,1.152,47,1.677,48,0.029,54,0.064,56,1.535,57,0.813,60,1.029,62,0.91,64,0.64,66,1.194,68,1.26,79,0.533,85,0.772,86,0.003,88,0.974,98,0.988,131,0.003,136,1.096,140,1.912,141,1.27,143,0.806,146,1.373,156,5.267,166,0.725,174,1.226,175,1.28,176,1.186,177,1.342,178,1.342,182,1.088,183,3.254,184,3.164,185,1.321,186,1.692,189,2.34,191,2.162,192,2.34,195,1.198,196,2.477,198,1.015,199,1.905,200,1.935,201,1.905,202,2.684,203,1.342,204,2.029,205,1.135,206,1.321,207,2.447,208,1.28,209,0.867,210,3.538,211,1.28,212,1.876,213,1.793,214,1.842,215,3.08,216,1.241,217,1.26,218,2.227,219,1.26,220,0.99,221,1.494,222,1.3,223,1.342,224,1.28,225,1.222,226,1.28,227,1.241,228,2.447,229,1.28,230,1.186,231,1.28,232,1.847,233,1.3,234,1.3,235,1.672,236,1.342,237,1.28,238,1.28,239,1.342,240,1.28,241,1.692,242,1.28,243,1.26,244,1.28,245,2.374,246,2.374,247,1.342,248,1.26,249,1.28,250,1.664,251,1.793,252,1.28,253,2.369,254,1.342,255,1.28,256,1.342,257,1.28,258,1.342,259,1.28,260,1.002,261,1.222,262,1.222,263,2.13,264,1.28,265,1.26,266,1.28,267,2.447,268,1.28,269,1.135,270,1.321,271,2.029,272,1.28,273,1.28,274,1.3,275,1.135,276,1.28,277,2.449,278,2.6,279,2.925,280,1.342,281,1.26,282,1.28,283,1.28,284,1.321,285,1.28,286,1.28,287,0.937,288,1.241,289,1.342,346,2.926,347,1.198,361,3.585,369,2.758,395,3.044,412,2.758,440,1.119,453,2.524,454,3.324,456,1.543,569,3.165,681,2.424,749,2.145,778,2.384,805,3.604,806,3.604,1385,4.513,1626,7.178,2569,1.573,2748,5.292,2749,7.032,2750,7.489,2753,3.165,3523,5.333,3940,3.528,3941,5.768,3942,3.528,3943,5.333,3944,5.333,3945,5.333,3946,8.095,3947,8.095,3948,5.768,3949,5.333,3950,3.528,3951,3.528,3952,3.528,3953,3.528,3954,3.528,3955,3.528,3956,3.528,3957,4.784,3958,3.528,3959,3.528,3960,3.528,3961,3.528,3962,5.333,3963,3.528,3964,5.333,3965,3.528,3966,3.528,3967,3.528,3968,7.167,3969,3.528,3970,7.167,3971,3.528,3972,3.528,3973,3.528,3974,3.528,3975,5.333,3976,3.528,3977,3.528,3978,3.528,3979,3.528]],["title/interfaces/TimeValueEntry.html",[0,0.081,767,3.288]],["body/interfaces/TimeValueEntry.html",[0,0.162,2,0.083,3,0.076,4,0.063,6,0.305,7,0.836,21,0.608,22,0.404,23,0.005,43,3.555,47,1.796,48,0.082,54,0.125,86,0.004,91,3.376,98,2.364,131,0.004,172,1.557,347,2.263,359,3.344,524,3.066,625,2.617,638,2.346,763,4.647,764,4.151,765,3.995,766,6.196,767,5.942,768,4.181,769,4.474,770,4.705,771,5.704,772,4.055]],["title/classes/TimedDatasetOptions.html",[54,0.092,1852,3.073]],["body/classes/TimedDatasetOptions.html",[0,0.092,2,0.047,3,0.043,4,0.036,6,0.173,7,0.569,21,0.661,22,0.485,23,0.005,47,1.744,48,0.065,54,0.137,60,1.317,62,0.97,64,1.126,68,2.054,71,2.086,86,0.003,88,0.53,131,0.003,141,1.376,143,0.59,146,1.457,165,3.45,171,1.695,172,0.916,209,2.357,220,1.656,241,1.824,245,2.496,246,2.496,279,1.965,347,2.079,359,2.998,367,2.637,440,2.757,493,6.524,518,2.452,545,4.054,546,1.905,587,2.841,604,4.245,638,1.962,644,3.391,670,3.566,675,4.245,692,4.81,717,3.722,744,4.581,747,3.978,748,3.295,749,3.497,755,4.245,757,4.451,782,5.279,798,5.092,799,5.092,802,5.092,804,4.902,842,3.046,1826,3.039,1828,5.867,1829,3.501,1833,3.497,1835,3.205,1837,4.478,1840,4.478,1841,4.478,1843,4.245,1844,5.931,1848,4.478,1849,4.245,1850,3.039,1851,3.039,1852,3.497,1853,3.039,1855,5.537,3980,5.75,3981,3.902,3982,3.902,3983,3.902,3984,3.902,3985,3.902,3986,3.902,3987,3.902,3988,3.902,3989,3.902,3990,3.902,3991,3.902]],["title/classes/Timeseries.html",[54,0.092,214,1.21]],["body/classes/Timeseries.html",[0,0.131,2,0.055,3,0.051,4,0.042,6,0.203,7,0.639,21,0.696,22,0.465,23,0.005,24,0.349,47,1.14,48,0.078,54,0.165,56,2.152,62,0.993,64,0.775,86,0.003,88,0.623,131,0.003,141,1.404,143,1.52,146,1.826,165,3.434,166,1.824,170,4.291,171,0.778,172,1.191,209,1.586,214,1.546,220,0.851,221,2.652,250,1.186,260,1.301,304,2.487,347,1.45,359,1.541,440,1.454,518,1.884,545,2.083,624,2.215,625,3.757,764,4.452,774,3.088,1234,2.37,1492,2.215,1494,4.424,1502,2.787,1503,4.409,1504,5.086,1505,5.226,1506,2.787,1508,5.46,1514,4.409,1521,2.555,1522,4.701,1523,2.169,1524,2.215,1525,2.215,1526,2.787,1527,3.808,1528,5.349,1529,4.65,1530,2.626,1531,2.626,1532,2.703,3992,4.583,3993,4.583,3994,4.583,3995,4.583,3996,4.583,3997,4.583,3998,4.583,3999,4.583,4000,4.583,4001,4.583,4002,4.583,4003,4.583]],["title/classes/TimeseriesCollection.html",[54,0.092,3808,3.935]],["body/classes/TimeseriesCollection.html",[0,0.119,2,0.089,3,0.082,4,0.067,6,0.327,7,0.73,21,0.627,23,0.005,24,0.411,48,0.076,54,0.171,62,0.875,86,0.004,98,2.066,131,0.004,141,1.058,143,1.423,146,1.574,172,1.175,214,2.254,220,1.37,221,2.066,524,3.926,625,3.351,1522,4.986,3802,6.117,3803,6.117,3806,6.857,3808,7.331,4004,7.375]],["title/interfaces/TimeseriesExtras.html",[0,0.081,1530,2.895]],["body/interfaces/TimeseriesExtras.html",[0,0.146,2,0.065,3,0.06,4,0.049,6,0.24,7,0.717,21,0.696,22,0.347,23,0.005,24,0.381,47,1.279,48,0.081,54,0.169,56,2.085,62,0.989,64,1.045,86,0.003,88,0.736,131,0.003,143,1.532,146,1.546,165,3.157,166,1.677,170,3.945,171,0.921,172,1.3,209,1.779,214,1.297,220,1.006,221,2.44,250,1.402,260,1.539,304,2.286,347,1.217,359,1.822,518,1.581,545,2.463,624,2.62,625,2.062,764,4.336,774,3.105,1234,2.802,1492,2.62,1494,4.694,1502,3.295,1503,4.813,1504,4.676,1505,4.991,1506,3.295,1508,5.403,1514,4.813,1521,3.021,1522,4.614,1523,2.565,1524,2.62,1525,2.62,1526,3.295,1527,4.272,1528,5.528,1529,3.105,1530,4.151,1531,4.991,1532,3.196]],["title/classes/Timespan.html",[54,0.092,140,1.149]],["body/classes/Timespan.html",[2,0.082,3,0.075,4,0.062,6,0.301,7,0.829,22,0.435,23,0.005,47,1.848,48,0.074,54,0.172,60,1.752,62,0.944,64,0.815,86,0.004,88,0.923,131,0.004,140,1.905,141,1.302,143,1.027,149,4.13,152,3.087,172,1.446,355,5.014,356,5.633,357,5.957,358,7.532,359,3.053,361,3.469,364,5.262,365,5.633,366,6.946,367,4.59,368,5.633,4005,6.792,4006,8.376,4007,6.792]],["title/components/TimespanButtonComponent.html",[174,0.805,282,1.833]],["body/components/TimespanButtonComponent.html",[2,0.053,3,0.049,4,0.04,6,0.195,21,0.561,22,0.404,23,0.005,24,0.293,29,0.591,31,1.068,38,1.438,48,0.036,54,0.08,57,1.015,60,1.211,62,0.838,64,0.529,66,1.166,79,1.106,86,0.003,88,0.994,98,1.234,131,0.003,136,1.29,140,2.134,141,1.256,143,0.666,166,1.801,174,1.342,175,1.598,176,1.481,177,1.676,178,1.676,182,1.358,183,3.3,184,3.209,185,1.649,186,1.992,189,2.603,191,1.481,192,2.603,195,0.989,196,2.82,198,1.268,199,2.242,200,2.277,201,2.242,202,2.986,203,1.676,204,2.389,205,1.418,206,1.649,207,2.784,208,1.598,209,1.082,210,3.7,211,1.598,212,2.134,213,2.111,214,2.018,215,3.334,216,1.549,217,1.573,218,2.534,219,1.573,220,1.166,221,1.759,222,1.623,223,1.676,224,1.598,225,1.526,226,1.598,227,1.549,228,2.784,229,1.598,230,1.481,231,1.598,232,2.175,233,1.623,234,1.623,235,1.86,236,1.676,237,1.598,238,1.598,239,1.676,240,1.598,241,1.992,242,1.598,243,1.573,244,1.598,245,1.459,246,1.459,247,1.676,248,1.573,249,1.598,250,1.893,251,2.111,252,1.598,253,2.696,254,1.676,255,1.598,256,1.676,257,1.598,258,1.676,259,1.598,260,1.251,261,1.526,262,1.526,263,2.424,264,1.598,265,2.848,266,1.598,267,2.784,268,1.598,269,1.418,270,1.649,271,2.389,272,1.598,273,1.598,274,1.623,275,1.418,276,1.598,277,1.735,278,1.598,279,1.268,280,1.676,281,1.573,282,2.892,283,1.598,284,1.649,285,1.598,286,1.598,287,1.17,288,1.549,289,1.676,531,2.129,2016,5.887,2022,6.613,2741,8.09,3626,3.952,3627,5.207,3628,5.632,3635,3.952,3636,3.952,3637,3.952,3948,6.563,4008,8.09,4009,6.209,4010,7.315,4011,4.405,4012,6.278,4013,6.278,4014,4.405,4015,4.405,4016,4.405,4017,4.405,4018,4.405,4019,4.405]],["title/interfaces/TimespanMomentTemplate.html",[0,0.081,336,3.415]],["body/interfaces/TimespanMomentTemplate.html",[0,0.162,2,0.083,3,0.076,4,0.062,6,0.303,7,0.833,21,0.704,22,0.403,23,0.005,24,0.319,47,1.207,48,0.081,86,0.004,88,1.238,131,0.004,140,2.162,148,3.537,166,1.872,171,1.548,304,1.916,322,5.285,323,4.82,324,4.623,325,4.82,326,2.937,327,5.928,328,4.623,329,4.82,330,4.82,331,5.928,332,4.623,333,4.159,334,3.306,335,4.82,336,6.157,337,5.685,338,4.45]],["title/interfaces/TimespanPreset.html",[0,0.081,331,3.288]],["body/interfaces/TimespanPreset.html",[0,0.161,2,0.079,3,0.073,4,0.06,6,0.292,7,0.813,21,0.701,22,0.449,23,0.005,24,0.307,47,1.162,48,0.08,64,0.986,86,0.004,88,1.337,131,0.004,140,2.271,148,3.404,166,2.023,171,1.639,304,1.844,322,5.161,323,4.639,324,4.449,325,4.639,326,2.827,327,5.827,328,4.449,329,4.639,330,4.639,331,6.102,332,4.449,333,4.003,334,3.182,335,4.639,336,6.338,337,6.523,338,4.283]],["title/components/TimespanShiftSelectorComponent.html",[174,0.805,283,1.833]],["body/components/TimespanShiftSelectorComponent.html",[2,0.05,3,0.046,4,0.038,6,0.184,21,0.277,22,0.372,23,0.005,24,0.281,29,0.557,31,1.008,38,1.358,48,0.034,54,0.075,57,0.958,60,1.162,62,0.894,64,0.499,66,1.315,79,1.071,86,0.003,88,0.962,98,1.165,131,0.003,136,1.238,140,2.208,141,1.271,143,0.629,166,0.855,174,1.313,175,1.508,176,1.398,177,1.582,178,1.582,182,1.282,183,3.295,184,3.198,185,1.557,186,1.911,189,2.691,191,2.025,192,2.894,195,1.591,196,2.499,198,1.197,199,2.151,200,2.185,201,2.151,202,2.908,203,1.582,204,2.292,205,1.338,206,1.557,207,2.695,208,1.508,209,1.021,210,3.66,211,1.508,212,2.066,213,2.025,214,1.973,215,3.27,216,1.463,217,1.485,218,2.453,219,1.485,220,1.119,221,1.687,222,1.532,223,1.582,224,1.508,225,1.441,226,1.508,227,1.463,228,2.695,229,1.508,230,1.398,231,1.508,232,2.087,233,1.532,234,1.532,235,1.812,236,1.582,237,1.508,238,1.508,239,1.582,240,1.508,241,1.911,242,1.508,243,1.485,244,1.508,245,1.378,246,1.378,247,1.582,248,1.485,249,1.508,250,1.833,251,2.025,252,1.508,253,2.61,254,1.582,255,1.508,256,1.582,257,1.508,258,1.582,259,1.508,260,1.181,261,1.441,262,1.441,263,2.346,264,1.508,265,1.485,266,1.508,267,2.695,268,1.508,269,1.338,270,1.557,271,2.292,272,1.508,273,1.508,274,1.532,275,1.338,276,1.508,277,2.375,278,1.508,279,1.197,280,1.582,281,1.485,282,1.508,283,2.817,284,3.796,285,1.508,286,1.508,287,1.105,288,1.463,289,1.582,361,3.216,601,6.44,653,2.318,654,3.358,697,5.229,698,3.449,702,3.271,1413,5.733,1601,3.238,2472,4.691,2473,4.996,2742,8.144,3000,5.733,3161,3.731,3699,5.404,3702,3.731,3938,6.44,4008,8.144,4020,7.083,4021,4.158,4022,4.158,4023,4.158,4024,4.158,4025,4.158,4026,4.158,4027,4.158,4028,4.158]],["title/components/TrajectoryEntryComponent.html",[174,0.805,285,1.833]],["body/components/TrajectoryEntryComponent.html",[2,0.043,3,0.039,4,0.032,6,0.156,7,0.528,21,0.638,22,0.455,23,0.005,24,0.3,29,0.472,31,0.855,38,1.151,48,0.029,54,0.064,57,1.936,60,1.028,62,0.931,64,0.971,66,1.194,79,1.308,86,0.002,88,1.142,98,0.987,131,0.002,136,1.095,140,1.462,141,1.41,143,1.163,146,1.372,166,0.724,171,0.905,172,0.849,174,1.225,175,1.278,176,1.185,177,1.341,178,1.341,182,1.087,183,3.254,184,3.164,185,1.32,186,1.691,189,2.512,191,2.409,192,2.892,195,1.989,196,2.305,198,1.014,199,1.903,200,1.933,201,1.903,202,2.682,203,1.341,204,2.028,205,1.134,206,1.32,207,2.445,208,1.278,209,0.866,210,3.538,211,1.278,212,1.875,213,1.792,214,1.842,215,3.079,216,1.24,217,1.259,218,2.911,219,1.259,220,1.704,221,1.493,222,1.299,223,1.341,224,1.278,225,1.221,226,1.278,227,1.24,228,2.445,229,1.278,230,1.185,231,1.278,232,1.846,233,1.299,234,1.299,235,1.671,236,1.341,237,1.278,238,1.278,239,1.341,240,1.278,241,2.039,242,1.278,243,1.259,244,1.278,245,1.168,246,1.168,247,1.341,248,1.259,249,1.278,250,1.663,251,1.792,252,1.278,253,2.368,254,1.341,255,1.278,256,1.341,257,1.278,258,1.341,259,1.278,260,1.001,261,1.221,262,1.221,263,2.129,264,1.278,265,1.259,266,1.278,267,2.445,268,1.278,269,1.134,270,1.32,271,2.028,272,1.278,273,1.278,274,1.299,275,1.134,276,1.278,277,1.473,278,1.278,279,1.014,280,1.341,281,1.259,282,1.278,283,1.278,284,1.32,285,2.599,286,1.278,287,0.936,288,1.24,289,1.341,304,2.155,414,4.037,691,3.468,692,4.193,759,3.02,779,3.076,781,3.897,873,2.471,899,2.019,1244,2.331,1282,3.602,1670,2.214,1855,5.324,1873,4.745,2391,2.602,2623,2.745,2625,8.099,2932,6.944,2934,2.745,2935,5.941,2936,5.33,2937,4.42,2938,4.42,2939,4.42,2941,3.162,2942,5.004,2945,3.162,2947,2.923,2948,2.923,2950,3.162,2952,3.162,3425,4.42,3427,5.941,3428,4.42,3433,5.941,3435,5.33,3438,5.33,3439,3.162,3442,3.162,3443,3.162,3444,3.162,3448,3.162,3449,3.162,3450,3.162,3451,4.781,3463,3.162,3464,3.162,3465,3.162,3466,3.162,3467,3.162,3469,2.923,3471,3.162,3473,2.745,3569,4.781,4029,9.028,4030,5.329,4031,3.524,4032,5.329]],["title/interfaces/TrajectoryResult.html",[0,0.081,3509,4.191]],["body/interfaces/TrajectoryResult.html",[0,0.145,2,0.092,3,0.085,4,0.07,6,0.339,7,0.891,22,0.431,23,0.005,24,0.357,31,1.856,48,0.062,86,0.004,131,0.004,220,1.833,638,3.368,772,5.82,774,3.755,3509,7.465,4033,7.653,4034,7.653]],["title/classes/UriParameterCoder.html",[54,0.092,2120,4.191]],["body/classes/UriParameterCoder.html",[0,0.059,2,0.044,3,0.04,4,0.033,6,0.162,21,0.702,22,0.349,23,0.005,24,0.459,26,5.779,27,1.539,30,3.761,34,4.047,48,0.044,54,0.119,56,1.889,57,1.68,60,0.704,62,0.961,64,1.221,65,4.876,66,1.016,79,1.377,86,0.003,88,0.991,131,0.003,132,3.051,134,3.275,135,3.275,136,1.125,140,1.777,141,1.046,143,1.102,146,2,148,5.198,151,2.468,152,4.599,172,0.582,214,0.874,220,0.678,221,1.023,250,0.945,260,1.037,311,2.294,347,1.474,364,2.294,524,2.927,574,3.699,587,1.804,624,1.765,638,1.246,779,1.568,887,1.765,1488,4.437,1491,5.079,1492,1.765,1496,6.316,1523,1.728,1524,1.765,1525,1.765,1530,2.092,1534,4.355,1535,5.767,1559,4.539,1563,3.028,1564,4.91,1565,4.91,1576,6.419,1577,3.028,1578,2.696,1579,3.275,1580,3.028,2001,3.438,2002,1.845,2003,1.934,2118,3.275,2120,5.445,2128,3.275,2129,3.275,2134,3.275,2135,3.275,3057,4.91,3772,3.275,3779,3.275,4035,6.565,4036,5.473,4037,5.473,4038,5.473,4039,5.473,4040,5.473,4041,3.651,4042,5.473,4043,3.651,4044,5.473,4045,3.651,4046,5.473,4047,3.651,4048,3.651,4049,3.651,4050,3.651,4051,3.651,4052,3.651,4053,3.651,4054,3.651,4055,3.651,4056,3.651,4057,3.651,4058,3.651,4059,5.473,4060,5.473,4061,3.651,4062,3.651,4063,3.651,4064,5.473,4065,3.651,4066,3.651,4067,5.473,4068,5.473,4069,5.473,4070,3.651,4071,3.651,4072,3.651,4073,3.651,4074,3.651,4075,3.651]],["title/interfaces/YScale.html",[0,0.081,791,3.561]],["body/interfaces/YScale.html",[0,0.076,2,0.012,3,0.011,4,0.009,6,0.195,7,0.175,18,0.535,21,0.553,22,0.084,23,0.005,24,0.205,29,0.129,31,0.233,32,1.365,34,1.215,35,0.853,47,1.627,48,0.008,54,0.017,56,0.508,57,1.349,60,0.185,62,0.372,64,0.364,65,3.923,66,0.743,68,1.698,71,3.112,79,1.193,85,1.625,86,0.001,90,0.496,91,2.65,97,1.497,100,2.973,131,0.001,140,0.691,141,0.138,146,1.535,150,1.011,153,0.603,154,0.624,156,1.977,165,2.073,166,1.452,170,3.278,171,1.221,172,0.281,174,0.39,183,0.3,184,0.292,186,0.304,189,0.799,191,1.598,192,1.159,195,1.139,196,0.568,199,0.63,200,0.888,209,1.08,212,1.036,213,1.021,214,1.053,216,0.338,220,1.45,225,1.052,227,0.338,232,0.332,235,0.412,245,1.176,246,0.585,265,0.343,277,1.988,279,2.315,287,0.943,288,0.621,293,2.619,304,0.494,326,1.525,347,0.797,359,1.345,428,0.624,438,3.969,440,0.304,456,2.458,488,2.31,489,2.704,499,2.675,518,1.933,531,3.814,532,0.747,533,0.747,534,0.747,535,0.747,536,0.747,537,0.747,545,3.083,546,2.34,575,0.464,594,0.603,596,0.603,615,0.584,621,1.614,629,0.934,630,0.454,638,2.494,659,1.593,670,2.875,673,0.676,675,3.693,676,0.676,677,0.649,678,0.55,679,0.984,681,0.436,682,0.566,683,0.566,688,0.535,692,1.438,695,0.603,702,0.958,705,1.655,724,0.676,725,1.148,728,0.747,737,0.603,741,0.676,742,2.502,743,1.374,744,0.584,745,0.676,746,1.909,747,2.082,748,1.741,749,1.073,750,3.699,751,4.127,754,4.779,756,0.584,757,3.322,759,2.369,773,0.747,774,1.156,775,1.108,776,1.489,777,0.603,778,0.649,779,0.758,780,1.041,781,0.818,782,2.231,783,4.484,784,2.945,785,0.796,786,0.796,787,0.796,788,0.796,789,2.621,790,2.366,791,3.776,792,3.745,793,3.51,794,2.031,795,2.519,796,2.031,797,2.031,798,2.704,799,1.192,800,1.463,801,2.031,802,1.192,803,2.031,804,1.148,805,0.649,806,0.649,807,0.796,808,5.354,809,2.519,810,0.796,811,0.796,812,0.796,813,0.709,814,0.709,815,0.624,816,0.796,817,0.796,818,0.796,819,1.489,820,1.374,821,2.519,822,1.192,823,0.649,824,0.649,825,0.796,826,0.709,827,0.796,828,0.796,829,0.709,830,0.709,831,0.796,832,4.124,833,2.031,834,0.796,835,0.796,836,0.796,837,3.656,838,3.574,839,1.463,840,0.796,841,0.676,842,1.297,843,0.603,844,0.709,845,0.984,846,1.655,847,0.676,848,1.073,849,2.675,850,0.709,851,1.303,852,4.884,853,1.808,854,1.303,855,1.303,856,0.709,857,0.709,858,0.709,859,0.709,860,0.796,861,0.709,862,0.709,863,0.796,864,0.796,865,0.796,866,0.796,867,2.776,868,1.243,869,0.709,870,0.709,871,0.747,872,0.796,873,0.818,874,1.073,875,0.603,876,1.463,877,0.796,878,1.808,879,0.796,880,0.709,881,2.621,882,1.108,883,2.621,884,1.808,885,1.303,886,2.954,887,0.853,888,1.303,889,1.303,890,0.709,891,2.945,892,1.463,893,2.031,894,0.584,895,0.584,896,0.747,897,1.463,898,0.796,899,0.55,900,0.796,901,0.566,902,0.709,903,1.463,904,0.796,905,0.796,906,0.796,907,1.463,908,0.796,909,0.584,910,1.463,911,1.463,912,2.519,913,3.318,914,1.463,915,4.207,916,1.463,917,1.463,918,3.943,919,0.584,920,0.584,921,0.796,922,2.031,923,0.584,924,1.073,925,0.709,926,0.796,927,0.584,928,0.796,929,0.796,930,0.566,931,0.796,932,0.709,933,0.649,934,0.676,935,0.584,936,1.463,937,0.796,938,0.796,939,0.709,940,1.303,941,0.796,942,0.796,943,0.796,944,0.796,945,1.374,946,0.796,947,0.55,948,0.747,949,0.796,950,0.796,951,1.374,952,1.463,953,1.108,954,3.1,955,0.603,956,0.747,957,1.655,958,0.796,959,0.796,960,2.519,961,0.796,962,1.463,963,0.747,964,1.463,965,0.796,966,0.649,967,0.796,968,0.796,969,0.796,970,0.796,971,0.796,972,0.796,973,0.796,974,0.796,975,0.796,976,0.796,977,0.796,978,0.796,979,0.796,980,1.881,981,0.796,982,1.808,983,0.747,984,2.4,985,0.747,986,2.031,987,0.796,988,0.649,989,0.796,990,0.796,991,0.796,992,0.796,993,0.796,994,0.796,995,1.374,996,0.796,997,0.796,998,0.796,999,1.463,1000,0.796,1001,2.519,1002,2.031,1003,0.796,1004,0.796,1005,0.796,1006,0.709,1007,1.463,1008,0.796,1009,0.796,1010,0.796,1011,0.365,1012,2.031,1013,2.031,1014,0.796,1015,0.796,1016,0.796,1017,1.463,1018,0.796,1019,1.463,1020,0.796,1021,0.796,1022,0.796,1023,0.796,1024,0.796,1025,0.796,1026,0.796,1027,0.796,1028,2.594,1029,0.796,1030,0.796,1031,2.031,1032,0.796,1033,1.463,1034,1.463,1035,0.796,1036,0.796,1037,1.463,1038,1.463,1039,0.796,1040,0.796,1041,1.463,1042,2.243,1043,2.031,1044,3.51,1045,0.796,1046,0.796,1047,1.463,1048,0.796,1049,0.796,1050,3.798,1051,0.709,1052,2.031,1053,0.796,1054,0.796,1055,0.796,1056,1.243,1057,2.621,1058,0.709,1059,3.957,1060,3.745,1061,2.621,1062,3.745,1063,2.954,1064,1.303,1065,0.796,1066,0.709,1067,0.709,1068,0.709,1069,0.709,1070,0.709,1071,1.303,1072,1.303,1073,0.709,1074,4.631,1075,3.51,1076,1.303,1077,1.303,1078,1.303,1079,1.303,1080,1.808,1081,1.303,1082,0.709,1083,2.243,1084,0.709,1085,2.243,1086,1.808,1087,1.808,1088,2.621,1089,1.303,1090,2.519,1091,0.709,1092,0.676,1093,0.709,1094,1.303,1095,0.796,1096,0.796,1097,1.463,1098,0.796,1099,0.796,1100,0.796,1101,2.031,1102,0.796,1103,0.796,1104,0.796,1105,0.796,1106,0.796,1107,0.796,1108,1.977,1109,0.796,1110,1.463,1111,0.796,1112,0.796,1113,0.796,1114,0.796,1115,0.796,1116,1.463,1117,0.796,1118,0.796,1119,0.796,1120,0.796,1121,0.796,1122,1.374,1123,0.796,1124,0.796,1125,0.796,1126,0.796,1127,0.796,1128,0.603,1129,0.796,1130,1.374,1131,1.463,1132,0.796,1133,0.796,1134,0.796,1135,1.463,1136,1.463,1137,0.709,1138,0.796,1139,0.624,1140,1.463,1141,1.741,1142,0.796,1143,0.747,1144,0.796,1145,0.796,1146,0.796,1147,1.463,1148,1.463,1149,2.519,1150,2.519,1151,3.943,1152,0.796,1153,0.796,1154,3.943,1155,3.318,1156,2.519,1157,2.519,1158,2.945,1159,0.796,1160,2.945,1161,0.796,1162,2.945,1163,2.945,1164,2.031,1165,2.945,1166,3.318,1167,2.366,1168,1.374,1169,0.796,1170,1.463,1171,0.796,1172,0.747,1173,2.945,1174,4.631,1175,0.796,1176,1.463,1177,0.796,1178,2.031,1179,2.031,1180,0.796,1181,1.463,1182,0.796,1183,1.463,1184,0.676,1185,0.796,1186,0.796,1187,0.747,1188,0.796,1189,1.374,1190,1.303,1191,0.796,1192,2.519,1193,0.796,1194,1.303,1195,0.676,1196,1.463,1197,2.945,1198,1.463,1199,0.796,1200,0.796,1201,1.463,1202,2.159,1203,1.909,1204,0.796,1205,0.796,1206,0.796,1207,0.796,1208,1.463,1209,0.731,1210,0.796,1211,0.796,1212,2.053,1213,2.519,1214,2.945,1215,1.463,1216,2.519,1217,1.808,1218,1.463,1219,1.463,1220,1.463,1221,1.463,1222,1.303,1223,0.796,1224,1.374,1225,2.621,1226,1.808,1227,1.303,1228,0.796,1229,1.808,1230,1.538,1231,1.808,1232,0.796,1233,1.808,1234,0.496,1235,0.709,1236,0.796,1237,1.148,1238,1.303,1239,3.248,1240,3.248,1241,0.709,1242,1.365,1243,0.796,1244,2.562,1245,0.796,1246,2.519,1247,1.463,1248,0.796,1249,1.463,1250,0.796,1251,2.031,1252,0.796,1253,1.538,1254,0.709,1255,0.796,1256,0.709,1257,1.303,1258,0.796,1259,0.796,1260,0.796,1261,0.709,1262,0.709,1263,0.709,1264,0.709,1265,0.796,1266,1.303,1267,0.709,1268,0.709,1269,1.463,1270,0.796,1271,1.463,1272,0.796,1273,0.796,1274,0.796,1275,0.796,1276,0.796,1277,0.796,1278,1.463,1279,0.747,1280,0.796,1281,0.796,1282,0.649,1283,0.796,1284,0.796,1285,0.796,1286,0.796,1287,0.796,1288,0.796,1289,0.796,1290,0.796,1291,0.796,1292,0.796,1293,0.796,1294,0.796,1295,0.796,1296,1.463,1297,0.796,1298,0.796,1299,0.796,1300,2.031,1301,0.796,1302,0.796,1303,0.796,1304,0.796,1305,1.463,1306,0.796,1307,0.747,1308,1.148,1309,0.709,1310,2.031,1311,0.796,1312,0.796,1313,0.796,1314,0.796,1315,1.463,1316,0.796,1317,0.747,1318,0.709,1319,0.796,1320,0.709,1321,1.463,1322,0.796,1323,1.463,1324,0.709,1325,0.709,1326,0.796,1327,0.796,1328,0.796,1329,0.796,1330,0.796,1331,0.796,1332,0.709,1333,0.796,1334,0.796,1335,0.709,1336,0.709,1337,0.796,1338,0.709,1339,0.796,1340,0.709,1341,0.796,1342,1.374,1343,0.796,1344,0.709,1345,1.463,1346,1.463,1347,1.463,1348,0.796,1349,3.943,1350,0.709,1351,0.709,1352,0.796,1353,0.796,1354,0.747,1355,0.796,1356,0.796,1357,0.709,1358,1.463,1359,2.519,1360,0.796,1361,0.796,1362,0.796,1363,0.796,1364,0.796,1365,0.796,1366,1.374,1367,0.796,1368,0.796,1369,1.463,1370,0.796,1371,1.463,1372,0.796,1373,0.796,1374,0.796,1375,2.031,1376,1.463,1377,0.796,1378,1.463,1379,0.676,1380,0.796,1381,0.796,1382,1.463,1383,0.709,1384,0.709,1385,1.694,1386,0.796,1387,2.519,1388,2.031,1389,1.463,1390,0.796,1391,0.796,1392,2.031,1393,0.796,1394,1.463,1395,1.463,1396,1.463,1397,2.031,1398,1.463,1399,1.463,1400,0.796,1401,0.796,1402,1.463,1403,0.796,1404,0.796,1405,0.796,1406,1.808,1407,1.303,1408,0.796,1409,0.796,1410,0.709,1411,0.796,1412,0.796,1413,0.709,1414,0.747,1415,0.796,1416,0.796,1417,0.796,1418,0.796,1419,0.796,1420,2.031,1421,1.463,1422,0.796,1423,0.796,1424,0.747,1425,0.796,1426,1.303,1427,2.519,1428,2.945,1429,0.796,1430,0.796,1431,0.796,1432,2.945,1433,0.796,1434,2.433,1435,1.463,1436,1.243,1437,2.031,1438,4.324,1439,0.709,1440,3.51,1441,2.519,1442,1.463,1443,0.796,1444,1.463,1445,1.303,1446,1.463,1447,1.726,1448,0.796,1449,0.796,1450,1.192,1451,0.796,1452,0.709,1453,1.808,1454,1.303,1455,2.031,1456,1.303,1457,0.796,1458,0.709,1459,0.796,1460,1.374,1461,0.796,1462,0.796,1463,0.796,1464,0.709,1465,0.709,1466,0.796,1467,0.709,1468,0.709,1469,0.709,1470,1.808,1471,0.709,1472,2.243,1473,2.243,1474,0.709,1475,0.709,1476,0.709,1477,0.709,1478,0.709,1479,0.709,1480,0.603,1481,1.463,1482,0.796,1483,3.943,1484,0.796,1485,0.796,1486,0.796,1487,0.709]],["title/components/ZoomControlComponent.html",[174,0.805,286,1.833]],["body/components/ZoomControlComponent.html",[2,0.057,3,0.052,4,0.043,6,0.209,21,0.505,22,0.316,23,0.005,24,0.308,29,0.632,38,1.54,48,0.038,54,0.085,57,1.087,60,1.271,62,0.855,64,0.566,66,0.876,79,0.996,86,0.003,88,1.032,98,1.321,131,0.003,136,1.354,140,1.727,141,1.179,143,0.713,166,0.969,174,1.377,175,1.711,176,1.586,177,1.795,178,1.795,182,1.455,183,3.313,184,3.221,185,1.766,186,2.09,195,1.48,196,2.645,198,1.358,199,2.353,200,2.39,201,2.353,202,3.078,203,1.795,204,2.507,205,1.518,206,1.766,207,2.889,208,1.711,209,1.159,210,3.746,211,1.711,212,2.215,213,2.215,214,2.07,215,3.409,216,1.659,217,1.685,218,2.63,219,1.685,220,1.224,221,1.846,222,1.738,223,1.795,224,1.711,225,1.634,226,1.711,227,1.659,228,2.889,229,1.711,230,1.586,231,1.711,232,2.282,233,1.738,234,1.738,235,1.918,236,1.795,237,1.711,238,1.711,239,1.795,240,1.711,241,2.09,242,1.711,243,1.685,244,1.711,245,1.563,246,1.563,247,1.795,248,1.685,249,1.711,250,1.965,251,2.215,252,1.711,253,2.798,254,1.795,255,1.711,256,1.795,257,1.711,258,1.795,259,1.711,260,1.339,261,1.634,262,1.634,263,2.516,264,1.711,265,1.685,266,1.711,267,2.889,268,1.711,269,1.518,270,1.766,271,2.507,272,1.711,273,1.711,274,1.738,275,1.518,276,1.711,277,1.821,278,1.711,279,1.358,280,1.795,281,1.685,282,1.711,283,1.711,284,1.766,285,1.711,286,2.982,287,2.017,288,2.671,289,1.795,422,5.606,426,3.483,427,5.284,478,3.069,2302,3.324,4076,4.717,4077,6.589,4078,8.22,4079,8.22,4080,6.589,4081,4.717,4082,4.717,4083,4.717,4084,4.717]],["title/dependencies.html",[1209,2.519,4085,3.78]],["body/dependencies.html",[23,0.005,29,0.851,33,3.361,54,0.115,86,0.004,131,0.004,150,3.636,209,1.559,212,1.851,232,2.198,311,5.043,477,3.361,1209,2.628,1993,4.941,1999,3.636,2002,4.675,2003,3.361,2147,4.471,2569,2.829,2627,4.685,2698,5.692,2708,5.262,3274,5.262,3941,7.202,3957,5.692,4086,6.345,4087,10.113,4088,6.345,4089,8.027,4090,6.345,4091,6.345,4092,5.692,4093,8.027,4094,7.202,4095,6.345,4096,6.345,4097,6.345,4098,6.345,4099,6.345,4100,5.262,4101,5.262,4102,6.345,4103,6.345,4104,8.027,4105,6.345,4106,6.345,4107,6.345,4108,6.345,4109,6.345,4110,6.345,4111,6.345,4112,6.345,4113,6.345,4114,6.345,4115,6.345,4116,6.345,4117,6.345,4118,6.345,4119,6.345,4120,6.345,4121,6.345,4122,6.345,4123,4.941,4124,6.345,4125,6.345,4126,6.345,4127,6.345,4128,6.345,4129,6.345,4130,6.345,4131,5.692,4132,4.288,4133,6.345,4134,6.345,4135,6.345,4136,6.345,4137,6.345,4138,6.345,4139,6.345,4140,6.345,4141,6.345,4142,6.345,4143,8.027,4144,6.345,4145,6.345,4146,6.345]],["title/miscellaneous/enumerations.html",[4147,2.969,4148,5.455]],["body/miscellaneous/enumerations.html",[2,0.083,6,0.304,23,0.004,86,0.004,131,0.004,263,2.274,277,1.897,347,2.36,621,3.12,625,2.612,669,5.345,674,6.565,675,4.259,985,5.345,1184,4.837,1195,4.837,1493,6.565,1494,4.359,1503,4.972,1534,3.827,1535,5.068,1536,7.563,1542,6.992,1546,6.158,1547,6.158,1919,6.565,2017,6.158,2018,7.563,2022,6.992,2025,6.158,2026,6.158,2027,7.563,2028,7.563,2029,7.563,2030,7.563,2031,7.563,2032,7.563,2033,7.563,2034,7.563,2035,7.563,3418,5.693,3421,7.563,3672,7.106,4147,4.837,4148,6.158,4149,6.864,4150,9.516,4151,6.864,4152,9.125,4153,6.864,4154,6.864,4155,6.864,4156,8.431,4157,8.431,4158,6.864,4159,6.864,4160,6.864]],["title/miscellaneous/functions.html",[531,2.94,4147,2.969]],["body/miscellaneous/functions.html",[6,0.342,22,0.433,23,0.005,64,1.151,86,0.004,88,1.304,131,0.004,143,1.45,438,5.181,499,4.691,531,3.729,723,6.676,2304,5.436,2357,5.696,2358,5.696,4147,5.436,4161,9.043,4162,8.112,4163,9.043,4164,7.714,4165,7.714,4166,7.714,4167,7.714]],["title/index.html",[6,0.187,1385,2.349,3814,3.281]],["body/index.html",[3,0.063,4,0.052,7,0.565,23,0.005,28,1.298,34,2.999,48,0.046,86,0.004,131,0.004,150,3.27,174,0.909,235,1.332,250,1.94,334,3.624,440,1.811,489,3.857,490,5.091,546,1.891,596,3.586,599,4.022,621,2.595,747,3.963,753,6.944,837,3.713,873,3.477,954,4.022,980,4.435,1209,3.683,1212,3.857,1317,5.839,1385,4.18,1436,4.022,1541,6.287,1919,4.445,1976,5.283,2094,4.214,2136,1.712,2141,2.103,2415,3.857,2764,6.218,3178,5.283,3183,7.511,3375,4.214,3405,5.12,3814,4.445,4085,5.12,4131,5.12,4132,5.067,4168,5.535,4169,5.12,4170,6.726,4171,6.52,4172,5.9,4173,6.508,4174,5.707,4175,6.819,4176,7.321,4177,3.857,4178,4.214,4179,5.12,4180,5.707,4181,5.707,4182,5.707,4183,7.497,4184,4.733,4185,5.707,4186,5.707,4187,4.214,4188,9.916,4189,6.182,4190,5.707,4191,7.497,4192,5.12,4193,7.497,4194,5.12,4195,5.535,4196,5.12,4197,5.707,4198,5.707,4199,7.511,4200,5.707,4201,5.707,4202,4.733,4203,7.497,4204,5.707,4205,5.12,4206,9.235,4207,7.497,4208,5.707,4209,5.707,4210,5.707,4211,8.373,4212,5.12,4213,5.707,4214,5.707,4215,6.218,4216,6.726,4217,5.12,4218,5.707,4219,5.707,4220,5.12,4221,5.707,4222,5.707,4223,5.707,4224,4.445,4225,6.218,4226,5.707,4227,4.445,4228,4.733,4229,5.707,4230,4.214,4231,7.497,4232,5.707,4233,5.707,4234,5.707,4235,5.707,4236,5.707,4237,5.707,4238,5.707,4239,5.707,4240,5.707,4241,5.707]],["title/license.html",[1385,2.349,1531,2.414,3814,3.281]],["body/license.html",[0,0.049,3,0.099,4,0.077,18,3.694,22,0.146,23,0.002,24,0.142,68,1.698,73,5.812,86,0.003,88,0.796,131,0.002,141,0.436,155,5.495,191,1.022,201,2.366,241,0.964,250,0.786,288,2.529,317,4.266,334,2.832,361,1.259,379,3.094,428,1.977,438,4.369,456,1.329,484,4.562,486,7.193,490,5.274,492,7.675,549,5.944,612,2.726,629,4.039,747,2.251,752,2.726,819,1.848,837,1.977,838,4.669,846,2.054,867,1.501,887,1.469,947,1.741,948,3.703,980,2.519,983,6.994,984,2.054,1011,1.156,1056,2.142,1194,2.244,1202,1.848,1203,1.909,1212,2.054,1237,3.811,1242,1.694,1307,2.367,1357,2.244,1414,4.562,1436,2.142,1447,2.142,1523,2.251,1531,5.71,1541,3.094,1827,2.244,1843,3.511,1915,4.266,1993,2.367,2141,3.04,2153,2.142,2233,3.511,2234,2.244,2415,2.054,2837,2.726,2907,2.726,3213,2.726,3301,2.726,3322,2.726,3348,2.52,3358,2.367,3365,5.944,3368,2.726,3370,4.266,3375,2.244,3395,4.266,3396,2.52,3816,6.325,3938,2.52,4171,2.367,4177,3.214,4179,4.266,4187,4.325,4196,2.726,4199,5.944,4205,2.726,4212,4.266,4215,2.52,4217,4.266,4227,2.367,4230,2.244,4242,3.039,4243,3.039,4244,3.039,4245,3.039,4246,8.839,4247,6.626,4248,8.839,4249,5.858,4250,9.313,4251,3.944,4252,4.755,4253,8.673,4254,8.673,4255,7.192,4256,8.839,4257,8.248,4258,7.192,4259,3.039,4260,5.858,4261,7.626,4262,2.726,4263,7.626,4264,3.039,4265,4.755,4266,4.755,4267,9.547,4268,4.755,4269,3.039,4270,4.755,4271,3.039,4272,3.039,4273,2.726,4274,3.039,4275,3.039,4276,3.039,4277,5.858,4278,4.755,4279,5.858,4280,9.106,4281,3.039,4282,6.325,4283,9.106,4284,3.039,4285,2.52,4286,3.039,4287,3.039,4288,3.039,4289,3.039,4290,5.858,4291,4.755,4292,9.313,4293,3.039,4294,3.039,4295,9.611,4296,3.039,4297,3.039,4298,3.039,4299,4.266,4300,3.039,4301,3.039,4302,3.039,4303,6.626,4304,8.248,4305,5.154,4306,4.755,4307,7.192,4308,4.755,4309,7.192,4310,4.755,4311,3.039,4312,3.039,4313,5.255,4314,3.039,4315,4.755,4316,3.039,4317,3.039,4318,3.039,4319,4.858,4320,3.039,4321,4.755,4322,3.039,4323,5.858,4324,3.039,4325,3.039,4326,4.755,4327,7.97,4328,4.755,4329,4.755,4330,4.755,4331,4.755,4332,5.858,4333,4.755,4334,5.858,4335,4.755,4336,4.755,4337,5.858,4338,4.755,4339,3.944,4340,3.039,4341,7.97,4342,4.755,4343,4.755,4344,3.039,4345,3.039,4346,5.858,4347,5.858,4348,3.039,4349,5.858,4350,5.858,4351,3.039,4352,3.039,4353,4.755,4354,3.039,4355,3.039,4356,3.039,4357,3.039,4358,3.039,4359,3.039,4360,2.726,4361,5.858,4362,6.626,4363,3.039,4364,3.039,4365,6.626,4366,3.039,4367,3.039,4368,3.039,4369,3.039,4370,5.858,4371,4.755,4372,3.039,4373,3.039,4374,3.039,4375,3.039,4376,3.039,4377,3.039,4378,3.039,4379,3.039,4380,3.039,4381,3.039,4382,3.039,4383,3.039,4384,3.039,4385,3.039,4386,5.858,4387,3.039,4388,3.039,4389,3.039,4390,3.039,4391,3.039,4392,3.039,4393,3.039,4394,3.039,4395,3.039,4396,3.039,4397,7.626,4398,4.755,4399,5.858,4400,3.039,4401,3.039,4402,3.039,4403,3.039,4404,3.039,4405,3.039,4406,4.755,4407,2.726,4408,3.039,4409,3.039,4410,3.039,4411,3.039,4412,7.192,4413,3.039,4414,3.039,4415,4.755,4416,3.039,4417,3.039,4418,3.039,4419,7.192,4420,3.039,4421,3.039,4422,3.039,4423,3.039,4424,3.039,4425,3.039,4426,4.755,4427,3.039,4428,3.039,4429,3.039,4430,3.039,4431,3.039,4432,3.039,4433,3.039,4434,5.495,4435,3.039,4436,3.039,4437,3.039,4438,4.755,4439,3.039,4440,3.039,4441,3.039,4442,3.039,4443,3.039,4444,3.039,4445,3.039,4446,3.039]],["title/modules.html",[2136,2.072]],["body/modules.html",[23,0.004,86,0.004,131,0.004,670,3.982,1122,8.233,1436,5.928,2136,2.051,2137,5.673,2562,5.673,2568,5.326,2579,3.813,2595,5.05,2602,5.05,2611,5.05,2617,4.623,2628,5.326,2637,5.326,2653,5.326,2659,4.623,2673,5.326,2683,5.326,2691,5.326,2702,5.326,2715,5.326,2721,5.326,2733,5.326,2743,5.326,4094,9.485,4230,7.806,4447,10.607]],["title/overview.html",[213,2.323]],["body/overview.html",[0,0.053,23,0.005,28,0.743,48,0.027,54,0.059,68,1.167,86,0.002,131,0.002,174,0.52,175,2.969,198,0.941,205,3.244,208,2.969,211,2.969,213,1.099,216,2.879,217,2.923,219,2.923,222,3.016,224,2.969,231,2.969,233,3.016,234,3.016,238,2.969,240,2.969,244,2.969,248,2.923,261,2.835,269,3.244,272,2.969,273,2.969,275,3.244,277,1.695,278,2.969,287,1.336,319,2.413,427,3.617,659,3.991,781,2.845,848,1.987,1011,1.244,1209,1.354,1533,4.529,1962,3.73,1991,6.374,2016,4.529,2136,1.509,2140,1.403,2141,1.204,2278,1.43,2309,3.854,2383,4.529,2568,7.013,2569,1.457,2570,2.932,2571,2.932,2572,2.932,2579,5.648,2580,2.932,2581,2.932,2582,2.932,2583,2.932,2584,4.777,2595,6.834,2596,2.932,2597,2.932,2599,2.932,2602,6.043,2603,2.932,2604,2.932,2606,2.932,2611,7.088,2612,2.932,2614,2.932,2616,2.932,2617,5.981,2618,4.777,2628,7.357,2629,2.932,2632,2.932,2633,4.777,2637,6.892,2638,2.932,2639,2.932,2641,2.932,2644,2.932,2645,2.932,2646,2.932,2647,2.932,2648,4.529,2653,7.476,2654,2.932,2656,2.932,2658,2.932,2659,6.44,2660,4.529,2668,2.932,2671,2.932,2673,7.357,2674,2.932,2683,6.374,2684,2.932,2685,2.932,2687,2.932,2691,7.42,2692,2.932,2693,2.932,2695,2.932,2702,7.013,2703,2.932,2715,6.374,2716,2.932,2717,2.932,2719,2.932,2721,7.778,2722,2.932,2723,2.932,2725,2.932,2726,2.932,2727,4.322,2728,4.529,2733,7.208,2734,2.932,2743,6.374,2744,2.932,2745,2.932,2746,2.932,2747,2.932,2748,4.529,4448,3.268,4449,3.268,4450,3.268,4451,3.268]],["title/miscellaneous/variables.html",[4147,2.969,4452,5.043]],["body/miscellaneous/variables.html",[6,0.151,21,0.655,22,0.496,23,0.005,47,1.579,66,0.632,86,0.002,131,0.002,146,1.616,174,1.593,205,1.094,214,1.505,226,1.233,229,1.233,235,1.641,237,1.233,242,1.233,243,1.214,252,1.233,255,1.233,257,1.233,259,1.233,263,2.644,264,1.233,266,1.233,268,1.233,269,1.094,274,1.253,275,1.094,276,1.233,279,0.979,281,1.214,282,1.233,283,1.233,285,1.233,286,1.233,347,2.327,393,3.05,394,6.31,440,3.288,479,5.64,480,3.05,481,5.64,482,3.05,483,5.64,484,2.648,485,3.05,486,2.82,546,3.179,678,4.756,845,1.896,867,1.68,1242,1.896,1379,4.956,1534,2.891,1862,3.05,1863,4.653,1909,2.511,1920,3.05,2143,2.511,2144,2.396,2149,4.642,2150,4.642,2151,4.642,2152,4.642,2153,2.396,2304,2.396,2305,4.642,2306,2.298,2307,4.642,2308,2.396,2382,2.82,2455,3.05,2456,2.82,2564,4.43,2573,3.05,2619,3.05,2620,2.511,2634,3.05,2649,2.648,2661,3.05,2672,3.05,2678,3.05,2706,3.05,2738,3.05,2749,2.648,2763,2.511,2771,2.511,2798,4.301,2800,5.214,2801,2.82,2879,4.653,3091,3.05,3102,5.64,3103,3.05,3104,5.64,3105,3.05,3106,5.64,3173,3.05,3178,2.396,3179,5.64,3180,3.05,4147,2.396,4162,4.653,4187,7.71,4452,2.82,4453,3.4,4454,3.4,4455,3.4,4456,3.4,4457,3.4,4458,3.4,4459,6.287,4460,3.4,4461,10.442,4462,10.217,4463,6.287,4464,3.4,4465,3.4,4466,5.186,4467,3.4,4468,7.033,4469,6.287,4470,3.4,4471,9.596,4472,9.596,4473,3.4,4474,3.4,4475,3.4,4476,3.4,4477,3.4,4478,3.4,4479,3.4,4480,3.4,4481,3.4,4482,3.4,4483,3.4,4484,3.4,4485,3.4,4486,3.4,4487,3.4]],["title/additional-documentation/introduction.html",[4132,2.848,4305,2.848,4488,3.78]],["body/additional-documentation/introduction.html",[0,0.098,23,0.004,24,0.365,28,1.382,32,3.387,34,3.124,61,3.3,82,4.486,86,0.004,131,0.004,146,2.058,166,1.249,174,1.562,182,1.874,183,1.9,209,1.492,212,1.773,214,2.066,218,2.105,220,1.891,230,2.625,232,2.705,235,2.013,241,1.927,243,2.17,250,2.537,251,2.043,253,2.877,262,2.105,263,2.013,277,1.679,287,1.614,288,3.035,304,1.702,344,4.106,359,2.043,369,4.037,377,4.281,379,3.953,428,5.08,477,3.218,488,3.953,587,3.857,596,3.817,638,2.665,670,4.311,747,4.084,748,3.481,753,5.039,759,3.292,781,2.818,815,3.953,837,3.953,873,4.369,982,5.765,1011,2.312,1141,5.218,1244,2.658,1308,3.953,1827,4.486,1835,5.077,1918,6.371,1976,4.281,1988,4.486,2136,2.588,2147,4.281,2764,6.476,2802,6.476,2805,6.476,2866,5.451,3073,5.451,3487,4.486,3627,5.039,4123,4.731,4168,4.486,4169,5.451,4170,7.005,4171,6.719,4172,4.281,4173,4.281,4177,4.106,4189,4.486,4194,5.451,4230,4.486,4282,6.476,4299,5.451,4313,5.451,4339,5.039,4488,5.451,4489,6.076,4490,6.076,4491,6.076,4492,5.451,4493,6.076,4494,6.076,4495,6.076,4496,6.076,4497,6.076,4498,6.076,4499,6.076,4500,6.076,4501,5.039,4502,6.076]],["title/additional-documentation/how-tos.html",[4132,2.848,4305,2.848,4503,3.78]],["body/additional-documentation/how-tos.html",[23,0.004,66,1.681,86,0.004,88,0.916,131,0.004,172,1.074,174,1.506,212,2.433,214,2.167,241,2.14,243,2.409,326,2.896,456,3.648,488,5.891,492,4.979,588,6.05,599,4.752,621,3.066,699,4.979,815,4.388,947,3.864,1128,5.239,1141,3.864,1187,5.252,1244,2.95,1357,4.979,1385,5.047,1988,4.979,2136,2.023,2250,5.636,3000,4.979,3178,6.665,3303,6.05,4009,5.252,4168,4.979,4172,4.752,4173,6.849,4175,6.684,4176,6.157,4177,4.558,4178,4.979,4189,4.979,4192,6.05,4195,7.409,4216,8.122,4220,7.481,4224,5.252,4360,6.05,4503,8.122,4504,6.38,4505,7.895,4506,5.593,4507,6.05,4508,6.744,4509,5.252,4510,6.744,4511,6.744,4512,6.05,4513,6.744,4514,6.744,4515,6.744,4516,5.252,4517,6.744,4518,6.744,4519,6.744]],["title/additional-documentation/how-tos/integrate-a-d3-timeseries-component.html",[174,0.448,212,0.82,214,0.673,4132,1.9,4305,1.9,4504,1.981]],["body/additional-documentation/how-tos/integrate-a-d3-timeseries-component.html",[4,0.033,21,0.361,22,0.312,23,0.005,24,0.441,27,1.519,31,1.579,33,3.45,48,0.053,54,0.098,56,2.085,60,0.695,61,1.957,62,0.787,64,0.869,66,1.443,68,1.287,71,2.628,79,0.545,86,0.003,91,2.898,131,0.003,140,1.926,141,0.777,171,0.612,172,0.574,174,1.446,184,1.648,201,2.774,209,2.189,212,2.69,214,2.173,220,1.443,235,1.264,245,2.573,246,2.573,279,1.875,287,0.957,300,3.732,326,3.111,334,4.457,347,1.744,385,4.22,387,2.191,440,1.719,456,3.169,487,1.957,490,5.148,492,4.809,518,1.051,531,4.211,546,2.158,594,2.264,595,4.22,596,2.264,599,3.819,621,1.638,638,2.223,670,4.297,675,4.401,692,3.083,705,4.402,717,1.78,718,3.233,725,2.345,737,2.264,741,2.539,744,2.191,745,3.819,747,2.565,748,3.105,754,2.539,756,3.295,757,4.72,759,3.275,779,2.797,804,2.345,814,4.001,815,5.054,819,2.191,820,2.806,837,2.345,838,3.819,842,1.909,852,2.806,867,1.78,868,5.474,873,1.671,887,3.945,947,2.065,954,4.59,980,4.72,984,2.435,1011,1.371,1056,2.539,1128,4.092,1130,2.806,1141,2.065,1167,2.806,1168,2.806,1172,4.22,1209,3.691,1244,2.849,1309,4.001,1342,2.806,1366,2.806,1379,2.539,1385,4.039,1827,4.001,1849,2.66,2002,3.924,2003,1.909,2007,2.989,2136,1.081,2139,2.464,2140,1.547,2141,3.21,2220,2.66,2250,2.435,2567,4.22,2569,1.607,2595,4.809,2609,4.001,3178,5.966,3348,4.494,3351,3.233,3358,2.806,3375,2.66,3396,2.989,3487,4.001,3770,5.072,3792,3.233,3926,5.072,4009,2.806,4100,4.494,4101,5.402,4123,2.806,4168,4.001,4171,2.806,4172,2.539,4173,2.539,4175,2.66,4176,4.809,4177,5.722,4178,2.66,4184,4.494,4187,2.66,4189,4.001,4195,5.349,4202,4.494,4215,2.989,4224,2.806,4225,2.989,4227,5.072,4228,2.989,4251,2.989,4282,2.989,4285,2.989,4305,2.435,4319,2.989,4407,3.233,4434,2.989,4452,4.494,4501,2.989,4504,5.105,4505,6.94,4506,2.989,4509,5.641,4516,4.22,4520,2.989,4521,3.233,4522,4.862,4523,3.603,4524,3.603,4525,5.419,4526,3.233,4527,4.862,4528,4.862,4529,3.233,4530,3.233,4531,3.233,4532,3.233,4533,4.862,4534,3.233,4535,5.402,4536,3.233,4537,3.233,4538,3.233,4539,3.233,4540,3.233,4541,3.233,4542,3.233,4543,3.233,4544,3.233,4545,3.233,4546,3.233,4547,3.233,4548,3.233,4549,3.233,4550,3.233,4551,3.233,4552,3.233,4553,3.233,4554,3.233,4555,3.233,4556,3.603,4557,3.603,4558,3.233,4559,4.862,4560,3.603,4561,3.603,4562,3.603,4563,3.233,4564,3.603,4565,4.862,4566,3.603,4567,3.603,4568,3.603,4569,3.603,4570,3.603,4571,3.603,4572,3.603,4573,5.419,4574,3.603,4575,3.603,4576,3.603,4577,5.419,4578,3.603,4579,3.603,4580,3.603,4581,3.603,4582,3.233,4583,3.603,4584,3.233,4585,3.233,4586,3.603,4587,3.603,4588,3.603,4589,6.513,4590,3.603]],["title/additional-documentation/how-tos/integrate-a-table-component.html",[174,0.504,1988,2.335,4132,2.137,4305,2.137,4504,2.228]],["body/additional-documentation/how-tos/integrate-a-table-component.html",[4,0.039,22,0.347,23,0.005,24,0.453,27,1.824,31,1.503,33,3.836,48,0.059,54,0.112,56,2.084,60,0.835,61,2.349,62,0.673,64,0.519,66,1.618,68,1.545,71,1.569,79,0.654,85,0.947,86,0.003,91,1.731,131,0.003,140,1.799,141,1.134,143,0.654,146,0.923,172,0.689,174,1.461,184,1.885,201,2.824,209,1.779,220,1.555,235,1.446,300,4.149,326,2.661,334,4.435,456,1.892,487,2.349,490,5.09,492,5.347,531,4.21,594,2.718,595,4.826,596,2.718,599,4.367,621,3.292,638,1.476,691,2.815,692,3.962,717,2.137,779,3.11,814,3.194,815,4.712,819,2.631,845,3.455,867,2.137,868,5.103,887,4.21,947,2.479,980,4.751,984,2.924,1011,1.646,1056,3.049,1128,4.55,1141,3.551,1209,3.926,1309,3.194,1385,4.409,1827,3.194,1835,2.412,1988,7.156,2002,4.229,2003,2.291,2007,3.588,2136,1.859,2139,2.817,2140,1.858,2141,3.21,2250,4.189,2567,4.826,2569,1.929,2602,5.347,2609,4.576,2643,3.369,3178,6.138,3358,3.369,3375,3.194,3487,4.576,3770,5.64,3926,5.64,4100,5.14,4101,6.006,4123,3.369,4168,4.576,4172,3.049,4173,3.049,4175,3.194,4176,5.839,4177,5.886,4178,3.194,4184,5.14,4187,3.194,4189,3.194,4195,5.839,4202,5.14,4224,3.369,4225,3.588,4227,4.826,4228,3.588,4251,3.588,4285,3.588,4319,3.588,4434,3.588,4492,3.881,4501,3.588,4504,5.898,4505,7.145,4506,3.588,4509,6.518,4512,3.881,4516,4.826,4520,3.588,4521,3.881,4522,3.881,4526,3.881,4527,5.56,4528,5.56,4529,3.881,4530,3.881,4531,3.881,4532,3.881,4533,5.56,4534,3.881,4535,6.006,4536,3.881,4537,3.881,4538,3.881,4539,3.881,4540,3.881,4541,3.881,4542,3.881,4543,3.881,4544,3.881,4545,3.881,4546,3.881,4547,3.881,4548,3.881,4549,3.881,4550,3.881,4551,3.881,4552,3.881,4553,3.881,4554,3.881,4555,3.881,4559,5.56,4565,3.881,4582,3.881,4584,3.881,4585,3.881,4591,4.326,4592,4.326,4593,6.198,4594,4.326,4595,4.326,4596,4.326,4597,4.326,4598,4.326,4599,4.326,4600,4.326,4601,6.198,4602,4.326,4603,4.326,4604,4.326,4605,4.326,4606,4.326,4607,4.326,4608,4.326,4609,4.326,4610,4.326,4611,4.326,4612,4.326,4613,3.881,4614,4.326,4615,3.881,4616,4.326,4617,3.881]],["title/additional-documentation/how-tos/extend-a-timeseries-entry-component.html",[172,0.448,174,0.448,214,0.673,1244,1.23,4132,1.9,4305,1.9]],["body/additional-documentation/how-tos/extend-a-timeseries-entry-component.html",[21,0.494,23,0.005,24,0.441,28,1.689,31,1.098,48,0.037,54,0.165,60,0.874,62,0.751,64,0.768,66,1.642,68,2.884,79,0.685,86,0.003,90,2.342,131,0.003,136,1.659,143,0.685,146,1.585,153,2.845,154,2.947,170,2.189,171,0.769,172,1.557,174,1.58,176,2.497,184,1.377,199,2.653,201,1.618,212,1.321,214,2.39,220,1.379,241,2.702,281,1.618,314,4.063,326,2.749,364,2.845,456,2.801,488,5.253,489,3.061,490,3.894,595,4.986,596,2.845,599,3.192,692,2.144,717,2.237,747,3.031,754,5.689,759,3.132,815,2.947,819,2.754,841,3.192,842,2.399,846,4.328,847,3.192,849,3.894,867,2.237,868,3.192,947,2.595,954,5.234,980,5.342,984,3.061,1128,4.023,1141,2.595,1212,3.061,1242,2.525,1244,4.31,1282,3.061,1447,3.192,1541,2.947,1698,5.311,2140,1.945,2141,2.737,2567,3.527,2611,5.484,2643,5.784,2885,6.003,3393,4.063,3473,3.527,3487,3.344,3550,4.063,3551,4.063,3610,4.063,3691,4.063,3816,3.756,3926,3.527,4009,3.527,4092,4.063,4172,3.192,4173,4.512,4175,4.728,4176,5.484,4177,3.061,4178,3.344,4195,4.728,4230,3.344,4262,4.063,4273,4.063,4339,3.756,4504,5.234,4505,6.287,4507,4.063,4509,6.287,4516,4.986,4520,3.756,4535,6.16,4558,4.063,4563,4.063,4613,4.063,4615,5.744,4617,4.063,4618,6.403,4619,8.843,4620,4.529,4621,4.529,4622,4.529,4623,4.529,4624,7.428,4625,4.529,4626,7.428,4627,4.529,4628,4.529,4629,6.403,4630,4.529,4631,4.529,4632,4.529,4633,7.428,4634,4.529,4635,4.529,4636,4.529,4637,4.529,4638,4.529,4639,4.529,4640,4.529,4641,4.529,4642,8.074,4643,4.529,4644,4.529,4645,4.529,4646,4.529,4647,4.529,4648,4.529,4649,4.529,4650,4.529,4651,4.529,4652,4.529,4653,4.529,4654,4.529,4655,4.529,4656,4.529,4657,4.529,4658,6.403,4659,4.529,4660,4.529,4661,6.403,4662,4.529,4663,4.529,4664,4.529,4665,4.529,4666,4.529,4667,4.529,4668,4.529,4669,4.529,4670,4.529,4671,4.529,4672,4.529,4673,4.529,4674,4.529,4675,4.529]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/Feature.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Offering.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["0",{"_index":71,"title":{},"body":{"interfaces/Address.html":{},"classes/CachedMapComponent.html":{},"injectables/ColorService.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetService.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/FilteredParameter.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"injectables/JsonFavoriteExporterService.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValueOption.html":{},"interfaces/ScatterData.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/SingleFavorite.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["0.0.31",{"_index":4108,"title":{},"body":{"dependencies.html":{}}}],["0.0001",{"_index":1442,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["0.05",{"_index":2265,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["0.06",{"_index":2262,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["0.1",{"_index":2259,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["0.1.9",{"_index":4122,"title":{},"body":{"dependencies.html":{}}}],["0.10",{"_index":1254,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["0.2",{"_index":1681,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["0.3",{"_index":1145,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["0.4",{"_index":1272,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["0.5.0",{"_index":4130,"title":{},"body":{"dependencies.html":{}}}],["0.65",{"_index":3506,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["0.8.26",{"_index":4146,"title":{},"body":{"dependencies.html":{}}}],["0123456789abcdef",{"_index":667,"title":{},"body":{"injectables/ColorService.html":{}}}],["0x10000",{"_index":535,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["1",{"_index":68,"title":{},"body":{"interfaces/Address.html":{},"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetService.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"injectables/LabelMapperService.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"interfaces/MinMaxRange.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"classes/PermalinkService.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"interfaces/ScatterData.html":{},"components/ServiceSelectorComponent.html":{},"injectables/StatusCheckService.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{},"license.html":{},"overview.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["1.0.3",{"_index":4116,"title":{},"body":{"dependencies.html":{}}}],["1.1.3",{"_index":4098,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":4133,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":4114,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":4138,"title":{},"body":{"dependencies.html":{}}}],["1.3.1",{"_index":4137,"title":{},"body":{"dependencies.html":{}}}],["1.38.1",{"_index":4120,"title":{},"body":{"dependencies.html":{}}}],["1.38.3",{"_index":4142,"title":{},"body":{"dependencies.html":{}}}],["1.5",{"_index":1723,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["10",{"_index":845,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"injectables/JsonFavoriteExporterService.html":{},"interfaces/Layout.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["10.0.2",{"_index":4099,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":882,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["1000",{"_index":822,"title":{},"body":{"interfaces/DataConst.html":{},"injectables/DefinedTimespanService.html":{},"interfaces/HighlightDataset.html":{},"components/RefreshButtonComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/Time.html":{},"interfaces/YScale.html":{}}}],["100000000",{"_index":4573,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["10800000",{"_index":818,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["11",{"_index":1200,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["12",{"_index":1208,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["123",{"_index":4499,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["123456",{"_index":4569,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["13",{"_index":1468,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["1].dist",{"_index":1820,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["1].i",{"_index":1368,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["1].tick",{"_index":1824,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["1].timestamp",{"_index":1822,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["1em",{"_index":1264,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["1px",{"_index":1082,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["2",{"_index":867,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"injectables/Time.html":{},"interfaces/YScale.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["2.0",{"_index":4243,"title":{},"body":{"license.html":{}}}],["2.13.0",{"_index":4118,"title":{},"body":{"dependencies.html":{}}}],["2.22.2",{"_index":4139,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":4125,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":4616,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["20",{"_index":4448,"title":{},"body":{"overview.html":{}}}],["2004http://www.apache.org/licens",{"_index":4245,"title":{},"body":{"license.html":{}}}],["234",{"_index":3389,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["24t01:49:59.000z').gettim",{"_index":4602,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["25t01:49:59.000z').gettim",{"_index":4603,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["27",{"_index":4449,"title":{},"body":{"overview.html":{}}}],["274344771",{"_index":4223,"title":{},"body":{"index.html":{}}}],["28",{"_index":4571,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["2f",{"_index":2237,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["2r",{"_index":2255,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["3",{"_index":819,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["3.0.1",{"_index":4102,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":4134,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":4112,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1224,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/PlotOptions.html":{},"interfaces/YScale.html":{}}}],["3000",{"_index":3180,"title":{},"body":{"injectables/NotifierService.html":{},"miscellaneous/variables.html":{}}}],["30000",{"_index":3119,"title":{},"body":{"injectables/LocateService.html":{}}}],["321",{"_index":3391,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["34",{"_index":3390,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["3600",{"_index":821,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["3600000",{"_index":1214,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["38",{"_index":4450,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1212,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/YScale.html":{},"index.html":{},"license.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["4.0.0",{"_index":4136,"title":{},"body":{"dependencies.html":{}}}],["4.13.0",{"_index":4126,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":4129,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":848,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"overview.html":{}}}],["47",{"_index":1205,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["48",{"_index":1199,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["5",{"_index":1242,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["5.0.0",{"_index":4106,"title":{},"body":{"dependencies.html":{}}}],["5.3.1",{"_index":4141,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":4273,"title":{},"body":{"license.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["500px",{"_index":4632,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["6",{"_index":2153,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["6.0.9",{"_index":4087,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":4143,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":4089,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3648,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["7",{"_index":1194,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["7.0",{"_index":4180,"title":{},"body":{"index.html":{}}}],["7200000",{"_index":1211,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["7946.0.3",{"_index":4110,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":2837,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{},"license.html":{}}}],["9",{"_index":4252,"title":{},"body":{"license.html":{}}}],["9.1.3",{"_index":4140,"title":{},"body":{"dependencies.html":{}}}],["9.9.0",{"_index":4104,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":1262,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["92",{"_index":4451,"title":{},"body":{"overview.html":{}}}],["__",{"_index":2801,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"miscellaneous/variables.html":{}}}],["_basemap",{"_index":399,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["_blank",{"_index":2846,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{},"components/PermalinkNewWindowComponent.html":{}}}],["_d",{"_index":3411,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["_differbasemap",{"_index":400,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["_differoverlaymap",{"_index":401,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["_overlaymap",{"_index":402,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["a.click",{"_index":2849,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["a.download",{"_index":2847,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["a.href",{"_index":2842,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["a.i",{"_index":1363,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["a.idx",{"_index":1373,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["a.label",{"_index":3720,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["a.target",{"_index":2845,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["a```bash",{"_index":4636,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["abov",{"_index":3396,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["abstract",{"_index":152,"title":{},"body":{"classes/ApiInterface.html":{},"classes/BufferedTime.html":{},"classes/CachedMapComponent.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"classes/EventingApiService.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"classes/HttpCache.html":{},"classes/LanguageChangNotifier.html":{},"classes/ListEntryComponent.html":{},"classes/LocalSelectorComponent.html":{},"classes/OnGoingHttpCache.html":{},"classes/PermalinkService.html":{},"classes/ResizableComponent.html":{},"classes/SettingsService.html":{},"classes/TimeInterval.html":{},"classes/Timespan.html":{},"classes/UriParameterCoder.html":{}}}],["accept",{"_index":4434,"title":{},"body":{"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["access",{"_index":4565,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["accesss",{"_index":4524,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["account",{"_index":2008,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["act",{"_index":4260,"title":{},"body":{"license.html":{}}}],["activ",{"_index":3659,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["activepanel",{"_index":2961,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["actual_compon",{"_index":289,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["ad",{"_index":868,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["adapt",{"_index":814,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["add",{"_index":980,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/Layout.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"injectables/StatusCheckService.html":{},"interfaces/YScale.html":{},"index.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["add(numb",{"_index":3349,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["addbasemap",{"_index":407,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["addbasemap(layeropt",{"_index":445,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["adddataset",{"_index":1869,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{}}}],["adddataset(id",{"_index":895,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["adddataset(internalid",{"_index":1965,"title":{},"body":{"classes/DatasetService.html":{}}}],["adddatasetbyinternalid",{"_index":1870,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["adddatasetbyinternalid(internalid",{"_index":1888,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["addendum",{"_index":4381,"title":{},"body":{"license.html":{}}}],["addfavorit",{"_index":2359,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["addfavorite(dataset",{"_index":2314,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["addfavoritegroup",{"_index":2360,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["addfavoritegroup(dataset",{"_index":2326,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["addit",{"_index":4305,"title":{"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}},"body":{"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["additionalwidth",{"_index":163,"title":{},"body":{"interfaces/AxesOptions.html":{}}}],["addlinewidth",{"_index":866,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["addoverlaymap",{"_index":408,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["addoverlaymap(layeropt",{"_index":448,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["addparameterfilt",{"_index":2098,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["addparameterfilter(param",{"_index":2105,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["addreferencevaluedata(internalid",{"_index":987,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["address",{"_index":1,"title":{"interfaces/Address.html":{}},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["address29",{"_index":8,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["addtimespan",{"_index":2099,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["addtimespan(timespan",{"_index":2107,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["addurl",{"_index":3817,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["addurl(url",{"_index":3823,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["adher",{"_index":3344,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["adjust",{"_index":4619,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["advis",{"_index":4433,"title":{},"body":{"license.html":{}}}],["afterviewinit",{"_index":679,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["again",{"_index":3362,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["against",{"_index":3395,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"license.html":{}}}],["agre",{"_index":4399,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":4391,"title":{},"body":{"license.html":{}}}],["alertservice.error($translate.instant('favorite.import.wrongfil",{"_index":2857,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["align",{"_index":1848,"title":{},"body":{"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["alleg",{"_index":4357,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1136,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["allowsyntheticdefaultimport",{"_index":4237,"title":{},"body":{"index.html":{}}}],["alon",{"_index":4351,"title":{},"body":{"license.html":{}}}],["along",{"_index":4374,"title":{},"body":{"license.html":{}}}],["alongsid",{"_index":4380,"title":{},"body":{"license.html":{}}}],["alpha.53",{"_index":4234,"title":{},"body":{"index.html":{}}}],["alreadi",{"_index":4508,"title":{},"body":{"additional-documentation/how-tos.html":{}}}],["altern",{"_index":969,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["amounttimestamp",{"_index":1394,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["analysi",{"_index":4198,"title":{},"body":{"index.html":{}}}],["anchor",{"_index":1230,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["and/or",{"_index":4439,"title":{},"body":{"license.html":{}}}],["angular",{"_index":4173,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["angular/anim",{"_index":4086,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":4088,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk@^5.0.0",{"_index":4656,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["angular/cli",{"_index":4518,"title":{},"body":{"additional-documentation/how-tos.html":{}}}],["angular/common",{"_index":1999,"title":{},"body":{"pipes/DateProxyPipe.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":27,"title":{},"body":{"interfaces/Address.html":{},"injectables/BasicAuthService.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"injectables/DatasetApiMapping.html":{},"injectables/EventingImplApiInterface.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"modules/HelgolandCoreModule.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"injectables/LabelMapperService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"classes/OnGoingHttpCache.html":{},"injectables/StatusCheckService.html":{},"classes/UriParameterCoder.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["angular/compil",{"_index":4090,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":29,"title":{},"body":{"interfaces/Address.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"components/BoolTogglerComponent.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"dependencies.html":{}}}],["angular/core)```typescript",{"_index":4643,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["angular/form",{"_index":2627,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandTimeModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":4091,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":4092,"title":{},"body":{"dependencies.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["angular/material/prebuilt",{"_index":4663,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["angular/material@^5.0.0",{"_index":4657,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["angular/platform",{"_index":4093,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":4096,"title":{},"body":{"dependencies.html":{}}}],["anim",{"_index":3283,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["annot",{"_index":3301,"title":{},"body":{"interfaces/PlotOptions.html":{},"license.html":{}}}],["anyth",{"_index":585,"title":{},"body":{"injectables/CachingInterceptor.html":{},"injectables/StatusCheckService.html":{}}}],["apach",{"_index":4242,"title":{},"body":{"license.html":{}}}],["api",{"_index":873,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetApiV2.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/Layout.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["api.servic",{"_index":2121,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["api.service.t",{"_index":2074,"title":{},"body":{"classes/EventingApiService.html":{}}}],["api.service.ts:11",{"_index":2078,"title":{},"body":{"classes/EventingApiService.html":{}}}],["api.service.ts:13",{"_index":2086,"title":{},"body":{"classes/EventingApiService.html":{}}}],["api.service.ts:15",{"_index":2083,"title":{},"body":{"classes/EventingApiService.html":{}}}],["api.service.ts:9",{"_index":2081,"title":{},"body":{"classes/EventingApiService.html":{}}}],["api/api",{"_index":1535,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"classes/DatasetPresenterComponent.html":{},"modules/HelgolandCoreModule.html":{},"classes/UriParameterCoder.html":{},"miscellaneous/enumerations.html":{}}}],["api/categori",{"_index":4048,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["api/category.t",{"_index":626,"title":{},"body":{"interfaces/Category.html":{}}}],["api/data",{"_index":1577,"title":{},"body":{"interfaces/DatasetApiV2.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["api/data.t",{"_index":763,"title":{},"body":{"interfaces/Data.html":{},"interfaces/IDataEntry.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/ProfileDataEntry.html":{},"classes/ReferenceValues.html":{},"interfaces/TimeValueEntry.html":{}}}],["api/data.ts:9",{"_index":3624,"title":{},"body":{"classes/ReferenceValues.html":{}}}],["api/dataset",{"_index":1578,"title":{},"body":{"interfaces/DatasetApiV2.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/StatusIntervalResolverService.html":{},"classes/UriParameterCoder.html":{}}}],["api/dataset.t",{"_index":1502,"title":{},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["api/dataset.ts:16",{"_index":3209,"title":{},"body":{"classes/ParameterConstellation.html":{}}}],["api/dataset.ts:17",{"_index":3206,"title":{},"body":{"classes/ParameterConstellation.html":{}}}],["api/dataset.ts:18",{"_index":3205,"title":{},"body":{"classes/ParameterConstellation.html":{}}}],["api/dataset.ts:19",{"_index":3208,"title":{},"body":{"classes/ParameterConstellation.html":{}}}],["api/dataset.ts:20",{"_index":3207,"title":{},"body":{"classes/ParameterConstellation.html":{}}}],["api/dataset.ts:21",{"_index":3204,"title":{},"body":{"classes/ParameterConstellation.html":{}}}],["api/dataset.ts:25",{"_index":2453,"title":{},"body":{"classes/FirstLastValue.html":{}}}],["api/dataset.ts:26",{"_index":2454,"title":{},"body":{"classes/FirstLastValue.html":{}}}],["api/dataset.ts:30",{"_index":3545,"title":{},"body":{"classes/ReferenceValue.html":{}}}],["api/dataset.ts:31",{"_index":3543,"title":{},"body":{"classes/ReferenceValue.html":{}}}],["api/dataset.ts:32",{"_index":3544,"title":{},"body":{"classes/ReferenceValue.html":{}}}],["api/dataset.ts:33",{"_index":3542,"title":{},"body":{"classes/ReferenceValue.html":{}}}],["api/dataset.ts:34",{"_index":3546,"title":{},"body":{"classes/ReferenceValue.html":{}}}],["api/dataset.ts:38",{"_index":1854,"title":{},"body":{"classes/DatasetParameterConstellation.html":{}}}],["api/dataset.ts:42",{"_index":1510,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:43",{"_index":1512,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:44",{"_index":1520,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:45",{"_index":1519,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:46",{"_index":1511,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:47",{"_index":1509,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:48",{"_index":1513,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:49",{"_index":1517,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:50",{"_index":1507,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:51",{"_index":1516,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:52",{"_index":1515,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:53",{"_index":1518,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:57",{"_index":3994,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:58",{"_index":3996,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:59",{"_index":4003,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:60",{"_index":4002,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:61",{"_index":3995,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:62",{"_index":3992,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:63",{"_index":3997,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:64",{"_index":3999,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:65",{"_index":4000,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:66",{"_index":3998,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:67",{"_index":4001,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:68",{"_index":3993,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/enums.t",{"_index":4155,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["api/featur",{"_index":4049,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["api/feature.t",{"_index":2401,"title":{},"body":{"interfaces/Feature.html":{}}}],["api/helper/statu",{"_index":2589,"title":{},"body":{"modules/HelgolandCoreModule.html":{},"injectables/StatusIntervalResolverService.html":{}}}],["api/http.service.t",{"_index":2763,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"miscellaneous/variables.html":{}}}],["api/http.service.ts:12",{"_index":2781,"title":{},"body":{"interfaces/HttpServiceHandler.html":{}}}],["api/http.service.ts:16",{"_index":2782,"title":{},"body":{"interfaces/HttpServiceInterceptor.html":{}}}],["api/http.service.ts:24",{"_index":2767,"title":{},"body":{"injectables/HttpService.html":{}}}],["api/http.service.ts:41",{"_index":2769,"title":{},"body":{"injectables/HttpService.html":{}}}],["api/identifiable.t",{"_index":2796,"title":{},"body":{"interfaces/Identifiable.html":{}}}],["api/interfaces/api",{"_index":1560,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["api/intern",{"_index":1909,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"modules/HelgolandCoreModule.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"miscellaneous/variables.html":{}}}],["api/off",{"_index":4050,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["api/offering.t",{"_index":3198,"title":{},"body":{"interfaces/Offering.html":{}}}],["api/parameter.t",{"_index":3203,"title":{},"body":{"interfaces/Parameter.html":{}}}],["api/phenomenon",{"_index":4051,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["api/phenomenon.t",{"_index":3249,"title":{},"body":{"interfaces/Phenomenon.html":{}}}],["api/platform",{"_index":1579,"title":{},"body":{"interfaces/DatasetApiV2.html":{},"classes/UriParameterCoder.html":{}}}],["api/platform.t",{"_index":3250,"title":{},"body":{"interfaces/Platform.html":{}}}],["api/procedur",{"_index":4052,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["api/procedure.t",{"_index":3422,"title":{},"body":{"interfaces/Procedure.html":{}}}],["api/servic",{"_index":4053,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["api/service.t",{"_index":3670,"title":{},"body":{"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{}}}],["api/split",{"_index":3771,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["api/st",{"_index":4054,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["api/station.t",{"_index":3802,"title":{},"body":{"classes/Station.html":{},"interfaces/StationProperties.html":{},"classes/TimeseriesCollection.html":{}}}],["api/station.ts:14",{"_index":4004,"title":{},"body":{"classes/TimeseriesCollection.html":{}}}],["api/station.ts:5",{"_index":3805,"title":{},"body":{"classes/Station.html":{}}}],["api/station.ts:6",{"_index":3804,"title":{},"body":{"classes/Station.html":{}}}],["api/station.ts:7",{"_index":3807,"title":{},"body":{"classes/Station.html":{}}}],["apiinterfac",{"_index":132,"title":{"classes/ApiInterface.html":{}},"body":{"classes/ApiInterface.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/EventingApiService.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/FilteredParameter.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/UriParameterCoder.html":{}}}],["apiinterface:14",{"_index":2087,"title":{},"body":{"classes/EventingApiService.html":{}}}],["apiinterface:7",{"_index":2088,"title":{},"body":{"classes/EventingApiService.html":{}}}],["apimap",{"_index":2968,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["apiurl",{"_index":148,"title":{},"body":{"classes/ApiInterface.html":{},"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/Settings.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"interfaces/SupportedMimeTypes.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"classes/UriParameterCoder.html":{}}}],["apiversionid",{"_index":3008,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["app",{"_index":4505,"title":{},"body":{"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["app.component.css",{"_index":4628,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["app.component.html",{"_index":4626,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["app.component.scss",{"_index":4629,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["app.component.t",{"_index":4635,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["app.modul.t",{"_index":4637,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["app.module.t",{"_index":4658,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["appcompon",{"_index":4535,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["appear",{"_index":4379,"title":{},"body":{"license.html":{}}}],["append('g",{"_index":885,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["append('svg",{"_index":880,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["append('svg:clippath",{"_index":1311,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["append('svg:path",{"_index":1329,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["append('svg:rect",{"_index":1313,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["appendix",{"_index":4294,"title":{},"body":{"license.html":{}}}],["appli",{"_index":4345,"title":{},"body":{"license.html":{}}}],["applic",{"_index":4212,"title":{},"body":{"index.html":{},"license.html":{}}}],["application/json;charset=utf",{"_index":2836,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["appmodul",{"_index":4540,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["appropri",{"_index":4408,"title":{},"body":{"license.html":{}}}],["area",{"_index":1632,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["argument",{"_index":3664,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["aris",{"_index":4424,"title":{},"body":{"license.html":{}}}],["array",{"_index":91,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataEntry.html":{},"interfaces/Layout.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValues.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"interfaces/TimeValueEntry.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["array.from(this.groupfavs.valu",{"_index":2331,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["array.from(this.singlefavs.valu",{"_index":2320,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["array[index",{"_index":1421,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["arriv",{"_index":610,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["aspointgeometri",{"_index":2519,"title":{},"body":{"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{}}}],["assert",{"_index":4446,"title":{},"body":{"license.html":{}}}],["associ",{"_index":4411,"title":{},"body":{"license.html":{}}}],["assum",{"_index":4409,"title":{},"body":{"license.html":{}}}],["attach",{"_index":4293,"title":{},"body":{"license.html":{}}}],["attent",{"_index":4560,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["attr('ci",{"_index":1338,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('class",{"_index":1074,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('clip",{"_index":1316,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('cx",{"_index":1336,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('d",{"_index":1332,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('di",{"_index":1263,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('fil",{"_index":1061,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('height",{"_index":883,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('i",{"_index":1240,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('id",{"_index":1312,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('opac",{"_index":1271,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('point",{"_index":1064,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('r",{"_index":1340,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('strok",{"_index":1063,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('transform",{"_index":886,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('vis",{"_index":1428,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('width",{"_index":881,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('x",{"_index":1239,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('x1",{"_index":1078,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('x2",{"_index":1076,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('y1",{"_index":1079,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('y2",{"_index":1077,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attribut",{"_index":549,"title":{},"body":{"classes/CachedMapComponent.html":{},"license.html":{}}}],["auth",{"_index":295,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth(usernam",{"_index":302,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth.service.t",{"_index":292,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth.service.ts:15",{"_index":305,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth.service.ts:27",{"_index":307,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth.service.ts:31",{"_index":309,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth.service.ts:35",{"_index":308,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth.service.ts:9",{"_index":301,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["author",{"_index":317,"title":{},"body":{"injectables/BasicAuthService.html":{},"license.html":{}}}],["authorship",{"_index":4290,"title":{},"body":{"license.html":{}}}],["autorang",{"_index":2256,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["autos",{"_index":2161,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["avail",{"_index":1436,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"index.html":{},"license.html":{},"modules.html":{}}}],["avoid",{"_index":4238,"title":{},"body":{"index.html":{}}}],["avoidzoomtoselect",{"_index":3257,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["awesom",{"_index":4128,"title":{},"body":{"dependencies.html":{}}}],["ax",{"_index":185,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandModificationModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["axesopt",{"_index":161,"title":{"interfaces/AxesOptions.html":{}},"body":{"interfaces/AxesOptions.html":{},"interfaces/PlotOptions.html":{}}}],["axesoptionscompon",{"_index":175,"title":{"components/AxesOptionsComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandModificationModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["axi",{"_index":675,"title":{},"body":{"interfaces/D3GraphOptions.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/MinMaxRange.html":{},"interfaces/RawData.html":{},"classes/ReferenceValueOption.html":{},"interfaces/ScatterData.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["axis.id",{"_index":2248,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["axis.node().getbbox().width",{"_index":1267,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["axis.overlay",{"_index":2243,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["axis.rang",{"_index":2244,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["axis.range[0",{"_index":2246,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["axis.range[1",{"_index":2247,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["axisbottom",{"_index":1633,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axisbottom(this.xscalebase).ticks(5",{"_index":1809,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axisdiv",{"_index":1278,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["axisleft",{"_index":1634,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axisleft(yscale).ticks(5",{"_index":1802,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axisopt",{"_index":801,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["axisresult",{"_index":1745,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axisresult.buff",{"_index":1748,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axisresult.yscal",{"_index":1747,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axisright",{"_index":1635,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axistop",{"_index":1636,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axistyp",{"_index":672,"title":{},"body":{"interfaces/D3GraphOptions.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axiswidth",{"_index":1266,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["b",{"_index":1203,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["b.i",{"_index":1364,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["b.idx",{"_index":1374,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["b.label",{"_index":3721,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["back",{"_index":1413,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"injectables/StatusCheckService.html":{},"components/TimespanShiftSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["background",{"_index":855,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["bar",{"_index":800,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["base",{"_index":4171,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["base/geosearch/geosearch",{"_index":2541,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["base/map",{"_index":2302,"title":{},"body":{"components/ExtentControlComponent.html":{},"components/GeosearchControlComponent.html":{},"injectables/LocateService.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ZoomControlComponent.html":{}}}],["base/map.modul",{"_index":2662,"title":{},"body":{"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{}}}],["basector",{"_index":4167,"title":{},"body":{"miscellaneous/functions.html":{}}}],["baselay",{"_index":480,"title":{},"body":{"classes/CachedMapComponent.html":{},"miscellaneous/variables.html":{}}}],["basemap",{"_index":419,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["baseurl",{"_index":4550,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["basevalu",{"_index":1648,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["bash",{"_index":4641,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["basi",{"_index":4400,"title":{},"body":{"license.html":{}}}],["basic",{"_index":314,"title":{},"body":{"injectables/BasicAuthService.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["basicauthservic",{"_index":290,"title":{"injectables/BasicAuthService.html":{}},"body":{"injectables/BasicAuthService.html":{}}}],["basicauthtoken",{"_index":294,"title":{},"body":{"injectables/BasicAuthService.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/ParameterFilter.html":{}}}],["bbox",{"_index":2514,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["bboxparam",{"_index":2507,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["befor",{"_index":583,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["begin",{"_index":1187,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos.html":{}}}],["behalf",{"_index":4309,"title":{},"body":{"license.html":{}}}],["below",{"_index":4227,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["benefici",{"_index":4276,"title":{},"body":{"license.html":{}}}],["besid",{"_index":4625,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["better",{"_index":4497,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["between",{"_index":1185,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["bind",{"_index":4302,"title":{},"body":{"license.html":{}}}],["bisectd",{"_index":1790,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["bisectdate(data",{"_index":1423,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["bisectdate(this.basevalu",{"_index":1794,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["bisector",{"_index":1637,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["bisector((d",{"_index":1791,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["black",{"_index":1081,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["blacklist",{"_index":3749,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["blacklist.foreach((entri",{"_index":3759,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["blacklistedservic",{"_index":322,"title":{"interfaces/BlacklistedService.html":{}},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["blob",{"_index":2834,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["blob([json",{"_index":2835,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["blue",{"_index":3507,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["bodi",{"_index":1304,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["bool",{"_index":206,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandControlModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["boolean",{"_index":171,"title":{},"body":{"interfaces/AxesOptions.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DrawOptions.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataset.html":{},"classes/IdCache.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/LocalStorage.html":{},"interfaces/MinMaxRange.html":{},"classes/OnGoingHttpCache.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"interfaces/SingleFavorite.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["boolen",{"_index":4575,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["booltogglercompon",{"_index":205,"title":{"components/BoolTogglerComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandTimeModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":2569,"title":{},"body":{"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"components/TimeRangeSliderComponent.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["border",{"_index":1235,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["borderlin",{"_index":1131,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["both",{"_index":3398,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["bottom",{"_index":847,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["bound",{"_index":90,"title":{},"body":{"interfaces/Address.html":{},"interfaces/DataConst.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/HighlightDataset.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["boundingbox",{"_index":46,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["bounds.geteast",{"_index":2510,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["bounds.getnorth()].join",{"_index":2511,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["bounds.getsouth",{"_index":2509,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["bounds.getwest",{"_index":2508,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["bracket",{"_index":3386,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["break",{"_index":2434,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["brew",{"_index":4181,"title":{},"body":{"index.html":{}}}],["brows",{"_index":4447,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":4094,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":4536,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["brus_max",{"_index":1152,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["brush",{"_index":808,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["brush_max",{"_index":1153,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["brush_min",{"_index":1148,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["btoa(usernam",{"_index":315,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["buffer",{"_index":792,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["bufferedtim",{"_index":355,"title":{"classes/BufferedTime.html":{}},"body":{"classes/BufferedTime.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"classes/Timespan.html":{}}}],["bufferinterv",{"_index":358,"title":{},"body":{"classes/BufferedTime.html":{},"classes/TimeInterval.html":{},"classes/Timespan.html":{}}}],["buffersum",{"_index":859,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["bufferxrang",{"_index":1183,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["bug](https://github.com/angular/angular",{"_index":4213,"title":{},"body":{"index.html":{}}}],["build",{"_index":753,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["build:lib",{"_index":4190,"title":{},"body":{"index.html":{}}}],["built",{"_index":2006,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["builtindatepip",{"_index":2009,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["builtindatepipe.transform(valu",{"_index":2013,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["bump",{"_index":4203,"title":{},"body":{"index.html":{}}}],["button",{"_index":3627,"title":{},"body":{"components/RefreshButtonComponent.html":{},"components/TimespanButtonComponent.html":{},"additional-documentation/introduction.html":{}}}],["button'},{'nam",{"_index":271,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["button.compon",{"_index":2577,"title":{},"body":{"modules/HelgolandControlModule.html":{},"modules/HelgolandTimeModule.html":{}}}],["button.component.html",{"_index":3628,"title":{},"body":{"components/RefreshButtonComponent.html":{},"components/TimespanButtonComponent.html":{}}}],["button.component.t",{"_index":3626,"title":{},"body":{"components/RefreshButtonComponent.html":{},"components/TimespanButtonComponent.html":{}}}],["button.component.ts:11",{"_index":3635,"title":{},"body":{"components/RefreshButtonComponent.html":{},"components/TimespanButtonComponent.html":{}}}],["button.component.ts:14",{"_index":3636,"title":{},"body":{"components/RefreshButtonComponent.html":{},"components/TimespanButtonComponent.html":{}}}],["button.component.ts:17",{"_index":3637,"title":{},"body":{"components/RefreshButtonComponent.html":{},"components/TimespanButtonComponent.html":{}}}],["button.component.ts:19",{"_index":3634,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["button.component.ts:20",{"_index":4012,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["button.component.ts:26",{"_index":4014,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["button.component.ts:30",{"_index":3640,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["button.component.ts:34",{"_index":3639,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["button.component.ts:40",{"_index":3644,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["button.component.ts:46",{"_index":3638,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["button.component.ts:54",{"_index":3642,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["button.component.ts:58",{"_index":3643,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["button.component.ts:62",{"_index":3641,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["button/refresh",{"_index":2576,"title":{},"body":{"modules/HelgolandControlModule.html":{},"components/RefreshButtonComponent.html":{}}}],["button/timespan",{"_index":2741,"title":{},"body":{"modules/HelgolandTimeModule.html":{},"components/TimespanButtonComponent.html":{}}}],["c",{"_index":4368,"title":{},"body":{"license.html":{}}}],["c1",{"_index":1375,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["c2",{"_index":1376,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["cach",{"_index":369,"title":{"interfaces/Cache.html":{}},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"injectables/DatasetApiMapping.html":{},"modules/HelgolandCachingModule.html":{},"classes/HttpCache.html":{},"classes/IdCache.html":{},"injectables/LabelMapperService.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{},"components/TimeRangeSliderComponent.html":{},"additional-documentation/introduction.html":{}}}],["cache.servic",{"_index":478,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/ExtentControlComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapModule.html":{},"injectables/LocateService.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ZoomControlComponent.html":{}}}],["cache.service.t",{"_index":3126,"title":{},"body":{"injectables/MapCache.html":{}}}],["cache.service.ts:13",{"_index":3132,"title":{},"body":{"injectables/MapCache.html":{}}}],["cache.service.ts:7",{"_index":3133,"title":{},"body":{"injectables/MapCache.html":{}}}],["cache.service.ts:9",{"_index":3130,"title":{},"body":{"injectables/MapCache.html":{}}}],["cache.t",{"_index":371,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/IdCache.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{}}}],["cache.ts:10",{"_index":3033,"title":{},"body":{"injectables/LocalOngoingHttpCache.html":{}}}],["cache.ts:11",{"_index":373,"title":{},"body":{"interfaces/Cache.html":{}}}],["cache.ts:13",{"_index":2791,"title":{},"body":{"classes/IdCache.html":{}}}],["cache.ts:14",{"_index":3034,"title":{},"body":{"injectables/LocalOngoingHttpCache.html":{}}}],["cache.ts:18",{"_index":3031,"title":{},"body":{"injectables/LocalHttpCache.html":{}}}],["cache.ts:20",{"_index":3029,"title":{},"body":{"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{}}}],["cache.ts:24",{"_index":3032,"title":{},"body":{"injectables/LocalOngoingHttpCache.html":{}}}],["cache.ts:3",{"_index":2785,"title":{},"body":{"classes/IdCache.html":{}}}],["cache.ts:33",{"_index":3030,"title":{},"body":{"injectables/LocalHttpCache.html":{}}}],["cache.ts:5",{"_index":2789,"title":{},"body":{"classes/IdCache.html":{}}}],["cache.ts:8",{"_index":3035,"title":{},"body":{"injectables/LocalOngoingHttpCache.html":{}}}],["cache.ts:9",{"_index":2787,"title":{},"body":{"classes/IdCache.html":{}}}],["cache_param_favorites_group",{"_index":2307,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{},"miscellaneous/variables.html":{}}}],["cache_param_favorites_singl",{"_index":2305,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{},"miscellaneous/variables.html":{}}}],["cacheditem",{"_index":372,"title":{"interfaces/CachedItem.html":{}},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/LocalHttpCache.html":{}}}],["cachedmapcompon",{"_index":392,"title":{"classes/CachedMapComponent.html":{}},"body":{"classes/CachedMapComponent.html":{}}}],["cachedrespons",{"_index":597,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["cachinginterceptor",{"_index":565,"title":{"injectables/CachingInterceptor.html":{}},"body":{"injectables/CachingInterceptor.html":{},"modules/HelgolandCachingModule.html":{}}}],["calctick",{"_index":1196,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["calcul",{"_index":852,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["calculatedrang",{"_index":1001,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["calculatedrange.min",{"_index":1015,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["calculateheight",{"_index":1705,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["calculateoverviewrang",{"_index":687,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["calculatewidth",{"_index":1707,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["calcxvalu",{"_index":1703,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["call",{"_index":4532,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["call(axisbottom(this.xscalebas",{"_index":1813,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["call(axisright(this.yscalebase).ticksize(0).ticks(0",{"_index":1750,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["call(axistop(this.xscalebase).ticks(0).ticksize(0",{"_index":1815,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["call(brush",{"_index":1123,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["call(brush.mov",{"_index":1124,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["call(d3.axisleft(yscal",{"_index":1280,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["call(d3.axistop(this.xscalebase).ticks(0).ticksize(0",{"_index":1236,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["call(d3.drag",{"_index":1103,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["call(d3.zoom",{"_index":1096,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["call(this.yaxisgen",{"_index":1803,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["call(xaxisgen",{"_index":1227,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["call(yaxisgen",{"_index":1260,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["carri",{"_index":4366,"title":{},"body":{"license.html":{}}}],["case",{"_index":1713,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["catch",{"_index":2014,"title":{},"body":{"pipes/DateProxyPipe.html":{},"injectables/LabelMapperService.html":{}}}],["categori",{"_index":624,"title":{"interfaces/Category.html":{}},"body":{"interfaces/Category.html":{},"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/StatusInterval.html":{},"interfaces/SupportedMimeTypes.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/UriParameterCoder.html":{}}}],["categorylabel",{"_index":3553,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["caus",{"_index":4217,"title":{},"body":{"index.html":{},"license.html":{}}}],["cd",{"_index":699,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"additional-documentation/how-tos.html":{}}}],["centertimespan",{"_index":3873,"title":{},"body":{"injectables/Time.html":{}}}],["centertimespan(timespan",{"_index":3883,"title":{},"body":{"injectables/Time.html":{}}}],["chain",{"_index":3356,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["chang",{"_index":456,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"classes/DatasetPresenterComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"classes/LocalSelectorComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["changeal",{"_index":1290,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["changecolor",{"_index":4670,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["changedetectorref",{"_index":700,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["changedselecteddataset",{"_index":3548,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["changefals",{"_index":1284,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["changefalse.length",{"_index":1292,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["changefalse.push",{"_index":1288,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["changelabel",{"_index":2361,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["changelabel(favorit",{"_index":2335,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["changer.t",{"_index":2923,"title":{},"body":{"classes/LanguageChangNotifier.html":{}}}],["changer.ts:11",{"_index":2926,"title":{},"body":{"classes/LanguageChangNotifier.html":{}}}],["changer.ts:3",{"_index":2925,"title":{},"body":{"classes/LanguageChangNotifier.html":{}}}],["changes.changedselecteddataset",{"_index":3556,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["changes.changedselecteddatasets.currentvalue.foreach((obj",{"_index":3558,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["changes.changedselecteddatasets.firstchang",{"_index":3557,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["changes.dataset",{"_index":2390,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["changes.endpoint",{"_index":3684,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["changes.fitbound",{"_index":502,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["changes.foreachaddeditem((",{"_index":509,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["changes.foreachremoveditem((",{"_index":507,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["changes.label",{"_index":2875,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["changes.languagelist",{"_index":3051,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["changes.providerlist",{"_index":2984,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["changes.providerlist.currentvalu",{"_index":2985,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["changes.rang",{"_index":3152,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["changes.select",{"_index":1654,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["changes.selectedtimespan",{"_index":3511,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["changes.timeinterv",{"_index":733,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/DatasetPresenterComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"injectables/ReferenceValueColorCache.html":{}}}],["changes.timelist",{"_index":3960,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["changes.toggl",{"_index":3650,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["changes.valu",{"_index":3869,"title":{},"body":{"components/StringTogglerComponent.html":{}}}],["changes.zoomcontrolopt",{"_index":504,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["changeselectedids(tohighlightdataset",{"_index":1295,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["changetime(from",{"_index":931,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["changetru",{"_index":1285,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["changetrue.push",{"_index":1289,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["changeyaxesvis",{"_index":188,"title":{},"body":{"components/AxesOptionsComponent.html":{}}}],["charact",{"_index":4423,"title":{},"body":{"license.html":{}}}],["charg",{"_index":4334,"title":{},"body":{"license.html":{}}}],["check",{"_index":154,"title":{},"body":{"classes/ApiInterface.html":{},"injectables/CachingInterceptor.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"injectables/StatusCheckService.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["check.service.t",{"_index":3812,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["check.service.ts:13",{"_index":3822,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["check.service.ts:22",{"_index":3826,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["check.service.ts:30",{"_index":3829,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["check.service.ts:38",{"_index":3831,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["check.service.ts:45",{"_index":3824,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["check.service.ts:53",{"_index":3837,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["check.service.ts:58",{"_index":3835,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["check.service.ts:73",{"_index":3833,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["check/statu",{"_index":3811,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["checkal",{"_index":3818,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["checkdataintimespan",{"_index":3617,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["checkedurls.filter((entri",{"_index":3851,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["checkurl",{"_index":3819,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["checkurl(url",{"_index":3828,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["checkurls(url",{"_index":3830,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["choos",{"_index":4435,"title":{},"body":{"license.html":{}}}],["chrome",{"_index":2840,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["chunkspan",{"_index":3787,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["chvislabel(entri",{"_index":1448,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["citi",{"_index":9,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["city_district",{"_index":10,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["citydistrict",{"_index":115,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["claim",{"_index":4347,"title":{},"body":{"license.html":{}}}],["class",{"_index":54,"title":{"classes/ApiInterface.html":{},"classes/BufferedTime.html":{},"classes/CachedMapComponent.html":{},"classes/D3SelectionRange.html":{},"classes/Dataset.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"classes/EventingApiService.html":{},"classes/ExtendedTimeseries.html":{},"classes/Filter.html":{},"classes/FirstLastValue.html":{},"classes/GeoCureGeoJSON.html":{},"classes/GeoSearch.html":{},"classes/HasLoadableContent.html":{},"classes/HttpCache.html":{},"classes/IdCache.html":{},"classes/LanguageChangNotifier.html":{},"classes/ListEntryComponent.html":{},"classes/LocalSelectorComponent.html":{},"classes/OnGoingHttpCache.html":{},"classes/ParameterConstellation.html":{},"classes/PermalinkService.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"classes/ResizableComponent.html":{},"classes/SettingsService.html":{},"classes/Station.html":{},"classes/TimeInterval.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"classes/Timespan.html":{},"classes/UriParameterCoder.html":{}},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"classes/IdCache.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"classes/ParameterConstellation.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["classed('hidden",{"_index":1469,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["clear",{"_index":1137,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/YScale.html":{}}}],["clear(req",{"_index":2762,"title":{},"body":{"classes/HttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["cleardata",{"_index":2279,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["clearinterval(this.interv",{"_index":3657,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["clearlayout",{"_index":2277,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["clearmap",{"_index":3491,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["clearsearch",{"_index":2526,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["cleartimeout(this.notifiertimeout",{"_index":3191,"title":{},"body":{"injectables/NotifierService.html":{}}}],["cleartoken",{"_index":296,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["cli",{"_index":4216,"title":{},"body":{"index.html":{},"additional-documentation/how-tos.html":{}}}],["cli.json",{"_index":4620,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["cli/issues/3854",{"_index":4214,"title":{},"body":{"index.html":{}}}],["cli/issues/3854#issuecom",{"_index":4222,"title":{},"body":{"index.html":{}}}],["click",{"_index":4009,"title":{},"body":{"components/TimespanButtonComponent.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["client",{"_index":2764,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["client(metadata",{"_index":2768,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["clip",{"_index":1305,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["clipboard",{"_index":2708,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{},"components/PermalinkToClipboardComponent.html":{},"dependencies.html":{}}}],["clipboard'},{'nam",{"_index":258,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["clipboard.compon",{"_index":2714,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{}}}],["clipboard.component.html",{"_index":3246,"title":{},"body":{"components/PermalinkToClipboardComponent.html":{}}}],["clipboard.component.t",{"_index":3245,"title":{},"body":{"components/PermalinkToClipboardComponent.html":{}}}],["clipboard.component.ts:10",{"_index":3247,"title":{},"body":{"components/PermalinkToClipboardComponent.html":{}}}],["clipboard.component.ts:13",{"_index":3248,"title":{},"body":{"components/PermalinkToClipboardComponent.html":{}}}],["clipboard/permalink",{"_index":2713,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{},"components/PermalinkToClipboardComponent.html":{}}}],["clipboardmodul",{"_index":2707,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{}}}],["clone",{"_index":4185,"title":{},"body":{"index.html":{}}}],["closest",{"_index":2167,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["cluster",{"_index":3256,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["cluster_helgolandcontrolmodul",{"_index":2570,"title":{},"body":{"modules/HelgolandControlModule.html":{},"overview.html":{}}}],["cluster_helgolandcontrolmodule_declar",{"_index":2571,"title":{},"body":{"modules/HelgolandControlModule.html":{},"overview.html":{}}}],["cluster_helgolandcontrolmodule_export",{"_index":2572,"title":{},"body":{"modules/HelgolandControlModule.html":{},"overview.html":{}}}],["cluster_helgolandcoremodul",{"_index":2580,"title":{},"body":{"modules/HelgolandCoreModule.html":{},"overview.html":{}}}],["cluster_helgolandcoremodule_declar",{"_index":2581,"title":{},"body":{"modules/HelgolandCoreModule.html":{},"overview.html":{}}}],["cluster_helgolandcoremodule_export",{"_index":2582,"title":{},"body":{"modules/HelgolandCoreModule.html":{},"overview.html":{}}}],["cluster_helgolandcoremodule_provid",{"_index":2583,"title":{},"body":{"modules/HelgolandCoreModule.html":{},"overview.html":{}}}],["cluster_helgolandd3modul",{"_index":2596,"title":{},"body":{"modules/HelgolandD3Module.html":{},"overview.html":{}}}],["cluster_helgolandd3module_declar",{"_index":2597,"title":{},"body":{"modules/HelgolandD3Module.html":{},"overview.html":{}}}],["cluster_helgolandd3module_export",{"_index":2599,"title":{},"body":{"modules/HelgolandD3Module.html":{},"overview.html":{}}}],["cluster_helgolandd3module_import",{"_index":2598,"title":{},"body":{"modules/HelgolandD3Module.html":{}}}],["cluster_helgolanddatasetlistmodul",{"_index":2612,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"overview.html":{}}}],["cluster_helgolanddatasetlistmodule_declar",{"_index":2613,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{}}}],["cluster_helgolanddatasetlistmodule_export",{"_index":2615,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{}}}],["cluster_helgolanddatasetlistmodule_import",{"_index":2614,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"overview.html":{}}}],["cluster_helgolanddatasetlistmodule_provid",{"_index":2616,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"overview.html":{}}}],["cluster_helgolanddatasettablemodul",{"_index":2603,"title":{},"body":{"modules/HelgolandDatasetTableModule.html":{},"overview.html":{}}}],["cluster_helgolanddatasettablemodule_declar",{"_index":2604,"title":{},"body":{"modules/HelgolandDatasetTableModule.html":{},"overview.html":{}}}],["cluster_helgolanddatasettablemodule_export",{"_index":2606,"title":{},"body":{"modules/HelgolandDatasetTableModule.html":{},"overview.html":{}}}],["cluster_helgolanddatasettablemodule_import",{"_index":2605,"title":{},"body":{"modules/HelgolandDatasetTableModule.html":{}}}],["cluster_helgolandfavoritemodul",{"_index":2629,"title":{},"body":{"modules/HelgolandFavoriteModule.html":{},"overview.html":{}}}],["cluster_helgolandfavoritemodule_declar",{"_index":2630,"title":{},"body":{"modules/HelgolandFavoriteModule.html":{}}}],["cluster_helgolandfavoritemodule_export",{"_index":2631,"title":{},"body":{"modules/HelgolandFavoriteModule.html":{}}}],["cluster_helgolandfavoritemodule_provid",{"_index":2632,"title":{},"body":{"modules/HelgolandFavoriteModule.html":{},"overview.html":{}}}],["cluster_helgolandflotmodul",{"_index":2638,"title":{},"body":{"modules/HelgolandFlotModule.html":{},"overview.html":{}}}],["cluster_helgolandflotmodule_declar",{"_index":2639,"title":{},"body":{"modules/HelgolandFlotModule.html":{},"overview.html":{}}}],["cluster_helgolandflotmodule_export",{"_index":2641,"title":{},"body":{"modules/HelgolandFlotModule.html":{},"overview.html":{}}}],["cluster_helgolandflotmodule_import",{"_index":2640,"title":{},"body":{"modules/HelgolandFlotModule.html":{}}}],["cluster_helgolandlabelmappermodul",{"_index":2644,"title":{},"body":{"modules/HelgolandLabelMapperModule.html":{},"overview.html":{}}}],["cluster_helgolandlabelmappermodule_declar",{"_index":2645,"title":{},"body":{"modules/HelgolandLabelMapperModule.html":{},"overview.html":{}}}],["cluster_helgolandlabelmappermodule_export",{"_index":2646,"title":{},"body":{"modules/HelgolandLabelMapperModule.html":{},"overview.html":{}}}],["cluster_helgolandlabelmappermodule_provid",{"_index":2647,"title":{},"body":{"modules/HelgolandLabelMapperModule.html":{},"overview.html":{}}}],["cluster_helgolandmapcontrolmodul",{"_index":2654,"title":{},"body":{"modules/HelgolandMapControlModule.html":{},"overview.html":{}}}],["cluster_helgolandmapcontrolmodule_declar",{"_index":2655,"title":{},"body":{"modules/HelgolandMapControlModule.html":{}}}],["cluster_helgolandmapcontrolmodule_export",{"_index":2657,"title":{},"body":{"modules/HelgolandMapControlModule.html":{}}}],["cluster_helgolandmapcontrolmodule_import",{"_index":2656,"title":{},"body":{"modules/HelgolandMapControlModule.html":{},"overview.html":{}}}],["cluster_helgolandmapcontrolmodule_provid",{"_index":2658,"title":{},"body":{"modules/HelgolandMapControlModule.html":{},"overview.html":{}}}],["cluster_helgolandmapmodul",{"_index":2668,"title":{},"body":{"modules/HelgolandMapModule.html":{},"overview.html":{}}}],["cluster_helgolandmapmodule_declar",{"_index":2669,"title":{},"body":{"modules/HelgolandMapModule.html":{}}}],["cluster_helgolandmapmodule_export",{"_index":2670,"title":{},"body":{"modules/HelgolandMapModule.html":{}}}],["cluster_helgolandmapmodule_provid",{"_index":2671,"title":{},"body":{"modules/HelgolandMapModule.html":{},"overview.html":{}}}],["cluster_helgolandmapselectormodul",{"_index":2674,"title":{},"body":{"modules/HelgolandMapSelectorModule.html":{},"overview.html":{}}}],["cluster_helgolandmapselectormodule_declar",{"_index":2675,"title":{},"body":{"modules/HelgolandMapSelectorModule.html":{}}}],["cluster_helgolandmapselectormodule_export",{"_index":2677,"title":{},"body":{"modules/HelgolandMapSelectorModule.html":{}}}],["cluster_helgolandmapselectormodule_import",{"_index":2676,"title":{},"body":{"modules/HelgolandMapSelectorModule.html":{}}}],["cluster_helgolandmapviewmodul",{"_index":2684,"title":{},"body":{"modules/HelgolandMapViewModule.html":{},"overview.html":{}}}],["cluster_helgolandmapviewmodule_declar",{"_index":2685,"title":{},"body":{"modules/HelgolandMapViewModule.html":{},"overview.html":{}}}],["cluster_helgolandmapviewmodule_export",{"_index":2687,"title":{},"body":{"modules/HelgolandMapViewModule.html":{},"overview.html":{}}}],["cluster_helgolandmapviewmodule_import",{"_index":2686,"title":{},"body":{"modules/HelgolandMapViewModule.html":{}}}],["cluster_helgolandmodificationmodul",{"_index":2692,"title":{},"body":{"modules/HelgolandModificationModule.html":{},"overview.html":{}}}],["cluster_helgolandmodificationmodule_declar",{"_index":2693,"title":{},"body":{"modules/HelgolandModificationModule.html":{},"overview.html":{}}}],["cluster_helgolandmodificationmodule_export",{"_index":2695,"title":{},"body":{"modules/HelgolandModificationModule.html":{},"overview.html":{}}}],["cluster_helgolandmodificationmodule_import",{"_index":2694,"title":{},"body":{"modules/HelgolandModificationModule.html":{}}}],["cluster_helgolandpermalinkmodul",{"_index":2703,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{},"overview.html":{}}}],["cluster_helgolandpermalinkmodule_declar",{"_index":2704,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{}}}],["cluster_helgolandpermalinkmodule_export",{"_index":2705,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{}}}],["cluster_helgolandplotlymodul",{"_index":2716,"title":{},"body":{"modules/HelgolandPlotlyModule.html":{},"overview.html":{}}}],["cluster_helgolandplotlymodule_declar",{"_index":2717,"title":{},"body":{"modules/HelgolandPlotlyModule.html":{},"overview.html":{}}}],["cluster_helgolandplotlymodule_export",{"_index":2719,"title":{},"body":{"modules/HelgolandPlotlyModule.html":{},"overview.html":{}}}],["cluster_helgolandplotlymodule_import",{"_index":2718,"title":{},"body":{"modules/HelgolandPlotlyModule.html":{}}}],["cluster_helgolandselectormodul",{"_index":2722,"title":{},"body":{"modules/HelgolandSelectorModule.html":{},"overview.html":{}}}],["cluster_helgolandselectormodule_declar",{"_index":2723,"title":{},"body":{"modules/HelgolandSelectorModule.html":{},"overview.html":{}}}],["cluster_helgolandselectormodule_export",{"_index":2725,"title":{},"body":{"modules/HelgolandSelectorModule.html":{},"overview.html":{}}}],["cluster_helgolandselectormodule_import",{"_index":2724,"title":{},"body":{"modules/HelgolandSelectorModule.html":{}}}],["cluster_helgolandselectormodule_provid",{"_index":2726,"title":{},"body":{"modules/HelgolandSelectorModule.html":{},"overview.html":{}}}],["cluster_helgolandtimemodul",{"_index":2734,"title":{},"body":{"modules/HelgolandTimeModule.html":{},"overview.html":{}}}],["cluster_helgolandtimemodule_declar",{"_index":2735,"title":{},"body":{"modules/HelgolandTimeModule.html":{}}}],["cluster_helgolandtimemodule_export",{"_index":2737,"title":{},"body":{"modules/HelgolandTimeModule.html":{}}}],["cluster_helgolandtimemodule_import",{"_index":2736,"title":{},"body":{"modules/HelgolandTimeModule.html":{}}}],["cluster_helgolandtimerangeslidermodul",{"_index":2744,"title":{},"body":{"modules/HelgolandTimeRangeSliderModule.html":{},"overview.html":{}}}],["cluster_helgolandtimerangeslidermodule_declar",{"_index":2745,"title":{},"body":{"modules/HelgolandTimeRangeSliderModule.html":{},"overview.html":{}}}],["cluster_helgolandtimerangeslidermodule_export",{"_index":2746,"title":{},"body":{"modules/HelgolandTimeRangeSliderModule.html":{},"overview.html":{}}}],["cluster_helgolandtimerangeslidermodule_provid",{"_index":2747,"title":{},"body":{"modules/HelgolandTimeRangeSliderModule.html":{},"overview.html":{}}}],["code",{"_index":334,"title":{},"body":{"interfaces/BlacklistedService.html":{},"interfaces/CollectionMetadata.html":{},"interfaces/DatasetApi.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{},"interfaces/Language.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"index.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["collect",{"_index":3825,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["collectionmetadata",{"_index":627,"title":{"interfaces/CollectionMetadata.html":{}},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["color",{"_index":209,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandModificationModule.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"dependencies.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["color/color.servic",{"_index":2587,"title":{},"body":{"modules/HelgolandCoreModule.html":{}}}],["colorlist",{"_index":332,"title":{},"body":{"interfaces/BlacklistedService.html":{},"components/ColorSelectorComponent.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["colorpickermodul",{"_index":2697,"title":{},"body":{"modules/HelgolandModificationModule.html":{}}}],["colors[i",{"_index":4610,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["colorselectorcompon",{"_index":208,"title":{"components/ColorSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandModificationModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["colorservic",{"_index":659,"title":{"injectables/ColorService.html":{}},"body":{"injectables/ColorService.html":{},"interfaces/DataConst.html":{},"modules/HelgolandCoreModule.html":{},"interfaces/HighlightDataset.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/YScale.html":{},"overview.html":{}}}],["combi",{"_index":3486,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["combin",{"_index":2415,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"index.html":{},"license.html":{}}}],["command",{"_index":4192,"title":{},"body":{"index.html":{},"additional-documentation/how-tos.html":{}}}],["commerci",{"_index":4432,"title":{},"body":{"license.html":{}}}],["common",{"_index":4262,"title":{},"body":{"license.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["commonmodul",{"_index":2574,"title":{},"body":{"modules/HelgolandControlModule.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{}}}],["commun",{"_index":4313,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{}}}],["compar",{"_index":4534,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["compat",{"_index":4144,"title":{},"body":{"dependencies.html":{}}}],["compil",{"_index":4287,"title":{},"body":{"license.html":{}}}],["compileropt",{"_index":4228,"title":{},"body":{"index.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["complet",{"_index":4194,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["compli",{"_index":4384,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":4200,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":4097,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":174,"title":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"classes/CachedMapComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandTimeModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["component.t",{"_index":394,"title":{},"body":{"classes/CachedMapComponent.html":{},"miscellaneous/variables.html":{}}}],["component.ts:102",{"_index":457,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:106",{"_index":450,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:123",{"_index":451,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:132",{"_index":449,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:141",{"_index":462,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:148",{"_index":447,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:166",{"_index":460,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:173",{"_index":463,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:186",{"_index":464,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:20",{"_index":470,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:23",{"_index":472,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:26",{"_index":467,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:29",{"_index":473,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:32",{"_index":465,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:35",{"_index":469,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:38",{"_index":475,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:46",{"_index":437,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:48",{"_index":442,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:49",{"_index":441,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:50",{"_index":435,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:51",{"_index":444,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:53",{"_index":433,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:54",{"_index":432,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:55",{"_index":431,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:56",{"_index":430,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:66",{"_index":458,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:72",{"_index":455,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:83",{"_index":452,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component_templ",{"_index":203,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["compris",{"_index":4490,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["comput",{"_index":4429,"title":{},"body":{"license.html":{}}}],["condit",{"_index":4246,"title":{},"body":{"license.html":{}}}],["config",{"_index":816,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["configur",{"_index":4285,"title":{},"body":{"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["confirmlabel",{"_index":2880,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["confirmlabel(observ",{"_index":2887,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["confirmvers",{"_index":1537,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["confirmversion(observ",{"_index":1540,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["consequenti",{"_index":4422,"title":{},"body":{"license.html":{}}}],["consist",{"_index":4440,"title":{},"body":{"license.html":{}}}],["consol",{"_index":1485,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["console.error('internalid",{"_index":2811,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{}}}],["console.error('wrong",{"_index":2441,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"injectables/Time.html":{}}}],["console.error(error",{"_index":1487,"title":{},"body":{"interfaces/DataConst.html":{},"pipes/DateProxyPipe.html":{},"interfaces/HighlightDataset.html":{},"injectables/LocateService.html":{},"interfaces/YScale.html":{}}}],["console.log('error",{"_index":1478,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["console.log('reload",{"_index":1666,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["console.log('timespan",{"_index":3402,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["conspicu",{"_index":4320,"title":{},"body":{"license.html":{}}}],["const",{"_index":85,"title":{},"body":{"interfaces/Address.html":{},"injectables/BasicAuthService.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandTimeModule.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"injectables/LabelMapperService.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalStorage.html":{},"injectables/LocateService.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"classes/PermalinkService.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"injectables/StatusIntervalResolverService.html":{},"injectables/Time.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["constitut",{"_index":4358,"title":{},"body":{"license.html":{}}}],["constru",{"_index":4382,"title":{},"body":{"license.html":{}}}],["construct",{"_index":2806,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"components/PredefinedTimespanSelectorComponent.html":{}}}],["constructor",{"_index":60,"title":{},"body":{"interfaces/Address.html":{},"injectables/BasicAuthService.html":{},"classes/BufferedTime.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/MinMaxRange.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"injectables/StatusIntervalResolverService.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["constructor(api",{"_index":3439,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["constructor(apiinterfac",{"_index":1591,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{}}}],["constructor(cach",{"_index":569,"title":{},"body":{"injectables/CachingInterceptor.html":{},"components/TimeRangeSliderComponent.html":{}}}],["constructor(favoritesrvc",{"_index":2822,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["constructor(favsrvc",{"_index":2381,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["constructor(from",{"_index":4005,"title":{},"body":{"classes/Timespan.html":{}}}],["constructor(http",{"_index":299,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/DatasetApiMapping.html":{},"injectables/NominatimGeoSearchService.html":{}}}],["constructor(httpcli",{"_index":2883,"title":{},"body":{"injectables/LabelMapperService.html":{},"injectables/StatusCheckService.html":{}}}],["constructor(httphandl",{"_index":2765,"title":{},"body":{"injectables/HttpService.html":{}}}],["constructor(httpservic",{"_index":2103,"title":{},"body":{"injectables/EventingImplApiInterface.html":{},"injectables/SplittedDataDatasetApiInterface.html":{}}}],["constructor(internalid",{"_index":1829,"title":{},"body":{"classes/DatasetOptions.html":{},"classes/TimedDatasetOptions.html":{}}}],["constructor(internalidhandl",{"_index":2940,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["constructor(iterablediff",{"_index":1879,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["constructor(labelmappersrvc",{"_index":2869,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["constructor(listselectorservic",{"_index":2967,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["constructor(localstorag",{"_index":1961,"title":{},"body":{"classes/DatasetService.html":{},"injectables/FavoriteService.html":{},"injectables/Time.html":{}}}],["constructor(locateservic",{"_index":3083,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["constructor(mapcach",{"_index":426,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/ExtentControlComponent.html":{},"components/GeosearchControlComponent.html":{},"injectables/LocateService.html":{},"components/ZoomControlComponent.html":{}}}],["constructor(opt",{"_index":2480,"title":{},"body":{"classes/GeoCureGeoJSON.html":{}}}],["constructor(predefinedsrvc",{"_index":4011,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["constructor(serviceselectorservic",{"_index":3698,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["constructor(set",{"_index":3633,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["constructor(settingsrvc",{"_index":3317,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["constructor(timesrvc",{"_index":698,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["constructor(timestamp",{"_index":360,"title":{},"body":{"classes/BufferedTime.html":{}}}],["constructor(transl",{"_index":2924,"title":{},"body":{"classes/LanguageChangNotifier.html":{},"classes/LocalSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["conta",{"_index":1449,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["contain",{"_index":837,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/YScale.html":{},"index.html":{},"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["content",{"_index":1915,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"license.html":{}}}],["content.t",{"_index":2557,"title":{},"body":{"classes/HasLoadableContent.html":{}}}],["content.ts:5",{"_index":2558,"title":{},"body":{"classes/HasLoadableContent.html":{}}}],["content.ts:7",{"_index":2560,"title":{},"body":{"classes/HasLoadableContent.html":{}}}],["context",{"_index":4461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":4268,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":4304,"title":{},"body":{"license.html":{}}}],["contribution(",{"_index":4350,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":486,"title":{},"body":{"classes/CachedMapComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["contributori",{"_index":4359,"title":{},"body":{"license.html":{}}}],["control",{"_index":288,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["control'},{'nam",{"_index":228,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["convers",{"_index":4288,"title":{},"body":{"license.html":{}}}],["coord",{"_index":853,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["coordin",{"_index":100,"title":{},"body":{"interfaces/Address.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"interfaces/YScale.html":{}}}],["coords[0",{"_index":1353,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["copi",{"_index":484,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["copyright",{"_index":4254,"title":{},"body":{"license.html":{}}}],["core",{"_index":4123,"title":{},"body":{"dependencies.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["correctli",{"_index":4531,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["correspond",{"_index":3364,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"injectables/StatusCheckService.html":{}}}],["count",{"_index":3394,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["counter",{"_index":1586,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["counterclaim",{"_index":4355,"title":{},"body":{"license.html":{}}}],["counterxaxi",{"_index":2158,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["counteryaxi",{"_index":2159,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["counti",{"_index":13,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["countri",{"_index":11,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["country_cod",{"_index":12,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["countrycod",{"_index":118,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["creat",{"_index":488,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/ListSelectorComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["createbaseurl",{"_index":3235,"title":{},"body":{"classes/PermalinkService.html":{}}}],["createbasicauthhead",{"_index":2100,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["createbasicauthheader(token",{"_index":2109,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["creategeojson",{"_index":3492,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["creategeojson(profiledataentri",{"_index":3499,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["createmap",{"_index":409,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["createpermalink",{"_index":3234,"title":{},"body":{"classes/PermalinkService.html":{}}}],["createrefvalid(refid",{"_index":3614,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["createrequesttimespan",{"_index":137,"title":{},"body":{"classes/ApiInterface.html":{},"classes/EventingApiService.html":{}}}],["createrequesttimespan(timespan",{"_index":139,"title":{},"body":{"classes/ApiInterface.html":{},"classes/EventingApiService.html":{}}}],["createrequesturl",{"_index":138,"title":{},"body":{"classes/ApiInterface.html":{},"classes/EventingApiService.html":{}}}],["createrequesturl(apiurl",{"_index":144,"title":{},"body":{"classes/ApiInterface.html":{},"classes/EventingApiService.html":{}}}],["createstyl",{"_index":1955,"title":{},"body":{"classes/DatasetService.html":{}}}],["createstyles(internalid",{"_index":1967,"title":{},"body":{"classes/DatasetService.html":{}}}],["createtimespanofinterv",{"_index":3874,"title":{},"body":{"injectables/Time.html":{}}}],["createtimespanofinterval(timeinterv",{"_index":3885,"title":{},"body":{"injectables/Time.html":{}}}],["createxaxis(dataset",{"_index":2223,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["createyaxis(dataset",{"_index":2249,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["creation",{"_index":4556,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["cross",{"_index":4354,"title":{},"body":{"license.html":{}}}],["crosshair",{"_index":3302,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["css",{"_index":4558,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["current",{"_index":1308,"title":{},"body":{"interfaces/DataConst.html":{},"pipes/DateProxyPipe.html":{},"interfaces/HighlightDataset.html":{},"injectables/LabelMapperService.html":{},"components/ServiceSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{}}}],["current_month",{"_index":2032,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["current_week",{"_index":2030,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["current_year",{"_index":2034,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["currentlang",{"_index":3040,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["currenttim",{"_index":384,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/LocalHttpCache.html":{}}}],["currenttimeid",{"_index":872,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["cursor",{"_index":1446,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["curve(curvelinear",{"_index":1662,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["curve(d3.curvelinear",{"_index":1328,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["curvelinear",{"_index":1638,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["custom",{"_index":1133,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["customari",{"_index":4395,"title":{},"body":{"license.html":{}}}],["d",{"_index":1202,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["d.dist",{"_index":1792,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["d.tick",{"_index":1793,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["d.timestamp",{"_index":1320,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d.valu",{"_index":2230,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["d.xdiagcoord",{"_index":1324,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d.ydiagcoord",{"_index":1327,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3",{"_index":212,"title":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandD3Module.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"dependencies.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["d3.area",{"_index":1645,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["d3.axi",{"_index":1647,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["d3.axisbottom(this.xscalebas",{"_index":1218,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.axisleft(yscale).ticks(5",{"_index":1258,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.brushx",{"_index":1113,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.event.selection[1",{"_index":1119,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.event.subject.x",{"_index":1393,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.event.x",{"_index":1389,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.extent([range[0",{"_index":2245,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["d3.extent(data.valu",{"_index":2229,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["d3.extent(dataentry.data",{"_index":1005,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.j",{"_index":4496,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["d3.line",{"_index":1318,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.min(this.labeltimestamp",{"_index":1461,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.mouse(this.background.nod",{"_index":1345,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.scalelinear",{"_index":793,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.select",{"_index":827,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.select(k[0",{"_index":1269,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.select(this.d3elem.nativeel",{"_index":879,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.selectall('.focu",{"_index":1378,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.selectall('.mous",{"_index":1377,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.timeday.range(rang",{"_index":1182,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.timeformat(timeformatstring)(new",{"_index":1221,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.timehours(rang",{"_index":1180,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.timeminutes(rang",{"_index":1177,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3axistyp",{"_index":674,"title":{},"body":{"interfaces/D3GraphOptions.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"miscellaneous/enumerations.html":{}}}],["d3axistype.dist",{"_index":1651,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["d3axistype.tick",{"_index":1717,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["d3axistype.tim",{"_index":1715,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["d3elem",{"_index":813,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3graphopt",{"_index":668,"title":{"interfaces/D3GraphOptions.html":{}},"body":{"interfaces/D3GraphOptions.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["d3overviewtimeseriesgraphcompon",{"_index":211,"title":{"components/D3OverviewTimeseriesGraphComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandD3Module.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["d3plotopt",{"_index":705,"title":{"interfaces/D3PlotOptions.html":{}},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["d3selectionrang",{"_index":758,"title":{"classes/D3SelectionRange.html":{}},"body":{"classes/D3SelectionRange.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["d3timeseriesgraphcompon",{"_index":216,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandD3Module.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["d3trajectorygraphcompon",{"_index":217,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandD3Module.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["d[0",{"_index":1321,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["daili",{"_index":1181,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["damag",{"_index":4419,"title":{},"body":{"license.html":{}}}],["darkgreen",{"_index":4606,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["dasharray",{"_index":1132,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["data",{"_index":638,"title":{"interfaces/Data.html":{}},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataSeries.html":{},"interfaces/DatasetApiV2.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"interfaces/DrawOptions.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataEntry.html":{},"interfaces/Id.html":{},"interfaces/Layout.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/MinMaxRange.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["data(entry.data.filter((d",{"_index":1334,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["data(valu",{"_index":1721,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["data.dist",{"_index":1714,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["data.referencevalues[refvalue.id",{"_index":996,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["data.t",{"_index":1989,"title":{},"body":{"interfaces/DatasetTableData.html":{}}}],["data.tick",{"_index":1718,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["data.timestamp",{"_index":1716,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["data.valu",{"_index":963,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["data.values.foreach((entri",{"_index":3524,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["data.values.length",{"_index":2186,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["data.values[0",{"_index":2191,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["data.verticalunit",{"_index":2252,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["data:application/json",{"_index":2843,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["dataconst",{"_index":773,"title":{"interfaces/DataConst.html":{}},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataentri",{"_index":783,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataentry.axisoptions.uom",{"_index":1020,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataentry.axisoptions.yaxisrang",{"_index":1003,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataentry.axisoptions.zerobas",{"_index":1021,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataentry.bars.linewidth",{"_index":975,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataentry.datas[key",{"_index":2214,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["dataentry.datas[key].value.foreach((entri",{"_index":2208,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["dataentry.dataset.internalid",{"_index":2212,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["dataentry.internalid",{"_index":1017,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataentry.label",{"_index":2218,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["dataentry.lines.linewidth",{"_index":973,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataentry.lines.pointradiu",{"_index":974,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataentry.options.foreach((opt",{"_index":2205,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["dataentry.vis",{"_index":1018,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataext",{"_index":1004,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataextent[1",{"_index":1014,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataindex",{"_index":2275,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["datalength",{"_index":1649,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["dataparameterfilt",{"_index":1488,"title":{"interfaces/DataParameterFilter.html":{}},"body":{"interfaces/DataParameterFilter.html":{},"interfaces/DatasetApiV2.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/ParameterFilter.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["dataseri",{"_index":824,"title":{"interfaces/DataSeries.html":{}},"body":{"interfaces/DataConst.html":{},"interfaces/DataSeries.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Plot.html":{},"interfaces/SeriesOptions.html":{},"interfaces/YScale.html":{}}}],["dataset",{"_index":220,"title":{"classes/Dataset.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandSelectorModule.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["dataset.id",{"_index":932,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/YScale.html":{}}}],["dataset.internalid",{"_index":953,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/SingleFavorite.html":{},"interfaces/YScale.html":{}}}],["dataset.label",{"_index":966,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"interfaces/SingleFavorite.html":{},"interfaces/YScale.html":{}}}],["dataset.lastvalue.timestamp",{"_index":3519,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["dataset.uom",{"_index":957,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["dataset.url",{"_index":933,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/YScale.html":{}}}],["dataset?.parameters.phenomenon.label",{"_index":4032,"title":{},"body":{"components/TrajectoryEntryComponent.html":{}}}],["datasetapi",{"_index":327,"title":{"interfaces/DatasetApi.html":{}},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["datasetapiinterfac",{"_index":779,"title":{},"body":{"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/FilteredParameter.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["datasetapilist",{"_index":3693,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["datasetapimap",{"_index":1533,"title":{"injectables/DatasetApiMapping.html":{}},"body":{"injectables/DatasetApiMapping.html":{},"modules/HelgolandCoreModule.html":{},"components/ListSelectorComponent.html":{},"overview.html":{}}}],["datasetapiv1",{"_index":1562,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["datasetapiv2",{"_index":1559,"title":{"interfaces/DatasetApiV2.html":{}},"body":{"interfaces/DatasetApiV2.html":{},"classes/UriParameterCoder.html":{}}}],["datasetapivers",{"_index":1542,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"components/ListSelectorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["datasetapiversion.v1",{"_index":1553,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"components/ListSelectorComponent.html":{}}}],["datasetapiversion.v2",{"_index":1556,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"components/ListSelectorComponent.html":{}}}],["datasetbystationselectorcompon",{"_index":219,"title":{"components/DatasetByStationSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["datasetconstel",{"_index":1627,"title":{"interfaces/DatasetConstellation.html":{}},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["datasetentri",{"_index":1694,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["datasetentry.data",{"_index":1739,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["datasetentry.data.foreach((elem",{"_index":1699,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["datasetentry.dataset.internalid",{"_index":1743,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["datasetentry.dataset.uom",{"_index":1742,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["datasetentry.drawopt",{"_index":1741,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["datasetentry.yscal",{"_index":1749,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["datasetid",{"_index":691,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["datasetidresolv",{"_index":874,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["datasetidschang",{"_index":1925,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["datasetidschanges.foreachaddeditem((addeditem",{"_index":1927,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["datasetidschanges.foreachremoveditem((removeditem",{"_index":1929,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["datasetidsdiff",{"_index":1865,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["datasetidsmultipl",{"_index":4566,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["datasetidx",{"_index":951,"title":{},"body":{"interfaces/DataConst.html":{},"classes/DatasetService.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["datasetimplapiinterfac",{"_index":3777,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["datasetmap",{"_index":870,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["datasetopt",{"_index":692,"title":{"classes/DatasetOptions.html":{}},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DrawOptions.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/MinMaxRange.html":{},"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["datasetoptions(entri",{"_index":4582,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["datasetoptions.gener",{"_index":938,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["datasetoptions:15",{"_index":3983,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:23",{"_index":3981,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:31",{"_index":3989,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:33",{"_index":3985,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:41",{"_index":3987,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:49",{"_index":3991,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:57",{"_index":3982,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:65",{"_index":3988,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:73",{"_index":3986,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:81",{"_index":3984,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:89",{"_index":3990,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptionschang",{"_index":1871,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["datasetoptionschanged(internalid",{"_index":923,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["datasetoptionsmultipl",{"_index":4579,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["datasetparameterconstel",{"_index":1514,"title":{"classes/DatasetParameterConstellation.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["datasetpresentercompon",{"_index":780,"title":{"classes/DatasetPresenterComponent.html":{}},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["datasets.foreach((dataset",{"_index":3517,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["datasetservic",{"_index":1953,"title":{"classes/DatasetService.html":{}},"body":{"classes/DatasetService.html":{}}}],["datasettablecompon",{"_index":222,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandDatasetTableModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["datasettabledata",{"_index":1986,"title":{"interfaces/DatasetTableData.html":{}},"body":{"interfaces/DatasetTableData.html":{}}}],["datasettyp",{"_index":1503,"title":{},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"miscellaneous/enumerations.html":{}}}],["datayrang",{"_index":803,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["date",{"_index":361,"title":{},"body":{"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"pipes/DateProxyPipe.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/Layout.html":{},"injectables/LocalHttpCache.html":{},"classes/OnGoingHttpCache.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/Timespan.html":{},"components/TimespanShiftSelectorComponent.html":{},"license.html":{}}}],["date('2017",{"_index":4601,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["date().gettim",{"_index":385,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/LocalHttpCache.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["date(d.valueof",{"_index":1222,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["date(this.dataset.firstvalue.timestamp",{"_index":3566,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["date(this.dataset.lastvalue.timestamp",{"_index":3568,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["date(this.xaxisrange.to",{"_index":1178,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["datepip",{"_index":1998,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["datepipe('en').transform(valu",{"_index":2015,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["datepipe(this.translate.currentlang",{"_index":2010,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["dateproxypip",{"_index":1991,"title":{"pipes/DateProxyPipe.html":{}},"body":{"pipes/DateProxyPipe.html":{},"modules/HelgolandCoreModule.html":{},"overview.html":{}}}],["datetim",{"_index":1990,"title":{},"body":{"interfaces/DatasetTableData.html":{}}}],["datum",{"_index":1006,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["datum(entry.data",{"_index":1330,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["datum(valu",{"_index":1728,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["datum[0",{"_index":1008,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["datum[1",{"_index":1007,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["datum[options.id",{"_index":1797,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["days').endof('day').unix",{"_index":2046,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["days').startof('day').unix",{"_index":2045,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["declar",{"_index":2140,"title":{},"body":{"modules/EventingModule.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"injectables/LabelMapperService.html":{},"overview.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["decodekey",{"_index":4036,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["decodekey(key",{"_index":4040,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["decodevalu",{"_index":4037,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["decodevalue(valu",{"_index":4042,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["default",{"_index":440,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"classes/ExtendedTimeseries.html":{},"injectables/FavoriteService.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"classes/IdCache.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/MapCache.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"classes/PermalinkService.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"classes/SettingsService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/YScale.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["default_base_layer_attribut",{"_index":483,"title":{},"body":{"classes/CachedMapComponent.html":{},"miscellaneous/variables.html":{}}}],["default_base_layer_nam",{"_index":479,"title":{},"body":{"classes/CachedMapComponent.html":{},"miscellaneous/variables.html":{}}}],["default_base_layer_url",{"_index":481,"title":{},"body":{"classes/CachedMapComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultgraphopt",{"_index":1650,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["defaults.styleext",{"_index":4621,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["defaultselect",{"_index":1589,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["defaultstyl",{"_index":3489,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["defend",{"_index":4442,"title":{},"body":{"license.html":{}}}],["defin",{"_index":141,"title":{},"body":{"classes/ApiInterface.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/D3SelectionRange.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/Filter.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"classes/GeoSearch.html":{},"components/GeosearchControlComponent.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"classes/IdCache.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/Plot.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/SettingsService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"injectables/StatusCheckService.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["definedtimespan",{"_index":2022,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"components/TimespanButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["definedtimespanservic",{"_index":2016,"title":{"injectables/DefinedTimespanService.html":{}},"body":{"injectables/DefinedTimespanService.html":{},"modules/HelgolandCoreModule.html":{},"components/TimespanButtonComponent.html":{},"overview.html":{}}}],["definit",{"_index":4249,"title":{},"body":{"license.html":{}}}],["delaytouchend",{"_index":3310,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["delet",{"_index":387,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["deliber",{"_index":4416,"title":{},"body":{"license.html":{}}}],["deliverymethod",{"_index":647,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["demo",{"_index":4211,"title":{},"body":{"index.html":{}}}],["dep",{"_index":4539,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["depend",{"_index":1209,"title":{"dependencies.html":{}},"body":{"interfaces/DataConst.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["depict",{"_index":4492,"title":{},"body":{"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["deriv",{"_index":4295,"title":{},"body":{"license.html":{}}}],["describ",{"_index":3358,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["descript",{"_index":740,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"classes/DatasetOptions.html":{},"injectables/InternalIdHandler.html":{},"components/ListSelectorComponent.html":{},"interfaces/MinMaxRange.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/StatusCheckService.html":{}}}],["design",{"_index":4322,"title":{},"body":{"license.html":{}}}],["detail",{"_index":4523,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["determin",{"_index":4407,"title":{},"body":{"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["determinedlabel",{"_index":2868,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["devkit/cor",{"_index":4519,"title":{},"body":{"additional-documentation/how-tos.html":{}}}],["diagram",{"_index":754,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["diagramoptionsd3",{"_index":4576,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["diagramwidth",{"_index":1162,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["diff",{"_index":1392,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["differ",{"_index":428,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["diffoverviewtimeinterv",{"_index":1163,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dimens",{"_index":1474,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dimensions.height",{"_index":1477,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dimensions.width",{"_index":1476,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["direct",{"_index":201,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["directori",{"_index":4513,"title":{},"body":{"additional-documentation/how-tos.html":{}}}],["disabl",{"_index":1424,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/ListSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["disclaim",{"_index":4396,"title":{},"body":{"license.html":{}}}],["discuss",{"_index":4317,"title":{},"body":{"license.html":{}}}],["display",{"_index":4339,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["display_nam",{"_index":42,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["displaylogo",{"_index":2172,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["displaymodebar",{"_index":2168,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["displaynam",{"_index":112,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["dist",{"_index":1640,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["distanc",{"_index":1184,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"miscellaneous/enumerations.html":{}}}],["distribut",{"_index":4248,"title":{},"body":{"license.html":{}}}],["div",{"_index":4624,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["divid",{"_index":4489,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["divoverviewtimewidth",{"_index":1164,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["do",{"_index":584,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["doc",{"_index":3359,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["docheck",{"_index":396,"title":{},"body":{"classes/CachedMapComponent.html":{},"classes/DatasetPresenterComponent.html":{},"injectables/StatusCheckService.html":{}}}],["docheck(url",{"_index":3832,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["docheckurl",{"_index":3820,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["docheckurl(url",{"_index":3834,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["document",{"_index":4199,"title":{},"body":{"index.html":{},"license.html":{}}}],["document.body.appendchild(a",{"_index":2848,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["document.body.appendchild(nod",{"_index":3190,"title":{},"body":{"injectables/NotifierService.html":{}}}],["document.createelement('a",{"_index":2841,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["document.createelement('div",{"_index":3184,"title":{},"body":{"injectables/NotifierService.html":{}}}],["document.createtextnod",{"_index":3188,"title":{},"body":{"injectables/NotifierService.html":{}}}],["document.getelementbyid(id",{"_index":3182,"title":{},"body":{"injectables/NotifierService.html":{}}}],["doesn't",{"_index":3369,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["dom",{"_index":177,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["domain",{"_index":833,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["domain([range[0",{"_index":1800,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["domain([this.xaxisrange.from",{"_index":1191,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["domain([ymin",{"_index":1255,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["domain(this.getxdomain(this.basevalu",{"_index":1807,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["dommaxarr.push(entry.data.find((elem",{"_index":1422,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["domminarr.push(entry.data.find((elem",{"_index":1419,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["don't",{"_index":4239,"title":{},"body":{"index.html":{}}}],["done",{"_index":4585,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["dot",{"_index":673,"title":{},"body":{"interfaces/D3GraphOptions.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["drag",{"_index":225,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandModificationModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{}}}],["dragcurr",{"_index":862,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dragendhandl",{"_index":1766,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["draggingmov",{"_index":863,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["draghandl",{"_index":1765,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["dragmod",{"_index":2163,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["dragmoverang",{"_index":865,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dragmovestart",{"_index":864,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dragoptionscompon",{"_index":224,"title":{"components/DragOptionsComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandModificationModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["dragrect",{"_index":829,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dragrectg",{"_index":830,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dragstart",{"_index":861,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dragstarthandl",{"_index":1764,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["draw",{"_index":1050,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["drawchart",{"_index":2266,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["drawdots(valu",{"_index":1719,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["drawgeometri",{"_index":3254,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["drawgraph(yscal",{"_index":1729,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["drawlinegraph",{"_index":1733,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["drawopt",{"_index":1628,"title":{"interfaces/DrawOptions.html":{}},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["drawvalueline(valu",{"_index":1726,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["drawxaxis(buff",{"_index":1806,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["drawxaxis(bufferxrang",{"_index":1188,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["drawyaxis(entri",{"_index":1245,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["drawyaxis(opt",{"_index":1795,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["durat",{"_index":3909,"title":{},"body":{"injectables/Time.html":{}}}],["durationmilli",{"_index":3919,"title":{},"body":{"injectables/Time.html":{}}}],["dynam",{"_index":4095,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":2859,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["e.cod",{"_index":3056,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["e.color",{"_index":3611,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["e.g",{"_index":982,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{}}}],["e.internalid",{"_index":912,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["e.label",{"_index":3336,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["e.nam",{"_index":3335,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["e.referencevalueid",{"_index":3606,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["e.seperatorafterthisitem",{"_index":3339,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["e.target.result",{"_index":2860,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["e.timestamp",{"_index":2197,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["e.uom",{"_index":1030,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["e.vis",{"_index":3613,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["each",{"_index":838,"title":{},"body":{"interfaces/DataConst.html":{},"classes/DatasetOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["edg",{"_index":1186,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["editableopt",{"_index":3426,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["editdatasetopt",{"_index":3428,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["editdatasetoptions(opt",{"_index":3451,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["editori",{"_index":4296,"title":{},"body":{"license.html":{}}}],["el",{"_index":1470,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["el.getbbox",{"_index":1475,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["elabor",{"_index":4298,"title":{},"body":{"license.html":{}}}],["electron",{"_index":4310,"title":{},"body":{"license.html":{}}}],["elem",{"_index":1464,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["elem.label",{"_index":2447,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["elem.xdiagcoord",{"_index":1420,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["element",{"_index":200,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{}}}],["elementref",{"_index":775,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["emit",{"_index":4587,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["empti",{"_index":2180,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"classes/SettingsService.html":{}}}],["en",{"_index":2011,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["enabl",{"_index":1429,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["encapsul",{"_index":805,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/YScale.html":{}}}],["encod",{"_index":2129,"title":{},"body":{"injectables/EventingImplApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["encodekey",{"_index":4038,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["encodekey(key",{"_index":4044,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["encodeuri(moment(timespan.from).format",{"_index":159,"title":{},"body":{"classes/ApiInterface.html":{}}}],["encodeuricomponent(json",{"_index":2844,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["encodeuricomponent(key",{"_index":4057,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["encodeuricomponent(this.url",{"_index":3222,"title":{},"body":{"components/PermalinkInMailComponent.html":{}}}],["encodeuricomponent(valu",{"_index":4058,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["encodevalu",{"_index":4039,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["encodevalue(valu",{"_index":4046,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["end",{"_index":156,"title":{},"body":{"classes/ApiInterface.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/Time.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/YScale.html":{}}}],["end.add(1",{"_index":3791,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["end.unix",{"_index":3789,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["endof(str",{"_index":3353,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["endpoint",{"_index":145,"title":{},"body":{"classes/ApiInterface.html":{},"classes/EventingApiService.html":{},"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["enough",{"_index":4562,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["enter().append('circl",{"_index":1335,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entiti",{"_index":4256,"title":{},"body":{"license.html":{}}}],["entri",{"_index":1244,"title":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"injectables/LocateService.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"interfaces/SingleFavorite.html":{},"injectables/StatusCheckService.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["entry'},{'nam",{"_index":267,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["entry.apiurl",{"_index":3761,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["entry.axisoptions.uom",{"_index":1300,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.color",{"_index":1090,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.compon",{"_index":2623,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entry.component.html",{"_index":3425,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entry.component.scss",{"_index":3424,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{}}}],["entry.component.t",{"_index":2934,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entry.component.ts:10",{"_index":2951,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["entry.component.ts:13",{"_index":2950,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entry.component.ts:16",{"_index":2952,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entry.component.ts:19",{"_index":2941,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entry.component.ts:21",{"_index":4031,"title":{},"body":{"components/TrajectoryEntryComponent.html":{}}}],["entry.component.ts:22",{"_index":3441,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:23",{"_index":4030,"title":{},"body":{"components/TrajectoryEntryComponent.html":{}}}],["entry.component.ts:25",{"_index":2944,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:28",{"_index":3445,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:31",{"_index":3446,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:32",{"_index":2945,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entry.component.ts:34",{"_index":3447,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:36",{"_index":2946,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["entry.component.ts:37",{"_index":3448,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entry.component.ts:39",{"_index":3468,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:41",{"_index":2948,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entry.component.ts:42",{"_index":3440,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:48",{"_index":2943,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["entry.component.ts:51",{"_index":3458,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:55",{"_index":3452,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:59",{"_index":3462,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:64",{"_index":3453,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:7",{"_index":2949,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["entry.component.ts:71",{"_index":3456,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:75",{"_index":3460,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:91",{"_index":3454,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.data",{"_index":1351,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.data.length",{"_index":1301,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.data[idx",{"_index":1435,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.dataset",{"_index":1668,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["entry.dataset.uom",{"_index":1779,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["entry.drawopt",{"_index":1752,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["entry.filt",{"_index":2426,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["entry.filter[this.parameters[index].typ",{"_index":3004,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["entry.filterlist",{"_index":2450,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["entry.first",{"_index":1041,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.focuslabel",{"_index":1088,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.focuslabel.text(item[id",{"_index":1452,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.focuslabelrect",{"_index":1083,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.geometry.coordinates[0",{"_index":3286,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["entry.id",{"_index":1555,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{}}}],["entry.internalid",{"_index":905,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.internalid.startswith('ref",{"_index":990,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.isdis",{"_index":2993,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["entry.itemid",{"_index":3005,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["entry.label",{"_index":2448,"title":{},"body":{"interfaces/FilteredParameter.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["entry.lines.linewidth",{"_index":1331,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.lines.pointradiu",{"_index":1341,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.offset",{"_index":1043,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.options.titl",{"_index":3124,"title":{},"body":{"injectables/LocateService.html":{}}}],["entry.points.length",{"_index":2272,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["entry.points[0].data.id",{"_index":2274,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["entry.points[0].pointnumb",{"_index":2276,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["entry.quantities.platform",{"_index":3715,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["entry.quantities.st",{"_index":3717,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["entry.reduce((previ",{"_index":3795,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["entry.select",{"_index":1618,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["entry.serviceid",{"_index":3760,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["entry.uom",{"_index":1277,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.url",{"_index":2432,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["entry.yscal",{"_index":1049,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.yscale(item[id",{"_index":1780,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["entry/profil",{"_index":2622,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"components/ProfileEntryComponent.html":{}}}],["entry/timeseri",{"_index":2624,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"injectables/ReferenceValueColorCache.html":{}}}],["entry/trajectori",{"_index":2625,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entryidx",{"_index":1349,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entryone.id",{"_index":3018,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["entryone.url",{"_index":3020,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["entrytwo.id",{"_index":3019,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["entrytwo.url",{"_index":3021,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["entryx",{"_index":1453,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["enum",{"_index":1521,"title":{},"body":{"classes/Dataset.html":{},"injectables/DatasetApiMapping.html":{},"classes/DatasetParameterConstellation.html":{},"injectables/DefinedTimespanService.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/Platform.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["enumer",{"_index":4148,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":4186,"title":{},"body":{"index.html":{}}}],["equal",{"_index":1379,"title":{},"body":{"interfaces/DataConst.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["equal(this.oldgraphopt",{"_index":1937,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["equal(valu",{"_index":1944,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["error",{"_index":621,"title":{},"body":{"injectables/CachingInterceptor.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"pipes/DateProxyPipe.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/FilteredParameter.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"injectables/LabelMapperService.html":{},"injectables/LocateService.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"injectables/StatusCheckService.html":{},"interfaces/YScale.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["error('method",{"_index":1674,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["erroronload",{"_index":2442,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["es2015",{"_index":4551,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["escap",{"_index":3392,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["eval",{"_index":3406,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["eval'",{"_index":3343,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["eval(expression)._d",{"_index":3412,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["evaluterefresh",{"_index":3629,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["even",{"_index":3368,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"license.html":{}}}],["event",{"_index":191,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"injectables/JsonFavoriteExporterService.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["event.target.fil",{"_index":2850,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["event.value[0",{"_index":3979,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["event.value[1",{"_index":3975,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["eventemitt",{"_index":192,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{}}}],["eventingapiservic",{"_index":2072,"title":{"classes/EventingApiService.html":{}},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["eventingev",{"_index":633,"title":{"interfaces/EventingEvent.html":{}},"body":{"interfaces/CollectionMetadata.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["eventingeventfilt",{"_index":2080,"title":{"interfaces/EventingEventFilter.html":{}},"body":{"classes/EventingApiService.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscriptionFilter.html":{}}}],["eventingeventresult",{"_index":645,"title":{"interfaces/EventingEventResults.html":{}},"body":{"interfaces/CollectionMetadata.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["eventingfilt",{"_index":2093,"title":{"interfaces/EventingFilter.html":{}},"body":{"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscriptionFilter.html":{}}}],["eventingimplapiinterfac",{"_index":2095,"title":{"injectables/EventingImplApiInterface.html":{}},"body":{"injectables/EventingImplApiInterface.html":{}}}],["eventingmodul",{"_index":2137,"title":{"modules/EventingModule.html":{}},"body":{"modules/EventingModule.html":{},"modules.html":{}}}],["eventingsubscript",{"_index":646,"title":{"interfaces/EventingSubscription.html":{}},"body":{"interfaces/CollectionMetadata.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["eventingsubscriptionfilt",{"_index":2085,"title":{"interfaces/EventingSubscriptionFilter.html":{}},"body":{"classes/EventingApiService.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscriptionFilter.html":{}}}],["eventingsubscriptionresult",{"_index":650,"title":{"interfaces/EventingSubscriptionResults.html":{}},"body":{"interfaces/CollectionMetadata.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["eventingtempl",{"_index":648,"title":{"interfaces/EventingTemplate.html":{}},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["eventtrigg",{"_index":639,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["eventtyp",{"_index":634,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["everyth",{"_index":3815,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["evt",{"_index":3109,"title":{},"body":{"injectables/LocateService.html":{}}}],["exampl",{"_index":1827,"title":{},"body":{"classes/DatasetOptions.html":{},"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["except",{"_index":4342,"title":{},"body":{"license.html":{}}}],["exclud",{"_index":4319,"title":{},"body":{"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["exclus",{"_index":4333,"title":{},"body":{"license.html":{}}}],["execut",{"_index":1056,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["exercis",{"_index":4278,"title":{},"body":{"license.html":{}}}],["exist",{"_index":596,"title":{},"body":{"injectables/CachingInterceptor.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["expand",{"_index":935,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/HighlightDataset.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/ParameterFilter.html":{},"interfaces/YScale.html":{}}}],["expirationtim",{"_index":378,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"injectables/LocalHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["expirationtime.gettim",{"_index":391,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/LocalHttpCache.html":{}}}],["explan",{"_index":3347,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["explicitli",{"_index":4387,"title":{},"body":{"license.html":{}}}],["export",{"_index":48,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/Feature.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Offering.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["exporter.servic",{"_index":2636,"title":{},"body":{"modules/HelgolandFavoriteModule.html":{}}}],["exporter.service.t",{"_index":2819,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["exporter.service.ts:14",{"_index":2825,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["exporter.service.ts:34",{"_index":2827,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["exporter.service.ts:8",{"_index":2823,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["exportfavorit",{"_index":2820,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["express",{"_index":3322,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"license.html":{}}}],["extend",{"_index":172,"title":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}},"body":{"interfaces/AxesOptions.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/Feature.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"interfaces/Layout.html":{},"injectables/LocalHttpCache.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/MinMaxRange.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"interfaces/Offering.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"interfaces/StatusInterval.html":{},"interfaces/SupportedMimeTypes.html":{},"classes/TimeInterval.html":{},"injectables/TimeRangeSliderCache.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["extendedscatterdata",{"_index":2142,"title":{"interfaces/ExtendedScatterData.html":{}},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["extendedsettingsservic",{"_index":4642,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["extendedtimeseri",{"_index":1598,"title":{"classes/ExtendedTimeseries.html":{}},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["extendedtimeseriescompon",{"_index":4669,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["extendedtimeseriesentrycompon",{"_index":4666,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["extent",{"_index":227,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{}}}],["extent([[0",{"_index":1114,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["extent(this.basevalu",{"_index":1796,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["extent.component.html",{"_index":2297,"title":{},"body":{"components/ExtentControlComponent.html":{}}}],["extent/extent.compon",{"_index":2663,"title":{},"body":{"modules/HelgolandMapControlModule.html":{}}}],["extentcontrolcompon",{"_index":226,"title":{"components/ExtentControlComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapControlModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["extra",{"_index":3671,"title":{},"body":{"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{}}}],["factor",{"_index":3888,"title":{},"body":{"injectables/Time.html":{}}}],["factor).unix",{"_index":3921,"title":{},"body":{"injectables/Time.html":{}}}],["failur",{"_index":4430,"title":{},"body":{"license.html":{}}}],["fals",{"_index":518,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"pipes/DateProxyPipe.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"interfaces/MinMaxRange.html":{},"classes/ParameterConstellation.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/SingleFavorite.html":{},"interfaces/StatusInterval.html":{},"injectables/Time.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["favorit",{"_index":230,"title":{"interfaces/Favorite.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandFavoriteModule.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/SingleFavorite.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/introduction.html":{}}}],["favorite').subscribe((transl",{"_index":2396,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["favorite.label",{"_index":2336,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["favorite.servic",{"_index":2828,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["favoriteid",{"_index":2374,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["favorites.foreach((entri",{"_index":2862,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["favorites.json",{"_index":2830,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["favoriteservic",{"_index":2309,"title":{"injectables/FavoriteService.html":{}},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandFavoriteModule.html":{},"injectables/JsonFavoriteExporterService.html":{},"interfaces/SingleFavorite.html":{},"overview.html":{}}}],["favoritesrvc",{"_index":2824,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["favoritetogglercompon",{"_index":229,"title":{"components/FavoriteTogglerComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandFavoriteModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["favsrvc",{"_index":2385,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["featur",{"_index":1524,"title":{"interfaces/Feature.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/Feature.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/StatusInterval.html":{},"interfaces/SupportedMimeTypes.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/UriParameterCoder.html":{}}}],["fee",{"_index":4436,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":4600,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["fetchdata",{"_index":2477,"title":{},"body":{"classes/GeoCureGeoJSON.html":{}}}],["fetchdata(map",{"_index":2483,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["fetchservicesofapi",{"_index":3745,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["fetchservicesofapi(url",{"_index":3748,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["few",{"_index":4521,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["ff",{"_index":2839,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["ff0000",{"_index":4570,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["field",{"_index":4555,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["fifti",{"_index":4271,"title":{},"body":{"license.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/Feature.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Offering.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["filenam",{"_index":2829,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["fileread",{"_index":2854,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["files.length",{"_index":2851,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["fill",{"_index":1129,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["fillcolor",{"_index":797,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["filter",{"_index":251,"title":{"classes/Filter.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/introduction.html":{}}}],["filter((",{"_index":3332,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["filter).subscrib",{"_index":2430,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["filter.servic",{"_index":2427,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["filteredparamet",{"_index":2409,"title":{"interfaces/FilteredParameter.html":{}},"body":{"interfaces/FilteredParameter.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["filteredprovid",{"_index":2413,"title":{"interfaces/FilteredProvider.html":{}},"body":{"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"interfaces/Provider.html":{}}}],["filterlist",{"_index":2412,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["filterparamet",{"_index":2112,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["find",{"_index":2250,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["findurl",{"_index":2881,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["findurl(label",{"_index":2889,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["firebrick",{"_index":4604,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["first",{"_index":594,"title":{},"body":{"injectables/CachingInterceptor.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"components/ListSelectorComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["firstchang",{"_index":924,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["firstentri",{"_index":1696,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["firstlabel",{"_index":1355,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["firstlabel.push(",{"_index":1361,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["firstlabel.sort((a",{"_index":1362,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["firstlastvalu",{"_index":1508,"title":{"classes/FirstLastValue.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/ExtendedTimeseries.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["firstvalu",{"_index":1504,"title":{},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/ExtendedTimeseries.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["fit",{"_index":4404,"title":{},"body":{"license.html":{}}}],["fitbound",{"_index":420,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["fixedrang",{"_index":2242,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["flex",{"_index":4633,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["flot",{"_index":232,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandFlotModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"dependencies.html":{},"additional-documentation/introduction.html":{}}}],["flotoverviewtimeseriesgraphcompon",{"_index":231,"title":{"components/FlotOverviewTimeseriesGraphComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandFlotModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["flottimeseriesgraphcompon",{"_index":233,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandFlotModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["focu",{"_index":1075,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["focusg",{"_index":856,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["focuslab",{"_index":1646,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["focuslabel",{"_index":1629,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["focuslabelrect",{"_index":1630,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["focuslabeltim",{"_index":858,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["folder",{"_index":4220,"title":{},"body":{"index.html":{},"additional-documentation/how-tos.html":{}}}],["follow",{"_index":4177,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["font",{"_index":4127,"title":{},"body":{"dependencies.html":{}}}],["forceupd",{"_index":1497,"title":{},"body":{"interfaces/DataParameterFilter.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/ParameterFilter.html":{}}}],["foreach((key",{"_index":4075,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["forget",{"_index":4240,"title":{},"body":{"index.html":{}}}],["fork",{"_index":4183,"title":{},"body":{"index.html":{}}}],["forkjoin",{"_index":3776,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{}}}],["forkjoin(requests).pip",{"_index":3849,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["forkjoin(requests).pipe(map((entri",{"_index":3794,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["form",{"_index":4280,"title":{},"body":{"license.html":{}}}],["format",{"_index":934,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/HighlightDataset.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/ParameterFilter.html":{},"interfaces/YScale.html":{}}}],["formsmodul",{"_index":2626,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandTimeModule.html":{}}}],["formula",{"_index":1147,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["forward",{"_index":601,"title":{},"body":{"injectables/CachingInterceptor.html":{},"pipes/DateProxyPipe.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["found",{"_index":1480,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"components/ListSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["framer",{"_index":3311,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["free",{"_index":2233,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"license.html":{}}}],["ftp|http",{"_index":2916,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["function",{"_index":531,"title":{"miscellaneous/functions.html":{}},"body":{"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/SingleFavorite.html":{},"components/TimespanButtonComponent.html":{},"interfaces/YScale.html":{},"miscellaneous/functions.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["further",{"_index":3351,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["g",{"_index":4517,"title":{},"body":{"additional-documentation/how-tos.html":{}}}],["gener",{"_index":747,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/MinMaxRange.html":{},"interfaces/ParameterFilter.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{},"index.html":{},"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["generalizeallway",{"_index":741,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/PlotOptions.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["generateinternalid",{"_index":2814,"title":{},"body":{"injectables/InternalIdHandler.html":{}}}],["generateinternalid(dataset",{"_index":2804,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{}}}],["generatepermalink",{"_index":3236,"title":{},"body":{"classes/PermalinkService.html":{}}}],["generateuuid",{"_index":410,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["geo",{"_index":4493,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["geocuregeojson",{"_index":2474,"title":{"classes/GeoCureGeoJSON.html":{}},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["geocuregeojsonopt",{"_index":2481,"title":{"interfaces/GeoCureGeoJSONOptions.html":{}},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["geojson",{"_index":33,"title":{},"body":{"interfaces/Address.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"dependencies.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["geojson.bringtofront",{"_index":3540,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["geojson.geojsonobject",{"_index":43,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Data.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/IDataEntry.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"interfaces/ProfileDataEntry.html":{},"classes/ReferenceValues.html":{},"interfaces/TimeValueEntry.html":{}}}],["geojson.geometryobject",{"_index":3803,"title":{},"body":{"classes/Station.html":{},"interfaces/StationProperties.html":{},"classes/TimeseriesCollection.html":{}}}],["geojson.on('click",{"_index":3536,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["geojson.on('mouseout",{"_index":3541,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["geojson.on('mouseov",{"_index":3538,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["geojson.point",{"_index":769,"title":{},"body":{"interfaces/Data.html":{},"interfaces/IDataEntry.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/Platform.html":{},"interfaces/ProfileDataEntry.html":{},"classes/ReferenceValues.html":{},"interfaces/TimeValueEntry.html":{}}}],["geojson.setstyle(this.defaultstyl",{"_index":3535,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["geojson.setstyle(this.highlightstyl",{"_index":3539,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["geojsonopt",{"_index":2492,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["geometri",{"_index":98,"title":{},"body":{"interfaces/Address.html":{},"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/Data.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapViewModule.html":{},"interfaces/IDataEntry.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimeseriesCollection.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["geometrymapviewercompon",{"_index":234,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapViewModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["georeverseopt",{"_index":36,"title":{"interfaces/GeoReverseOptions.html":{}},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["georeverseresult",{"_index":37,"title":{"interfaces/GeoReverseResult.html":{}},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["geosearch",{"_index":38,"title":{"classes/GeoSearch.html":{}},"body":{"interfaces/Address.html":{},"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["geosearch.component.html",{"_index":2524,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["geosearch/geosearch.compon",{"_index":2664,"title":{},"body":{"modules/HelgolandMapControlModule.html":{}}}],["geosearchcontrolcompon",{"_index":237,"title":{"components/GeosearchControlComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapControlModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["geosearchopt",{"_index":39,"title":{"interfaces/GeoSearchOptions.html":{}},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["geosearchresult",{"_index":40,"title":{"interfaces/GeoSearchResult.html":{}},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["get",{"_index":3814,"title":{"index.html":{},"license.html":{}},"body":{"injectables/StatusCheckService.html":{},"index.html":{}}}],["get(id",{"_index":2786,"title":{},"body":{"classes/IdCache.html":{}}}],["get(req",{"_index":381,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/HttpCache.html":{},"injectables/LocalHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["get>(this.options.url",{"_index":2513,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["getapivers",{"_index":1538,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["getapiversion(apiurl",{"_index":1544,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["getbufferedtimespan",{"_index":3875,"title":{},"body":{"injectables/Time.html":{}}}],["getbufferedtimespan(timespan",{"_index":3887,"title":{},"body":{"injectables/Time.html":{}}}],["getcategori",{"_index":4064,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["getcolor",{"_index":661,"title":{},"body":{"injectables/ColorService.html":{}}}],["getdata",{"_index":1563,"title":{},"body":{"interfaces/DatasetApiV2.html":{},"interfaces/Plot.html":{},"classes/UriParameterCoder.html":{}}}],["getdata(id",{"_index":1566,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["getdataset",{"_index":1564,"title":{},"body":{"interfaces/DatasetApiV2.html":{},"classes/UriParameterCoder.html":{}}}],["getdataset(id",{"_index":1568,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["getdatasets(apiurl",{"_index":1570,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["getdimens",{"_index":1479,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["getdimensions(el",{"_index":1471,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["getdur",{"_index":3876,"title":{},"body":{"injectables/Time.html":{}}}],["getduration(timespan",{"_index":3890,"title":{},"body":{"injectables/Time.html":{}}}],["getev",{"_index":2075,"title":{},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["getevent(id",{"_index":2077,"title":{},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["getevents(apiurl",{"_index":2079,"title":{},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["getfavorit",{"_index":2319,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["getfavoritegroup",{"_index":2330,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["getfeatur",{"_index":4068,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["getgeometries(id",{"_index":1582,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["getinterv",{"_index":2019,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["getinterval(intervaldescrib",{"_index":2021,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["getitemforx(x",{"_index":1788,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["getmap",{"_index":3127,"title":{},"body":{"injectables/MapCache.html":{}}}],["getmap(id",{"_index":3129,"title":{},"body":{"injectables/MapCache.html":{}}}],["getmappedlabel",{"_index":2882,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["getmappedlabel(label",{"_index":2891,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["getmatchinginterv",{"_index":3853,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["getmatchinginterval(valu",{"_index":3855,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["getoff",{"_index":4067,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["getphenomena",{"_index":4065,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["getphenomenon",{"_index":4066,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["getplatform",{"_index":1565,"title":{},"body":{"interfaces/DatasetApiV2.html":{},"classes/UriParameterCoder.html":{}}}],["getplatform(id",{"_index":1572,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["getplatforms(apiurl",{"_index":1574,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["getprocedur",{"_index":4069,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["getrandomcolor",{"_index":662,"title":{},"body":{"injectables/ColorService.html":{}}}],["getservic",{"_index":4059,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["getset",{"_index":3763,"title":{},"body":{"classes/SettingsService.html":{}}}],["getsingletimeseri",{"_index":4062,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["getstat",{"_index":4060,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["getsubscript",{"_index":2076,"title":{},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["getsubscription(id",{"_index":2082,"title":{},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["getsubscriptions(apiurl",{"_index":2084,"title":{},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["gettimeseri",{"_index":4061,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["gettimeseriesextras(id",{"_index":4063,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["gettimestampbycoord(mincalcbrush",{"_index":1169,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["gettoken",{"_index":297,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["gettsdata",{"_index":3772,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["gettsdata(id",{"_index":3774,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["getxaxislabel",{"_index":1825,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["getxdomain(valu",{"_index":1817,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["getxdomainbytimestamp",{"_index":1146,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["getxvalue(data",{"_index":1710,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["getyaxisrang",{"_index":1302,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["getyaxisrange.yscal",{"_index":1303,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["gh",{"_index":4131,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["github",{"_index":4202,"title":{},"body":{"index.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["github:flot/flot",{"_index":4121,"title":{},"body":{"dependencies.html":{}}}],["give",{"_index":1447,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"injectables/StatusCheckService.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["given",{"_index":487,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/FilteredParameter.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/StatusCheckService.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["go",{"_index":608,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["goodwil",{"_index":4427,"title":{},"body":{"license.html":{}}}],["grah",{"_index":1314,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["grant",{"_index":4257,"title":{},"body":{"license.html":{}}}],["graph",{"_index":670,"title":{},"body":{"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/MinMaxRange.html":{},"interfaces/RawData.html":{},"classes/ReferenceValueOption.html":{},"interfaces/ScatterData.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{},"modules.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["graph'},{'nam",{"_index":215,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["graph.compon",{"_index":2601,"title":{},"body":{"modules/HelgolandD3Module.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandPlotlyModule.html":{}}}],["graph.component.html",{"_index":683,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["graph.component.scss",{"_index":682,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["graph.component.t",{"_index":678,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"miscellaneous/variables.html":{}}}],["graph.component.ts:22",{"_index":2458,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:24",{"_index":703,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:25",{"_index":2459,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:27",{"_index":704,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:28",{"_index":2460,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:30",{"_index":706,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:31",{"_index":2462,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:33",{"_index":708,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:34",{"_index":2461,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:347",{"_index":2931,"title":{},"body":{"interfaces/Layout.html":{}}}],["graph.component.ts:36",{"_index":707,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:37",{"_index":2465,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:39",{"_index":711,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:40",{"_index":2464,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:42",{"_index":710,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:43",{"_index":2463,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:45",{"_index":709,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:47",{"_index":720,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:49",{"_index":721,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:50",{"_index":722,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:52",{"_index":701,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:56",{"_index":2467,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:63",{"_index":2468,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:65",{"_index":713,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:69",{"_index":2470,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:72",{"_index":714,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:73",{"_index":2466,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:78",{"_index":719,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:82",{"_index":716,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:86",{"_index":712,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph/d3",{"_index":677,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"modules/HelgolandD3Module.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["graph/flot",{"_index":2456,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{},"modules/HelgolandFlotModule.html":{},"miscellaneous/variables.html":{}}}],["graph/plotli",{"_index":2144,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"modules/HelgolandPlotlyModule.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"miscellaneous/variables.html":{}}}],["graphbodi",{"_index":828,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["graphlin",{"_index":1837,"title":{},"body":{"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["graphopt",{"_index":693,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/DatasetPresenterComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graphoptionschang",{"_index":1872,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["graphoptionschanged(opt",{"_index":920,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["graphpoint",{"_index":1841,"title":{},"body":{"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["greater",{"_index":4640,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["grey",{"_index":1270,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["grid",{"_index":742,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["grossli",{"_index":4417,"title":{},"body":{"license.html":{}}}],["group",{"_index":2327,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["groupcount",{"_index":2312,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["groupfav",{"_index":2311,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["groupfavorit",{"_index":2308,"title":{"interfaces/GroupFavorite.html":{}},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{},"miscellaneous/variables.html":{}}}],["gt",{"_index":4028,"title":{},"body":{"components/TimespanShiftSelectorComponent.html":{}}}],["guid",{"_index":4511,"title":{},"body":{"additional-documentation/how-tos.html":{}}}],["h",{"_index":1473,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["h:%m",{"_index":1204,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["h:%m:%s')(new",{"_index":1812,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["halfdur",{"_index":3905,"title":{},"body":{"injectables/Time.html":{}}}],["handl",{"_index":1141,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["handle(req",{"_index":2772,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["handler",{"_index":602,"title":{},"body":{"injectables/CachingInterceptor.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["handler.servic",{"_index":1910,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"modules/HelgolandCoreModule.html":{},"injectables/SplittedDataDatasetApiInterface.html":{}}}],["handler.service.t",{"_index":2798,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"miscellaneous/variables.html":{}}}],["handler.service.ts:24",{"_index":2816,"title":{},"body":{"injectables/InternalIdHandler.html":{}}}],["handler.service.ts:33",{"_index":2817,"title":{},"body":{"injectables/InternalIdHandler.html":{}}}],["harmless",{"_index":4444,"title":{},"body":{"license.html":{}}}],["has(id",{"_index":2788,"title":{},"body":{"classes/IdCache.html":{}}}],["has(req",{"_index":2759,"title":{},"body":{"classes/HttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["hasdata",{"_index":1529,"title":{},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/ExtendedTimeseries.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["hasdataset",{"_index":1956,"title":{},"body":{"classes/DatasetService.html":{}}}],["hasfavorit",{"_index":2362,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["hasfavorite(dataset",{"_index":2318,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["hasloadablecont",{"_index":680,"title":{"classes/HasLoadableContent.html":{}},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/DatasetPresenterComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/HasLoadableContent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["hastoken",{"_index":298,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["have",{"_index":4218,"title":{},"body":{"index.html":{}}}],["header",{"_index":316,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{}}}],["headeraddit",{"_index":3025,"title":{},"body":{"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{}}}],["headers.set('author",{"_index":2133,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["height",{"_index":841,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["helgoland",{"_index":3178,"title":{},"body":{"injectables/NotifierService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["helgoland/cor",{"_index":31,"title":{},"body":{"interfaces/Address.html":{},"injectables/CachingInterceptor.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"interfaces/HighlightDataset.html":{},"injectables/LabelMapperService.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/SingleFavorite.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["helgoland/core';suggest",{"_index":4611,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["helgoland/d3",{"_index":4525,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["helgoland/d3';step",{"_index":4586,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["helgoland/depict",{"_index":2643,"title":{},"body":{"modules/HelgolandFlotModule.html":{},"modules/HelgolandSelectorModule.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["helgoland/depiction/dataset",{"_index":4593,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["helgolandcachingmodul",{"_index":2562,"title":{"modules/HelgolandCachingModule.html":{}},"body":{"modules/HelgolandCachingModule.html":{},"modules.html":{}}}],["helgolandcontrolmodul",{"_index":2568,"title":{"modules/HelgolandControlModule.html":{}},"body":{"modules/HelgolandControlModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandcoremodul",{"_index":2579,"title":{"modules/HelgolandCoreModule.html":{}},"body":{"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandd3modul",{"_index":2595,"title":{"modules/HelgolandD3Module.html":{}},"body":{"modules/HelgolandD3Module.html":{},"modules.html":{},"overview.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["helgolanddatasetlistmodul",{"_index":2611,"title":{"modules/HelgolandDatasetlistModule.html":{}},"body":{"modules/HelgolandDatasetlistModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["helgolanddatasettablemodul",{"_index":2602,"title":{"modules/HelgolandDatasetTableModule.html":{}},"body":{"modules/HelgolandDatasetTableModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["helgolandfavoritemodul",{"_index":2628,"title":{"modules/HelgolandFavoriteModule.html":{}},"body":{"modules/HelgolandFavoriteModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandflotmodul",{"_index":2637,"title":{"modules/HelgolandFlotModule.html":{}},"body":{"modules/HelgolandFlotModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandlabelmappermodul",{"_index":2617,"title":{"modules/HelgolandLabelMapperModule.html":{}},"body":{"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandmapcontrolmodul",{"_index":2653,"title":{"modules/HelgolandMapControlModule.html":{}},"body":{"modules/HelgolandMapControlModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandmapmodul",{"_index":2659,"title":{"modules/HelgolandMapModule.html":{}},"body":{"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandmapselectormodul",{"_index":2673,"title":{"modules/HelgolandMapSelectorModule.html":{}},"body":{"modules/HelgolandMapSelectorModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandmapviewmodul",{"_index":2683,"title":{"modules/HelgolandMapViewModule.html":{}},"body":{"modules/HelgolandMapViewModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandmodificationmodul",{"_index":2691,"title":{"modules/HelgolandModificationModule.html":{}},"body":{"modules/HelgolandModificationModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandpermalinkmodul",{"_index":2702,"title":{"modules/HelgolandPermalinkModule.html":{}},"body":{"modules/HelgolandPermalinkModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandplotlymodul",{"_index":2715,"title":{"modules/HelgolandPlotlyModule.html":{}},"body":{"modules/HelgolandPlotlyModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandselectormodul",{"_index":2721,"title":{"modules/HelgolandSelectorModule.html":{}},"body":{"modules/HelgolandSelectorModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandtimemodul",{"_index":2733,"title":{"modules/HelgolandTimeModule.html":{}},"body":{"modules/HelgolandTimeModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandtimerangeslidermodul",{"_index":2743,"title":{"modules/HelgolandTimeRangeSliderModule.html":{}},"body":{"modules/HelgolandTimeRangeSliderModule.html":{},"modules.html":{},"overview.html":{}}}],["here",{"_index":1128,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["herebi",{"_index":4329,"title":{},"body":{"license.html":{}}}],["herein",{"_index":4389,"title":{},"body":{"license.html":{}}}],["hh:mm",{"_index":1467,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["hidden",{"_index":1427,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["hide",{"_index":749,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"classes/DatasetOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/MinMaxRange.html":{},"injectables/NotifierService.html":{},"classes/ReferenceValueOption.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{}}}],["hidediagramind",{"_index":1425,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["hidelabel",{"_index":164,"title":{},"body":{"interfaces/AxesOptions.html":{}}}],["highligh",{"_index":4653,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["highlight",{"_index":1282,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["highlight.t",{"_index":3419,"title":{},"body":{"interfaces/PresenterHighlight.html":{}}}],["highlightdataset",{"_index":790,"title":{"interfaces/HighlightDataset.html":{}},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["highlightfocu",{"_index":857,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["highlightline(id",{"_index":1283,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["highlightstyl",{"_index":3490,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["hold",{"_index":4443,"title":{},"body":{"license.html":{}}}],["host",{"_index":4631,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["hostlisten",{"_index":3661,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["hostlistener('window:res",{"_index":3667,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["hour",{"_index":820,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["hourli",{"_index":1179,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["hours').unix",{"_index":2038,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["house_numb",{"_index":14,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["housenumb",{"_index":121,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["hover",{"_index":743,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["hovercomparecartesian",{"_index":2171,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["hoverformat",{"_index":2236,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["hovermod",{"_index":2166,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["hovertext",{"_index":2217,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["href",{"_index":632,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{}}}],["html",{"_index":199,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["http",{"_index":61,"title":{},"body":{"interfaces/Address.html":{},"injectables/BasicAuthService.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/DatasetApiMapping.html":{},"modules/HelgolandCachingModule.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["http.servic",{"_index":3779,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["http://geo.irceline.be/sos/api/v1/__6941",{"_index":4597,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["http://sensorweb.demo.52north.org/sensorwebtestbed/api/v1/__95",{"_index":4595,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["http://sensorweb.demo.52north.org/sensorwebtestbed/api/v1/__96",{"_index":4596,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["http://sensorweb.demo.52north.org/sensorwebtestbed/api/v1/__97",{"_index":4598,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["http://www.fluggs.de/sos2/api/v1/__63",{"_index":4567,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["http://www.fluggs.de/sos2/api/v1/__72",{"_index":4568,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["http_service_interceptor",{"_index":2564,"title":{},"body":{"modules/HelgolandCachingModule.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"miscellaneous/variables.html":{}}}],["httpcach",{"_index":376,"title":{"classes/HttpCache.html":{}},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"modules/HelgolandCachingModule.html":{},"classes/HttpCache.html":{},"injectables/LocalHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["httpclient",{"_index":300,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/DatasetApiMapping.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"injectables/LabelMapperService.html":{},"injectables/StatusCheckService.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["httpclientmodul",{"_index":2586,"title":{},"body":{"modules/HelgolandCoreModule.html":{}}}],["httpevent",{"_index":581,"title":{},"body":{"injectables/CachingInterceptor.html":{},"classes/HttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["httphandler",{"_index":2766,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["httphandler.handle(req",{"_index":2776,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["httpheader",{"_index":310,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["httploaderfactori",{"_index":4533,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["httploaderfactory(http",{"_index":4541,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["httpparam",{"_index":26,"title":{},"body":{"interfaces/Address.html":{},"injectables/EventingImplApiInterface.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"classes/UriParameterCoder.html":{}}}],["httpparametercodec",{"_index":4035,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["httpparams.set('timespan",{"_index":2131,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["httpparams.set(key",{"_index":2135,"title":{},"body":{"injectables/EventingImplApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["httprequest",{"_index":374,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["httprequestopt",{"_index":1496,"title":{"interfaces/HttpRequestOptions.html":{}},"body":{"interfaces/DataParameterFilter.html":{},"interfaces/DatasetApiV2.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/ParameterFilter.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["httprespons",{"_index":375,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"classes/HttpCache.html":{},"injectables/LocalHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["https://momentjs.com/docs/#/manipul",{"_index":3346,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["https://nominatim.openstreetmap.org",{"_index":59,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["https://www.sample.de/api/v1",{"_index":4500,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["https://www.sample.de/api/v1/__123",{"_index":4502,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":482,"title":{},"body":{"classes/CachedMapComponent.html":{},"miscellaneous/variables.html":{}}}],["httpservic",{"_index":30,"title":{"injectables/HttpService.html":{}},"body":{"interfaces/Address.html":{},"injectables/EventingImplApiInterface.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["httpservicehandl",{"_index":576,"title":{"interfaces/HttpServiceHandler.html":{}},"body":{"injectables/CachingInterceptor.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["httpserviceinterceptor",{"_index":582,"title":{"interfaces/HttpServiceInterceptor.html":{}},"body":{"injectables/CachingInterceptor.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["httpservicemetadata",{"_index":574,"title":{"interfaces/HttpServiceMetadata.html":{}},"body":{"injectables/CachingInterceptor.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"classes/UriParameterCoder.html":{}}}],["i.",{"_index":3366,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["icon",{"_index":345,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/StringTogglerComponent.html":{}}}],["id",{"_index":146,"title":{"interfaces/Id.html":{}},"body":{"classes/ApiInterface.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"interfaces/CollectionMetadata.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandCoreModule.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"injectables/NotifierService.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"components/ProfileEntryComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"interfaces/ScatterData.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"interfaces/StatusInterval.html":{},"interfaces/SupportedMimeTypes.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["idataentri",{"_index":766,"title":{"interfaces/IDataEntry.html":{}},"body":{"interfaces/Data.html":{},"interfaces/IDataEntry.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/ProfileDataEntry.html":{},"classes/ReferenceValues.html":{},"interfaces/TimeValueEntry.html":{}}}],["idataset",{"_index":774,"title":{"interfaces/IDataset.html":{}},"body":{"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/FirstLastValue.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"interfaces/Platform.html":{},"interfaces/PlatformParameter.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"interfaces/SingleFavorite.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/TrajectoryResult.html":{},"interfaces/YScale.html":{}}}],["idcach",{"_index":2783,"title":{"classes/IdCache.html":{}},"body":{"classes/IdCache.html":{},"injectables/LabelMapperService.html":{},"injectables/ReferenceValueColorCache.html":{},"injectables/TimeRangeSliderCache.html":{}}}],["identifi",{"_index":2795,"title":{"interfaces/Identifiable.html":{}},"body":{"interfaces/Identifiable.html":{},"interfaces/Parameter.html":{}}}],["ids.foreach((id",{"_index":1286,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ids.length",{"_index":1291,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["idx",{"_index":1028,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["idxofmin",{"_index":1462,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["idxofpo",{"_index":840,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ie",{"_index":2833,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["ii",{"_index":4269,"title":{},"body":{"license.html":{}}}],["iii",{"_index":4275,"title":{},"body":{"license.html":{}}}],["impl",{"_index":2096,"title":{},"body":{"injectables/EventingImplApiInterface.html":{},"injectables/SplittedDataDatasetApiInterface.html":{}}}],["implement",{"_index":56,"title":{},"body":{"interfaces/Address.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"pipes/DateProxyPipe.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"classes/LocalSelectorComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"classes/ParameterConstellation.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["impli",{"_index":4402,"title":{},"body":{"license.html":{}}}],["import",{"_index":24,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/Category.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/Feature.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Offering.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["importfavorit",{"_index":2821,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["importfavorites(ev",{"_index":2826,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["improv",{"_index":4318,"title":{},"body":{"license.html":{}}}],["inabl",{"_index":4425,"title":{},"body":{"license.html":{}}}],["incident",{"_index":4421,"title":{},"body":{"license.html":{}}}],["includ",{"_index":4283,"title":{},"body":{"license.html":{}}}],["inclus",{"_index":4308,"title":{},"body":{"license.html":{}}}],["incorpor",{"_index":4326,"title":{},"body":{"license.html":{}}}],["incorrectli",{"_index":3377,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["increas",{"_index":4204,"title":{},"body":{"index.html":{}}}],["incur",{"_index":4445,"title":{},"body":{"license.html":{}}}],["indemn",{"_index":4437,"title":{},"body":{"license.html":{}}}],["indemnifi",{"_index":4441,"title":{},"body":{"license.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":752,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"license.html":{}}}],["indirect",{"_index":4265,"title":{},"body":{"license.html":{}}}],["individu",{"_index":4277,"title":{},"body":{"license.html":{}}}],["infinit",{"_index":3357,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/Feature.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Offering.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/enumerations.html":{}}}],["inform",{"_index":984,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["informationvis",{"_index":3554,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["infring",{"_index":4349,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":1855,"title":{},"body":{"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/EventingApiService.html":{},"classes/ExtendedTimeseries.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"classes/TimedDatasetOptions.html":{},"components/TrajectoryEntryComponent.html":{}}}],["init",{"_index":684,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["initi",{"_index":1309,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["initlay",{"_index":3493,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["inittimespan",{"_index":3877,"title":{},"body":{"injectables/Time.html":{}}}],["inject",{"_index":28,"title":{"injectables/BasicAuthService.html":{},"injectables/CachingInterceptor.html":{},"injectables/ColorService.html":{},"injectables/DatasetApiMapping.html":{},"injectables/DefinedTimespanService.html":{},"injectables/EventingImplApiInterface.html":{},"injectables/FavoriteService.html":{},"injectables/HttpService.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"injectables/LabelMapperService.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/LocalStorage.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"injectables/NominatimGeoSearchService.html":{},"injectables/NotifierService.html":{},"injectables/ReferenceValueColorCache.html":{},"injectables/ServiceSelectorService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"injectables/StatusIntervalResolverService.html":{},"injectables/Time.html":{},"injectables/TimeRangeSliderCache.html":{}},"body":{"interfaces/Address.html":{},"injectables/BasicAuthService.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"injectables/ColorService.html":{},"injectables/DatasetApiMapping.html":{},"injectables/DefinedTimespanService.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"injectables/LabelMapperService.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/LocalStorage.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"injectables/ReferenceValueColorCache.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"injectables/StatusIntervalResolverService.html":{},"injectables/Time.html":{},"injectables/TimeRangeSliderCache.html":{},"index.html":{},"overview.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["inject(http_service_interceptor",{"_index":2775,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["injectiontoken",{"_index":2770,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["injectiontoken('http_service_interceptor",{"_index":2771,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":196,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"classes/CachedMapComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"classes/LocalSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{}}}],["insid",{"_index":489,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"index.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["instal",{"_index":4175,"title":{},"body":{"index.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["install```bash",{"_index":4655,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["instanceof",{"_index":390,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocateService.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"injectables/Time.html":{}}}],["instead",{"_index":600,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["institut",{"_index":4352,"title":{},"body":{"license.html":{}}}],["instruct",{"_index":4178,"title":{},"body":{"index.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["integr",{"_index":4504,"title":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}},"body":{"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["intention",{"_index":4306,"title":{},"body":{"license.html":{}}}],["interact",{"_index":3312,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["intercept",{"_index":568,"title":{},"body":{"injectables/CachingInterceptor.html":{},"interfaces/HttpServiceInterceptor.html":{}}}],["intercept(req",{"_index":573,"title":{},"body":{"injectables/CachingInterceptor.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["interceptor",{"_index":589,"title":{},"body":{"injectables/CachingInterceptor.html":{},"modules/HelgolandCachingModule.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["interceptor.intercept(req",{"_index":2778,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["interceptor.t",{"_index":567,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["interceptor.ts:12",{"_index":572,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["interceptor.ts:18",{"_index":577,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["interceptors.reduceright((next",{"_index":2777,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/Address.html":{},"interfaces/AxesOptions.html":{},"interfaces/BlacklistedService.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"interfaces/D3GraphOptions.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"interfaces/DatasetApi.html":{},"interfaces/DatasetApiV2.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DatasetTableData.html":{},"interfaces/DrawOptions.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Favorite.html":{},"interfaces/Feature.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"interfaces/Language.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"interfaces/ListSelectorParameter.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/MinMaxRange.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"interfaces/Offering.html":{},"interfaces/Parameter.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/Settings.html":{},"interfaces/SingleFavorite.html":{},"interfaces/StationProperties.html":{},"interfaces/StatusInterval.html":{},"interfaces/SupportedMimeTypes.html":{},"interfaces/TimeValueEntry.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"interfaces/TrajectoryResult.html":{},"interfaces/YScale.html":{}},"body":{"interfaces/Address.html":{},"interfaces/AxesOptions.html":{},"interfaces/BlacklistedService.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"interfaces/D3GraphOptions.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"interfaces/DatasetApiV2.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DatasetTableData.html":{},"interfaces/DrawOptions.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/Feature.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/Language.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/MinMaxRange.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"interfaces/Offering.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/Settings.html":{},"interfaces/SingleFavorite.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"interfaces/StatusInterval.html":{},"interfaces/SupportedMimeTypes.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"license.html":{},"overview.html":{},"additional-documentation/introduction.html":{}}}],["interface.servic",{"_index":3778,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["interface.service.t",{"_index":2097,"title":{},"body":{"injectables/EventingImplApiInterface.html":{},"injectables/SplittedDataDatasetApiInterface.html":{}}}],["interface.service.ts:11",{"_index":2104,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.service.ts:15",{"_index":3773,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["interface.service.ts:17",{"_index":2113,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.service.ts:25",{"_index":3775,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["interface.service.ts:26",{"_index":2111,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.service.ts:31",{"_index":2115,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.service.ts:37",{"_index":2114,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.service.ts:42",{"_index":2119,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.service.ts:47",{"_index":2117,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.service.ts:55",{"_index":2108,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.service.ts:62",{"_index":2110,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.service.ts:68",{"_index":2106,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.t",{"_index":135,"title":{},"body":{"classes/ApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["interface.ts:14",{"_index":142,"title":{},"body":{"classes/ApiInterface.html":{}}}],["interface.ts:23",{"_index":4045,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["interface.ts:27",{"_index":4047,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["interface.ts:31",{"_index":4041,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["interface.ts:35",{"_index":4043,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["interface.ts:7",{"_index":147,"title":{},"body":{"classes/ApiInterface.html":{}}}],["interfaces/api",{"_index":4055,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["intern",{"_index":1835,"title":{},"body":{"classes/DatasetOptions.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"interfaces/SupportedMimeTypes.html":{},"classes/TimedDatasetOptions.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["internal/http",{"_index":2408,"title":{},"body":{"classes/Filter.html":{},"interfaces/FilteredProvider.html":{},"interfaces/Provider.html":{}}}],["internal/timeinterv",{"_index":325,"title":{},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["internal_id_seper",{"_index":2800,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"miscellaneous/variables.html":{}}}],["internaldataentri",{"_index":796,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["internaldatasetid",{"_index":2797,"title":{"interfaces/InternalDatasetId.html":{}},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/SplittedDataDatasetApiInterface.html":{}}}],["internalid",{"_index":165,"title":{},"body":{"interfaces/AxesOptions.html":{},"interfaces/DataConst.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"classes/FirstLastValue.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/Layout.html":{},"interfaces/MinMaxRange.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"interfaces/PresenterHighlight.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/StatusInterval.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/YScale.html":{}}}],["internalid.split(internal_id_seper",{"_index":2809,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{}}}],["internalid.url",{"_index":3479,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["internalid.url).subscribe((platform",{"_index":3483,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["internalidhandl",{"_index":781,"title":{"injectables/InternalIdHandler.html":{}},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"modules/HelgolandCoreModule.html":{},"interfaces/HighlightDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"overview.html":{},"additional-documentation/introduction.html":{}}}],["internalidobj",{"_index":1949,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["internalidobj.url",{"_index":1952,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["interv",{"_index":1108,"title":{},"body":{"interfaces/DataConst.html":{},"injectables/DefinedTimespanService.html":{},"modules/HelgolandCoreModule.html":{},"interfaces/HighlightDataset.html":{},"components/RefreshButtonComponent.html":{},"injectables/StatusIntervalResolverService.html":{},"injectables/Time.html":{},"interfaces/YScale.html":{}}}],["interval.low",{"_index":3861,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["interval.upp",{"_index":3858,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["interval[0",{"_index":1111,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["interval[1",{"_index":1112,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["intervaldescrib",{"_index":2024,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["introduct",{"_index":4488,"title":{"additional-documentation/introduction.html":{}},"body":{"additional-documentation/introduction.html":{}}}],["invalid",{"_index":3404,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["irrevoc",{"_index":4336,"title":{},"body":{"license.html":{}}}],["isblacklist",{"_index":3758,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["iscontentload",{"_index":685,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/DatasetPresenterComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/HasLoadableContent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["iscontentloading(load",{"_index":2559,"title":{},"body":{"classes/HasLoadableContent.html":{}}}],["isdis",{"_index":3026,"title":{},"body":{"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{}}}],["isequ",{"_index":2962,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["isequal(liston",{"_index":2975,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["isfavorit",{"_index":2380,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["isfinite(calculatedrange.max",{"_index":1023,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["isfinite(calculatedrange.min",{"_index":1022,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["isgroupfavorit",{"_index":4161,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isgroupfavorite(favorit",{"_index":2339,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["isgroupfavorite(object",{"_index":2358,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{},"miscellaneous/functions.html":{}}}],["ismobil",{"_index":3429,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["isn't",{"_index":590,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["isnan(obj.range.min",{"_index":1039,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["issaf",{"_index":3399,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["issafemomentexpress",{"_index":3314,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["issafemomentexpression(express",{"_index":3320,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["issafetimespanpreset",{"_index":3315,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["issafetimespanpreset(preset",{"_index":3323,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["isselect",{"_index":3691,"title":{},"body":{"components/ServiceSelectorComponent.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["isselected(id",{"_index":4651,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["isselected(servic",{"_index":3703,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["isserviceblacklist",{"_index":3746,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["isserviceblacklisted(serviceid",{"_index":3751,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["issinglefavorit",{"_index":4163,"title":{},"body":{"miscellaneous/functions.html":{}}}],["issinglefavorite(favorit",{"_index":2337,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["issinglefavorite(object",{"_index":2357,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{},"miscellaneous/functions.html":{}}}],["issu",{"_index":3375,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["istoggl",{"_index":3081,"title":{},"body":{"components/LocateControlComponent.html":{},"components/StringTogglerComponent.html":{}}}],["it'",{"_index":586,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["it:```typescript",{"_index":4638,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["item",{"_index":1434,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/FilteredParameter.html":{},"interfaces/HighlightDataset.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["item.filterlist.push(filt",{"_index":2449,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["item.label",{"_index":3417,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["item.nam",{"_index":3743,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["item.tick",{"_index":1786,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["item.timestamp",{"_index":1460,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/ProfileEntryComponent.html":{},"interfaces/YScale.html":{}}}],["item.xdiagcoord",{"_index":1440,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["item.ydiagcoord",{"_index":1455,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["itemid",{"_index":2403,"title":{},"body":{"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["itemselect",{"_index":2963,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["itemselected(item",{"_index":2979,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["iterablediff",{"_index":776,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["januari",{"_index":4244,"title":{},"body":{"license.html":{}}}],["javascript",{"_index":4526,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["jqueri",{"_index":3957,"title":{},"body":{"components/TimeRangeSliderComponent.html":{},"dependencies.html":{}}}],["jquery('#slider').slid",{"_index":3972,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["jquery.flot.axisopt",{"_index":173,"title":{},"body":{"interfaces/AxesOptions.html":{}}}],["jquery.flot.dataseri",{"_index":1501,"title":{},"body":{"interfaces/DataSeries.html":{},"interfaces/SeriesOptions.html":{}}}],["jquery.flot.plot",{"_index":3299,"title":{},"body":{"interfaces/Plot.html":{}}}],["jquery.flot.plotopt",{"_index":3305,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["jquery.flot.seriesopt",{"_index":1500,"title":{},"body":{"interfaces/DataSeries.html":{},"interfaces/SeriesOptions.html":{}}}],["js",{"_index":4124,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":75,"title":{},"body":{"interfaces/Address.html":{},"injectables/JsonFavoriteExporterService.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/Time.html":{}}}],["json.parse(result",{"_index":2861,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{},"injectables/LocalStorage.html":{}}}],["json.stringify(object",{"_index":3076,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["json.stringify(this.favoritesrvc.getfavorit",{"_index":2831,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["jsonfavoriteexporterservic",{"_index":2633,"title":{"injectables/JsonFavoriteExporterService.html":{}},"body":{"modules/HelgolandFavoriteModule.html":{},"injectables/JsonFavoriteExporterService.html":{},"overview.html":{}}}],["jsonfil",{"_index":4135,"title":{},"body":{"dependencies.html":{}}}],["jumptofirsttimestamp",{"_index":3564,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["jumptolasttimestamp",{"_index":3567,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["k",{"_index":1274,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["kept",{"_index":4557,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["key",{"_index":524,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/Data.html":{},"interfaces/DataParameterFilter.html":{},"classes/DatasetPresenterComponent.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/IDataEntry.html":{},"interfaces/Layout.html":{},"injectables/LocalOngoingHttpCache.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ProfileDataEntry.html":{},"interfaces/RawData.html":{},"classes/ReferenceValues.html":{},"interfaces/ScatterData.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimeseriesCollection.html":{},"classes/UriParameterCoder.html":{}}}],["key.startswith('xaxi",{"_index":2226,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["key.startswith('yaxi",{"_index":2251,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["keyvaluediff",{"_index":429,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["kind",{"_index":4401,"title":{},"body":{"license.html":{}}}],["km",{"_index":1784,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["l",{"_index":476,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/ExtendedScatterData.html":{},"components/GeosearchControlComponent.html":{},"interfaces/Layout.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["l.control.lay",{"_index":434,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["l.control.layers(this.oldbaselay",{"_index":559,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["l.control.layersobject",{"_index":439,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["l.control.layersopt",{"_index":468,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["l.control.zoom",{"_index":443,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["l.control.zoom(this.zoomcontroloptions).addto(this.map",{"_index":564,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["l.control.zoomopt",{"_index":474,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["l.featuregroup",{"_index":3271,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["l.geojson",{"_index":2538,"title":{},"body":{"components/GeosearchControlComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["l.geojson(profiledataentry.geometri",{"_index":3534,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["l.geojson(result.geometry).addto(this.mapcache.getmap(this.mapid",{"_index":2549,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["l.latlngboundsexpress",{"_index":466,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/ExtentControlComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["l.layer",{"_index":2930,"title":{},"body":{"interfaces/LayerOptions.html":{}}}],["l.locationev",{"_index":3110,"title":{},"body":{"injectables/LocateService.html":{}}}],["l.map",{"_index":436,"title":{},"body":{"classes/CachedMapComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{}}}],["l.map(this.mapid",{"_index":519,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["l.mapopt",{"_index":471,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["l.marker",{"_index":3123,"title":{},"body":{"injectables/LocateService.html":{}}}],["l.marker([entry.geometry.coordinates[1",{"_index":3285,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["l.marker(evt.latlng).addto(map",{"_index":3112,"title":{},"body":{"injectables/LocateService.html":{}}}],["l.markerclustergroup",{"_index":3282,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["l.pathopt",{"_index":3504,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["l.tilelayer(default_base_layer_url",{"_index":548,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["label",{"_index":166,"title":{},"body":{"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/CachedMapComponent.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetParameterConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"interfaces/LayerOptions.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValue.html":{},"components/RefreshButtonComponent.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/Settings.html":{},"interfaces/SingleFavorite.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/introduction.html":{}}}],["label.length",{"_index":2912,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["label.replace(url",{"_index":2905,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["label.substring(label.lastindexof",{"_index":2911,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["labelbuff",{"_index":1441,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["labelmappercompon",{"_index":238,"title":{"components/LabelMapperComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandLabelMapperModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["labelmapperservic",{"_index":2648,"title":{"injectables/LabelMapperService.html":{}},"body":{"modules/HelgolandLabelMapperModule.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"overview.html":{}}}],["labelmappersrvc",{"_index":2871,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["labeltimestamp",{"_index":860,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["labelurl",{"_index":2898,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["labl",{"_index":1430,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["lang",{"_index":1495,"title":{},"body":{"interfaces/DataParameterFilter.html":{},"interfaces/HttpRequestOptions.html":{},"classes/LocalSelectorComponent.html":{},"interfaces/ParameterFilter.html":{}}}],["languag",{"_index":333,"title":{"interfaces/Language.html":{}},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"pipes/DateProxyPipe.html":{},"interfaces/Language.html":{},"classes/LocalSelectorComponent.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["languagechang",{"_index":2421,"title":{},"body":{"interfaces/FilteredParameter.html":{},"classes/LanguageChangNotifier.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["languagechangnotifi",{"_index":2414,"title":{"classes/LanguageChangNotifier.html":{}},"body":{"interfaces/FilteredParameter.html":{},"classes/LanguageChangNotifier.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["languagechangnotifier:11",{"_index":3169,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["languagelist",{"_index":3043,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["larger",{"_index":4578,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["last",{"_index":1366,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["last_hour",{"_index":2026,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["last_month",{"_index":2033,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["last_week",{"_index":2031,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["last_year",{"_index":2035,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["lasthour",{"_index":2025,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["lastvalu",{"_index":1505,"title":{},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/ExtendedTimeseries.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["lat",{"_index":44,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["later",{"_index":1025,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["latest",{"_index":2094,"title":{},"body":{"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscriptionFilter.html":{},"index.html":{}}}],["latlngbound",{"_index":2488,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["latlngboundsliter",{"_index":2518,"title":{},"body":{"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{}}}],["law",{"_index":4398,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":4356,"title":{},"body":{"license.html":{}}}],["layer",{"_index":547,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/LayerOptions.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["layer.t",{"_index":2476,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["layer.ts:13",{"_index":2482,"title":{},"body":{"classes/GeoCureGeoJSON.html":{}}}],["layer.ts:24",{"_index":2485,"title":{},"body":{"classes/GeoCureGeoJSON.html":{}}}],["layer.ts:31",{"_index":2491,"title":{},"body":{"classes/GeoCureGeoJSON.html":{}}}],["layer.ts:37",{"_index":2484,"title":{},"body":{"classes/GeoCureGeoJSON.html":{}}}],["layer.ts:47",{"_index":2489,"title":{},"body":{"classes/GeoCureGeoJSON.html":{}}}],["layercontrol",{"_index":403,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["layercontrolopt",{"_index":421,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["layeropt",{"_index":446,"title":{"interfaces/LayerOptions.html":{}},"body":{"classes/CachedMapComponent.html":{},"interfaces/LayerOptions.html":{}}}],["layeroptions.lay",{"_index":540,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["layeroptions.layer.addto(this.map",{"_index":542,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["layeroptions.vis",{"_index":541,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["layout",{"_index":2160,"title":{"interfaces/Layout.html":{}},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["leaflet",{"_index":477,"title":{},"body":{"classes/CachedMapComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"dependencies.html":{},"additional-documentation/introduction.html":{}}}],["leaflet.markerclust",{"_index":3274,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"dependencies.html":{}}}],["leafletev",{"_index":2493,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["left",{"_index":849,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["legal",{"_index":4258,"title":{},"body":{"license.html":{}}}],["legend",{"_index":198,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["length",{"_index":3341,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["letter",{"_index":666,"title":{},"body":{"injectables/ColorService.html":{}}}],["level",{"_index":3387,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["liabil",{"_index":4412,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":4418,"title":{},"body":{"license.html":{}}}],["lib:publish",{"_index":4208,"title":{},"body":{"index.html":{}}}],["librari",{"_index":4188,"title":{},"body":{"index.html":{}}}],["licenc",{"_index":51,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["licens",{"_index":1531,"title":{"license.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"license.html":{}}}],["licensor",{"_index":4253,"title":{},"body":{"license.html":{}}}],["lightblu",{"_index":4607,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["lighter",{"_index":1093,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["limit",{"_index":629,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/DataConst.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Id.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["line",{"_index":750,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["line.i",{"_index":1339,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["line.x",{"_index":1337,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["line:no",{"_index":2179,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/Layout.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["line_width",{"_index":2150,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"miscellaneous/variables.html":{}}}],["line_width_select",{"_index":2149,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"miscellaneous/variables.html":{}}}],["linefun",{"_index":1644,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["linewidth",{"_index":798,"title":{},"body":{"interfaces/DataConst.html":{},"classes/DatasetOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{}}}],["linewwidth",{"_index":970,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["link",{"_index":4215,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["lint",{"_index":4193,"title":{},"body":{"index.html":{}}}],["list",{"_index":241,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetOptions.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["listentrycompon",{"_index":2932,"title":{"classes/ListEntryComponent.html":{}},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:10",{"_index":3444,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:13",{"_index":3443,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:16",{"_index":3449,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:19",{"_index":3450,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:25",{"_index":3464,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:32",{"_index":3465,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:36",{"_index":3466,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:41",{"_index":3467,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:48",{"_index":3463,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:7",{"_index":3442,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["liston",{"_index":2978,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["listone.foreach((entryon",{"_index":3016,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["listone.length",{"_index":3014,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["listselectorcompon",{"_index":240,"title":{"components/ListSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["listselectorparamet",{"_index":2970,"title":{"interfaces/ListSelectorParameter.html":{}},"body":{"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{}}}],["listselectorservic",{"_index":2727,"title":{"injectables/ListSelectorService.html":{}},"body":{"modules/HelgolandSelectorModule.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"overview.html":{}}}],["listtwo",{"_index":2976,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["listtwo.find((entrytwo",{"_index":3017,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["listtwo.length",{"_index":3015,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["liter",{"_index":2091,"title":{},"body":{"interfaces/EventingEvent.html":{},"interfaces/GeoReverseResult.html":{},"injectables/LocalOngoingHttpCache.html":{},"interfaces/PlotOptions.html":{},"interfaces/Settings.html":{}}}],["litig",{"_index":4353,"title":{},"body":{"license.html":{}}}],["load",{"_index":717,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetOptions.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"classes/HasLoadableContent.html":{},"components/LabelMapperComponent.html":{},"injectables/LocalStorage.html":{},"interfaces/MinMaxRange.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ReferenceValueOption.html":{},"components/ServiceFilterSelectorComponent.html":{},"classes/TimedDatasetOptions.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["load(param",{"_index":3064,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["loadabl",{"_index":1914,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"classes/HasLoadableContent.html":{}}}],["loadarray",{"_index":3061,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["loadarray(param",{"_index":3066,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["loaddata",{"_index":2478,"title":{},"body":{"classes/GeoCureGeoJSON.html":{}}}],["loaddata(bound",{"_index":2487,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["loaddata(dataset",{"_index":1677,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["loaddataset",{"_index":2935,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["loaddataset(id",{"_index":2942,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["loadedgroupfav",{"_index":2353,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["loadedgroupfavs.foreach((entri",{"_index":2355,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["loadedsinglefav",{"_index":2349,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["loadedsinglefavs.foreach((entri",{"_index":2351,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["loader",{"_index":4101,"title":{},"body":{"dependencies.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["loader';anoth",{"_index":4530,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["loadfavorit",{"_index":2346,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["loadingcount",{"_index":871,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["loaditem",{"_index":2422,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["loadstat",{"_index":1957,"title":{},"body":{"classes/DatasetService.html":{}}}],["loadtextu",{"_index":3062,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["loadtextual(param",{"_index":3068,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["loadtimespan",{"_index":3878,"title":{},"body":{"injectables/Time.html":{}}}],["loadtimespan(param",{"_index":3894,"title":{},"body":{"injectables/Time.html":{}}}],["local",{"_index":1976,"title":{},"body":{"classes/DatasetService.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandCoreModule.html":{},"injectables/Time.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["localhttpcach",{"_index":380,"title":{"injectables/LocalHttpCache.html":{}},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"modules/HelgolandCachingModule.html":{},"injectables/LocalHttpCache.html":{}}}],["localongoinghttpcach",{"_index":2565,"title":{"injectables/LocalOngoingHttpCache.html":{}},"body":{"modules/HelgolandCachingModule.html":{},"injectables/LocalOngoingHttpCache.html":{}}}],["localselectorcompon",{"_index":3037,"title":{"classes/LocalSelectorComponent.html":{}},"body":{"classes/LocalSelectorComponent.html":{}}}],["localstorag",{"_index":1962,"title":{"injectables/LocalStorage.html":{}},"body":{"classes/DatasetService.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandCoreModule.html":{},"injectables/LocalStorage.html":{},"interfaces/SingleFavorite.html":{},"injectables/Time.html":{},"overview.html":{}}}],["localstorage.getitem(param",{"_index":3077,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["localstorage.setitem(param",{"_index":3075,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["localstorageen",{"_index":3060,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["locat",{"_index":243,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{}}}],["locate.component.html",{"_index":3080,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["locate.component.scss",{"_index":3079,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["locate.servic",{"_index":3087,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["locate/locate.compon",{"_index":2665,"title":{},"body":{"modules/HelgolandMapControlModule.html":{}}}],["locate/locate.servic",{"_index":2666,"title":{},"body":{"modules/HelgolandMapControlModule.html":{}}}],["locatecontrolcompon",{"_index":242,"title":{"components/LocateControlComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapControlModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["located_marker_id",{"_index":3106,"title":{},"body":{"injectables/LocateService.html":{},"miscellaneous/variables.html":{}}}],["locatedprofiledataentri",{"_index":772,"title":{"interfaces/LocatedProfileDataEntry.html":{}},"body":{"interfaces/Data.html":{},"interfaces/IDataEntry.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValues.html":{},"interfaces/TimeValueEntry.html":{},"interfaces/TrajectoryResult.html":{}}}],["locatedtimevalueentri",{"_index":768,"title":{"interfaces/LocatedTimeValueEntry.html":{}},"body":{"interfaces/Data.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/IDataEntry.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/ProfileDataEntry.html":{},"classes/ReferenceValues.html":{},"interfaces/TimeValueEntry.html":{}}}],["locateservic",{"_index":2660,"title":{"injectables/LocateService.html":{}},"body":{"modules/HelgolandMapControlModule.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"overview.html":{}}}],["locateus",{"_index":3082,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["location_error",{"_index":3104,"title":{},"body":{"injectables/LocateService.html":{},"miscellaneous/variables.html":{}}}],["location_found_ev",{"_index":3102,"title":{},"body":{"injectables/LocateService.html":{},"miscellaneous/variables.html":{}}}],["locationerror",{"_index":3105,"title":{},"body":{"injectables/LocateService.html":{},"miscellaneous/variables.html":{}}}],["locationfound",{"_index":3103,"title":{},"body":{"injectables/LocateService.html":{},"miscellaneous/variables.html":{}}}],["log",{"_index":1484,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["lon",{"_index":45,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["look",{"_index":4501,"title":{},"body":{"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["loss",{"_index":4426,"title":{},"body":{"license.html":{}}}],["lost",{"_index":3388,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["lower",{"_index":1532,"title":{},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["lt",{"_index":4026,"title":{},"body":{"components/TimespanShiftSelectorComponent.html":{}}}],["mac",{"_index":4182,"title":{},"body":{"index.html":{}}}],["made",{"_index":4291,"title":{},"body":{"license.html":{}}}],["mail",{"_index":3213,"title":{},"body":{"components/PermalinkInMailComponent.html":{},"license.html":{}}}],["mail'},{'nam",{"_index":254,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["mail.compon",{"_index":2710,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{}}}],["mail.component.html",{"_index":3214,"title":{},"body":{"components/PermalinkInMailComponent.html":{}}}],["mail.component.t",{"_index":3212,"title":{},"body":{"components/PermalinkInMailComponent.html":{}}}],["mail.component.ts:10",{"_index":3217,"title":{},"body":{"components/PermalinkInMailComponent.html":{}}}],["mail.component.ts:13",{"_index":3218,"title":{},"body":{"components/PermalinkInMailComponent.html":{}}}],["mail.component.ts:15",{"_index":3219,"title":{},"body":{"components/PermalinkInMailComponent.html":{}}}],["mail/permalink",{"_index":2709,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{},"components/PermalinkInMailComponent.html":{}}}],["mailto:?bodi",{"_index":3221,"title":{},"body":{"components/PermalinkInMailComponent.html":{}}}],["main",{"_index":809,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["maintimeinterv",{"_index":810,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["make",{"_index":4179,"title":{},"body":{"index.html":{},"license.html":{}}}],["malfunct",{"_index":4431,"title":{},"body":{"license.html":{}}}],["manag",{"_index":4266,"title":{},"body":{"license.html":{}}}],["manipulate/select",{"_index":4494,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["manual",{"_index":4544,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["map",{"_index":235,"title":{},"body":{"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"components/BoolTogglerComponent.html":{},"classes/CachedMapComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"interfaces/HighlightDataset.html":{},"classes/IdCache.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["map((",{"_index":3334,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["map((checkedurl",{"_index":3850,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["map((r",{"_index":109,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["map((resarray",{"_index":83,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["map(r",{"_index":320,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["map.eachlayer((entri",{"_index":3122,"title":{},"body":{"injectables/LocateService.html":{}}}],["map.getzoom",{"_index":2502,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["map.loc",{"_index":3115,"title":{},"body":{"injectables/LocateService.html":{}}}],["map.off(location_found_ev",{"_index":3121,"title":{},"body":{"injectables/LocateService.html":{}}}],["map.on(location_error",{"_index":3114,"title":{},"body":{"injectables/LocateService.html":{}}}],["map.on(location_found_ev",{"_index":3108,"title":{},"body":{"injectables/LocateService.html":{}}}],["map.removelayer(entri",{"_index":3125,"title":{},"body":{"injectables/LocateService.html":{}}}],["map.stoploc",{"_index":3120,"title":{},"body":{"injectables/LocateService.html":{}}}],["mapcach",{"_index":427,"title":{"injectables/MapCache.html":{}},"body":{"classes/CachedMapComponent.html":{},"components/ExtentControlComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapModule.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["mapid",{"_index":422,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/ExtentControlComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LocateControlComponent.html":{},"components/ZoomControlComponent.html":{}}}],["mapopt",{"_index":423,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["mapper",{"_index":2866,"title":{},"body":{"components/LabelMapperComponent.html":{},"additional-documentation/introduction.html":{}}}],["mapper'},{'nam",{"_index":239,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["mapper.compon",{"_index":2651,"title":{},"body":{"modules/HelgolandLabelMapperModule.html":{}}}],["mapper.component.html",{"_index":2867,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["mapper.component.t",{"_index":2865,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["mapper.component.ts:12",{"_index":2872,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["mapper.component.ts:14",{"_index":2874,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["mapper.component.ts:16",{"_index":2870,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["mapper.component.ts:22",{"_index":2873,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["mapper.modul",{"_index":2621,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{}}}],["mapper.module.t",{"_index":2650,"title":{},"body":{"modules/HelgolandLabelMapperModule.html":{}}}],["mapper.servic",{"_index":2652,"title":{},"body":{"modules/HelgolandLabelMapperModule.html":{},"components/LabelMapperComponent.html":{}}}],["mapper.service.t",{"_index":2879,"title":{},"body":{"injectables/LabelMapperService.html":{},"miscellaneous/variables.html":{}}}],["mapper.service.ts:12",{"_index":2886,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["mapper.service.ts:19",{"_index":2892,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["mapper.service.ts:53",{"_index":2888,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["mapper.service.ts:58",{"_index":2890,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["mapper/label",{"_index":2620,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"miscellaneous/variables.html":{}}}],["mapping.servic",{"_index":2588,"title":{},"body":{"modules/HelgolandCoreModule.html":{}}}],["mapping.service.t",{"_index":1536,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"miscellaneous/enumerations.html":{}}}],["mapping.service.ts:13",{"_index":1539,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["mapping.service.ts:19",{"_index":1545,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["mapping.service.ts:38",{"_index":1543,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["mapselectorcompon",{"_index":494,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:27",{"_index":3262,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:35",{"_index":3261,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:38",{"_index":3260,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:41",{"_index":3264,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:44",{"_index":3263,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:46",{"_index":3272,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:48",{"_index":3273,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:58",{"_index":3267,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:66",{"_index":3268,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:82",{"_index":3266,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:91",{"_index":3270,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["margin",{"_index":843,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["mark",{"_index":4321,"title":{},"body":{"license.html":{}}}],["marker",{"_index":1833,"title":{},"body":{"classes/DatasetOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"injectables/LocateService.html":{},"interfaces/MinMaxRange.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValueOption.html":{},"interfaces/ScatterData.html":{},"classes/TimedDatasetOptions.html":{}}}],["marker.on('click",{"_index":3287,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["marker.options.titl",{"_index":3113,"title":{},"body":{"injectables/LocateService.html":{}}}],["marker_s",{"_index":2152,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"miscellaneous/variables.html":{}}}],["marker_size_select",{"_index":2151,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"miscellaneous/variables.html":{}}}],["markerfeaturegroup",{"_index":3252,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["matbuttonmodul",{"_index":4660,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["matcardmodul",{"_index":4659,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["match",{"_index":131,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/Feature.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Offering.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["matcharray",{"_index":2918,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["matcharray[0",{"_index":2920,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["matchmaxzoom",{"_index":2500,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["matchminzoom",{"_index":2504,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["materi",{"_index":4654,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["math.ceil(calctick",{"_index":1198,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["math.floor((1",{"_index":533,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["math.max(0",{"_index":1370,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["math.max(1",{"_index":1206,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["math.max(4",{"_index":1443,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["math.random",{"_index":534,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["math.round(hourli",{"_index":1207,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["max",{"_index":246,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetOptions.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandModificationModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValueOption.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["maxcalcbrush",{"_index":1166,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["maxdiagramtimestamp",{"_index":1160,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["maximum",{"_index":1168,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["maxlabelwidth",{"_index":850,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["maxoverviewtimeinterv",{"_index":1156,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["maxtimeext",{"_index":3781,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["mc",{"_index":958,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["mean",{"_index":983,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["measur",{"_index":985,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"miscellaneous/enumerations.html":{}}}],["mechan",{"_index":4286,"title":{},"body":{"license.html":{}}}],["media",{"_index":4289,"title":{},"body":{"license.html":{}}}],["medium",{"_index":3938,"title":{},"body":{"components/TimeListSelectorComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"license.html":{}}}],["mediumd",{"_index":1997,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["meet",{"_index":4363,"title":{},"body":{"license.html":{}}}],["memberof",{"_index":493,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["merchant",{"_index":4403,"title":{},"body":{"license.html":{}}}],["mere",{"_index":4301,"title":{},"body":{"license.html":{}}}],["messag",{"_index":1919,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"interfaces/PresenterMessage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["message.t",{"_index":3420,"title":{},"body":{"interfaces/PresenterMessage.html":{}}}],["metadata",{"_index":182,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"pipes/DateProxyPipe.html":{},"components/DragOptionsComponent.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/Id.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/introduction.html":{}}}],["metadata).shar",{"_index":613,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["metadata.expirationtim",{"_index":617,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["metadata.forceupd",{"_index":593,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["method",{"_index":136,"title":{},"body":{"classes/ApiInterface.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"components/BoolTogglerComponent.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"components/ExtentControlComponent.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"classes/GeoSearch.html":{},"components/GeosearchControlComponent.html":{},"classes/HasLoadableContent.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"classes/IdCache.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/Plot.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/SettingsService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["middl",{"_index":1231,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["millisecond",{"_index":3792,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["milliseconds(numb",{"_index":3355,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["milliseconds*1000",{"_index":4572,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["min",{"_index":245,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetOptions.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandModificationModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValueOption.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["min/max",{"_index":4590,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["mincalcbrush",{"_index":1165,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["mindiagramtimestamp",{"_index":1158,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["minim",{"_index":3367,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["minimum",{"_index":1167,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["minli",{"_index":1176,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["minmaxrang",{"_index":782,"title":{"interfaces/MinMaxRange.html":{}},"body":{"interfaces/DataConst.html":{},"classes/DatasetOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{}}}],["minmaxrangecompon",{"_index":244,"title":{"components/MinMaxRangeComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandModificationModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["minoverviewtimeinterv",{"_index":1154,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["minrang",{"_index":1213,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["minrangeg",{"_index":1216,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["minsiz",{"_index":3309,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["miscellan",{"_index":4147,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":4563,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["missedto",{"_index":4584,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["mixin",{"_index":723,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"miscellaneous/functions.html":{}}}],["mixin([hasloadablecont",{"_index":726,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mixin(basector",{"_index":4166,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mobil",{"_index":4157,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mobile_insitu",{"_index":4159,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mobileinsitu",{"_index":4158,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mode",{"_index":3307,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["modebarbuttonstoremov",{"_index":2169,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["model",{"_index":377,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"modules/HelgolandCachingModule.html":{},"injectables/LocalHttpCache.html":{},"additional-documentation/introduction.html":{}}}],["model/d3",{"_index":724,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["model/dataset",{"_index":1576,"title":{},"body":{"interfaces/DatasetApiV2.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusIntervalResolverService.html":{},"classes/UriParameterCoder.html":{}}}],["model/internal/http",{"_index":1580,"title":{},"body":{"interfaces/DatasetApiV2.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["model/internal/opt",{"_index":1911,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{}}}],["model/internal/resizablecompon",{"_index":1912,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["model/internal/timeinterv",{"_index":151,"title":{},"body":{"classes/ApiInterface.html":{},"interfaces/DatasetApiV2.html":{},"classes/DatasetPresenterComponent.html":{},"injectables/DefinedTimespanService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/Time.html":{},"classes/UriParameterCoder.html":{}}}],["model/languag",{"_index":3050,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["model/mixins/ha",{"_index":1913,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["model/request",{"_index":2089,"title":{},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["model/respons",{"_index":2090,"title":{},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["model/settings/set",{"_index":3769,"title":{},"body":{"classes/SettingsService.html":{}}}],["model/trajectori",{"_index":3510,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["modif",{"_index":4282,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["modifi",{"_index":4365,"title":{},"body":{"license.html":{}}}],["modul",{"_index":2136,"title":{"modules/EventingModule.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"modules.html":{}},"body":{"modules/EventingModule.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["moment",{"_index":150,"title":{},"body":{"classes/ApiInterface.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"injectables/DefinedTimespanService.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/Time.html":{},"interfaces/YScale.html":{},"dependencies.html":{},"index.html":{}}}],["moment().endof('day').unix",{"_index":2043,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment().endof('isoweek').unix",{"_index":2050,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment().endof('month').unix",{"_index":2056,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment().endof('year').unix",{"_index":2062,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment().startof('day').unix",{"_index":2042,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment().startof('isoweek').unix",{"_index":2049,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment().startof('month').unix",{"_index":2055,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment().startof('year').unix",{"_index":2061,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment().subtract(1",{"_index":2037,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment().unix",{"_index":2039,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment(date).add(halfduration).unix",{"_index":3908,"title":{},"body":{"injectables/Time.html":{}}}],["moment(date).subtract(halfduration).unix",{"_index":3907,"title":{},"body":{"injectables/Time.html":{}}}],["moment(now).endof('day').unix",{"_index":3928,"title":{},"body":{"injectables/Time.html":{}}}],["moment(now).startof('day').unix",{"_index":3927,"title":{},"body":{"injectables/Time.html":{}}}],["moment(start).endof('year",{"_index":3793,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["moment(timeinterval.timestamp).add(duration).unix",{"_index":3918,"title":{},"body":{"injectables/Time.html":{}}}],["moment(timeinterval.timestamp).subtract(duration).unix",{"_index":3917,"title":{},"body":{"injectables/Time.html":{}}}],["moment(timespan.from",{"_index":3930,"title":{},"body":{"injectables/Time.html":{}}}],["moment(timespan.from).add(duration).unix",{"_index":3913,"title":{},"body":{"injectables/Time.html":{}}}],["moment(timespan.from).endof('year",{"_index":3785,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["moment(timespan.from).startof('year",{"_index":3784,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["moment(timespan.from).subtract(duration).unix",{"_index":3911,"title":{},"body":{"injectables/Time.html":{}}}],["moment(timespan.from).subtract(durationmilli",{"_index":3920,"title":{},"body":{"injectables/Time.html":{}}}],["moment(timespan.to",{"_index":3931,"title":{},"body":{"injectables/Time.html":{}}}],["moment(timespan.to).add(duration).unix",{"_index":3914,"title":{},"body":{"injectables/Time.html":{}}}],["moment(timespan.to).add(durationmilli",{"_index":3922,"title":{},"body":{"injectables/Time.html":{}}}],["moment(timespan.to).format",{"_index":160,"title":{},"body":{"classes/ApiInterface.html":{}}}],["moment(timespan.to).subtract(duration).unix",{"_index":3912,"title":{},"body":{"injectables/Time.html":{}}}],["moment.dur",{"_index":3892,"title":{},"body":{"injectables/Time.html":{}}}],["moment.duration(1",{"_index":3782,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["moment.duration(timeinterval.bufferinterv",{"_index":3916,"title":{},"body":{"injectables/Time.html":{}}}],["moment.duration(to.diff(from",{"_index":3932,"title":{},"body":{"injectables/Time.html":{}}}],["month=20",{"_index":3371,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["months').endof('month').unix",{"_index":2059,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["months').startof('month').unix",{"_index":2058,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["more",{"_index":4205,"title":{},"body":{"index.html":{},"license.html":{}}}],["mous",{"_index":751,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["mouse(this.background.nod",{"_index":1761,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["mouseclick",{"_index":1115,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["mousedownbrush",{"_index":825,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["mousemovehandl",{"_index":1344,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["mouseouthandl",{"_index":1383,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["mousmov",{"_index":1343,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["move",{"_index":1116,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["moveend",{"_index":2486,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["multi",{"_index":249,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["multiservicefilterselectorcompon",{"_index":248,"title":{"components/MultiServiceFilterSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["n52",{"_index":184,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["name",{"_index":88,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"classes/HasLoadableContent.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/IDataset.html":{},"classes/IdCache.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/how-tos.html":{}}}],["namespac",{"_index":4543,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["nan",{"_index":1323,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["nasti",{"_index":3408,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["nbsp;&ndash;&nbsp",{"_index":4027,"title":{},"body":{"components/TimespanShiftSelectorComponent.html":{}}}],["necessari",{"_index":4522,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["necessarili",{"_index":4348,"title":{},"body":{"license.html":{}}}],["need",{"_index":815,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["neglig",{"_index":4415,"title":{},"body":{"license.html":{}}}],["neighbourhood",{"_index":15,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["nest",{"_index":4241,"title":{},"body":{"index.html":{}}}],["network",{"_index":609,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["new",{"_index":66,"title":{},"body":{"interfaces/Address.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"components/BoolTogglerComponent.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandPermalinkModule.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"classes/IdCache.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"components/LocateControlComponent.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["newdatasetidx",{"_index":1016,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["newtimemax",{"_index":1399,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["newtimemin",{"_index":1398,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["next",{"_index":575,"title":{},"body":{"injectables/CachingInterceptor.html":{},"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/Layout.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"interfaces/YScale.html":{}}}],["next.handle(req",{"_index":592,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["next.referencevalues[key",{"_index":3799,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["ng",{"_index":4195,"title":{},"body":{"index.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["ngafterviewinit",{"_index":688,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["ngdocheck",{"_index":411,"title":{},"body":{"classes/CachedMapComponent.html":{},"classes/DatasetPresenterComponent.html":{}}}],["ngmodul",{"_index":2139,"title":{},"body":{"modules/EventingModule.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["ngonchang",{"_index":412,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/DatasetPresenterComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"classes/LocalSelectorComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeRangeSliderComponent.html":{}}}],["ngonchanges(chang",{"_index":453,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"classes/LocalSelectorComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeRangeSliderComponent.html":{}}}],["ngondestroy",{"_index":413,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["ngoninit",{"_index":414,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{},"classes/ListEntryComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["ngx",{"_index":2002,"title":{},"body":{"pipes/DateProxyPipe.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandSelectorModule.html":{},"classes/LanguageChangNotifier.html":{},"classes/LocalSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{},"dependencies.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["node",{"_index":3183,"title":{},"body":{"injectables/NotifierService.html":{},"index.html":{}}}],["node.appendchild(textnod",{"_index":3189,"title":{},"body":{"injectables/NotifierService.html":{}}}],["node.classnam",{"_index":3186,"title":{},"body":{"injectables/NotifierService.html":{}}}],["node.id",{"_index":3185,"title":{},"body":{"injectables/NotifierService.html":{}}}],["node/npm",{"_index":4174,"title":{},"body":{"index.html":{}}}],["node_modul",{"_index":4219,"title":{},"body":{"index.html":{}}}],["node_modules/@angular",{"_index":4229,"title":{},"body":{"index.html":{}}}],["node_modules/bootstrap",{"_index":3959,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["nodejs.tim",{"_index":3645,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["nominatimgeosearchservic",{"_index":55,"title":{"injectables/NominatimGeoSearchService.html":{}},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["nominatimreverseresult",{"_index":49,"title":{"interfaces/NominatimReverseResult.html":{}},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["nominatimsearchresult",{"_index":41,"title":{"interfaces/NominatimSearchResult.html":{}},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["non",{"_index":4332,"title":{},"body":{"license.html":{}}}],["none",{"_index":1062,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["noresultsfound",{"_index":3253,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["normal",{"_index":4378,"title":{},"body":{"license.html":{}}}],["noth",{"_index":2907,"title":{},"body":{"injectables/LabelMapperService.html":{},"license.html":{}}}],["notic",{"_index":4292,"title":{},"body":{"license.html":{}}}],["notifi",{"_index":2382,"title":{},"body":{"components/FavoriteTogglerComponent.html":{},"injectables/NotifierService.html":{},"miscellaneous/variables.html":{}}}],["notificationlevel",{"_index":635,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["notifier/notifier.servic",{"_index":2591,"title":{},"body":{"modules/HelgolandCoreModule.html":{}}}],["notifierel",{"_index":3181,"title":{},"body":{"injectables/NotifierService.html":{}}}],["notifierelement.classnam",{"_index":3193,"title":{},"body":{"injectables/NotifierService.html":{}}}],["notifierelement.classname.replace('hid",{"_index":3194,"title":{},"body":{"injectables/NotifierService.html":{}}}],["notifierelement.classname.replace('show",{"_index":3197,"title":{},"body":{"injectables/NotifierService.html":{}}}],["notifierelement.innerhtml",{"_index":3192,"title":{},"body":{"injectables/NotifierService.html":{}}}],["notifierservic",{"_index":2383,"title":{"injectables/NotifierService.html":{}},"body":{"components/FavoriteTogglerComponent.html":{},"modules/HelgolandCoreModule.html":{},"injectables/NotifierService.html":{},"overview.html":{}}}],["notifiertimeout",{"_index":3174,"title":{},"body":{"injectables/NotifierService.html":{}}}],["notify(text",{"_index":3176,"title":{},"body":{"injectables/NotifierService.html":{}}}],["notwithstand",{"_index":4388,"title":{},"body":{"license.html":{}}}],["now",{"_index":3926,"title":{},"body":{"injectables/Time.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["npm",{"_index":4176,"title":{},"body":{"index.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["npmjs.com",{"_index":4209,"title":{},"body":{"index.html":{}}}],["null",{"_index":97,"title":{},"body":{"interfaces/Address.html":{},"injectables/BasicAuthService.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"injectables/LabelMapperService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalStorage.html":{},"components/MinMaxRangeComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"classes/OnGoingHttpCache.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"injectables/Time.html":{},"interfaces/YScale.html":{}}}],["number",{"_index":47,"title":{},"body":{"interfaces/Address.html":{},"interfaces/AxesOptions.html":{},"interfaces/BlacklistedService.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"interfaces/CollectionMetadata.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/DatasetTableData.html":{},"interfaces/DrawOptions.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"injectables/FavoriteService.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalHttpCache.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"classes/OnGoingHttpCache.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/PlatformParameter.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/Settings.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"interfaces/YScale.html":{},"miscellaneous/variables.html":{}}}],["number.max_valu",{"_index":3860,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["number.min_valu",{"_index":3863,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["o.id",{"_index":3605,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["obj",{"_index":1027,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["obj.chang",{"_index":3560,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["obj.id",{"_index":1034,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["obj.rang",{"_index":1033,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["obj.range.min",{"_index":1038,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["obj.uom",{"_index":1031,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["obj.zerobasedyaxi",{"_index":1035,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["object",{"_index":438,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"injectables/LocalStorage.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/SingleFavorite.html":{},"interfaces/YScale.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["object.assign",{"_index":1939,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["object.assign(this.plotopt",{"_index":921,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["object.getownpropertynames(param",{"_index":4074,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["object.keys(this.oldbaselayer).length",{"_index":557,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["object.keys(this.oldoverlaylayer).length",{"_index":558,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["oblig",{"_index":4438,"title":{},"body":{"license.html":{}}}],["observ",{"_index":34,"title":{},"body":{"interfaces/Address.html":{},"injectables/BasicAuthService.html":{},"injectables/CachingInterceptor.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"injectables/JsonFavoriteExporterService.html":{},"injectables/LabelMapperService.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"classes/OnGoingHttpCache.html":{},"injectables/ServiceSelectorService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["observable((observ",{"_index":1548,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"injectables/JsonFavoriteExporterService.html":{},"injectables/LabelMapperService.html":{},"injectables/ServiceSelectorService.html":{},"injectables/StatusCheckService.html":{}}}],["observable.create((observ",{"_index":950,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["observable.of(cachedrespons",{"_index":603,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["observable>((observ",{"_index":611,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["observe(req",{"_index":2761,"title":{},"body":{"classes/HttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["observer.complet",{"_index":620,"title":{},"body":{"injectables/CachingInterceptor.html":{},"injectables/DatasetApiMapping.html":{},"injectables/JsonFavoriteExporterService.html":{},"injectables/LabelMapperService.html":{},"injectables/ServiceSelectorService.html":{},"injectables/StatusCheckService.html":{}}}],["observer.error(error",{"_index":622,"title":{},"body":{"injectables/CachingInterceptor.html":{},"injectables/ServiceSelectorService.html":{}}}],["observer.next(label",{"_index":2913,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["observer.next(nul",{"_index":3845,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["observer.next(r",{"_index":619,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["observer.next(tru",{"_index":2864,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["observer.next(url",{"_index":3846,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["observer.next(usableservic",{"_index":3757,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["observer.next(vers",{"_index":1558,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["occur",{"_index":2553,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["odd",{"_index":1380,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["offer",{"_index":1523,"title":{"interfaces/Offering.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"interfaces/Offering.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/StatusInterval.html":{},"interfaces/SupportedMimeTypes.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/UriParameterCoder.html":{},"license.html":{}}}],["offset",{"_index":630,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Id.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["ok",{"_index":3372,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"injectables/StatusCheckService.html":{}}}],["old",{"_index":2908,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["oldbaselay",{"_index":404,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["olddatasetopt",{"_index":1866,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["oldgraphopt",{"_index":1867,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["oldoverlaylay",{"_index":405,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["on",{"_index":1357,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos.html":{}}}],["on('drag",{"_index":1105,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["on('end",{"_index":1101,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["on('mousedown",{"_index":1135,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["on('mousedown.drag",{"_index":1753,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["on('mousemove.drag",{"_index":1755,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["on('mousemove.focu",{"_index":1066,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["on('mouseout",{"_index":1273,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["on('mouseout.focu",{"_index":1068,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["on('mouseup",{"_index":1275,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["on('mouseup.drag",{"_index":1757,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["on('slid",{"_index":3978,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["on('slidestop",{"_index":3973,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["on('start",{"_index":1097,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["on('zoom",{"_index":1099,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["onadd",{"_index":2479,"title":{},"body":{"classes/GeoCureGeoJSON.html":{}}}],["onadd(map",{"_index":2490,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["onc",{"_index":4191,"title":{},"body":{"index.html":{}}}],["onchang",{"_index":395,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"classes/LocalSelectorComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeRangeSliderComponent.html":{}}}],["onchangeyaxesvis",{"_index":190,"title":{},"body":{"components/AxesOptionsComponent.html":{}}}],["oncolorchang",{"_index":655,"title":{},"body":{"components/ColorSelectorComponent.html":{}}}],["oncompleteloadingdata",{"_index":944,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["oncontentload",{"_index":695,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"classes/DatasetPresenterComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["ondatasetselect",{"_index":1877,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"components/ListSelectorComponent.html":{}}}],["ondeletedataset",{"_index":2938,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["ondeletedatasetopt",{"_index":3434,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["ondestroy",{"_index":397,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["oneditopt",{"_index":3435,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["onerror(error",{"_index":1486,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ongo",{"_index":2566,"title":{},"body":{"modules/HelgolandCachingModule.html":{},"injectables/LocalOngoingHttpCache.html":{}}}],["ongoingcach",{"_index":570,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["ongoinghttpcach",{"_index":571,"title":{"classes/OnGoingHttpCache.html":{}},"body":{"injectables/CachingInterceptor.html":{},"modules/HelgolandCachingModule.html":{},"classes/HttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["ongraphload",{"_index":689,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["ongraphloading(load",{"_index":715,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["onhighlight",{"_index":2154,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["onhoverhighlight",{"_index":1642,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["oninit",{"_index":398,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{},"classes/ListEntryComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["onitemselect",{"_index":2416,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["onleftsid",{"_index":1438,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["onload",{"_index":696,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["onmessagethrown",{"_index":1878,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["onopenincombiview",{"_index":3436,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["onopentimeset",{"_index":4020,"title":{},"body":{"components/TimespanShiftSelectorComponent.html":{}}}],["onrangechang",{"_index":3144,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["onres",{"_index":930,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["onresultchang",{"_index":2529,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["onselect",{"_index":3258,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["onselectd",{"_index":3549,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["onselectdataset",{"_index":2939,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["onselectid",{"_index":811,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["onselectionchang",{"_index":1590,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"classes/ExtendedTimeseries.html":{}}}],["onselectionchangedfinish",{"_index":1641,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["onselectitem",{"_index":3159,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["onselectitem(item",{"_index":2419,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["onserviceselect",{"_index":3697,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["onshowgeometri",{"_index":3437,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{}}}],["ontimelistdetermin",{"_index":3494,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["ontimeselect",{"_index":3935,"title":{},"body":{"components/TimeListSelectorComponent.html":{}}}],["ontimespanchang",{"_index":697,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/DatasetPresenterComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["ontimespanselect",{"_index":3948,"title":{},"body":{"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{}}}],["ontoggl",{"_index":348,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/StringTogglerComponent.html":{}}}],["ontogglepanzoom",{"_index":2070,"title":{},"body":{"components/DragOptionsComponent.html":{}}}],["ontrigg",{"_index":3216,"title":{},"body":{"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{}}}],["onupdateopt",{"_index":3438,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["onwindowresize(ev",{"_index":3668,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["opac",{"_index":3505,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["open",{"_index":3000,"title":{},"body":{"components/ListSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"additional-documentation/how-tos.html":{}}}],["opendataset",{"_index":2964,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["opendataset(url",{"_index":2982,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["openincombiview",{"_index":3430,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["openincombiview(opt",{"_index":3455,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["openinmail",{"_index":3215,"title":{},"body":{"components/PermalinkInMailComponent.html":{}}}],["openinnewwindow",{"_index":3227,"title":{},"body":{"components/PermalinkNewWindowComponent.html":{}}}],["openstreetmap",{"_index":485,"title":{},"body":{"classes/CachedMapComponent.html":{},"miscellaneous/variables.html":{}}}],["option",{"_index":64,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"classes/BufferedTime.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"classes/Dataset.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"classes/IdCache.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["option.color",{"_index":2219,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["option.gener",{"_index":1683,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["option.timestamp",{"_index":2182,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["option.vis",{"_index":2206,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["options'},{'nam",{"_index":204,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["options.aspointgeometri",{"_index":70,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["options.color",{"_index":1722,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["options.compon",{"_index":2699,"title":{},"body":{"modules/HelgolandModificationModule.html":{}}}],["options.component.html",{"_index":187,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/DragOptionsComponent.html":{}}}],["options.component.t",{"_index":181,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/DragOptionsComponent.html":{}}}],["options.component.ts:10",{"_index":193,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/DragOptionsComponent.html":{}}}],["options.component.ts:12",{"_index":194,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/DragOptionsComponent.html":{}}}],["options.countrycod",{"_index":76,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["options.countrycodes.join",{"_index":78,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["options.findindex((",{"_index":2196,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["options.foreach((opt",{"_index":2181,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["options.offset",{"_index":1805,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["options.t",{"_index":671,"title":{},"body":{"interfaces/D3GraphOptions.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/LayerOptions.html":{}}}],["options.vis",{"_index":3472,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["options/ax",{"_index":180,"title":{},"body":{"components/AxesOptionsComponent.html":{},"modules/HelgolandModificationModule.html":{}}}],["options/drag",{"_index":2069,"title":{},"body":{"components/DragOptionsComponent.html":{},"modules/HelgolandModificationModule.html":{}}}],["origin",{"_index":1414,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["osm_id",{"_index":53,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["osm_typ",{"_index":52,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["otherwis",{"_index":3816,"title":{},"body":{"injectables/StatusCheckService.html":{},"license.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["out",{"_index":1011,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/FilteredParameter.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/YScale.html":{},"license.html":{},"overview.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["outdir",{"_index":4548,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["outofrang",{"_index":1009,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["output",{"_index":189,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{}}}],["outsid",{"_index":491,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["outstand",{"_index":4274,"title":{},"body":{"license.html":{}}}],["overlap",{"_index":1354,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"injectables/Time.html":{},"interfaces/YScale.html":{}}}],["overlaps(timeinterv",{"_index":3896,"title":{},"body":{"injectables/Time.html":{}}}],["overlay",{"_index":2239,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["overlaymap",{"_index":424,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["overview",{"_index":213,"title":{"overview.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandFlotModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["overview_max",{"_index":1150,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["overview_min",{"_index":1151,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["overview_width",{"_index":1149,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["overviewtimespan",{"_index":686,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["overviewtimespaninterv",{"_index":1110,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["owner",{"_index":4255,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":4270,"title":{},"body":{"license.html":{}}}],["packag",{"_index":4085,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["pad",{"_index":2165,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["page",{"_index":4132,"title":{"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["pair",{"_index":1358,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["pan",{"_index":756,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/PlotOptions.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["panendhandl",{"_index":1403,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["panmovehandl",{"_index":1391,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["panrang",{"_index":167,"title":{},"body":{"interfaces/AxesOptions.html":{}}}],["panstarthandl",{"_index":1386,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["param",{"_index":65,"title":{},"body":{"interfaces/Address.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetApiV2.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalStorage.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/Time.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{}}}],["param.head",{"_index":3022,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["param.headeraddit",{"_index":3023,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["paramet",{"_index":143,"title":{"interfaces/Parameter.html":{}},"body":{"classes/ApiInterface.html":{},"injectables/BasicAuthService.html":{},"classes/BufferedTime.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/Category.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/Dataset.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/Feature.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"classes/GeoSearch.html":{},"components/GeosearchControlComponent.html":{},"classes/HasLoadableContent.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/IDataset.html":{},"classes/IdCache.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"injectables/NotifierService.html":{},"interfaces/Offering.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/Procedure.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValue.html":{},"components/RefreshButtonComponent.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/SettingsService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["parameterconstel",{"_index":1522,"title":{"classes/ParameterConstellation.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/ExtendedTimeseries.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{}}}],["parameterconstellation:16",{"_index":1861,"title":{},"body":{"classes/DatasetParameterConstellation.html":{}}}],["parameterconstellation:17",{"_index":1858,"title":{},"body":{"classes/DatasetParameterConstellation.html":{}}}],["parameterconstellation:18",{"_index":1857,"title":{},"body":{"classes/DatasetParameterConstellation.html":{}}}],["parameterconstellation:19",{"_index":1860,"title":{},"body":{"classes/DatasetParameterConstellation.html":{}}}],["parameterconstellation:20",{"_index":1859,"title":{},"body":{"classes/DatasetParameterConstellation.html":{}}}],["parameterconstellation:21",{"_index":1856,"title":{},"body":{"classes/DatasetParameterConstellation.html":{}}}],["parameterfilt",{"_index":1491,"title":{"interfaces/ParameterFilter.html":{}},"body":{"interfaces/DataParameterFilter.html":{},"interfaces/DatasetApiV2.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"interfaces/HttpRequestOptions.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"interfaces/ParameterFilter.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/UriParameterCoder.html":{}}}],["parameterlist",{"_index":3003,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["params).subscrib",{"_index":3013,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["params).subscribe((result",{"_index":3010,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["params.local",{"_index":4073,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["params.set('countrycod",{"_index":77,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["params.set('format",{"_index":74,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["params.set('lat",{"_index":104,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["params.set('limit",{"_index":67,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["params.set('lon",{"_index":106,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["params.set('polygon_geojson",{"_index":69,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["params.set('q",{"_index":72,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["params[key",{"_index":2134,"title":{},"body":{"injectables/EventingImplApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["parsedtimespanpreset",{"_index":338,"title":{"interfaces/ParsedTimespanPreset.html":{}},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["parsefloat(interval.low",{"_index":3862,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["parsefloat(interval.upp",{"_index":3859,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["parsefloat(result.lat",{"_index":102,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["parsefloat(result.lon",{"_index":101,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["parseint(preset.timespan.to",{"_index":3414,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["parsemomentexpress",{"_index":3316,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["parsemomentexpression(express",{"_index":3326,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["parsexml(r",{"_index":2904,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["part",{"_index":3365,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"license.html":{}}}],["parti",{"_index":4377,"title":{},"body":{"license.html":{}}}],["partial",{"_index":2145,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["particular",{"_index":4405,"title":{},"body":{"license.html":{}}}],["password",{"_index":303,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["patent",{"_index":4341,"title":{},"body":{"license.html":{}}}],["path",{"_index":1317,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"index.html":{}}}],["pattern",{"_index":1995,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["percent",{"_index":4272,"title":{},"body":{"license.html":{}}}],["perform",{"_index":4196,"title":{},"body":{"index.html":{},"license.html":{}}}],["permalink",{"_index":253,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandPermalinkModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/introduction.html":{}}}],["permalinkinmailcompon",{"_index":252,"title":{"components/PermalinkInMailComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandPermalinkModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["permalinknewwindowcompon",{"_index":255,"title":{"components/PermalinkNewWindowComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandPermalinkModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["permalinkservic",{"_index":3232,"title":{"classes/PermalinkService.html":{}},"body":{"classes/PermalinkService.html":{}}}],["permalinktoclipboardcompon",{"_index":257,"title":{"components/PermalinkToClipboardComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandPermalinkModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["permiss",{"_index":4279,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3361,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["perpetu",{"_index":4330,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":4371,"title":{},"body":{"license.html":{}}}],["phenomena",{"_index":3676,"title":{},"body":{"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{}}}],["phenomenon",{"_index":1492,"title":{"interfaces/Phenomenon.html":{}},"body":{"interfaces/DataParameterFilter.html":{},"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/IDataset.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/Phenomenon.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/UriParameterCoder.html":{}}}],["phenomenonlabel",{"_index":3551,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["picker",{"_index":2698,"title":{},"body":{"modules/HelgolandModificationModule.html":{},"dependencies.html":{}}}],["pink.css",{"_index":4665,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["pipe",{"_index":319,"title":{"pipes/DateProxyPipe.html":{}},"body":{"injectables/BasicAuthService.html":{},"injectables/CachingInterceptor.html":{},"pipes/DateProxyPipe.html":{},"overview.html":{}}}],["pipes/dateproxy/dateproxy.pip",{"_index":2592,"title":{},"body":{"modules/HelgolandCoreModule.html":{}}}],["pipetransform",{"_index":2000,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["place",{"_index":4373,"title":{},"body":{"license.html":{}}}],["place_id",{"_index":50,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["plaintoclass",{"_index":3904,"title":{},"body":{"injectables/Time.html":{}}}],["plaintoclass(timespan",{"_index":3925,"title":{},"body":{"injectables/Time.html":{}}}],["platform",{"_index":260,"title":{"interfaces/Platform.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/Dataset.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetParameterConstellation.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapSelectorModule.html":{},"interfaces/IDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValue.html":{},"components/RefreshButtonComponent.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"components/ZoomControlComponent.html":{}}}],["platformlabel",{"_index":3550,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["platformmapselectorcompon",{"_index":259,"title":{"components/PlatformMapSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["platformparamet",{"_index":1527,"title":{"interfaces/PlatformParameter.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["platformtyp",{"_index":1494,"title":{},"body":{"interfaces/DataParameterFilter.html":{},"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/Platform.html":{},"interfaces/PlatformParameter.html":{},"components/ProfileEntryComponent.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"miscellaneous/enumerations.html":{}}}],["platformtypes.mobileinsitu",{"_index":3475,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["pleas",{"_index":4613,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["plot",{"_index":725,"title":{"interfaces/Plot.html":{}},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Plot.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["plotli",{"_index":262,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandPlotlyModule.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/introduction.html":{}}}],["plotly.j",{"_index":2147,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"dependencies.html":{},"additional-documentation/introduction.html":{}}}],["plotly.newplot(this.plotlyarea",{"_index":2269,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["plotly.relayout(this.plotlyarea",{"_index":2281,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["plotlyarea",{"_index":2157,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["plotlyelem",{"_index":2156,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["plotlyprofilegraphcompon",{"_index":261,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandPlotlyModule.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["plotopt",{"_index":869,"title":{"interfaces/PlotOptions.html":{}},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/PlotOptions.html":{},"interfaces/YScale.html":{}}}],["point",{"_index":32,"title":{},"body":{"interfaces/Address.html":{},"interfaces/DataConst.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/HighlightDataset.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{}}}],["point.coordinates[0].tostr",{"_index":105,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["point.coordinates[1].tostr",{"_index":107,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["pointradiu",{"_index":799,"title":{},"body":{"interfaces/DataConst.html":{},"classes/DatasetOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{}}}],["posit",{"_index":1431,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["possibl",{"_index":3348,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["postcod",{"_index":16,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["power",{"_index":4264,"title":{},"body":{"license.html":{}}}],["pre",{"_index":4561,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["predefin",{"_index":265,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandTimeModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{}}}],["predefinedrang",{"_index":1002,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["predefinedrange.max",{"_index":1013,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["predefinedrange.min",{"_index":1012,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["predefinedsrvc",{"_index":4013,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["predefinedtimespanselectorcompon",{"_index":264,"title":{"components/PredefinedTimespanSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandTimeModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["prefer",{"_index":4281,"title":{},"body":{"license.html":{}}}],["prepar",{"_index":947,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["prepareddata",{"_index":823,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["preparefilterparam",{"_index":2101,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["preparefilterparams(param",{"_index":2116,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["prepareparams(param",{"_index":4071,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["preparerange(from",{"_index":1773,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["preparetsdata(dataset",{"_index":949,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["present",{"_index":1918,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"classes/HttpCache.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/PresenterMessage.html":{},"additional-documentation/introduction.html":{}}}],["presenter.component.t",{"_index":1863,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"miscellaneous/variables.html":{}}}],["presenter.component.ts:119",{"_index":1894,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:121",{"_index":1889,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:126",{"_index":1898,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:128",{"_index":1887,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:130",{"_index":1895,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:132",{"_index":1897,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:134",{"_index":1896,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:136",{"_index":1891,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:138",{"_index":1890,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:27",{"_index":1900,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:30",{"_index":1903,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:33",{"_index":1904,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:36",{"_index":1901,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:37",{"_index":1883,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:40",{"_index":1902,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:43",{"_index":1906,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:46",{"_index":1908,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:49",{"_index":1907,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:52",{"_index":1905,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:54",{"_index":1882,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:56",{"_index":1886,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:58",{"_index":1881,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:59",{"_index":1885,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:60",{"_index":1880,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:73",{"_index":1893,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:80",{"_index":1892,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenterhighlight",{"_index":2146,"title":{"interfaces/PresenterHighlight.html":{}},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["presentermessag",{"_index":1917,"title":{"interfaces/PresenterMessage.html":{}},"body":{"classes/DatasetPresenterComponent.html":{},"interfaces/PresenterMessage.html":{}}}],["presentermessagetyp",{"_index":3421,"title":{},"body":{"interfaces/PresenterMessage.html":{},"miscellaneous/enumerations.html":{}}}],["preset",{"_index":3325,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["preset.nam",{"_index":3403,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["prevent",{"_index":1125,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["prevfilt",{"_index":2444,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["previou",{"_index":1698,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["previous.referencevalu",{"_index":3797,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["previous.referencevalues.hasownproperty(key",{"_index":3798,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["previous.referencevalues[key].concat(current.referencevalues[key",{"_index":3800,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["previous.values.concat(current.valu",{"_index":3796,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["previoustimestamp",{"_index":642,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["previousvalu",{"_index":643,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["privat",{"_index":293,"title":{},"body":{"injectables/BasicAuthService.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"injectables/DefinedTimespanService.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"classes/IdCache.html":{},"injectables/LabelMapperService.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NotifierService.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/StatusCheckService.html":{},"injectables/Time.html":{},"interfaces/YScale.html":{}}}],["problem",{"_index":3380,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["procedur",{"_index":1525,"title":{"interfaces/Procedure.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Procedure.html":{},"classes/ReferenceValue.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/StatusInterval.html":{},"interfaces/SupportedMimeTypes.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/UriParameterCoder.html":{}}}],["procedurelabel",{"_index":3552,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["process",{"_index":998,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["processalldata",{"_index":1688,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["processdata",{"_index":2201,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["processdata(dataentri",{"_index":1000,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["processdataforid(internalid",{"_index":1692,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["product",{"_index":4394,"title":{},"body":{"license.html":{}}}],["profil",{"_index":263,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandPlotlyModule.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["profiledataentri",{"_index":770,"title":{"interfaces/ProfileDataEntry.html":{}},"body":{"interfaces/Data.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/IDataEntry.html":{},"interfaces/Layout.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValues.html":{},"interfaces/ScatterData.html":{},"interfaces/TimeValueEntry.html":{}}}],["profileentrycompon",{"_index":266,"title":{"components/ProfileEntryComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandDatasetlistModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["profiles.legend.go",{"_index":3485,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["profiletrajectorymapselectorcompon",{"_index":268,"title":{"components/ProfileTrajectoryMapSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":4172,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["projects/.../api",{"_index":4151,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../cach",{"_index":4463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../control.module.t",{"_index":4458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../d3",{"_index":4149,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../dataset",{"_index":4464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../defin",{"_index":4153,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../enums.t",{"_index":4152,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../favorite.module.t",{"_index":4455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../favorite.service.t",{"_index":4162,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../flot",{"_index":4453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../http.service.t",{"_index":4465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../intern",{"_index":4467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../label",{"_index":4454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../locate.service.t",{"_index":4469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../map.module.t",{"_index":4460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../mixin.decorator.t",{"_index":4164,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../module.t",{"_index":4459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../notifier.service.t",{"_index":4466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../permalink.module.t",{"_index":4456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../plotli",{"_index":4468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../present",{"_index":4154,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../test.t",{"_index":4462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../time.module.t",{"_index":4457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/auth/src/lib/bas",{"_index":291,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["projects/helgoland/auth/src/test.t",{"_index":4487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/caching/src/lib/cach",{"_index":566,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["projects/helgoland/caching/src/lib/caching.module.t",{"_index":2563,"title":{},"body":{"modules/HelgolandCachingModule.html":{}}}],["projects/helgoland/caching/src/lib/loc",{"_index":370,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{}}}],["projects/helgoland/caching/src/lib/model.t",{"_index":2754,"title":{},"body":{"classes/HttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["projects/helgoland/caching/src/lib/model.ts:13",{"_index":2757,"title":{},"body":{"classes/HttpCache.html":{}}}],["projects/helgoland/caching/src/lib/model.ts:18",{"_index":3200,"title":{},"body":{"classes/OnGoingHttpCache.html":{}}}],["projects/helgoland/caching/src/lib/model.ts:19",{"_index":3202,"title":{},"body":{"classes/OnGoingHttpCache.html":{}}}],["projects/helgoland/caching/src/lib/model.ts:20",{"_index":3201,"title":{},"body":{"classes/OnGoingHttpCache.html":{}}}],["projects/helgoland/caching/src/lib/model.ts:21",{"_index":3199,"title":{},"body":{"classes/OnGoingHttpCache.html":{}}}],["projects/helgoland/caching/src/lib/model.ts:8",{"_index":2756,"title":{},"body":{"classes/HttpCache.html":{}}}],["projects/helgoland/caching/src/test.t",{"_index":4483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/control/src/lib/bool",{"_index":339,"title":{},"body":{"components/BoolTogglerComponent.html":{}}}],["projects/helgoland/control/src/lib/control.module.t",{"_index":2573,"title":{},"body":{"modules/HelgolandControlModule.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/control/src/lib/refresh",{"_index":3625,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["projects/helgoland/control/src/lib/str",{"_index":3864,"title":{},"body":{"components/StringTogglerComponent.html":{}}}],["projects/helgoland/control/src/test.t",{"_index":4479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/core/src/lib/abstract",{"_index":133,"title":{},"body":{"classes/ApiInterface.html":{},"classes/DatasetService.html":{}}}],["projects/helgoland/core/src/lib/color/color.service.t",{"_index":660,"title":{},"body":{"injectables/ColorService.html":{}}}],["projects/helgoland/core/src/lib/color/color.service.ts:10",{"_index":664,"title":{},"body":{"injectables/ColorService.html":{}}}],["projects/helgoland/core/src/lib/color/color.service.ts:6",{"_index":663,"title":{},"body":{"injectables/ColorService.html":{}}}],["projects/helgoland/core/src/lib/core.module.t",{"_index":2585,"title":{},"body":{"modules/HelgolandCoreModule.html":{}}}],["projects/helgoland/core/src/lib/dataset",{"_index":1534,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusIntervalResolverService.html":{},"classes/UriParameterCoder.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/core/src/lib/language/languag",{"_index":2922,"title":{},"body":{"classes/LanguageChangNotifier.html":{}}}],["projects/helgoland/core/src/lib/language/local",{"_index":3038,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["projects/helgoland/core/src/lib/language/model/language.t",{"_index":2921,"title":{},"body":{"interfaces/Language.html":{}}}],["projects/helgoland/core/src/lib/loc",{"_index":3058,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["projects/helgoland/core/src/lib/model/dataset",{"_index":625,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Data.html":{},"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/Feature.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Identifiable.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/Offering.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValues.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"interfaces/StatusInterval.html":{},"interfaces/SupportedMimeTypes.html":{},"interfaces/TimeValueEntry.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"miscellaneous/enumerations.html":{}}}],["projects/helgoland/core/src/lib/model/internal/dataset",{"_index":1987,"title":{},"body":{"interfaces/DatasetTableData.html":{}}}],["projects/helgoland/core/src/lib/model/internal/filter.t",{"_index":2402,"title":{},"body":{"classes/Filter.html":{}}}],["projects/helgoland/core/src/lib/model/internal/filter.ts:4",{"_index":2407,"title":{},"body":{"classes/Filter.html":{}}}],["projects/helgoland/core/src/lib/model/internal/filter.ts:5",{"_index":2406,"title":{},"body":{"classes/Filter.html":{}}}],["projects/helgoland/core/src/lib/model/internal/filter.ts:6",{"_index":2405,"title":{},"body":{"classes/Filter.html":{}}}],["projects/helgoland/core/src/lib/model/internal/filter.ts:7",{"_index":2404,"title":{},"body":{"classes/Filter.html":{}}}],["projects/helgoland/core/src/lib/model/internal/http",{"_index":1489,"title":{},"body":{"interfaces/DataParameterFilter.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/ParameterFilter.html":{}}}],["projects/helgoland/core/src/lib/model/internal/id",{"_index":2784,"title":{},"body":{"classes/IdCache.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.t",{"_index":1826,"title":{},"body":{"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:101",{"_index":3623,"title":{},"body":{"classes/ReferenceValueOption.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:102",{"_index":3622,"title":{},"body":{"classes/ReferenceValueOption.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:117",{"_index":3980,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:15",{"_index":1834,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:23",{"_index":1831,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:31",{"_index":1846,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:33",{"_index":1838,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:41",{"_index":1842,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:49",{"_index":1847,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:57",{"_index":1832,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:65",{"_index":1845,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:73",{"_index":1839,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:81",{"_index":1836,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:89",{"_index":1830,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/provider.t",{"_index":2452,"title":{},"body":{"interfaces/FilteredProvider.html":{},"interfaces/Provider.html":{}}}],["projects/helgoland/core/src/lib/model/internal/resizablecomponent.t",{"_index":3660,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["projects/helgoland/core/src/lib/model/internal/resizablecomponent.ts:10",{"_index":3663,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["projects/helgoland/core/src/lib/model/internal/resizablecomponent.ts:6",{"_index":3666,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["projects/helgoland/core/src/lib/model/internal/timeinterval.t",{"_index":356,"title":{},"body":{"classes/BufferedTime.html":{},"classes/TimeInterval.html":{},"classes/Timespan.html":{}}}],["projects/helgoland/core/src/lib/model/internal/timeinterval.ts:27",{"_index":363,"title":{},"body":{"classes/BufferedTime.html":{}}}],["projects/helgoland/core/src/lib/model/internal/timeinterval.ts:28",{"_index":362,"title":{},"body":{"classes/BufferedTime.html":{}}}],["projects/helgoland/core/src/lib/model/internal/timeinterval.ts:7",{"_index":4007,"title":{},"body":{"classes/Timespan.html":{}}}],["projects/helgoland/core/src/lib/model/internal/timeinterval.ts:9",{"_index":4006,"title":{},"body":{"classes/Timespan.html":{}}}],["projects/helgoland/core/src/lib/model/mixins/ha",{"_index":2556,"title":{},"body":{"classes/HasLoadableContent.html":{}}}],["projects/helgoland/core/src/lib/model/mixins/mixin.decorator.t",{"_index":4165,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/helgoland/core/src/lib/model/settings/settings.t",{"_index":323,"title":{},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["projects/helgoland/core/src/lib/notifier/notifier.service.t",{"_index":3173,"title":{},"body":{"injectables/NotifierService.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/core/src/lib/notifier/notifier.service.ts:23",{"_index":3177,"title":{},"body":{"injectables/NotifierService.html":{}}}],["projects/helgoland/core/src/lib/notifier/notifier.service.ts:9",{"_index":3175,"title":{},"body":{"injectables/NotifierService.html":{}}}],["projects/helgoland/core/src/lib/pipes/dateproxy/dateproxy.pipe.t",{"_index":1992,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["projects/helgoland/core/src/lib/pipes/dateproxy/dateproxy.pipe.ts:15",{"_index":1996,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["projects/helgoland/core/src/lib/presenting/dataset",{"_index":1862,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/core/src/lib/presenting/present",{"_index":3418,"title":{},"body":{"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/helgoland/core/src/lib/settings/settings.service.t",{"_index":3762,"title":{},"body":{"classes/SettingsService.html":{}}}],["projects/helgoland/core/src/lib/settings/settings.service.ts:12",{"_index":3766,"title":{},"body":{"classes/SettingsService.html":{}}}],["projects/helgoland/core/src/lib/settings/settings.service.ts:16",{"_index":3768,"title":{},"body":{"classes/SettingsService.html":{}}}],["projects/helgoland/core/src/lib/settings/settings.service.ts:5",{"_index":3765,"title":{},"body":{"classes/SettingsService.html":{}}}],["projects/helgoland/core/src/lib/statu",{"_index":3810,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["projects/helgoland/core/src/lib/time/defin",{"_index":2017,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.t",{"_index":3872,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:15",{"_index":3884,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:22",{"_index":3901,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:29",{"_index":3903,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:36",{"_index":3897,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:44",{"_index":3886,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:57",{"_index":3889,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:64",{"_index":3899,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:68",{"_index":3895,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:76",{"_index":3893,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:83",{"_index":3891,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:9",{"_index":3882,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/test.t",{"_index":4473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/d3/src/lib/d3",{"_index":676,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["projects/helgoland/d3/src/lib/d3.module.t",{"_index":2600,"title":{},"body":{"modules/HelgolandD3Module.html":{}}}],["projects/helgoland/d3/src/lib/model/d3",{"_index":669,"title":{},"body":{"interfaces/D3GraphOptions.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"miscellaneous/enumerations.html":{}}}],["projects/helgoland/d3/src/test.t",{"_index":4477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/depiction/src/lib/dataset",{"_index":2607,"title":{},"body":{"modules/HelgolandDatasetTableModule.html":{}}}],["projects/helgoland/depiction/src/lib/datasetlist/list",{"_index":2933,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["projects/helgoland/depiction/src/lib/datasetlist/module.t",{"_index":2619,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/depiction/src/lib/datasetlist/profil",{"_index":3423,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["projects/helgoland/depiction/src/lib/datasetlist/timeseri",{"_index":3547,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["projects/helgoland/depiction/src/lib/datasetlist/trajectori",{"_index":4029,"title":{},"body":{"components/TrajectoryEntryComponent.html":{}}}],["projects/helgoland/depiction/src/lib/label",{"_index":2649,"title":{},"body":{"modules/HelgolandLabelMapperModule.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/depiction/src/test.t",{"_index":4481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/eventing/src/lib/ev",{"_index":2073,"title":{},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["projects/helgoland/eventing/src/lib/eventing.module.t",{"_index":2138,"title":{},"body":{"modules/EventingModule.html":{}}}],["projects/helgoland/eventing/src/lib/model/request.t",{"_index":2092,"title":{},"body":{"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"interfaces/EventingSubscriptionFilter.html":{}}}],["projects/helgoland/eventing/src/lib/model/response.t",{"_index":628,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["projects/helgoland/eventing/src/test.t",{"_index":4485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/favorite/src/lib/favorit",{"_index":2378,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["projects/helgoland/favorite/src/lib/favorite.module.t",{"_index":2634,"title":{},"body":{"modules/HelgolandFavoriteModule.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.t",{"_index":2304,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:10",{"_index":2377,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:11",{"_index":2376,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:12",{"_index":2364,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:20",{"_index":2365,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:33",{"_index":2370,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:37",{"_index":2369,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:41",{"_index":2373,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:55",{"_index":2366,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:66",{"_index":2368,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:70",{"_index":2372,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:77",{"_index":2367,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:84",{"_index":2375,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:89",{"_index":2371,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/json",{"_index":2818,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["projects/helgoland/favorite/src/test.t",{"_index":4474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/flot/src/lib/flot",{"_index":2455,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/flot/src/lib/flot.module.t",{"_index":2642,"title":{},"body":{"modules/HelgolandFlotModule.html":{}}}],["projects/helgoland/flot/src/lib/model/axesoptions.t",{"_index":162,"title":{},"body":{"interfaces/AxesOptions.html":{}}}],["projects/helgoland/flot/src/lib/model/dataseries.t",{"_index":1498,"title":{},"body":{"interfaces/DataSeries.html":{},"interfaces/SeriesOptions.html":{}}}],["projects/helgoland/flot/src/lib/model/plot.t",{"_index":3294,"title":{},"body":{"interfaces/Plot.html":{}}}],["projects/helgoland/flot/src/lib/model/plot.ts:4",{"_index":3298,"title":{},"body":{"interfaces/Plot.html":{}}}],["projects/helgoland/flot/src/lib/model/plot.ts:5",{"_index":3296,"title":{},"body":{"interfaces/Plot.html":{}}}],["projects/helgoland/flot/src/lib/model/plotoptions.t",{"_index":3300,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["projects/helgoland/flot/src/test.t",{"_index":4476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/map/src/lib/base/cach",{"_index":393,"title":{},"body":{"classes/CachedMapComponent.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/map/src/lib/base/geocure/geocur",{"_index":2475,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["projects/helgoland/map/src/lib/base/geosearch/geosearch.t",{"_index":2517,"title":{},"body":{"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{}}}],["projects/helgoland/map/src/lib/base/geosearch/geosearch.ts:42",{"_index":2522,"title":{},"body":{"classes/GeoSearch.html":{}}}],["projects/helgoland/map/src/lib/base/geosearch/geosearch.ts:44",{"_index":2521,"title":{},"body":{"classes/GeoSearch.html":{}}}],["projects/helgoland/map/src/lib/base/geosearch/nominatim.service.t",{"_index":5,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts:103",{"_index":3171,"title":{},"body":{"injectables/NominatimGeoSearchService.html":{}}}],["projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts:50",{"_index":3170,"title":{},"body":{"injectables/NominatimGeoSearchService.html":{}}}],["projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts:56",{"_index":3172,"title":{},"body":{"injectables/NominatimGeoSearchService.html":{}}}],["projects/helgoland/map/src/lib/base/map",{"_index":2929,"title":{},"body":{"interfaces/LayerOptions.html":{},"injectables/MapCache.html":{}}}],["projects/helgoland/map/src/lib/base/map.module.t",{"_index":2672,"title":{},"body":{"modules/HelgolandMapModule.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/map/src/lib/control/extent/extent.component.t",{"_index":2296,"title":{},"body":{"components/ExtentControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/extent/extent.component.ts:12",{"_index":2300,"title":{},"body":{"components/ExtentControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/extent/extent.component.ts:15",{"_index":2299,"title":{},"body":{"components/ExtentControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/extent/extent.component.ts:21",{"_index":2301,"title":{},"body":{"components/ExtentControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.t",{"_index":2523,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:14",{"_index":2531,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:17",{"_index":2532,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:20",{"_index":2533,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:22",{"_index":2537,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:24",{"_index":2539,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:26",{"_index":2540,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:28",{"_index":2530,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:35",{"_index":2536,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:62",{"_index":2534,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:68",{"_index":2535,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/locate/locate.component.t",{"_index":3078,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/locate/locate.component.ts:13",{"_index":3085,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/locate/locate.component.ts:15",{"_index":3084,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/locate/locate.component.ts:21",{"_index":3086,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/locate/locate.service.t",{"_index":3091,"title":{},"body":{"injectables/LocateService.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/map/src/lib/control/locate/locate.service.ts:11",{"_index":3095,"title":{},"body":{"injectables/LocateService.html":{}}}],["projects/helgoland/map/src/lib/control/locate/locate.service.ts:17",{"_index":3099,"title":{},"body":{"injectables/LocateService.html":{}}}],["projects/helgoland/map/src/lib/control/locate/locate.service.ts:34",{"_index":3101,"title":{},"body":{"injectables/LocateService.html":{}}}],["projects/helgoland/map/src/lib/control/locate/locate.service.ts:41",{"_index":3097,"title":{},"body":{"injectables/LocateService.html":{}}}],["projects/helgoland/map/src/lib/control/module.t",{"_index":2661,"title":{},"body":{"modules/HelgolandMapControlModule.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/map/src/lib/control/zoom/zoom.component.t",{"_index":4076,"title":{},"body":{"components/ZoomControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/zoom/zoom.component.ts:12",{"_index":4080,"title":{},"body":{"components/ZoomControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/zoom/zoom.component.ts:18",{"_index":4081,"title":{},"body":{"components/ZoomControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/zoom/zoom.component.ts:22",{"_index":4082,"title":{},"body":{"components/ZoomControlComponent.html":{}}}],["projects/helgoland/map/src/lib/selector/model/trajectori",{"_index":4033,"title":{},"body":{"interfaces/TrajectoryResult.html":{}}}],["projects/helgoland/map/src/lib/selector/module.t",{"_index":2678,"title":{},"body":{"modules/HelgolandMapSelectorModule.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/map/src/lib/selector/platform",{"_index":3251,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["projects/helgoland/map/src/lib/selector/trajectori",{"_index":3488,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["projects/helgoland/map/src/lib/view/module.t",{"_index":2688,"title":{},"body":{"modules/HelgolandMapViewModule.html":{}}}],["projects/helgoland/map/src/test.t",{"_index":4470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/modification/src/lib/ax",{"_index":179,"title":{},"body":{"components/AxesOptionsComponent.html":{}}}],["projects/helgoland/modification/src/lib/color",{"_index":651,"title":{},"body":{"components/ColorSelectorComponent.html":{}}}],["projects/helgoland/modification/src/lib/drag",{"_index":2068,"title":{},"body":{"components/DragOptionsComponent.html":{}}}],["projects/helgoland/modification/src/lib/min",{"_index":3136,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["projects/helgoland/modification/src/lib/modification.module.t",{"_index":2696,"title":{},"body":{"modules/HelgolandModificationModule.html":{}}}],["projects/helgoland/modification/src/test.t",{"_index":4480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/permalink/src/lib/permalink",{"_index":3211,"title":{},"body":{"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{}}}],["projects/helgoland/permalink/src/lib/permalink.module.t",{"_index":2706,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/permalink/src/lib/services/permalink.service.t",{"_index":3233,"title":{},"body":{"classes/PermalinkService.html":{}}}],["projects/helgoland/permalink/src/lib/services/permalink.service.ts:11",{"_index":3240,"title":{},"body":{"classes/PermalinkService.html":{}}}],["projects/helgoland/permalink/src/lib/services/permalink.service.ts:3",{"_index":3239,"title":{},"body":{"classes/PermalinkService.html":{}}}],["projects/helgoland/permalink/src/lib/services/permalink.service.ts:7",{"_index":3242,"title":{},"body":{"classes/PermalinkService.html":{}}}],["projects/helgoland/permalink/src/lib/services/permalink.service.ts:9",{"_index":3241,"title":{},"body":{"classes/PermalinkService.html":{}}}],["projects/helgoland/permalink/src/test.t",{"_index":4482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/plotly/src/lib/plotli",{"_index":2143,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/plotly/src/lib/plotly.module.t",{"_index":2720,"title":{},"body":{"modules/HelgolandPlotlyModule.html":{}}}],["projects/helgoland/plotly/src/test.t",{"_index":4484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/selector/src/lib/dataset",{"_index":1583,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["projects/helgoland/selector/src/lib/list",{"_index":2960,"title":{},"body":{"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{}}}],["projects/helgoland/selector/src/lib/multi",{"_index":2410,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["projects/helgoland/selector/src/lib/selector.module.t",{"_index":2729,"title":{},"body":{"modules/HelgolandSelectorModule.html":{}}}],["projects/helgoland/selector/src/lib/servic",{"_index":3677,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{}}}],["projects/helgoland/selector/src/test.t",{"_index":4486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/tim",{"_index":2749,"title":{},"body":{"modules/HelgolandTimeRangeSliderModule.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/time/src/lib/predefin",{"_index":3313,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["projects/helgoland/time/src/lib/tim",{"_index":3933,"title":{},"body":{"components/TimeListSelectorComponent.html":{}}}],["projects/helgoland/time/src/lib/time.module.t",{"_index":2738,"title":{},"body":{"modules/HelgolandTimeModule.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/time/src/lib/timespan",{"_index":4008,"title":{},"body":{"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["projects/helgoland/time/src/test.t",{"_index":4475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promin",{"_index":4367,"title":{},"body":{"license.html":{}}}],["properti",{"_index":7,"title":{},"body":{"interfaces/Address.html":{},"interfaces/AxesOptions.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"classes/BufferedTime.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"interfaces/CollectionMetadata.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"injectables/DefinedTimespanService.html":{},"interfaces/DrawOptions.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseResult.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"interfaces/LayerOptions.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"classes/PermalinkService.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"interfaces/YScale.html":{},"index.html":{}}}],["protect",{"_index":57,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"classes/LocalSelectorComponent.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"classes/PermalinkService.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/Time.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{}}}],["provid",{"_index":2141,"title":{"interfaces/Provider.html":{}},"body":{"modules/EventingModule.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"interfaces/Provider.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["providedin",{"_index":2773,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["providerblacklist",{"_index":328,"title":{},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["providerlist",{"_index":2965,"title":{},"body":{"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{}}}],["proxyurl",{"_index":330,"title":{},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["public",{"_index":62,"title":{},"body":{"interfaces/Address.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/D3SelectionRange.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"classes/ParameterConstellation.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["publicis",{"_index":3415,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["publicli",{"_index":4338,"title":{},"body":{"license.html":{}}}],["publish",{"_index":4206,"title":{},"body":{"index.html":{}}}],["pure",{"_index":2004,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["purpos",{"_index":4263,"title":{},"body":{"license.html":{}}}],["push",{"_index":1356,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["put",{"_index":2755,"title":{},"body":{"classes/HttpCache.html":{},"injectables/LocalHttpCache.html":{}}}],["put(req",{"_index":388,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/HttpCache.html":{},"injectables/LocalHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["quantiti",{"_index":3672,"title":{},"body":{"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{},"miscellaneous/enumerations.html":{}}}],["quantityprofil",{"_index":4160,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["queryselectorclip",{"_index":1310,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["quickstart",{"_index":4510,"title":{},"body":{"additional-documentation/how-tos.html":{}}}],["quit",{"_index":4591,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["quot",{"_index":3376,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["r",{"_index":2164,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["radiu",{"_index":1840,"title":{},"body":{"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["random",{"_index":959,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["randomli",{"_index":4564,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["rang",{"_index":279,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValueOption.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["range'},{'nam",{"_index":247,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["range([buff",{"_index":1808,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["range([bufferxrang",{"_index":1193,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["range([this.height",{"_index":1256,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["range.compon",{"_index":2701,"title":{},"body":{"modules/HelgolandModificationModule.html":{}}}],["range.component.css",{"_index":3138,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.component.html",{"_index":3139,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.component.t",{"_index":3137,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.component.ts:11",{"_index":3151,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.component.ts:12",{"_index":3150,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.component.ts:15",{"_index":3145,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.component.ts:18",{"_index":3146,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.component.ts:20",{"_index":3147,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.component.ts:27",{"_index":3149,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.component.ts:33",{"_index":3148,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.max",{"_index":1252,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["range.min",{"_index":1250,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["range.t",{"_index":760,"title":{},"body":{"classes/D3SelectionRange.html":{}}}],["range.ts:2",{"_index":761,"title":{},"body":{"classes/D3SelectionRange.html":{}}}],["range.ts:3",{"_index":762,"title":{},"body":{"classes/D3SelectionRange.html":{}}}],["range/min",{"_index":2700,"title":{},"body":{"modules/HelgolandModificationModule.html":{},"components/MinMaxRangeComponent.html":{}}}],["range[0",{"_index":1799,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["range[1",{"_index":1798,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["rangefactor",{"_index":694,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["rangemax",{"_index":3140,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["rangemin",{"_index":3141,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["rangemod",{"_index":2240,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["rangeoffset",{"_index":1253,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["ratiotimestampdiagcoord",{"_index":1397,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["rawdata",{"_index":2148,"title":{"interfaces/RawData.html":{}},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["rawsvg",{"_index":826,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["re",{"_index":615,"title":{},"body":{"injectables/CachingInterceptor.html":{},"interfaces/DataConst.html":{},"interfaces/FilteredParameter.html":{},"interfaces/HighlightDataset.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/StatusCheckService.html":{},"interfaces/YScale.html":{}}}],["reachabl",{"_index":3744,"title":{},"body":{"components/ServiceSelectorComponent.html":{},"injectables/StatusCheckService.html":{}}}],["react",{"_index":4673,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["readabl",{"_index":4372,"title":{},"body":{"license.html":{}}}],["reader",{"_index":2853,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["reader.onerror",{"_index":2856,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["reader.onload",{"_index":2858,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["reader.readastext(files[0",{"_index":2855,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["reason",{"_index":3370,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"license.html":{}}}],["receiv",{"_index":4324,"title":{},"body":{"license.html":{}}}],["recipi",{"_index":4364,"title":{},"body":{"license.html":{}}}],["rect",{"_index":1054,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["rectangl",{"_index":1359,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["red",{"_index":1143,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["redistribut",{"_index":4361,"title":{},"body":{"license.html":{}}}],["redrawchart",{"_index":2280,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["ref",{"_index":993,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["refdataentri",{"_index":992,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["refer",{"_index":755,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["referencevalu",{"_index":764,"title":{"classes/ReferenceValue.html":{},"classes/ReferenceValues.html":{}},"body":{"interfaces/Data.html":{},"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/ExtendedTimeseries.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"interfaces/ProfileDataEntry.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValues.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"interfaces/StatusInterval.html":{},"interfaces/TimeValueEntry.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["referencevaluecolorcach",{"_index":2618,"title":{"injectables/ReferenceValueColorCache.html":{}},"body":{"modules/HelgolandDatasetlistModule.html":{},"injectables/ReferenceValueColorCache.html":{},"overview.html":{}}}],["referencevaluedata",{"_index":981,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["referencevalueid",{"_index":1526,"title":{},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["referencevalueopt",{"_index":1844,"title":{"classes/ReferenceValueOption.html":{}},"body":{"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["refid",{"_index":3616,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["refresh",{"_index":270,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandControlModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["refreshbuttoncompon",{"_index":269,"title":{"components/RefreshButtonComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandTimeModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["refreshdatainterv",{"_index":335,"title":{},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["refreshinterv",{"_index":3632,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["refvalcach",{"_index":3555,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["refvalid",{"_index":3573,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["refvalopt",{"_index":3603,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["refvaloption.color",{"_index":3608,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["refvalue.color",{"_index":995,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/YScale.html":{}}}],["refvalue.id",{"_index":994,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["refvalue.referencevalueid",{"_index":3572,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["refvalue.vis",{"_index":3575,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["regard",{"_index":4392,"title":{},"body":{"license.html":{}}}],["regex",{"_index":3342,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["regexp(/^moment\\(\\)(\\.(((add|subtract)\\(\\d",{"_index":3384,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["regextoken",{"_index":2915,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["regextoken.exec(sourc",{"_index":2919,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["regist",{"_index":3827,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["relat",{"_index":999,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["reloaddata",{"_index":894,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["remain",{"_index":4300,"title":{},"body":{"license.html":{}}}],["remov",{"_index":1139,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"injectables/StatusCheckService.html":{},"interfaces/YScale.html":{}}}],["removealldataset",{"_index":1958,"title":{},"body":{"classes/DatasetService.html":{}}}],["removeallfavorit",{"_index":2332,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["removebasemap",{"_index":415,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["removebasemap(layeropt",{"_index":459,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["removedataset",{"_index":1873,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["removedataset(internalid",{"_index":901,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["removedatasetopt",{"_index":3431,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["removedatasetoptions(opt",{"_index":3457,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["removedidx",{"_index":2194,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["removefavorit",{"_index":2363,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["removefavorite(favoriteid",{"_index":2321,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["removemark",{"_index":3092,"title":{},"body":{"injectables/LocateService.html":{}}}],["removemarker(map",{"_index":3096,"title":{},"body":{"injectables/LocateService.html":{}}}],["removeoldgeometri",{"_index":2527,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["removeoverlaymap",{"_index":416,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["removeoverlaymap(layeropt",{"_index":461,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["removeselectedid",{"_index":1874,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["removeselectedid(internalid",{"_index":919,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["removeurl",{"_index":3821,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["removeurl(url",{"_index":3836,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["renam",{"_index":4627,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["render",{"_index":1127,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["replac",{"_index":4594,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["repositori",{"_index":4184,"title":{},"body":{"index.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["repres",{"_index":4299,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{}}}],["reproduc",{"_index":4337,"title":{},"body":{"license.html":{}}}],["reproduct",{"_index":4247,"title":{},"body":{"license.html":{}}}],["req",{"_index":578,"title":{},"body":{"injectables/CachingInterceptor.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["req.method",{"_index":591,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["request",{"_index":587,"title":{},"body":{"injectables/CachingInterceptor.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DatasetApiV2.html":{},"classes/DatasetOptions.html":{},"classes/Filter.html":{},"interfaces/FilteredProvider.html":{},"classes/HttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"interfaces/MinMaxRange.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Provider.html":{},"classes/ReferenceValueOption.html":{},"components/ServiceSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"classes/TimedDatasetOptions.html":{},"classes/UriParameterCoder.html":{},"additional-documentation/introduction.html":{}}}],["requestapi",{"_index":2102,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["requestapi(url",{"_index":2118,"title":{},"body":{"injectables/EventingImplApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["requests.push(super.gettsdata(id",{"_index":3790,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["requests.push(this.docheckurl(url",{"_index":3848,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["requests.t",{"_index":1490,"title":{},"body":{"interfaces/DataParameterFilter.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/ParameterFilter.html":{}}}],["requests.ts:7",{"_index":3210,"title":{},"body":{"interfaces/ParameterFilter.html":{}}}],["requesturl",{"_index":158,"title":{},"body":{"classes/ApiInterface.html":{}}}],["requir",{"_index":4187,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["require('deep",{"_index":1920,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":4471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.address.c",{"_index":114,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.city_district",{"_index":116,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.counti",{"_index":120,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.countri",{"_index":117,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.country_cod",{"_index":119,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.house_numb",{"_index":122,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.neighbourhood",{"_index":123,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.postcod",{"_index":124,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.road",{"_index":125,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.st",{"_index":126,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.state_district",{"_index":128,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.suburb",{"_index":129,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.boundingbox",{"_index":130,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.display_nam",{"_index":113,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.foreach((entri",{"_index":2445,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["res.lat",{"_index":110,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.length",{"_index":3284,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["res.lon",{"_index":111,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["resarray.length",{"_index":84,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["resarray[0",{"_index":87,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["reset",{"_index":2278,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/Layout.html":{},"components/MinMaxRangeComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"overview.html":{}}}],["resetyaxisrang",{"_index":3142,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["resiz",{"_index":1140,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["resizablecompon",{"_index":1864,"title":{"classes/ResizableComponent.html":{}},"body":{"classes/DatasetPresenterComponent.html":{},"classes/ResizableComponent.html":{}}}],["resizablecomponent:10",{"_index":1899,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["resolv",{"_index":2802,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"additional-documentation/introduction.html":{}}}],["resolvedlabel",{"_index":2910,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["resolveinternalid",{"_index":2815,"title":{},"body":{"injectables/InternalIdHandler.html":{}}}],["resolveinternalid(internalid",{"_index":2807,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{}}}],["resolver.servic",{"_index":2590,"title":{},"body":{"modules/HelgolandCoreModule.html":{}}}],["resolver.service.t",{"_index":3852,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["resolver.service.ts:10",{"_index":3856,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["resolver.service.ts:6",{"_index":3854,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["resp",{"_index":389,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/HttpCache.html":{},"injectables/LocalHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["respons",{"_index":379,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"classes/HttpCache.html":{},"injectables/LocalHttpCache.html":{},"classes/OnGoingHttpCache.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["responsetyp",{"_index":2901,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["rest",{"_index":4232,"title":{},"body":{"index.html":{}}}],["restart",{"_index":4547,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["restrict",{"_index":4588,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["restuctur",{"_index":4622,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["result",{"_index":86,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/Feature.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Offering.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["result.bound",{"_index":2550,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["result.boundingbox",{"_index":92,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["result.boundingbox[0",{"_index":93,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["result.boundingbox[1",{"_index":95,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["result.boundingbox[2",{"_index":94,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["result.boundingbox[3",{"_index":96,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["result.display_nam",{"_index":89,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["result.foreach((entri",{"_index":1554,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["result.geojson",{"_index":99,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["result.t",{"_index":4034,"title":{},"body":{"interfaces/TrajectoryResult.html":{}}}],["result.valu",{"_index":1686,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["result.values.length",{"_index":1685,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"components/ProfileEntryComponent.html":{}}}],["resultgeometri",{"_index":2525,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["retain",{"_index":4369,"title":{},"body":{"license.html":{}}}],["return",{"_index":79,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"components/BoolTogglerComponent.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"classes/GeoSearch.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"classes/IdCache.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/Plot.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["revers",{"_index":108,"title":{},"body":{"interfaces/Address.html":{},"interfaces/ExtendedScatterData.html":{},"classes/GeoSearch.html":{},"interfaces/Layout.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["reverse(point",{"_index":103,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["revis",{"_index":4297,"title":{},"body":{"license.html":{}}}],["right",{"_index":846,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["risk",{"_index":4410,"title":{},"body":{"license.html":{}}}],["road",{"_index":17,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["root",{"_index":2774,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["rotat",{"_index":1261,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["row",{"_index":4634,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["royalti",{"_index":4335,"title":{},"body":{"license.html":{}}}],["run",{"_index":4189,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["rxj",{"_index":311,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"classes/UriParameterCoder.html":{},"dependencies.html":{}}}],["rxjs/add/observable/of",{"_index":579,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["rxjs/add/operator/map",{"_index":25,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["rxjs/add/operator/shar",{"_index":580,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["rxjs/observ",{"_index":35,"title":{},"body":{"interfaces/Address.html":{},"injectables/CachingInterceptor.html":{},"interfaces/DataConst.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"injectables/JsonFavoriteExporterService.html":{},"injectables/LabelMapperService.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"classes/OnGoingHttpCache.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/YScale.html":{}}}],["rxjs/oper",{"_index":312,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{}}}],["rxjs/operator/map",{"_index":2799,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{}}}],["s4",{"_index":532,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["safemomentexpress",{"_index":3383,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["safemomentexpression.test(express",{"_index":3397,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["same",{"_index":604,"title":{},"body":{"injectables/CachingInterceptor.html":{},"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["satisfi",{"_index":3410,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["save",{"_index":2803,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/LocalStorage.html":{}}}],["save(param",{"_index":3070,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["savefavorit",{"_index":2341,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["savest",{"_index":1959,"title":{},"body":{"classes/DatasetService.html":{}}}],["savetimespan",{"_index":3879,"title":{},"body":{"injectables/Time.html":{}}}],["savetimespan(param",{"_index":3898,"title":{},"body":{"injectables/Time.html":{}}}],["scale",{"_index":1189,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/PlotOptions.html":{},"interfaces/YScale.html":{}}}],["scalelinear",{"_index":1631,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["scatter",{"_index":2211,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["scatterdata",{"_index":2282,"title":{"interfaces/ScatterData.html":{}},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["scrollzoom",{"_index":2174,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["scss",{"_index":4618,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["search",{"_index":82,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"additional-documentation/introduction.html":{}}}],["searchterm",{"_index":2520,"title":{},"body":{"classes/GeoSearch.html":{},"components/GeosearchControlComponent.html":{},"injectables/NominatimGeoSearchService.html":{}}}],["searchterm(term",{"_index":63,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["section",{"_index":4251,"title":{},"body":{"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["secur",{"_index":3374,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["see",{"_index":595,"title":{},"body":{"injectables/CachingInterceptor.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["select",{"_index":759,"title":{},"body":{"classes/D3SelectionRange.html":{},"interfaces/DataConst.html":{},"interfaces/DataSeries.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/FilteredParameter.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"interfaces/PlotOptions.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["select(this.d3elem.nativeel",{"_index":1658,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["selectall('text",{"_index":1228,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["selectdataset",{"_index":4646,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["selectdataset(select",{"_index":4648,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["selecteddatasetid",{"_index":1876,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["selecteddatasetidschang",{"_index":1931,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["selecteddatasetidschanges.foreachaddeditem((addeditem",{"_index":1933,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["selecteddatasetidschanges.foreachremoveditem((removeditem",{"_index":1935,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["selecteddatasetidsdiff",{"_index":1868,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["selectedid",{"_index":4577,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["selectedservic",{"_index":3694,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selectedtimespan",{"_index":3306,"title":{},"body":{"interfaces/PlotOptions.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selectionend",{"_index":3946,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["selectionid",{"_index":3678,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["selectionstart",{"_index":3947,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["selector",{"_index":183,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/introduction.html":{}}}],["selector'},{'nam",{"_index":210,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["selector.compon",{"_index":2680,"title":{},"body":{"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"components/ListSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.html",{"_index":654,"title":{},"body":{"components/ColorSelectorComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/FilteredParameter.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["selector.component.scss",{"_index":1585,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["selector.component.t",{"_index":653,"title":{},"body":{"components/ColorSelectorComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/FilteredParameter.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["selector.component.ts:10",{"_index":656,"title":{},"body":{"components/ColorSelectorComponent.html":{},"components/TimeListSelectorComponent.html":{}}}],["selector.component.ts:108",{"_index":3163,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:11",{"_index":4021,"title":{},"body":{"components/TimespanShiftSelectorComponent.html":{}}}],["selector.component.ts:111",{"_index":2977,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["selector.component.ts:112",{"_index":3168,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:116",{"_index":3498,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:122",{"_index":3500,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:13",{"_index":657,"title":{},"body":{"components/ColorSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/TimeListSelectorComponent.html":{}}}],["selector.component.ts:14",{"_index":4022,"title":{},"body":{"components/TimespanShiftSelectorComponent.html":{}}}],["selector.component.ts:15",{"_index":3679,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{},"components/TimeListSelectorComponent.html":{}}}],["selector.component.ts:16",{"_index":658,"title":{},"body":{"components/ColorSelectorComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{}}}],["selector.component.ts:17",{"_index":3699,"title":{},"body":{"components/ServiceSelectorComponent.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["selector.component.ts:18",{"_index":3318,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:19",{"_index":1594,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{}}}],["selector.component.ts:20",{"_index":3700,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:21",{"_index":3259,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:22",{"_index":1593,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:23",{"_index":3702,"title":{},"body":{"components/ServiceSelectorComponent.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["selector.component.ts:24",{"_index":2971,"title":{},"body":{"components/ListSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:25",{"_index":1595,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:26",{"_index":3701,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:27",{"_index":1601,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"components/ListSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["selector.component.ts:28",{"_index":3162,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:29",{"_index":1592,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:30",{"_index":2972,"title":{},"body":{"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:31",{"_index":3161,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["selector.component.ts:32",{"_index":3265,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:33",{"_index":2973,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["selector.component.ts:35",{"_index":1596,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:36",{"_index":2974,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["selector.component.ts:37",{"_index":3707,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:38",{"_index":2969,"title":{},"body":{"components/ListSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:39",{"_index":3496,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:40",{"_index":3166,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:41",{"_index":3321,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["selector.component.ts:42",{"_index":3497,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:44",{"_index":3167,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:45",{"_index":3503,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:46",{"_index":2981,"title":{},"body":{"components/ListSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:48",{"_index":3164,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:49",{"_index":3681,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:5",{"_index":2283,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["selector.component.ts:52",{"_index":3165,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:53",{"_index":3682,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:54",{"_index":3508,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:55",{"_index":3324,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["selector.component.ts:58",{"_index":3495,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:60",{"_index":1599,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{}}}],["selector.component.ts:65",{"_index":1600,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{}}}],["selector.component.ts:67",{"_index":3327,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["selector.component.ts:69",{"_index":3502,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:76",{"_index":2980,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["selector.component.ts:78",{"_index":3329,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["selector.component.ts:79",{"_index":3704,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:81",{"_index":3680,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:83",{"_index":3501,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:84",{"_index":3706,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:85",{"_index":3683,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:99",{"_index":2983,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["selector.dataset",{"_index":3739,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.phenomena",{"_index":3741,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.platform",{"_index":3735,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.servic",{"_index":2731,"title":{},"body":{"modules/HelgolandSelectorModule.html":{},"components/ListSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["selector.service.t",{"_index":3024,"title":{},"body":{"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/ServiceSelectorService.html":{}}}],["selector.service.ts:10",{"_index":3747,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["selector.service.ts:14",{"_index":3027,"title":{},"body":{"injectables/ListSelectorService.html":{}}}],["selector.service.ts:15",{"_index":3028,"title":{},"body":{"injectables/ListSelectorService.html":{}}}],["selector.service.ts:16",{"_index":3750,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["selector.service.ts:42",{"_index":3752,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["selector.st",{"_index":3733,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.t",{"_index":3039,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["selector.timeseri",{"_index":3737,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.ts:11",{"_index":3044,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["selector.ts:17",{"_index":3045,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["selector.ts:23",{"_index":3048,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["selector.ts:28",{"_index":3046,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["selector.ts:9",{"_index":3049,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["selector/color",{"_index":652,"title":{},"body":{"components/ColorSelectorComponent.html":{},"modules/HelgolandModificationModule.html":{}}}],["selector/dataset",{"_index":1584,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{},"modules/HelgolandSelectorModule.html":{}}}],["selector/list",{"_index":2730,"title":{},"body":{"modules/HelgolandSelectorModule.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{}}}],["selector/multi",{"_index":2411,"title":{},"body":{"interfaces/FilteredParameter.html":{},"modules/HelgolandSelectorModule.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["selector/platform",{"_index":2679,"title":{},"body":{"modules/HelgolandMapSelectorModule.html":{},"components/PlatformMapSelectorComponent.html":{}}}],["selector/predefin",{"_index":2739,"title":{},"body":{"modules/HelgolandTimeModule.html":{},"components/PredefinedTimespanSelectorComponent.html":{}}}],["selector/servic",{"_index":2732,"title":{},"body":{"modules/HelgolandSelectorModule.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{}}}],["selector/st",{"_index":2681,"title":{},"body":{"modules/HelgolandMapSelectorModule.html":{}}}],["selector/tim",{"_index":2740,"title":{},"body":{"modules/HelgolandTimeModule.html":{},"components/TimeListSelectorComponent.html":{}}}],["selector/timespan",{"_index":2742,"title":{},"body":{"modules/HelgolandTimeModule.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["selector/trajectori",{"_index":2682,"title":{},"body":{"modules/HelgolandMapSelectorModule.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selectorid",{"_index":2966,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["selectservic",{"_index":3692,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selectservice(servic",{"_index":3705,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selecttim",{"_index":3934,"title":{},"body":{"components/TimeListSelectorComponent.html":{}}}],["selecttime(timestamp",{"_index":3936,"title":{},"body":{"components/TimeListSelectorComponent.html":{}}}],["sell",{"_index":4343,"title":{},"body":{"license.html":{}}}],["semicolon",{"_index":3382,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["senddatatocloud",{"_index":2170,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["sensor",{"_index":4170,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["sent",{"_index":4314,"title":{},"body":{"license.html":{}}}],["separ",{"_index":1843,"title":{},"body":{"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{},"license.html":{}}}],["separateyaxi",{"_index":1828,"title":{},"body":{"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["seperatorafterthisitem",{"_index":337,"title":{},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["seri",{"_index":4231,"title":{},"body":{"index.html":{}}}],["seriesopt",{"_index":1499,"title":{"interfaces/SeriesOptions.html":{}},"body":{"interfaces/DataSeries.html":{},"interfaces/SeriesOptions.html":{}}}],["seriesparamet",{"_index":1506,"title":{},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["serv",{"_index":599,"title":{},"body":{"injectables/CachingInterceptor.html":{},"index.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["servic",{"_index":250,"title":{"interfaces/Service.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataParameterFilter.html":{},"classes/Dataset.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetParameterConstellation.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandSelectorModule.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/IDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValue.html":{},"components/RefreshButtonComponent.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"components/ZoomControlComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["service.apiurl",{"_index":3728,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service.id",{"_index":3726,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service.label",{"_index":3730,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service.quantities.dataset",{"_index":3740,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service.quantities.phenomena",{"_index":3742,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service.quantities.platform",{"_index":3736,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service.quantities.st",{"_index":3734,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service.quantities.timeseri",{"_index":3738,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service.typ",{"_index":3731,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service.vers",{"_index":3732,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service/favorite.servic",{"_index":2389,"title":{},"body":{"components/FavoriteTogglerComponent.html":{},"modules/HelgolandFavoriteModule.html":{}}}],["service/json",{"_index":2635,"title":{},"body":{"modules/HelgolandFavoriteModule.html":{}}}],["servicefilterselectorcompon",{"_index":272,"title":{"components/ServiceFilterSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["serviceid",{"_index":324,"title":{},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["servicequant",{"_index":3675,"title":{"interfaces/ServiceQuantities.html":{}},"body":{"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{}}}],["services.map((servic",{"_index":3755,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["services/api",{"_index":134,"title":{},"body":{"classes/ApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["services/dataset.t",{"_index":1954,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:14",{"_index":1966,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:30",{"_index":1971,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:36",{"_index":1972,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:45",{"_index":1969,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:49",{"_index":1975,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:54",{"_index":1968,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:56",{"_index":1973,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:58",{"_index":1970,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:6",{"_index":1964,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:8",{"_index":1963,"title":{},"body":{"classes/DatasetService.html":{}}}],["serviceselectorcompon",{"_index":273,"title":{"components/ServiceSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["serviceselectorservic",{"_index":2728,"title":{"injectables/ServiceSelectorService.html":{}},"body":{"modules/HelgolandSelectorModule.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"overview.html":{}}}],["serviceurl",{"_index":58,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["set",{"_index":326,"title":{"interfaces/Settings.html":{}},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetApi.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"classes/IdCache.html":{},"injectables/LabelMapperService.html":{},"interfaces/Layout.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/RawData.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["set(id",{"_index":2790,"title":{},"body":{"classes/IdCache.html":{}}}],["set(req",{"_index":2760,"title":{},"body":{"classes/HttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["setcurrentlang",{"_index":3041,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["setdataext",{"_index":1010,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["setinterv",{"_index":3656,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["setitem",{"_index":3160,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["setitems(r",{"_index":2443,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["setlanguag",{"_index":3042,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["setlanguage(lang",{"_index":3047,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["setmap",{"_index":3128,"title":{},"body":{"injectables/MapCache.html":{}}}],["setmap(id",{"_index":3131,"title":{},"body":{"injectables/MapCache.html":{}}}],["setparamet",{"_index":3584,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["setselect",{"_index":3295,"title":{},"body":{"interfaces/Plot.html":{}}}],["setselectedid",{"_index":1875,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["setselectedid(internalid",{"_index":909,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["setselection(rang",{"_index":3297,"title":{},"body":{"interfaces/Plot.html":{}}}],["setset",{"_index":3764,"title":{},"body":{"classes/SettingsService.html":{}}}],["setsettings(set",{"_index":3767,"title":{},"body":{"classes/SettingsService.html":{}}}],["settimeout",{"_index":3196,"title":{},"body":{"injectables/NotifierService.html":{}}}],["settingsrvc",{"_index":3319,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["settingsservic",{"_index":2885,"title":{"classes/SettingsService.html":{}},"body":{"injectables/LabelMapperService.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"classes/SettingsService.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["settingssrvc",{"_index":2884,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["setview",{"_index":3117,"title":{},"body":{"injectables/LocateService.html":{}}}],["setyaxisrang",{"_index":3143,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["shall",{"_index":4250,"title":{},"body":{"license.html":{}}}],["shape",{"_index":3308,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["share",{"_index":612,"title":{},"body":{"injectables/CachingInterceptor.html":{},"license.html":{}}}],["share.subscribe((r",{"_index":614,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["sheet",{"_index":4661,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["shift",{"_index":284,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandTimeModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["short",{"_index":1626,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TimeRangeSliderComponent.html":{}}}],["shortcut",{"_index":3360,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["show",{"_index":748,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"classes/DatasetOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/MinMaxRange.html":{},"injectables/NotifierService.html":{},"interfaces/Plot.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["showaxi",{"_index":1246,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["showbottomindicatorlabel(item",{"_index":1782,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["showdiagramind",{"_index":1433,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["showgeometri",{"_index":3432,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{}}}],["showgeometry(opt",{"_index":3459,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["showlabelvalues(entri",{"_index":1451,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["showlabelvalues(item",{"_index":1778,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["showlegend",{"_index":2162,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["showlin",{"_index":2238,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["shown",{"_index":4226,"title":{},"body":{"index.html":{}}}],["showonmaxzoom",{"_index":2495,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["showonminzoom",{"_index":2494,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["showreferencevalu",{"_index":744,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"classes/DatasetOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/MinMaxRange.html":{},"interfaces/PlotOptions.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["showtimeindicatorlabel(item",{"_index":1458,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["showtip",{"_index":2173,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["showunresolvableservic",{"_index":3695,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["side",{"_index":1450,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["similar",{"_index":4592,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["simpl",{"_index":3813,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["simplechang",{"_index":454,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/LabelMapperComponent.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"classes/LocalSelectorComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeRangeSliderComponent.html":{}}}],["simpli",{"_index":2005,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["singlefav",{"_index":2310,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["singlefavorit",{"_index":2306,"title":{"interfaces/SingleFavorite.html":{}},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"injectables/JsonFavoriteExporterService.html":{},"interfaces/SingleFavorite.html":{},"miscellaneous/variables.html":{}}}],["size",{"_index":2220,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["skip",{"_index":588,"title":{},"body":{"injectables/CachingInterceptor.html":{},"additional-documentation/how-tos.html":{}}}],["slash",{"_index":157,"title":{},"body":{"classes/ApiInterface.html":{}}}],["slider",{"_index":3941,"title":{},"body":{"components/TimeRangeSliderComponent.html":{},"dependencies.html":{}}}],["slider'},{'nam",{"_index":280,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["slider.compon",{"_index":2752,"title":{},"body":{"modules/HelgolandTimeRangeSliderModule.html":{}}}],["slider.component.html",{"_index":3945,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.scss",{"_index":3958,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.scss,.../../../../node_modules/bootstrap",{"_index":3942,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.t",{"_index":3940,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.ts:22",{"_index":3950,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.ts:25",{"_index":3951,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.ts:28",{"_index":3952,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.ts:30",{"_index":3956,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.ts:31",{"_index":3955,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.ts:32",{"_index":3954,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.ts:33",{"_index":3949,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.ts:39",{"_index":3953,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.min.css",{"_index":3944,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.module.t",{"_index":2751,"title":{},"body":{"modules/HelgolandTimeRangeSliderModule.html":{}}}],["slider.servic",{"_index":2753,"title":{},"body":{"modules/HelgolandTimeRangeSliderModule.html":{},"components/TimeRangeSliderComponent.html":{}}}],["slider.service.t",{"_index":3939,"title":{},"body":{"injectables/TimeRangeSliderCache.html":{}}}],["slider/dist/css/bootstrap",{"_index":3943,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider/src/lib/tim",{"_index":2750,"title":{},"body":{"modules/HelgolandTimeRangeSliderModule.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{}}}],["slider/src/test.t",{"_index":4478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["softwar",{"_index":4284,"title":{},"body":{"license.html":{}}}],["sole",{"_index":4406,"title":{},"body":{"license.html":{}}}],["solv",{"_index":4546,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["solvelabel",{"_index":329,"title":{},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["someth",{"_index":3407,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["somewher",{"_index":4645,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/Feature.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Offering.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"index.html":{},"license.html":{}}}],["span",{"_index":1173,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["spec.t",{"_index":4553,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["spec\\.t",{"_index":4472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":4420,"title":{},"body":{"license.html":{}}}],["specif",{"_index":2805,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"additional-documentation/introduction.html":{}}}],["spliceidx",{"_index":903,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["split",{"_index":2808,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{}}}],["split.length",{"_index":2810,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{}}}],["split[0",{"_index":2812,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{}}}],["split[1",{"_index":2813,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{}}}],["splitteddatadatasetapiinterfac",{"_index":3770,"title":{"injectables/SplittedDataDatasetApiInterface.html":{}},"body":{"injectables/SplittedDataDatasetApiInterface.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["src/app/app.component.html",{"_index":4554,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["src/app/app.component.t",{"_index":4559,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["src/app/app.module.t",{"_index":4527,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["src/tsconfig.app.j",{"_index":4545,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["start",{"_index":1385,"title":{"index.html":{},"license.html":{}},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/Time.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/YScale.html":{},"index.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["start.isbefore(moment(timespan.to",{"_index":3786,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["startloc",{"_index":3093,"title":{},"body":{"injectables/LocateService.html":{}}}],["startlocate(id",{"_index":3098,"title":{},"body":{"injectables/LocateService.html":{}}}],["startof(str",{"_index":3352,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["startrefreshinterv",{"_index":3630,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["state",{"_index":18,"title":{},"body":{"interfaces/Address.html":{},"interfaces/DataConst.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/HighlightDataset.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["state_district",{"_index":19,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["statedistrict",{"_index":127,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["statement",{"_index":4383,"title":{},"body":{"license.html":{}}}],["static",{"_index":4197,"title":{},"body":{"index.html":{}}}],["station",{"_index":221,"title":{"classes/Station.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/Dataset.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetParameterConstellation.html":{},"components/DragOptionsComponent.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandSelectorModule.html":{},"interfaces/IDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValue.html":{},"components/RefreshButtonComponent.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"components/ZoomControlComponent.html":{}}}],["stationari",{"_index":4156,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stationmapselectorcompon",{"_index":274,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["stationproperti",{"_index":3806,"title":{"interfaces/StationProperties.html":{}},"body":{"classes/Station.html":{},"interfaces/StationProperties.html":{},"classes/TimeseriesCollection.html":{}}}],["statuscheckservic",{"_index":3809,"title":{"injectables/StatusCheckService.html":{}},"body":{"injectables/StatusCheckService.html":{}}}],["statusinterv",{"_index":1528,"title":{"interfaces/StatusInterval.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/ExtendedTimeseries.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["statusintervalresolverservic",{"_index":2584,"title":{"injectables/StatusIntervalResolverService.html":{}},"body":{"modules/HelgolandCoreModule.html":{},"injectables/StatusIntervalResolverService.html":{},"overview.html":{}}}],["statusintervals.find((interv",{"_index":3857,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["step",{"_index":4509,"title":{},"body":{"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["stepback",{"_index":3880,"title":{},"body":{"injectables/Time.html":{}}}],["stepback(timespan",{"_index":3900,"title":{},"body":{"injectables/Time.html":{}}}],["stepforward",{"_index":3881,"title":{},"body":{"injectables/Time.html":{}}}],["stepforward(timespan",{"_index":3902,"title":{},"body":{"injectables/Time.html":{}}}],["stepwis",{"_index":4520,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["still",{"_index":605,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["stoploc",{"_index":3094,"title":{},"body":{"injectables/LocateService.html":{}}}],["stoplocate(id",{"_index":3100,"title":{},"body":{"injectables/LocateService.html":{}}}],["stoppag",{"_index":4428,"title":{},"body":{"license.html":{}}}],["stoprefreshinterv",{"_index":3631,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["storag",{"_index":3073,"title":{},"body":{"injectables/LocalStorage.html":{},"additional-documentation/introduction.html":{}}}],["storage.servic",{"_index":1978,"title":{},"body":{"classes/DatasetService.html":{},"modules/HelgolandCoreModule.html":{},"injectables/Time.html":{}}}],["storage.service.t",{"_index":3059,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["storage.service.ts:14",{"_index":3071,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["storage.service.ts:22",{"_index":3065,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["storage.service.ts:32",{"_index":3067,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["storage.service.ts:42",{"_index":3069,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["storage.service.ts:6",{"_index":3063,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["storage/loc",{"_index":1977,"title":{},"body":{"classes/DatasetService.html":{},"modules/HelgolandCoreModule.html":{},"injectables/LocalStorage.html":{},"injectables/Time.html":{}}}],["strategi",{"_index":4498,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["strict",{"_index":3363,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["string",{"_index":21,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandControlModule.html":{},"interfaces/HighlightDataset.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["stringtogglercompon",{"_index":275,"title":{"components/StringTogglerComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandTimeModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":1130,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["structur",{"_index":4512,"title":{},"body":{"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["style",{"_index":954,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"index.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["style('fil",{"_index":1085,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["style('font",{"_index":1091,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["style('opac",{"_index":1144,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["style('point",{"_index":1087,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["style('strok",{"_index":1080,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["style('text",{"_index":1229,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["styles.color",{"_index":960,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["styles.linewidth",{"_index":964,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["styles.pointradiu",{"_index":965,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["styles.scss```css",{"_index":4662,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["styles.showreferencevalues.foreach((refvalu",{"_index":991,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["styles.vis",{"_index":962,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["styles.yaxisrang",{"_index":968,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["styles.zerobasedyaxi",{"_index":967,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["styleurl",{"_index":681,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"components/ServiceSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/YScale.html":{}}}],["subject",{"_index":4328,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":4340,"title":{},"body":{"license.html":{}}}],["submiss",{"_index":4385,"title":{},"body":{"license.html":{}}}],["submit",{"_index":4307,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":939,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/YScale.html":{}}}],["subscribe((data",{"_index":3521,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["subscribe((geojson",{"_index":2515,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["subscribe((label",{"_index":2877,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["subscribe((r",{"_index":2902,"title":{},"body":{"injectables/LabelMapperService.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["subscribe((result",{"_index":1610,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"classes/ExtendedTimeseries.html":{}}}],["subscribe((st",{"_index":1605,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["subscript",{"_index":636,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["subsequ",{"_index":4325,"title":{},"body":{"license.html":{}}}],["substring(1",{"_index":537,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["subtract(numb",{"_index":3350,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["suburb",{"_index":20,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["such",{"_index":4267,"title":{},"body":{"license.html":{}}}],["suggest",{"_index":4224,"title":{},"body":{"index.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["super",{"_index":364,"title":{},"body":{"classes/BufferedTime.html":{},"classes/DatasetPresenterComponent.html":{},"injectables/EventingImplApiInterface.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"classes/TimeInterval.html":{},"classes/Timespan.html":{},"classes/UriParameterCoder.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["super(httpservic",{"_index":3780,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["super(internalid",{"_index":1853,"title":{},"body":{"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["super(internalidhandl",{"_index":3469,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["super(iterablediff",{"_index":875,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["super(mapcach",{"_index":3275,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["super(transl",{"_index":2417,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["super.gettsdata(id",{"_index":3801,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["super.ngonchanges(chang",{"_index":1653,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["super.onadd(map",{"_index":2498,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["supersed",{"_index":4390,"title":{},"body":{"license.html":{}}}],["support",{"_index":4230,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["supportedmimetyp",{"_index":3673,"title":{"interfaces/SupportedMimeTypes.html":{}},"body":{"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{}}}],["supportsfirstlatest",{"_index":3674,"title":{},"body":{"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{}}}],["supportst",{"_index":3696,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["suppos",{"_index":4514,"title":{},"body":{"additional-documentation/how-tos.html":{}}}],["sure",{"_index":3405,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"index.html":{}}}],["svg",{"_index":1122,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"modules.html":{}}}],["switch",{"_index":1711,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["syntax",{"_index":3345,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["system",{"_index":4315,"title":{},"body":{"license.html":{}}}],["t",{"_index":765,"title":{},"body":{"interfaces/Data.html":{},"interfaces/DatasetApiV2.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/IDataEntry.html":{},"classes/IdCache.html":{},"interfaces/Layout.html":{},"injectables/LocalStorage.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"classes/PermalinkService.html":{},"interfaces/ProfileDataEntry.html":{},"interfaces/RawData.html":{},"classes/ReferenceValues.html":{},"interfaces/ScatterData.html":{},"classes/SettingsService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"interfaces/TimeValueEntry.html":{}}}],["tab",{"_index":3001,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["tabl",{"_index":1988,"title":{"additional-documentation/how-tos/integrate-a-table-component.html":{}},"body":{"interfaces/DatasetTableData.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["table'},{'nam",{"_index":223,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["table.compon",{"_index":2610,"title":{},"body":{"modules/HelgolandDatasetTableModule.html":{}}}],["table/module.t",{"_index":2608,"title":{},"body":{"modules/HelgolandDatasetTableModule.html":{}}}],["take",{"_index":2007,"title":{},"body":{"pipes/DateProxyPipe.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["temp",{"_index":2954,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["temp.push(",{"_index":1980,"title":{},"body":{"classes/DatasetService.html":{}}}],["temp.url",{"_index":2957,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["tempcolor",{"_index":3427,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["templat",{"_index":176,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/Id.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["templateurl",{"_index":186,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{}}}],["term",{"_index":73,"title":{},"body":{"interfaces/Address.html":{},"classes/GeoSearch.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"license.html":{}}}],["termin",{"_index":4360,"title":{},"body":{"license.html":{},"additional-documentation/how-tos.html":{}}}],["test",{"_index":956,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["test.t",{"_index":4552,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["text",{"_index":1237,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"injectables/LabelMapperService.html":{},"injectables/NotifierService.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["text('tim",{"_index":1243,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["text(entry.uom",{"_index":1265,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["text(options.uom",{"_index":1804,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["text(this.getxaxislabel",{"_index":1816,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["textnod",{"_index":3187,"title":{},"body":{"injectables/NotifierService.html":{}}}],["that'",{"_index":3373,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["themes/indigo",{"_index":4664,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["theori",{"_index":4413,"title":{},"body":{"license.html":{}}}],["therefor",{"_index":3393,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["thereof",{"_index":4303,"title":{},"body":{"license.html":{}}}],["third",{"_index":4376,"title":{},"body":{"license.html":{}}}],["this._differbasemap",{"_index":497,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this._differbasemaps.diff(this.basemap",{"_index":512,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this._differoverlaymap",{"_index":495,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this._differoverlaymaps.diff(this.overlaymap",{"_index":506,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.activepanel",{"_index":2994,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.addbasemap",{"_index":526,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.addbasemap(e.currentvalu",{"_index":514,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.addbasemap(entri",{"_index":525,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.adddata(geojson",{"_index":2516,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["this.adddataset(internalidobj.id",{"_index":1951,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.adddatasetbyinternalid(addeditem.item",{"_index":1928,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.addlinewidth",{"_index":915,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.addoverlaymap(e.currentvalu",{"_index":510,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.addoverlaymap(entri",{"_index":529,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.addparameterfilter(filterparamet",{"_index":2124,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["this.addparameterfilter(param",{"_index":2130,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["this.addreferencevaluedata(dataset.internalid",{"_index":978,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.addtimespan(filterparameter.timespan",{"_index":2125,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["this.api.getdata(dataset.id",{"_index":1682,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.api.getdata(id",{"_index":2184,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.api.getdata(internalid.id",{"_index":3478,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["this.api.getdataset(id",{"_index":899,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{}}}],["this.api.getplatform(this.dataset.parameters.platform.id",{"_index":3482,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{}}}],["this.api.getsingletimeseries(id",{"_index":896,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/YScale.html":{}}}],["this.apiinterface.getcategories(entry.url",{"_index":2438,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getcategories(this.serviceurl",{"_index":3688,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getdata(dataset.id",{"_index":3520,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.apiinterface.getdatasets(entry.url",{"_index":2440,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getdatasets(url",{"_index":3009,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.apiinterface.getfeatures(entry.url",{"_index":2437,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getfeatures(this.serviceurl",{"_index":3689,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getofferings(entry.url",{"_index":2429,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getofferings(this.serviceurl",{"_index":3685,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getphenomena(entry.url",{"_index":2435,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getphenomena(this.serviceurl",{"_index":3686,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getplatforms(entry.url",{"_index":2439,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getplatforms(this.serviceurl",{"_index":3280,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.apiinterface.getprocedures(entry.url",{"_index":2436,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getprocedures(this.serviceurl",{"_index":3687,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getservices(url",{"_index":3753,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["this.apiinterface.getsingletimeseries(id",{"_index":1609,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.apiinterface.getstation(this.station.properties.id",{"_index":1603,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.apiinterface.gettimeseries(url",{"_index":3012,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.apimapping.getapiversion(url).subscribe((apiversionid",{"_index":3007,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.area",{"_index":1663,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.background",{"_index":1057,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.background.node().getbbox().width",{"_index":1439,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.background.selectall('.handl",{"_index":1142,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.background.selectall('.overlay",{"_index":1138,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.background.selectall('.select",{"_index":1134,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.basemap",{"_index":521,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.basemaps.foreach((entri",{"_index":523,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.basemaps.s",{"_index":522,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.basevalu",{"_index":1689,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.basevalues.length",{"_index":1697,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.basevalues[idx",{"_index":1774,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.basevalues[to].tick",{"_index":1771,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.basicauthtoken",{"_index":321,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["this.bufferinterv",{"_index":368,"title":{},"body":{"classes/BufferedTime.html":{},"classes/TimeInterval.html":{},"classes/Timespan.html":{}}}],["this.buffersum",{"_index":1044,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.cache.get(apiurl",{"_index":1551,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["this.cache.get(id",{"_index":2793,"title":{},"body":{"classes/IdCache.html":{}}}],["this.cache.get(req",{"_index":598,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["this.cache.get(this.id).from",{"_index":3969,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.cache.get(this.id).to",{"_index":3971,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.cache.get(url",{"_index":2897,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["this.cache.has(apiurl",{"_index":1549,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["this.cache.has(id",{"_index":2792,"title":{},"body":{"classes/IdCache.html":{}}}],["this.cache.has(this.id",{"_index":3967,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.cache.has(url",{"_index":2896,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["this.cache.put(req",{"_index":616,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["this.cache.set(apiurl",{"_index":1557,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["this.cache.set(id",{"_index":2794,"title":{},"body":{"classes/IdCache.html":{}}}],["this.cache.set(this.id",{"_index":3976,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.cache.set(url",{"_index":2909,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["this.cache[req.urlwithparam",{"_index":382,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{}}}],["this.cache[req.urlwithparams].expirationtim",{"_index":383,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/LocalHttpCache.html":{}}}],["this.cache[req.urlwithparams].request",{"_index":3036,"title":{},"body":{"injectables/LocalOngoingHttpCache.html":{}}}],["this.cache[req.urlwithparams].respons",{"_index":386,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/LocalHttpCache.html":{}}}],["this.calculateheight",{"_index":1734,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.calculateoverviewrang",{"_index":730,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["this.calculatewidth",{"_index":1735,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.calcxvalu",{"_index":1724,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.categorylabel",{"_index":3592,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.cd.detectchang",{"_index":732,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["this.changeselectedids(changefals",{"_index":1293,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.changeselectedids(changetru",{"_index":1294,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.changetime(this.xaxisrangeorigin[0][0",{"_index":1415,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.changetime(this.xaxisrangepan[0",{"_index":1404,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.changetime(timebycoord[0",{"_index":1120,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.checkdataintimespan",{"_index":3561,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.chvislabel(entri",{"_index":1437,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.cleardata",{"_index":2203,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.clearlay",{"_index":2506,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["this.clearlayout",{"_index":2202,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.clearmap",{"_index":3513,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.clust",{"_index":3281,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.color",{"_index":1851,"title":{},"body":{"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["this.color.getcolor",{"_index":3610,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["this.colors[i",{"_index":4583,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["this.colorservice.getcolor",{"_index":961,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.confirmlabel(observ",{"_index":2894,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["this.confirmversion(observ",{"_index":1550,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["this.count",{"_index":1606,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.counterxaxi",{"_index":2231,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.counteryaxi",{"_index":2253,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.createbasicauthheader(options.basicauthtoken",{"_index":2127,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["this.createdataentry(internalid",{"_index":1700,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.creategeojson(entri",{"_index":3526,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.createrefvalid(e.referencevalueid",{"_index":3602,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.createrefvalid(refvalue.referencevalueid",{"_index":3574,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.createrequesttimespan(timespan",{"_index":2132,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["this.createrequesturl(apiurl",{"_index":2122,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["this.createtimespanofinterval(timeinterv",{"_index":3915,"title":{},"body":{"injectables/Time.html":{}}}],["this.createxaxis(dataentry.dataset",{"_index":2216,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.createyaxis(dataentry.dataset",{"_index":2213,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.currentlang",{"_index":3054,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["this.currenttimeid",{"_index":876,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.data",{"_index":3522,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.data.foreach((entri",{"_index":3515,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.data.push(entri",{"_index":3525,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.datalength",{"_index":1684,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.dataset",{"_index":2391,"title":{},"body":{"components/FavoriteTogglerComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["this.dataset.firstvalu",{"_index":3595,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.firstvalue.timestamp",{"_index":3620,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.label",{"_index":2398,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["this.dataset.lastvalu",{"_index":3597,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.lastvalue.timestamp",{"_index":3621,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.parameters.category.label",{"_index":3593,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.parameters.phenomenon.label",{"_index":3589,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.parameters.platform.label",{"_index":3586,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.parameters.procedure.label",{"_index":3591,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.platformtyp",{"_index":3474,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["this.dataset.referencevalu",{"_index":3600,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.referencevalues.foreach((",{"_index":3601,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.station.properties.label",{"_index":3587,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.uom",{"_index":3599,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.url",{"_index":3615,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.url).subscribe((platform",{"_index":3581,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.datasetapilist",{"_index":3709,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.datasetapilist.foreach((api",{"_index":3713,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.datasetapilist.length",{"_index":3710,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.datasetid",{"_index":2953,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["this.datasetidresolver.resolveinternalid(internalid",{"_index":1950,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.datasetids.foreach((entri",{"_index":4608,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["this.datasetids.foreach((id",{"_index":1690,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetids.indexof(internalid",{"_index":1979,"title":{},"body":{"classes/DatasetService.html":{}}}],["this.datasetids.length",{"_index":1279,"title":{},"body":{"interfaces/DataConst.html":{},"classes/DatasetService.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.datasetids.splice(datasetidx",{"_index":1983,"title":{},"body":{"classes/DatasetService.html":{}}}],["this.datasetidsdiff",{"_index":1921,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.datasetidsdiffer.diff(this.datasetid",{"_index":1926,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.datasetidsmultiple.foreach((entri",{"_index":4580,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["this.datasetmap.delete(internalid",{"_index":902,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.datasetmap.foreach((dataset",{"_index":928,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.datasetmap.foreach((datasetentri",{"_index":1737,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetmap.foreach((entri",{"_index":1667,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetmap.get(dataset.internalid).data",{"_index":940,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.datasetmap.get(internalid",{"_index":1695,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetmap.has(internalid",{"_index":925,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.datasetmap.set(dataset.internalid",{"_index":1671,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetopt",{"_index":1941,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.datasetoptions.clear",{"_index":1982,"title":{},"body":{"classes/DatasetService.html":{}}}],["this.datasetoptions.color",{"_index":4671,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["this.datasetoptions.delete(internalid",{"_index":1984,"title":{},"body":{"classes/DatasetService.html":{}}}],["this.datasetoptions.foreach((valu",{"_index":1943,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.datasetoptions.get(dataset.internalid",{"_index":955,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["this.datasetoptions.get(dataset.internalid).vis",{"_index":1679,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetoptions.get(id).color",{"_index":1744,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetoptions.get(id).vis",{"_index":1740,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetoptions.get(internalid).vis",{"_index":1693,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetoptions.get(key",{"_index":1947,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.datasetoptions.has(dataset.internalid",{"_index":1678,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetoptions.has(id",{"_index":1738,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetoptions.set(entri",{"_index":4609,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["this.datasetoptions.set(internalid",{"_index":1985,"title":{},"body":{"classes/DatasetService.html":{}}}],["this.datasetoptions.showreferencevalues.find((o",{"_index":3604,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.datasetoptions.showreferencevalues.findindex((entri",{"_index":3571,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.datasetoptions.showreferencevalues.push",{"_index":3577,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.datasetoptions.showreferencevalues.splice(idx",{"_index":3576,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.datasetoptions.vis",{"_index":3569,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["this.datasetoptionschanged(key",{"_index":1948,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.datasetoptionsmultiple.set(entri",{"_index":4581,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["this.datasetoptionsmultiple.set(id",{"_index":4675,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["this.datayrang",{"_index":892,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.datayranges.foreach((obj",{"_index":1026,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.datayranges[newdatasetidx",{"_index":1019,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.datayranges[newdatasetidx].rang",{"_index":1024,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.defaultgraphopt",{"_index":1652,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.defaultselect",{"_index":1613,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.determinedlabel",{"_index":2878,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["this.differs.find({}).cr",{"_index":496,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.docheck(this.url",{"_index":3838,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["this.docheck(url",{"_index":3840,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["this.docheckurl(url",{"_index":3839,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["this.drag",{"_index":1406,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.dragendhandl",{"_index":1758,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.draggingmov",{"_index":1387,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.draghandl",{"_index":1756,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.dragmoverang",{"_index":1390,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.dragmoverange[0",{"_index":1396,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.dragmoverange[1",{"_index":1395,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.dragmovestart",{"_index":1388,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.dragstart",{"_index":1407,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.dragstart[0",{"_index":1418,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.dragstarthandl",{"_index":1754,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.drawchart",{"_index":2177,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.drawdots(this.basevalu",{"_index":1731,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.drawdragrectangl",{"_index":1410,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.drawgraph(entry.yscal",{"_index":1751,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.drawgraphline(entri",{"_index":1053,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.drawlinegraph",{"_index":1657,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.drawvalueline(this.basevalu",{"_index":1732,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.drawxaxis(this.buffersum",{"_index":1051,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.drawyaxis(datasetentry.drawopt",{"_index":1746,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.drawyaxis(entri",{"_index":1046,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.end",{"_index":3964,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.endpoint",{"_index":2428,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["this.erroronload",{"_index":2433,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["this.evaluterefresh",{"_index":3649,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["this.favoritesrvc.addfavorite(entry.favorit",{"_index":2863,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["this.favoritesrvc.removeallfavorit",{"_index":2852,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["this.favsrvc.addfavorite(this.dataset",{"_index":2399,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["this.favsrvc.hasfavorite(this.dataset",{"_index":2393,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["this.favsrvc.removefavorite(this.dataset.internalid",{"_index":2394,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["this.fetchdata(event.target",{"_index":2497,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["this.fetchdata(map",{"_index":2499,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["this.filt",{"_index":2998,"title":{},"body":{"components/ListSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["this.filterlist.foreach((entri",{"_index":2424,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.findurl(label",{"_index":2895,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["this.firstvalu",{"_index":3594,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.fitbound",{"_index":530,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.focusg",{"_index":1070,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.focusg.append('svg:lin",{"_index":1073,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.focusg.append('svg:rect",{"_index":1084,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.focusg.append('svg:text",{"_index":1089,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.focusg.append('svg:text').attr('class",{"_index":1759,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.focusg.style('vis",{"_index":1426,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.focuslab",{"_index":1760,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.focuslabeltim",{"_index":1094,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.focuslabeltime.text(moment(item.timestamp).format('dd.mm.yi",{"_index":1781,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.focuslabeltime.text(moment(this.labeltimestamp[idxofmin]).format('dd.mm.yi",{"_index":1466,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.focuslabely.text('measur",{"_index":1785,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.focuslabely.text(item.dist",{"_index":1783,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.from",{"_index":365,"title":{},"body":{"classes/BufferedTime.html":{},"classes/TimeInterval.html":{},"classes/Timespan.html":{}}}],["this.generatepermalink",{"_index":3238,"title":{},"body":{"classes/PermalinkService.html":{}}}],["this.generateuuid",{"_index":500,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.geosearch.searchterm(this.searchterm",{"_index":2544,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.getdimensions(entry.focuslabel.node()).h",{"_index":1456,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.getdimensions(entry.focuslabel.node()).w",{"_index":1454,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.getdimensions(text.node()).h",{"_index":1268,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.getdimensions(this.focuslabeltime.node()).w",{"_index":1465,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.getdimensions(this.focuslabely.node()).w",{"_index":1787,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.getduration(timespan",{"_index":3910,"title":{},"body":{"injectables/Time.html":{}}}],["this.getduration(timespan).asmillisecond",{"_index":3906,"title":{},"body":{"injectables/Time.html":{}}}],["this.getfavorit",{"_index":2343,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.getfavoritegroup",{"_index":2345,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.getitemforx(coords[0",{"_index":1350,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.getitemforx(this.dragcurrent[0",{"_index":1769,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.getitemforx(this.dragstart[0",{"_index":1768,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.getrandomcolor",{"_index":665,"title":{},"body":{"injectables/ColorService.html":{}}}],["this.gettimestampbycoord(d3.event.selection[0",{"_index":1118,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.getxdomainbytimestamp",{"_index":1109,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.getyaxisrange(entry.uom",{"_index":1248,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.graph",{"_index":884,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.graph.append('g",{"_index":1071,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.graph.append('svg:g",{"_index":1225,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.graph.append('svg:path",{"_index":1727,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.graph.append('svg:rect",{"_index":1058,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.graph.append('text",{"_index":1238,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.graph.selectall('*').remov",{"_index":1736,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.graph.selectall('dot",{"_index":1720,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.graphbodi",{"_index":1315,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.graphbody.selectall('.dot",{"_index":1333,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.graphopt",{"_index":727,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{}}}],["this.graphoptions.axistyp",{"_index":1712,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.graphoptions.dot",{"_index":1730,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.graphoptions.overview",{"_index":728,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.graphoptions.selection.rang",{"_index":2471,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["this.graphoptionschanged(opt",{"_index":1940,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.groupcount",{"_index":2328,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.groupfav",{"_index":2348,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.groupfavs.clear",{"_index":2334,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.groupfavs.delete(favoriteid",{"_index":2325,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.groupfavs.has(favoriteid",{"_index":2324,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.groupfavs.set(entry.id",{"_index":2356,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.groupfavs.set(favorite.id",{"_index":2340,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.groupfavs.set(id",{"_index":2329,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.handl",{"_index":2779,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["this.handler.handle(req",{"_index":2780,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["this.hasdata",{"_index":3618,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.height",{"_index":1060,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.hidediagramind",{"_index":1384,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.highlightfocu",{"_index":1072,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.highlightfocus.attr('x1",{"_index":1775,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.highlightline(entry.id",{"_index":1276,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.http.client().get",{"_index":80,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["this.http.get(apiurl).subscribe((result",{"_index":1552,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["this.http.get(url",{"_index":318,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["this.httpclient.get(labelurl",{"_index":2900,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["this.httpclient.get(url).subscrib",{"_index":3844,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["this.httpservice.client(options).get(url",{"_index":2128,"title":{},"body":{"injectables/EventingImplApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["this.id",{"_index":3966,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.idxofpo",{"_index":1347,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.informationvis",{"_index":3563,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.init",{"_index":731,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["this.initlay",{"_index":3514,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.internalid",{"_index":1850,"title":{},"body":{"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["this.internalidhandler.resolveinternalid(this.datasetid",{"_index":2955,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{}}}],["this.interv",{"_index":3655,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["this.intervals.get(intervaldescrib",{"_index":2067,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.has(intervaldescrib",{"_index":2066,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.current_month",{"_index":2054,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.current_week",{"_index":2048,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.current_year",{"_index":2060,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.last_month",{"_index":2057,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.last_week",{"_index":2051,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.last_year",{"_index":2063,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.lasthour",{"_index":2036,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.today",{"_index":2041,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.today_yesterday",{"_index":2047,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.yesterday",{"_index":2044,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.iscontentloading(fals",{"_index":3293,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.iscontentloading(load",{"_index":735,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["this.iscontentloading(tru",{"_index":3277,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.iscontentloadingd3(fals",{"_index":946,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.isequal(this.providerlist",{"_index":2988,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.isfavorit",{"_index":2392,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["this.ismobil",{"_index":3477,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["this.issafemomentexpression(express",{"_index":3409,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["this.issafemomentexpression(preset.timespan.from",{"_index":3400,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["this.issafemomentexpression(preset.timespan.to",{"_index":3401,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["this.issafetimespanpreset(",{"_index":3333,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["this.isserviceblacklisted(service.id",{"_index":3756,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["this.istoggl",{"_index":3088,"title":{},"body":{"components/LocateControlComponent.html":{},"components/StringTogglerComponent.html":{}}}],["this.item",{"_index":2423,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["this.items.find((elem",{"_index":2446,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.items.push(entri",{"_index":2451,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.iterablediffers.find([]).cr",{"_index":1922,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.labelmappersrvc.getmappedlabel(this.label",{"_index":2876,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["this.labeltimestamp",{"_index":1348,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.labeltimestamp.findindex((elem",{"_index":1463,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.labeltimestamp[entryidx",{"_index":1459,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.languagechang",{"_index":2928,"title":{},"body":{"classes/LanguageChangNotifier.html":{}}}],["this.languagelist.find((",{"_index":3055,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["this.lastvalu",{"_index":3596,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.lay",{"_index":3532,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.layer.addlayer(geojson",{"_index":3528,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.layer.addto(this.map",{"_index":3530,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.layercontrol",{"_index":554,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.layercontrolopt",{"_index":556,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.layercontroloptions).addto(this.map",{"_index":561,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.layout",{"_index":2224,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.layout.hasownproperty(key",{"_index":2225,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.layout['xaxi",{"_index":2232,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.layout[('yaxi",{"_index":2254,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.layout[key",{"_index":2228,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.layout[key].domain",{"_index":2258,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.layout[key].posit",{"_index":2261,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.layout[key].rang",{"_index":2264,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.layout[key].titl",{"_index":2227,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.linefun",{"_index":1659,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.listselectorservice.cache.get(this.selectorid",{"_index":2991,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.listselectorservice.cache.has(this.selectorid",{"_index":2987,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.listselectorservice.cache.set(this.selectorid",{"_index":2995,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.listselectorservice.providerlist",{"_index":2989,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.load",{"_index":2425,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["this.loadaddeddataset(dataset",{"_index":900,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.loadaddeddataset(timeseri",{"_index":898,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.loaddata(dataset",{"_index":1672,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.loaddata(entry.dataset",{"_index":1669,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.loaddata(map.getbound",{"_index":2505,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["this.loaddata(this.datasetmap.get(internalid).dataset",{"_index":1676,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.loaddataset(dataset",{"_index":929,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.loaddataset(temp.id",{"_index":2956,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["this.loaddataset(this.datasetmap.get(internalid",{"_index":926,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.loadfavorit",{"_index":2313,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.loadingcount",{"_index":945,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["this.loaditem",{"_index":2418,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["this.localstorage.load(param",{"_index":3924,"title":{},"body":{"injectables/Time.html":{}}}],["this.localstorage.loadarray(cache_param_favorites_group",{"_index":2354,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.localstorage.loadarray(cache_param_favorites_singl",{"_index":2350,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.localstorage.save(cache_param_favorites_group",{"_index":2344,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.localstorage.save(cache_param_favorites_singl",{"_index":2342,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.localstorage.save(param",{"_index":3923,"title":{},"body":{"injectables/Time.html":{}}}],["this.localstorageen",{"_index":3074,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["this.locateservice.startlocate(this.mapid",{"_index":3089,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["this.locateservice.stoplocate(this.mapid",{"_index":3090,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["this.maintimeinterval.from",{"_index":1159,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.maintimeinterval.to",{"_index":1161,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.map",{"_index":501,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.map.fitbounds(this.fitbound",{"_index":503,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.map.invalidates",{"_index":3292,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.map.remov",{"_index":515,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.map.removecontrol(this.layercontrol",{"_index":555,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.map.removecontrol(this.zoomcontrol",{"_index":563,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.map.removelayer(this.lay",{"_index":3533,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.map.removelayer(this.markerfeaturegroup",{"_index":3279,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.map.removelayer(this.oldbaselayer[layeroptions.label",{"_index":553,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.map.removelayer(this.oldoverlaylayer[layeroptions.label",{"_index":544,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.mapcache.get(id",{"_index":3134,"title":{},"body":{"injectables/MapCache.html":{}}}],["this.mapcache.getmap(id",{"_index":3107,"title":{},"body":{"injectables/LocateService.html":{}}}],["this.mapcache.getmap(this.mapid).fitbounds(result.bound",{"_index":2551,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.mapcache.getmap(this.mapid).fitbounds(this.ext",{"_index":2303,"title":{},"body":{"components/ExtentControlComponent.html":{}}}],["this.mapcache.getmap(this.mapid).fitbounds(this.resultgeometry.getbound",{"_index":2552,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.mapcache.getmap(this.mapid).zoomin",{"_index":4083,"title":{},"body":{"components/ZoomControlComponent.html":{}}}],["this.mapcache.getmap(this.mapid).zoomout",{"_index":4084,"title":{},"body":{"components/ZoomControlComponent.html":{}}}],["this.mapcache.set(id",{"_index":3135,"title":{},"body":{"injectables/MapCache.html":{}}}],["this.mapcache.setmap(this.mapid",{"_index":520,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.mapid",{"_index":498,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/GeosearchControlComponent.html":{}}}],["this.mapopt",{"_index":516,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.margin.bottom",{"_index":1241,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.margin.left",{"_index":888,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.margin.right",{"_index":1709,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.margin.top",{"_index":890,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.markerfeaturegroup",{"_index":3278,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.markerfeaturegroup.addlayer(mark",{"_index":3289,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.markerfeaturegroup.addto(this.map",{"_index":3290,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.maxlabelwidth",{"_index":889,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.mousedownbrush",{"_index":891,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.mousemovehandl",{"_index":1067,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.mouseouthandl",{"_index":1069,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.noresultsfound",{"_index":3276,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.notifier.notify(transl",{"_index":2397,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["this.notifiertimeout",{"_index":3195,"title":{},"body":{"injectables/NotifierService.html":{}}}],["this.oldbaselayer.hasownproperty(layeroptions.label",{"_index":552,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.oldbaselayer.hasownproperty[layeroptions.label",{"_index":550,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.oldbaselayer[layeroptions.label",{"_index":551,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.olddatasetopt",{"_index":1942,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.olddatasetoptions.get(key",{"_index":1945,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.olddatasetoptions.set(key",{"_index":1946,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.oldgraphopt",{"_index":1938,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.oldoverlaylay",{"_index":560,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.oldoverlaylayer.hasownproperty(layeroptions.label",{"_index":543,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.oldoverlaylayer.hasownproperty[layeroptions.label",{"_index":538,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.oldoverlaylayer[layeroptions.label",{"_index":539,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.onchangeyaxesvisibility.emit",{"_index":197,"title":{},"body":{"components/AxesOptionsComponent.html":{}}}],["this.oncompleteloadingdata",{"_index":943,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.oncontentloading.emit(load",{"_index":2561,"title":{},"body":{"classes/HasLoadableContent.html":{}}}],["this.ondatasetselection.emit(result",{"_index":3011,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.ondeletedataset.emit(tru",{"_index":2958,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["this.ondeletedatasetoptions.emit(opt",{"_index":3470,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["this.oneditoptions.emit(opt",{"_index":3471,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["this.oneditoptions.emit(this.datasetopt",{"_index":3579,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.onerror(error",{"_index":942,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.ongoingcache.clear(req",{"_index":618,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["this.ongoingcache.has(req",{"_index":606,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["this.ongoingcache.observe(req",{"_index":607,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["this.ongoingcache.set(req",{"_index":623,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["this.onhighlight.emit",{"_index":2273,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.onhoverhighlight.emit(this.basevalues[idx].tick",{"_index":1763,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.onitemselected.emit(item",{"_index":2420,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["this.onopenincombiview.emit(opt",{"_index":3476,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["this.onopentimesettings.emit",{"_index":4025,"title":{},"body":{"components/TimespanShiftSelectorComponent.html":{}}}],["this.onrangechange.emit",{"_index":3158,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["this.onres",{"_index":3669,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["this.onresultchanged.emit(nul",{"_index":2554,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.onresultchanged.emit(result",{"_index":2546,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.onselectdataset.emit(this.select",{"_index":2959,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["this.onselectdate.emit(new",{"_index":3565,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.onselected.emit",{"_index":3537,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.onselected.emit(entri",{"_index":3288,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.onselectionchanged.emit(select",{"_index":1619,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.onselectionchangedfinished.emit",{"_index":1767,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.onselectionchangedfinished.emit(this.preparerange(this.basevalues[from].tick",{"_index":1770,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.onserviceselected.emit(servic",{"_index":3729,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.onshowgeometry.emit(platform.geometri",{"_index":3484,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{}}}],["this.onshowgeometry.emit(result.values[0].geometri",{"_index":3481,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["this.onshowgeometry.emit(this.dataset.station.geometri",{"_index":3580,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.ontimelistdetermined.emit(timelist",{"_index":3529,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.ontimeselected.emit(timestamp",{"_index":3937,"title":{},"body":{"components/TimeListSelectorComponent.html":{}}}],["this.ontimespanchange.emit(this.timespan",{"_index":3416,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["this.ontimespanchange.emit(this.timesrvc.stepback(this.timespan",{"_index":4023,"title":{},"body":{"components/TimespanShiftSelectorComponent.html":{}}}],["this.ontimespanchange.emit(this.timesrvc.stepforward(this.timespan",{"_index":4024,"title":{},"body":{"components/TimespanShiftSelectorComponent.html":{}}}],["this.ontimespanchanged.emit(timespan",{"_index":734,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["this.ontimespanselected.emit",{"_index":4019,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["this.ontimespanselected.emit(this.predefinedsrvc.getinterval(this.predefin",{"_index":4016,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["this.ontimespanselected.emit(this.timespanfunc",{"_index":4018,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["this.ontimespanselected.emit(timespan",{"_index":3977,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.ontoggled.emit(!this.valu",{"_index":354,"title":{},"body":{"components/BoolTogglerComponent.html":{}}}],["this.ontoggled.emit(this.opt",{"_index":3871,"title":{},"body":{"components/StringTogglerComponent.html":{}}}],["this.ontogglepanzoom.emit",{"_index":2071,"title":{},"body":{"components/DragOptionsComponent.html":{}}}],["this.ontriggered.emit",{"_index":3223,"title":{},"body":{"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{}}}],["this.onupdateoptions.emit(this.datasetopt",{"_index":3473,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["this.opendataset(entry.url",{"_index":3006,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.opt",{"_index":2496,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"components/StringTogglerComponent.html":{}}}],["this.options).subscrib",{"_index":2545,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.options.httpcli",{"_index":2512,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["this.options.showonmaxzoom",{"_index":2501,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["this.options.showonminzoom",{"_index":2503,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["this.overlaymap",{"_index":527,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.overlaymaps.foreach((entri",{"_index":528,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.overviewtimespan",{"_index":738,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["this.panendhandl",{"_index":1107,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.panmovehandl",{"_index":1106,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.panstarthandl",{"_index":1104,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.paramet",{"_index":2990,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.parameters.findindex((entri",{"_index":2992,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.parameters[0].filterlist",{"_index":2996,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.parameters[0].isdis",{"_index":3002,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.parsedtimespanpreset",{"_index":3331,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["this.parsemomentexpression(e.timespan.from).gettim",{"_index":3337,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["this.parsemomentexpression(e.timespan.to).gettim",{"_index":3338,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["this.phenomenonlabel",{"_index":3588,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.platformlabel",{"_index":3585,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.plotgraph",{"_index":918,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.plotlyarea",{"_index":2175,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.plotlyarea.on('plotly_hov",{"_index":2271,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.plotlyelem.nativeel",{"_index":2176,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.plotoptions.generalizeallway",{"_index":937,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.plotoptions.grid",{"_index":1232,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.plotoptions.hover",{"_index":1065,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.plotoptions.overview",{"_index":1055,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.plotoptions.selected.includes(dataset.uom",{"_index":971,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.plotoptions.showreferencevalu",{"_index":936,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.plotoptions.togglepanzoom",{"_index":1095,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.plotoptions.yaxi",{"_index":1247,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.predefin",{"_index":4015,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["this.prepareddata",{"_index":988,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata.filter((entri",{"_index":989,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata.find((",{"_index":911,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata.findindex((",{"_index":952,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata.findindex((entri",{"_index":904,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata.foreach((entri",{"_index":1052,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata.length",{"_index":907,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata.push(dataentri",{"_index":977,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata.push(prepar",{"_index":2221,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.prepareddata.push(refdataentri",{"_index":997,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata.splice(spliceidx",{"_index":906,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata[datasetidx",{"_index":976,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.preparefilterparams(filterparamet",{"_index":2123,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["this.prepareparams(param",{"_index":4070,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["this.preparetsdata(dataset).subscrib",{"_index":941,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.procedurelabel",{"_index":3590,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.processalldata",{"_index":1656,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.processdata",{"_index":2268,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.processdata(dataentri",{"_index":979,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.processdata(entri",{"_index":908,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.processdataforid(dataset.internalid",{"_index":1687,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.processdataforid(id",{"_index":1691,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.providerblacklist",{"_index":3708,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.providerlist",{"_index":2999,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.providerlist.map((entri",{"_index":2997,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.rang",{"_index":3153,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["this.range.max",{"_index":3157,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["this.range.min",{"_index":3155,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["this.rangefactor",{"_index":729,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["this.rangemax",{"_index":3156,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["this.rangemin",{"_index":3154,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["this.rawdata.delete(internalid",{"_index":2192,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawdata.foreach((dataentri",{"_index":2204,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawdata.get(dataset.internalid).datas.push(data.values[0",{"_index":2188,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawdata.get(dataset.internalid).options.push(opt",{"_index":2189,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawdata.get(internalid).datas.splice(removedidx",{"_index":2199,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawdata.get(internalid).options.findindex((opt",{"_index":2195,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawdata.get(internalid).options.splice(removedidx",{"_index":2198,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawdata.has(dataset.internalid",{"_index":2187,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawdata.s",{"_index":2267,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawdata.set(dataset.internalid",{"_index":2190,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawsvg",{"_index":878,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.rawsvg.node().height.baseval.valu",{"_index":1706,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.rawsvg.node().width.baseval.valu",{"_index":1708,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.redrawchart",{"_index":2200,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.refresh",{"_index":3652,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["this.refreshing.emit(tru",{"_index":3658,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["this.refreshinterv",{"_index":3646,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["this.refvalcache.get(refvalid).color",{"_index":3612,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.refvalcache.get(refvalid).vis",{"_index":3578,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.refvalcache.has(refvalid",{"_index":3609,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.refvalcache.set(refvalid",{"_index":3607,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.removebasemap(e.previousvalu",{"_index":513,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.removedataset(removeditem.item",{"_index":1930,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.removemarker(map",{"_index":3111,"title":{},"body":{"injectables/LocateService.html":{}}}],["this.removeoldgeometri",{"_index":2542,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.removeoverlaymap(e.previousvalu",{"_index":508,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.removeselectedid(obj.id",{"_index":1297,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.removeselectedid(removeditem.item",{"_index":1936,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.requestapi(url",{"_index":2126,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["this.resetdrag",{"_index":1772,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.result",{"_index":2547,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.resultgeometri",{"_index":2548,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.resultgeometry.remov",{"_index":2555,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.s4",{"_index":1483,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.savefavorit",{"_index":2317,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.savest",{"_index":1981,"title":{},"body":{"classes/DatasetService.html":{}}}],["this.searchterm",{"_index":2543,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.select",{"_index":1655,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"classes/ListEntryComponent.html":{}}}],["this.selecteddatasetids.indexof(dataentry.dataset.internalid",{"_index":2207,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.selecteddatasetids.indexof(dataset.internalid",{"_index":972,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.selecteddatasetids.indexof(id",{"_index":1287,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.selecteddatasetids.indexof(obj.id",{"_index":1299,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.selecteddatasetids.splice(this.selecteddatasetids.findindex((entri",{"_index":1298,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.selecteddatasetidsdiff",{"_index":1923,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.selecteddatasetidsdiffer.diff(this.selecteddatasetid",{"_index":1932,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.selectedids.indexof(id",{"_index":4652,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["this.selectedids.push(id",{"_index":4649,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["this.selectedids.splice(this.selectedids.findindex((entri",{"_index":4650,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["this.selectedservic",{"_index":3724,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.selectedservice.apiurl",{"_index":3727,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.selectedservice.id",{"_index":3725,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.selectedtimespan",{"_index":3512,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.selectedtimespan.from",{"_index":3516,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.selection.from",{"_index":1701,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.selectionend",{"_index":3970,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.selectionstart",{"_index":3968,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.selectorid",{"_index":2986,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.servic",{"_index":3711,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.services.push(entri",{"_index":3718,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.services.sort((a",{"_index":3719,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.serviceselectorservice.fetchservicesofapi(api.url",{"_index":3714,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.serviceurl",{"_index":81,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.set",{"_index":2270,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"classes/SettingsService.html":{}}}],["this.setcurrentlang",{"_index":3052,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["this.setitems(r",{"_index":2431,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["this.setparamet",{"_index":3583,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.setselectedid(addeditem.item",{"_index":1934,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.setset",{"_index":4644,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["this.settings.getsettings().refreshdatainterv",{"_index":3647,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["this.settingsrvc.getsettings().timespanpreset",{"_index":3330,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["this.settingssrvc.getsettings().proxyurl",{"_index":2899,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["this.settingssrvc.getsettings().solvelabel",{"_index":2893,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["this.showbottomindicatorlabel(item",{"_index":1777,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.showdiagramindicator(entri",{"_index":1352,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.showdiagramindicator(idx",{"_index":1762,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.showlabelvalues(entri",{"_index":1444,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.showlabelvalues(item",{"_index":1776,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.showtimeindicatorlabel(item",{"_index":1445,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.showunresolvableservic",{"_index":3722,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.singlefav",{"_index":2347,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.singlefavs.clear",{"_index":2333,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.singlefavs.delete(favoriteid",{"_index":2323,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.singlefavs.has(dataset.internalid",{"_index":2315,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.singlefavs.has(favoriteid",{"_index":2322,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.singlefavs.set(dataset.internalid",{"_index":2316,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.singlefavs.set(entry.id",{"_index":2352,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.singlefavs.set(favorite.id",{"_index":2338,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.start",{"_index":3962,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.startrefreshinterv",{"_index":3653,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["this.stat",{"_index":1602,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.station.properties.timeseri",{"_index":1607,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.station.properties.timeseries.hasownproperty(id",{"_index":1608,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.stoprefreshinterv",{"_index":3654,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["this.supportst",{"_index":3716,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.timeinterv",{"_index":1924,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"injectables/ReferenceValueColorCache.html":{}}}],["this.timeintervalchang",{"_index":1675,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{}}}],["this.timelist",{"_index":3961,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.timelist[0",{"_index":3963,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.timelist[this.timelist.length",{"_index":3965,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.timeserieslist.filter((entri",{"_index":1617,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.timeserieslist.push(t",{"_index":1614,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.timespan",{"_index":737,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["this.timespan.from",{"_index":1155,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.timespan.to",{"_index":1157,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.timespanfunc",{"_index":4017,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["this.timesrvc.createtimespanofinterval(this.timeinterv",{"_index":736,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/DatasetPresenterComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["this.timesrvc.getbufferedtimespan(this.timespan",{"_index":1680,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.timesrvc.getbufferedtimespan(timespan",{"_index":739,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["this.timesrvc.overlap",{"_index":3619,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.timestamp",{"_index":367,"title":{},"body":{"classes/BufferedTime.html":{},"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimeInterval.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timespan.html":{}}}],["this.to",{"_index":366,"title":{},"body":{"classes/BufferedTime.html":{},"classes/TimeInterval.html":{},"classes/Timespan.html":{}}}],["this.toggl",{"_index":3651,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["this.toggleuomselection(obj.id",{"_index":3559,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.transl",{"_index":4072,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["this.translate.currentlang",{"_index":3057,"title":{},"body":{"classes/LocalSelectorComponent.html":{},"classes/UriParameterCoder.html":{}}}],["this.translate.get('favorite.notifier.add",{"_index":2400,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["this.translate.get('favorite.notifier.remov",{"_index":2395,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["this.translate.onlangchange.subscrib",{"_index":2927,"title":{},"body":{"classes/LanguageChangNotifier.html":{}}}],["this.translate.use(lang.cod",{"_index":3053,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["this.unresolvableservic",{"_index":3712,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.unresolvableservices.push(api",{"_index":3723,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.uom",{"_index":3598,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.updateaxi",{"_index":2222,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.updatelayercontrol",{"_index":511,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.updateselect",{"_index":1615,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.updatezoomcontrol",{"_index":505,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.url",{"_index":1604,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.urls.indexof(url",{"_index":3841,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["this.urls.push(url",{"_index":3842,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["this.urls.splice(index",{"_index":3843,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["this.uuidv4",{"_index":877,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.valu",{"_index":3870,"title":{},"body":{"components/StringTogglerComponent.html":{}}}],["this.width",{"_index":1059,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xaxisrange.from",{"_index":1197,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xaxisrange.to",{"_index":1192,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xaxisrangeorigin",{"_index":893,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xaxisrangeorigin.push([this.xaxisrange.from",{"_index":1408,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xaxisrangeorigin[0",{"_index":1412,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xaxisrangeorigin[0][1",{"_index":1416,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xaxisrangepan",{"_index":1400,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xaxisrangepan[0",{"_index":1401,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xaxisrangepan[1",{"_index":1402,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xscalebas",{"_index":1190,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xscalebase(this.getxvalue(d",{"_index":1704,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.xscalebase.invert(x",{"_index":1789,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.yaxisgen",{"_index":1801,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.ypo",{"_index":1346,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.ypos.foreach((",{"_index":1360,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.ypos.push",{"_index":1457,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.yrangeseachuom",{"_index":922,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.yrangeseachuom.findindex((",{"_index":1029,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.yrangeseachuom[idx].rang",{"_index":1036,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.yrangeseachuom[idx].range.max",{"_index":1040,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.yrangeseachuom[idx].range.min",{"_index":1037,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.yscalebas",{"_index":1042,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.yscalebase(d.valu",{"_index":1702,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.zoomcontrol",{"_index":562,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.zoomcontrolopt",{"_index":517,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.zoomendhandl",{"_index":1102,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.zoomhandl",{"_index":1100,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.zoomstarthandl",{"_index":1098,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.zoomtomarkerbounds(this.layer.getbound",{"_index":3531,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.zoomtomarkerbounds(this.markerfeaturegroup.getbound",{"_index":3291,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["those",{"_index":4346,"title":{},"body":{"license.html":{}}}],["threshold",{"_index":640,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["thresholdunit",{"_index":641,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["through",{"_index":1307,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["throw",{"_index":1673,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["tick",{"_index":1195,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"miscellaneous/enumerations.html":{}}}],["tickformat",{"_index":1233,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["tickformat((d",{"_index":1220,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ticks(10",{"_index":1814,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["ticks(5",{"_index":1281,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ticksiz",{"_index":1174,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ticksize(0",{"_index":1259,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["tickvalu",{"_index":1170,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["tickvalues(this.timetickvalues(timestr",{"_index":1219,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["time",{"_index":277,"title":{"injectables/Time.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalHttpCache.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"additional-documentation/introduction.html":{}}}],["time/defin",{"_index":2593,"title":{},"body":{"modules/HelgolandCoreModule.html":{}}}],["time/time.servic",{"_index":1916,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"modules/HelgolandCoreModule.html":{}}}],["time_in_m",{"_index":3179,"title":{},"body":{"injectables/NotifierService.html":{},"miscellaneous/variables.html":{}}}],["timebycoord",{"_index":1117,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["timebycoord[1",{"_index":1121,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["timechang",{"_index":2457,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["timechanged(timespan",{"_index":2469,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["timeddatasetopt",{"_index":1852,"title":{"classes/TimedDatasetOptions.html":{}},"body":{"classes/DatasetOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/MinMaxRange.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValueOption.html":{},"interfaces/ScatterData.html":{},"classes/TimedDatasetOptions.html":{}}}],["timeformat",{"_index":1639,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["timeformat('%d.%m.%i",{"_index":1811,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["timeformatstr",{"_index":1201,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["timefram",{"_index":4599,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["timeinterv",{"_index":357,"title":{"classes/TimeInterval.html":{}},"body":{"classes/BufferedTime.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/DatasetPresenterComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"classes/Timespan.html":{}}}],["timeintervalchang",{"_index":927,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["timelist",{"_index":3523,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{}}}],["timelist.push(entry.timestamp",{"_index":3527,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["timelistselectorcompon",{"_index":276,"title":{"components/TimeListSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandTimeModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["timeout",{"_index":3118,"title":{},"body":{"injectables/LocateService.html":{}}}],["timeperiod",{"_index":4495,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["timerang",{"_index":4589,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["timerangeslidercach",{"_index":2748,"title":{"injectables/TimeRangeSliderCache.html":{}},"body":{"modules/HelgolandTimeRangeSliderModule.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"overview.html":{}}}],["timerangeslidercompon",{"_index":278,"title":{"components/TimeRangeSliderComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["timeseri",{"_index":214,"title":{"classes/Timeseries.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetParameterConstellation.html":{},"components/DragOptionsComponent.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFlotModule.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["timeseries.component.html",{"_index":4667,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["timeseries.component.tsexport",{"_index":4668,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["timeseries.lastvalue.timestamp",{"_index":1625,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{}}}],["timeseries.lastvalue.valu",{"_index":1623,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{}}}],["timeseries.parameters.category.label",{"_index":1622,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{}}}],["timeseries.parameters.phenomenon.label",{"_index":1620,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{}}}],["timeseries.parameters.procedure.label",{"_index":1621,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{}}}],["timeseries.select",{"_index":1616,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["timeseries.uom",{"_index":1624,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{}}}],["timeseries:57",{"_index":2286,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:58",{"_index":2288,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:59",{"_index":2295,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:60",{"_index":2294,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:61",{"_index":2287,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:62",{"_index":2284,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:63",{"_index":2289,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:64",{"_index":2291,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:65",{"_index":2292,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:66",{"_index":2290,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:67",{"_index":2293,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:68",{"_index":2285,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseriescollect",{"_index":3808,"title":{"classes/TimeseriesCollection.html":{}},"body":{"classes/Station.html":{},"interfaces/StationProperties.html":{},"classes/TimeseriesCollection.html":{}}}],["timeseriesentrycompon",{"_index":281,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandDatasetlistModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["timeseriesextra",{"_index":1530,"title":{"interfaces/TimeseriesExtras.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/UriParameterCoder.html":{}}}],["timeserieslist",{"_index":1587,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["timespan",{"_index":140,"title":{"classes/Timespan.html":{}},"body":{"classes/ApiInterface.html":{},"components/AxesOptionsComponent.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DatasetApi.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetPresenterComponent.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandTimeModule.html":{},"interfaces/HighlightDataset.html":{},"interfaces/HttpRequestOptions.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/Settings.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["timespan(dataset.firstvalue.timestamp",{"_index":3518,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["timespan(event.value[0",{"_index":3974,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["timespan(from",{"_index":2040,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"injectables/Time.html":{}}}],["timespan(new",{"_index":4574,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["timespan(option.timestamp",{"_index":2183,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["timespan(parseint(preset.timespan.from",{"_index":3413,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["timespan(start",{"_index":3929,"title":{},"body":{"injectables/Time.html":{}}}],["timespan(start.unix",{"_index":3788,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["timespan).subscribe((data",{"_index":2185,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["timespan).subscribe((result",{"_index":3480,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["timespan.from",{"_index":2472,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/Time.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["timespan.servic",{"_index":2594,"title":{},"body":{"modules/HelgolandCoreModule.html":{}}}],["timespan.service.t",{"_index":2018,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["timespan.service.ts:22",{"_index":2020,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["timespan.service.ts:77",{"_index":2023,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["timespan.to",{"_index":2473,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["timespan/timeinterv",{"_index":807,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["timespanbuttoncompon",{"_index":282,"title":{"components/TimespanButtonComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandTimeModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["timespanchang",{"_index":690,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{}}}],["timespanchanged(preset",{"_index":3328,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["timespanchanged(timespan",{"_index":718,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["timespanfunc",{"_index":4010,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["timespanmomenttempl",{"_index":336,"title":{"interfaces/TimespanMomentTemplate.html":{}},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["timespanpreset",{"_index":331,"title":{"interfaces/TimespanPreset.html":{}},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["timespanshiftselectorcompon",{"_index":283,"title":{"components/TimespanShiftSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandTimeModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["timesrvc",{"_index":702,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"components/TimespanShiftSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["timestamp",{"_index":359,"title":{},"body":{"classes/BufferedTime.html":{},"interfaces/CollectionMetadata.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/FirstLastValue.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"interfaces/Layout.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/MinMaxRange.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"interfaces/ProfileDataEntry.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"interfaces/ScatterData.html":{},"interfaces/StatusInterval.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{}}}],["timestampcr",{"_index":637,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["timestep",{"_index":1171,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["timestr",{"_index":1223,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["timetickvalues(tim",{"_index":1175,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["timevalueentri",{"_index":767,"title":{"interfaces/TimeValueEntry.html":{}},"body":{"interfaces/Data.html":{},"interfaces/IDataEntry.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/ProfileDataEntry.html":{},"classes/ReferenceValues.html":{},"interfaces/TimeValueEntry.html":{}}}],["timezon",{"_index":168,"title":{},"body":{"interfaces/AxesOptions.html":{}}}],["titl",{"_index":2234,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"license.html":{}}}],["to",{"_index":4503,"title":{"additional-documentation/how-tos.html":{}},"body":{"additional-documentation/how-tos.html":{}}}],["to```scss",{"_index":4630,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["today",{"_index":2027,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["today_yesterday",{"_index":2029,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["todo",{"_index":153,"title":{},"body":{"classes/ApiInterface.html":{},"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["toggl",{"_index":344,"title":{},"body":{"components/BoolTogglerComponent.html":{},"interfaces/D3PlotOptions.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/RefreshButtonComponent.html":{},"components/StringTogglerComponent.html":{},"additional-documentation/introduction.html":{}}}],["toggle(timeseri",{"_index":1597,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["toggleinform",{"_index":3562,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["togglepanzoom",{"_index":745,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"components/DragOptionsComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["toggler",{"_index":342,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/StringTogglerComponent.html":{}}}],["toggler'},{'nam",{"_index":207,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["toggler.compon",{"_index":2575,"title":{},"body":{"modules/HelgolandControlModule.html":{},"modules/HelgolandFavoriteModule.html":{}}}],["toggler.component.html",{"_index":343,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/StringTogglerComponent.html":{}}}],["toggler.component.t",{"_index":341,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/StringTogglerComponent.html":{}}}],["toggler.component.ts:10",{"_index":351,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/StringTogglerComponent.html":{}}}],["toggler.component.ts:13",{"_index":349,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/StringTogglerComponent.html":{}}}],["toggler.component.ts:14",{"_index":2386,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["toggler.component.ts:15",{"_index":2384,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["toggler.component.ts:16",{"_index":350,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/StringTogglerComponent.html":{}}}],["toggler.component.ts:19",{"_index":352,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/StringTogglerComponent.html":{}}}],["toggler.component.ts:21",{"_index":353,"title":{},"body":{"components/BoolTogglerComponent.html":{}}}],["toggler.component.ts:22",{"_index":3865,"title":{},"body":{"components/StringTogglerComponent.html":{}}}],["toggler.component.ts:23",{"_index":2387,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["toggler.component.ts:24",{"_index":3868,"title":{},"body":{"components/StringTogglerComponent.html":{}}}],["toggler.component.ts:26",{"_index":3866,"title":{},"body":{"components/StringTogglerComponent.html":{}}}],["toggler.component.ts:29",{"_index":2388,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["toggler.component.ts:32",{"_index":3867,"title":{},"body":{"components/StringTogglerComponent.html":{}}}],["toggler/bool",{"_index":340,"title":{},"body":{"components/BoolTogglerComponent.html":{},"modules/HelgolandControlModule.html":{}}}],["toggler/favorit",{"_index":2379,"title":{},"body":{"components/FavoriteTogglerComponent.html":{},"modules/HelgolandFavoriteModule.html":{}}}],["toggler/str",{"_index":2578,"title":{},"body":{"modules/HelgolandControlModule.html":{},"components/StringTogglerComponent.html":{}}}],["togglereferencevalue(refvalu",{"_index":3570,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["toggleselect",{"_index":2936,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["toggleuomselect",{"_index":2937,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["toggleuomselection(id",{"_index":2947,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["togglevis",{"_index":3433,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["togglevisibility(opt",{"_index":3461,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["tohighlightdataset.foreach((obj",{"_index":1296,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["token",{"_index":313,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["tool",{"_index":4169,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["toolbox",{"_index":4168,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["tooltip",{"_index":346,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeRangeSliderComponent.html":{}}}],["top",{"_index":844,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["tort",{"_index":4414,"title":{},"body":{"license.html":{}}}],["tostr",{"_index":2914,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["tostring(16",{"_index":536,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["total",{"_index":631,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["touch",{"_index":3303,"title":{},"body":{"interfaces/PlotOptions.html":{},"additional-documentation/how-tos.html":{}}}],["tozero",{"_index":2241,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["track",{"_index":4316,"title":{},"body":{"license.html":{}}}],["trade",{"_index":4393,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4370,"title":{},"body":{"license.html":{}}}],["trajectori",{"_index":218,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/introduction.html":{}}}],["trajectoryentrycompon",{"_index":285,"title":{"components/TrajectoryEntryComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandDatasetlistModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["trajectoryresult",{"_index":3509,"title":{"interfaces/TrajectoryResult.html":{}},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/TrajectoryResult.html":{}}}],["transfer",{"_index":4344,"title":{},"body":{"license.html":{}}}],["transform",{"_index":1993,"title":{},"body":{"pipes/DateProxyPipe.html":{},"injectables/Time.html":{},"dependencies.html":{},"license.html":{}}}],["transform(valu",{"_index":1994,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["translat",{"_index":887,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"pipes/DateProxyPipe.html":{},"interfaces/DrawOptions.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"interfaces/HighlightDataset.html":{},"classes/LanguageChangNotifier.html":{},"classes/LocalSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["translate(0",{"_index":1226,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["translate/cor",{"_index":2003,"title":{},"body":{"pipes/DateProxyPipe.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandSelectorModule.html":{},"classes/LanguageChangNotifier.html":{},"classes/LocalSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{},"dependencies.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["translate/http",{"_index":4100,"title":{},"body":{"dependencies.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["translatehttpload",{"_index":4529,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["translatehttploader(http",{"_index":4542,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["translateload",{"_index":4528,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["translatemodul",{"_index":2609,"title":{},"body":{"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandSelectorModule.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["translatemodule.forroot",{"_index":4537,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["translateservic",{"_index":2001,"title":{},"body":{"pipes/DateProxyPipe.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"classes/LanguageChangNotifier.html":{},"classes/LocalSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["tree",{"_index":178,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["tri",{"_index":2012,"title":{},"body":{"pipes/DateProxyPipe.html":{},"injectables/LabelMapperService.html":{}}}],["trigger",{"_index":4647,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["triggersearch",{"_index":2528,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["troubleshoot",{"_index":4236,"title":{},"body":{"index.html":{}}}],["true",{"_index":546,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandCachingModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalStorage.html":{},"injectables/LocateService.html":{},"interfaces/MinMaxRange.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/SingleFavorite.html":{},"injectables/Time.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["ts",{"_index":1611,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["ts.select",{"_index":1612,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["ts2307",{"_index":4612,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["tsc/app",{"_index":4549,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["tscolor",{"_index":169,"title":{},"body":{"interfaces/AxesOptions.html":{}}}],["tsconfig.json",{"_index":4225,"title":{},"body":{"index.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["tsdata",{"_index":910,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["tsdata.bars.linewidth",{"_index":917,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["tsdata.lines.linewidth",{"_index":914,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["tsdata.lines.pointradiu",{"_index":916,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["tsdata.select",{"_index":913,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["tslint:dis",{"_index":2178,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/Layout.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["tslint:disable:max",{"_index":3340,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["tutori",{"_index":4516,"title":{},"body":{"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["two",{"_index":4623,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["type",{"_index":22,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["type.t",{"_index":4150,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeof",{"_index":3072,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["types/bootstrap",{"_index":4103,"title":{},"body":{"dependencies.html":{}}}],["types/d3",{"_index":4105,"title":{},"body":{"dependencies.html":{}}}],["types/flot",{"_index":4107,"title":{},"body":{"dependencies.html":{}}}],["types/geojson",{"_index":4109,"title":{},"body":{"dependencies.html":{}}}],["types/jqueri",{"_index":4111,"title":{},"body":{"dependencies.html":{}}}],["types/leaflet",{"_index":4113,"title":{},"body":{"dependencies.html":{}}}],["types/leaflet.markerclust",{"_index":4115,"title":{},"body":{"dependencies.html":{}}}],["types/mo",{"_index":4117,"title":{},"body":{"dependencies.html":{}}}],["types/plotly.j",{"_index":4119,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":4615,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["typescript@~2.6",{"_index":4617,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["u",{"_index":1884,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["ui",{"_index":4491,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["undefin",{"_index":499,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"classes/DatasetPresenterComponent.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/HighlightDataset.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/LocalStorage.html":{},"components/MinMaxRangeComponent.html":{},"interfaces/YScale.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":4261,"title":{},"body":{"license.html":{}}}],["union",{"_index":4259,"title":{},"body":{"license.html":{}}}],["uniqu",{"_index":1306,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["unit",{"_index":644,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"classes/DatasetOptions.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["unless",{"_index":4386,"title":{},"body":{"license.html":{}}}],["unnecessari",{"_index":1126,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["unresolvableservic",{"_index":3690,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["unus",{"_index":2193,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["uom",{"_index":170,"title":{},"body":{"interfaces/AxesOptions.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/DrawOptions.html":{},"classes/ExtendedTimeseries.html":{},"classes/FirstLastValue.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["uomo",{"_index":986,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["up",{"_index":4507,"title":{},"body":{"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["updat",{"_index":2758,"title":{},"body":{"classes/HttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["updateaxi",{"_index":2257,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["updatedatasetopt",{"_index":1960,"title":{},"body":{"classes/DatasetService.html":{}}}],["updatedatasetoptions(opt",{"_index":1974,"title":{},"body":{"classes/DatasetService.html":{}}}],["updatelayercontrol",{"_index":417,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["updateopt",{"_index":4672,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["updateoptions(opt",{"_index":4674,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["updateselect",{"_index":1588,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["updatezoomcontrol",{"_index":418,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["upgrad",{"_index":4614,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["upload",{"_index":4201,"title":{},"body":{"index.html":{}}}],["upper",{"_index":1234,"title":{},"body":{"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/DrawOptions.html":{},"classes/FirstLastValue.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/YScale.html":{}}}],["uriparametercod",{"_index":2120,"title":{"classes/UriParameterCoder.html":{}},"body":{"injectables/EventingImplApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["url",{"_index":304,"title":{},"body":{"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/LabelMapperService.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/PlatformParameter.html":{},"components/ProfileEntryComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{}}}],["url).subscrib",{"_index":897,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["url).subscribe((dataset",{"_index":1670,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"components/TrajectoryEntryComponent.html":{}}}],["url).subscribe((timeseri",{"_index":3582,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["url.indexof",{"_index":3243,"title":{},"body":{"classes/PermalinkService.html":{}}}],["url.substring(0",{"_index":3244,"title":{},"body":{"classes/PermalinkService.html":{}}}],["urls.foreach((url",{"_index":3847,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["us",{"_index":490,"title":{},"body":{"classes/CachedMapComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{},"index.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["usableservic",{"_index":3754,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["usag",{"_index":4210,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":2567,"title":{},"body":{"modules/HelgolandCachingModule.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["usefactori",{"_index":4538,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["user",{"_index":649,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["usernam",{"_index":306,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["utc",{"_index":1210,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["utc+2",{"_index":1215,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["uuid",{"_index":1481,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["uuidv4",{"_index":1482,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["v",{"_index":3381,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["v0.0.1",{"_index":4233,"title":{},"body":{"index.html":{}}}],["v1",{"_index":1546,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"miscellaneous/enumerations.html":{}}}],["v1.10.2",{"_index":4235,"title":{},"body":{"index.html":{}}}],["v1.interfac",{"_index":1581,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["v2",{"_index":1547,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"miscellaneous/enumerations.html":{}}}],["v2.6",{"_index":4639,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["v2.interfac",{"_index":4056,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["v2.interface.t",{"_index":1561,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["v2.interface.ts:12",{"_index":1575,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["v2.interface.ts:15",{"_index":1573,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["v2.interface.ts:19",{"_index":1571,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["v2.interface.ts:22",{"_index":1569,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["v2.interface.ts:25",{"_index":1567,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["validateperamlink",{"_index":3237,"title":{},"body":{"classes/PermalinkService.html":{}}}],["valu",{"_index":347,"title":{},"body":{"components/BoolTogglerComponent.html":{},"classes/CachedMapComponent.html":{},"interfaces/CollectionMetadata.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"classes/ExtendedTimeseries.html":{},"injectables/FavoriteService.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"classes/ParameterConstellation.html":{},"classes/PermalinkService.html":{},"interfaces/PlatformParameter.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/ServiceSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["values[0].dist",{"_index":1818,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["values[0].tick",{"_index":1823,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["values[0].timestamp",{"_index":1821,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["values[values.length",{"_index":1819,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["valuetyp",{"_index":1493,"title":{},"body":{"interfaces/DataParameterFilter.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/ParameterFilter.html":{},"miscellaneous/enumerations.html":{}}}],["var",{"_index":202,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["variabl",{"_index":4452,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["verbal",{"_index":4311,"title":{},"body":{"license.html":{}}}],["veri",{"_index":4506,"title":{},"body":{"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["versa",{"_index":3379,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["version",{"_index":1541,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"injectables/JsonFavoriteExporterService.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{},"index.html":{},"license.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["verticalunit",{"_index":771,"title":{},"body":{"interfaces/Data.html":{},"interfaces/IDataEntry.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/ProfileDataEntry.html":{},"classes/ReferenceValues.html":{},"interfaces/TimeValueEntry.html":{}}}],["via",{"_index":1342,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["vice",{"_index":3378,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["view",{"_index":3487,"title":{},"body":{"components/ProfileEntryComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["viewchild",{"_index":777,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["viewchild('d3timeseri",{"_index":812,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["viewchild('dthre",{"_index":1643,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["viewchild('plotli",{"_index":2155,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["viewencapsul",{"_index":778,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/YScale.html":{}}}],["viewencapsulation.non",{"_index":806,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/YScale.html":{}}}],["viewer'},{'nam",{"_index":236,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["viewer.compon",{"_index":2690,"title":{},"body":{"modules/HelgolandMapViewModule.html":{}}}],["viewer/geometri",{"_index":2689,"title":{},"body":{"modules/HelgolandMapViewModule.html":{}}}],["visibl",{"_index":545,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/DrawOptions.html":{},"classes/FirstLastValue.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"interfaces/LayerOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"interfaces/StatusInterval.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/YScale.html":{}}}],["visual",{"_index":1172,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["void",{"_index":195,"title":{},"body":{"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"components/BoolTogglerComponent.html":{},"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"classes/IdCache.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/Plot.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/StatusCheckService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{}}}],["w",{"_index":1472,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["w@:%_\\+.~#?&\\/\\/=]+)/g",{"_index":2917,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["want",{"_index":4515,"title":{},"body":{"additional-documentation/how-tos.html":{}}}],["warranti",{"_index":4397,"title":{},"body":{"license.html":{}}}],["watch",{"_index":3116,"title":{},"body":{"injectables/LocateService.html":{}}}],["weeks').endof('isoweek').unix",{"_index":2053,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["weeks').startof('isoweek').unix",{"_index":2052,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["weight",{"_index":1092,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["wherev",{"_index":4375,"title":{},"body":{"license.html":{}}}],["whether",{"_index":155,"title":{},"body":{"classes/ApiInterface.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"license.html":{}}}],["white",{"_index":1086,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["whole",{"_index":948,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["width",{"_index":842,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/MinMaxRange.html":{},"interfaces/RawData.html":{},"classes/ReferenceValueOption.html":{},"interfaces/ScatterData.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["window",{"_index":3225,"title":{},"body":{"components/PermalinkNewWindowComponent.html":{}}}],["window'},{'nam",{"_index":256,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["window.compon",{"_index":2712,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{}}}],["window.component.html",{"_index":3226,"title":{},"body":{"components/PermalinkNewWindowComponent.html":{}}}],["window.component.t",{"_index":3224,"title":{},"body":{"components/PermalinkNewWindowComponent.html":{}}}],["window.component.ts:10",{"_index":3228,"title":{},"body":{"components/PermalinkNewWindowComponent.html":{}}}],["window.component.ts:13",{"_index":3229,"title":{},"body":{"components/PermalinkNewWindowComponent.html":{}}}],["window.component.ts:15",{"_index":3230,"title":{},"body":{"components/PermalinkNewWindowComponent.html":{}}}],["window.location.href",{"_index":3220,"title":{},"body":{"components/PermalinkInMailComponent.html":{},"classes/PermalinkService.html":{}}}],["window.navigator.mssaveblob",{"_index":2832,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["window.navigator.mssaveblob(blob",{"_index":2838,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["window.open(this.url",{"_index":3231,"title":{},"body":{"components/PermalinkNewWindowComponent.html":{}}}],["window/permalink",{"_index":2711,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{},"components/PermalinkNewWindowComponent.html":{}}}],["window:res",{"_index":3662,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["window:resize(ev",{"_index":3665,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["within",{"_index":4327,"title":{},"body":{"license.html":{}}}],["without",{"_index":4362,"title":{},"body":{"license.html":{}}}],["work",{"_index":492,"title":{},"body":{"classes/CachedMapComponent.html":{},"license.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["workaround](https://github.com/angular/angular",{"_index":4221,"title":{},"body":{"index.html":{}}}],["worldwid",{"_index":4331,"title":{},"body":{"license.html":{}}}],["write",{"_index":4323,"title":{},"body":{"license.html":{}}}],["written",{"_index":4312,"title":{},"body":{"license.html":{}}}],["x",{"_index":832,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["x((d",{"_index":1319,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["x(this.calcxvalu",{"_index":1660,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["x.push(entry.valu",{"_index":2209,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["xaxi",{"_index":2215,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/PlotOptions.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["xaxiscount",{"_index":2263,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["xaxisgen",{"_index":1217,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xaxisgen.tickformat((d",{"_index":1810,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["xaxisrang",{"_index":831,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xaxisrangeorigin",{"_index":834,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xaxisrangepan",{"_index":835,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xcoordmous",{"_index":1432,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xdiagcoord",{"_index":789,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xdiagmax",{"_index":786,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xdiagmin",{"_index":785,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xdomainrang",{"_index":1417,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xml",{"_index":2903,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["xml).find('preflabel').text",{"_index":2906,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["xscalebas",{"_index":851,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xscalebase(d[0",{"_index":1322,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["y",{"_index":757,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/MinMaxRange.html":{},"interfaces/RawData.html":{},"classes/ReferenceValueOption.html":{},"interfaces/ScatterData.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["y((d",{"_index":1325,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["y(this.calcyvalu",{"_index":1661,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["y.push(entry.vert",{"_index":2210,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["y0(this.height",{"_index":1664,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["y1(this.calcyvalu",{"_index":1665,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["yarn",{"_index":4207,"title":{},"body":{"index.html":{}}}],["yax",{"_index":3304,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["yaxi",{"_index":746,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/PlotOptions.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["yaxiscount",{"_index":2260,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["yaxisgen",{"_index":1257,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["yaxisrang",{"_index":802,"title":{},"body":{"interfaces/DataConst.html":{},"classes/DatasetOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{}}}],["yaxisresult",{"_index":1045,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["yaxisresult.buff",{"_index":1048,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["yaxisresult.yscal",{"_index":1047,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ydiagcoord",{"_index":784,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ydiagmax",{"_index":788,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ydiagmin",{"_index":787,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ye",{"_index":149,"title":{},"body":{"classes/ApiInterface.html":{},"classes/CachedMapComponent.html":{},"interfaces/DatasetApiV2.html":{},"classes/DatasetService.html":{},"classes/EventingApiService.html":{},"injectables/FavoriteService.html":{},"classes/GeoCureGeoJSON.html":{},"classes/GeoSearch.html":{},"injectables/NominatimGeoSearchService.html":{},"classes/Timespan.html":{}}}],["year').asmillisecond",{"_index":3783,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["year(numb",{"_index":3354,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["years').endof('year').unix",{"_index":2065,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["years').startof('year').unix",{"_index":2064,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["years|y|quarters|q|months|m|weeks|w|days|d|hours|h|minutes|m|seconds|s|milliseconds|ms)['\"]\\))|((startof|endof)\\(['\"](year|month|quarter|week|isoweek|day|date|hour|minute|second)['\"]\\))|((year|month|date|hours|minutes|seconds|milliseconds)\\(\\d",{"_index":3385,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["yellow",{"_index":4605,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["yesterday",{"_index":2028,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["ymax",{"_index":1251,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ymin",{"_index":1249,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ypo",{"_index":839,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ypos.foreach((p",{"_index":1365,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ypos.sort((a",{"_index":1372,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ypos[c2",{"_index":1381,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ypos[c2].off",{"_index":1382,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ypos[i",{"_index":1367,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ypos[i].i",{"_index":1371,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ypos[i].off",{"_index":1369,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["yrang",{"_index":794,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["yrangeobj",{"_index":1032,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["yrangeseachuom",{"_index":836,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["yscale",{"_index":791,"title":{"interfaces/YScale.html":{}},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["yscale(d[options.id",{"_index":1725,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["yscalebas",{"_index":854,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["yscalebase(d[1",{"_index":1326,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["zero",{"_index":1849,"title":{},"body":{"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["zerobas",{"_index":795,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["zerobasedyaxi",{"_index":804,"title":{},"body":{"interfaces/DataConst.html":{},"classes/DatasetOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["zerolin",{"_index":2235,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["zone.j",{"_index":4145,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":287,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"overview.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["zoom.component.html",{"_index":4077,"title":{},"body":{"components/ZoomControlComponent.html":{}}}],["zoom/zoom.compon",{"_index":2667,"title":{},"body":{"modules/HelgolandMapControlModule.html":{}}}],["zoomcontrol",{"_index":406,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["zoomcontrolcompon",{"_index":286,"title":{"components/ZoomControlComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapControlModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["zoomcontrolopt",{"_index":425,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["zoomendhandl",{"_index":1411,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["zoomhandl",{"_index":1409,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["zoomin",{"_index":4078,"title":{},"body":{"components/ZoomControlComponent.html":{}}}],["zoomlimit",{"_index":817,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["zoomout",{"_index":4079,"title":{},"body":{"components/ZoomControlComponent.html":{}}}],["zoomstarthandl",{"_index":1405,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["zoomtoext",{"_index":2298,"title":{},"body":{"components/ExtentControlComponent.html":{}}}],["zoomtomarkerbound",{"_index":3255,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["zoomtomarkerbounds(bound",{"_index":3269,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address29\n                                \n                                \n                                        city\n                                \n                                \n                                        city_district\n                                \n                                \n                                        country\n                                \n                                \n                                        country_code\n                                \n                                \n                                        county\n                                \n                                \n                                        house_number\n                                \n                                \n                                        neighbourhood\n                                \n                                \n                                        postcode\n                                \n                                \n                                        road\n                                \n                                \n                                        state\n                                \n                                \n                                        state_district\n                                \n                                \n                                        suburb\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address29\n                                    \n                                \n                                \n                                    \n                                        address29:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city_district\n                                    \n                                \n                                \n                                    \n                                        city_district:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country_code\n                                    \n                                \n                                \n                                    \n                                        country_code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        county\n                                    \n                                \n                                \n                                    \n                                        county:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        house_number\n                                    \n                                \n                                \n                                    \n                                        house_number:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        neighbourhood\n                                    \n                                \n                                \n                                    \n                                        neighbourhood:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postcode\n                                    \n                                \n                                \n                                    \n                                        postcode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        road\n                                    \n                                \n                                \n                                    \n                                        road:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state_district\n                                    \n                                \n                                \n                                    \n                                        state_district:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suburb\n                                    \n                                \n                                \n                                    \n                                        suburb:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import 'rxjs/add/operator/map';\n\nimport { HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpService } from '@helgoland/core';\nimport { Point } from 'geojson';\nimport { Observable } from 'rxjs/Observable';\n\nimport { GeoReverseOptions, GeoReverseResult, GeoSearch, GeoSearchOptions, GeoSearchResult } from './geosearch';\n\ninterface NominatimSearchResult {\n    display_name: string;\n    geojson?: GeoJSON.GeoJsonObject;\n    lat: string;\n    lon: string;\n    boundingbox: number[];\n}\n\nexport interface Address {\n    address29: string;\n    house_number: string;\n    road: string;\n    neighbourhood: string;\n    suburb: string;\n    city_district: string;\n    city: string;\n    county: string;\n    state_district: string;\n    state: string;\n    postcode: string;\n    country: string;\n    country_code: string;\n}\n\nexport interface NominatimReverseResult {\n    place_id: string;\n    licence: string;\n    osm_type: string;\n    osm_id: string;\n    lat: string;\n    lon: string;\n    display_name: string;\n    address: Address;\n    boundingbox: string[];\n}\n\n@Injectable()\nexport class NominatimGeoSearchService implements GeoSearch {\n\n    protected serviceUrl = 'https://nominatim.openstreetmap.org/';\n\n    constructor(\n        protected http: HttpService\n    ) { }\n\n    public searchTerm(term: string, options?: GeoSearchOptions): Observable {\n        let params = new HttpParams();\n        params = params.set('limit', '1');\n        params = params.set('polygon_geojson', options.asPointGeometry ? '0' : '1');\n        params = params.set('q', term);\n        params = params.set('format', 'json');\n        if (options && options.countrycodes) { params = params.set('countrycodes', options.countrycodes.join(',')); }\n        return this.http.client().get(\n            this.serviceUrl + 'search',\n            { params }\n        ).map((resArray: NominatimSearchResult[]) => {\n            if (resArray.length === 1) {\n                const result = resArray[0];\n                const name = result.display_name;\n                let bounds: Array;\n                if (result.boundingbox) {\n                    bounds = [\n                        [\n                            result.boundingbox[0],\n                            result.boundingbox[2]\n                        ],\n                        [\n                            result.boundingbox[1],\n                            result.boundingbox[3]\n                        ]\n                    ];\n                } else {\n                    bounds = null;\n                }\n                let geometry;\n                if (result.geojson) {\n                    geometry = result.geojson;\n                } else {\n                    geometry = {\n                        type: 'Point',\n                        coordinates: [parseFloat(result.lon), parseFloat(result.lat)]\n                    };\n                }\n                return {\n                    name,\n                    geometry,\n                    bounds\n                };\n            }\n        });\n    }\n\n    public reverse(point: Point, options?: GeoReverseOptions): Observable {\n        let params = new HttpParams();\n        params = params.set('lat', point.coordinates[0].toString());\n        params = params.set('lon', point.coordinates[1].toString());\n        params = params.set('format', 'json');\n        return this.http.client().get(\n            this.serviceUrl + 'reverse',\n            { params }\n        ).map((res: NominatimReverseResult) => {\n            return {\n                lat: res.lat,\n                lon: res.lon,\n                displayName: res.display_name,\n                address: {\n                    city: res.address.city,\n                    cityDistrict: res.address.city_district,\n                    country: res.address.country,\n                    countryCode: res.address.country_code,\n                    county: res.address.county,\n                    houseNumber: res.address.house_number,\n                    neighbourhood: res.address.neighbourhood,\n                    postcode: res.address.postcode,\n                    road: res.address.road,\n                    state: res.address.state,\n                    stateDistrict: res.address.state_district,\n                    suburb: res.address.suburb\n                },\n                boundingbox: res.boundingbox\n            } as GeoReverseResult;\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiInterface.html":{"url":"classes/ApiInterface.html","title":"class - ApiInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/abstract-services/api-interface.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createRequestTimespan\n                            \n                            \n                                    Protected\n                                createRequestUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createRequestTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createRequestTimespan(timespan: Timespan)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/api-interface.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createRequestUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createRequestUrl(apiUrl: string, endpoint: string, id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/api-interface.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        endpoint\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import moment from 'moment';\n\nimport { Timespan } from '../model/internal/timeInterval';\n\nexport abstract class ApiInterface {\n\n    protected createRequestUrl(apiUrl: string, endpoint: string, id?: string) {\n        // TODO Check whether apiUrl ends with slash\n        let requestUrl = apiUrl + endpoint;\n        if (id) { requestUrl += '/' + id; }\n        return requestUrl;\n    }\n\n    protected createRequestTimespan(timespan: Timespan): string {\n        return encodeURI(moment(timespan.from).format() + '/' + moment(timespan.to).format());\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AxesOptions.html":{"url":"interfaces/AxesOptions.html","title":"interface - AxesOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AxesOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/flot/src/lib/model/axesOptions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        additionalWidth\n                                \n                                \n                                            Optional\n                                        hideLabel\n                                \n                                \n                                            Optional\n                                        internalIds\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        panRange\n                                \n                                \n                                            Optional\n                                        timezone\n                                \n                                \n                                            Optional\n                                        tsColors\n                                \n                                \n                                            Optional\n                                        uom\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        additionalWidth\n                                    \n                                \n                                \n                                    \n                                        additionalWidth:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideLabel\n                                    \n                                \n                                \n                                    \n                                        hideLabel:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        internalIds\n                                    \n                                \n                                \n                                    \n                                        internalIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        panRange\n                                    \n                                \n                                \n                                    \n                                        panRange:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timezone\n                                    \n                                \n                                \n                                    \n                                        timezone:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsColors\n                                    \n                                \n                                \n                                    \n                                        tsColors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uom\n                                    \n                                \n                                \n                                    \n                                        uom:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AxesOptions extends jquery.flot.axisOptions {\n    uom?: string;\n    label?: string;\n    hideLabel?: boolean;\n    internalIds?: string[];\n    tsColors?: string[];\n    timezone?: string;\n    additionalWidth?: number;\n    panRange?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AxesOptionsComponent.html":{"url":"components/AxesOptionsComponent.html","title":"component - AxesOptionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AxesOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/modification/src/lib/axes-options/axes-options.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-axes-options\n            \n\n\n\n\n            \n                templateUrl\n                ./axes-options.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeYAxesVisibility\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onChangeYAxesVisibility\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onChangeYAxesVisibility\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/axes-options/axes-options.component.ts:10\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeYAxesVisibility\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeYAxesVisibility()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/axes-options/axes-options.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'n52-axes-options',\n    templateUrl: './axes-options.component.html'\n})\nexport class AxesOptionsComponent {\n\n    @Output()\n    public onChangeYAxesVisibility: EventEmitter = new EventEmitter();\n\n    public changeYAxesVisibility() {\n        this.onChangeYAxesVisibility.emit();\n    }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AxesOptionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicAuthService.html":{"url":"injectables/BasicAuthService.html","title":"injectable - BasicAuthService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  BasicAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/auth/src/lib/basic-auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                basicAuthToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                clearToken\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                hasToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/auth/src/lib/basic-auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        auth(username: string, password: string, url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/auth/src/lib/basic-auth.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clearToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/auth/src/lib/basic-auth.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/auth/src/lib/basic-auth.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/auth/src/lib/basic-auth.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            basicAuthToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        basicAuthToken:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/auth/src/lib/basic-auth.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class BasicAuthService {\n\n  private basicAuthToken: string;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  public auth(username: string, password: string, url: string): Observable {\n    const token = 'Basic ' + btoa(username + ':' + password);\n    const headers = new HttpHeaders({ 'Authorization': token });\n    return this.http.get(url, { headers })\n      .pipe(\n        map(res => {\n          this.basicAuthToken = token;\n          return token;\n        })\n      );\n  }\n\n  public clearToken(): void {\n    this.basicAuthToken = null;\n  }\n\n  public hasToken(): boolean {\n    return this.basicAuthToken != null;\n  }\n\n  public getToken(): string {\n    return this.basicAuthToken;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlacklistedService.html":{"url":"interfaces/BlacklistedService.html","title":"interface - BlacklistedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BlacklistedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/settings/settings.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        apiUrl\n                                \n                                \n                                        serviceId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiUrl\n                                    \n                                \n                                \n                                    \n                                        apiUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceId\n                                    \n                                \n                                \n                                    \n                                        serviceId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timespan } from './../internal/timeInterval';\n\nexport interface Settings {\n    datasetApis?: DatasetApi[];\n    providerBlackList?: BlacklistedService[];\n    solveLabels?: boolean;\n    proxyUrl?: string;\n    timespanPresets?: TimespanPreset[];\n    colorList?: string[];\n    languages?: [{ label: string, code: string }];\n    refreshDataInterval?: number;\n}\n\nexport interface DatasetApi {\n    name: string;\n    url: string;\n}\n\nexport interface BlacklistedService {\n    serviceId: string;\n    apiUrl: string;\n}\n\nexport interface TimespanPreset {\n    name: string;\n    label: string;\n    timespan: TimespanMomentTemplate;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface ParsedTimespanPreset {\n    name: string;\n    label: string;\n    timespan: Timespan;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface TimespanMomentTemplate {\n    to: string;\n    from: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoolTogglerComponent.html":{"url":"components/BoolTogglerComponent.html","title":"component - BoolTogglerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoolTogglerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/control/src/lib/bool-toggler/bool-toggler.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-bool-toggler\n            \n\n\n\n\n            \n                templateUrl\n                ./bool-toggler.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                tooltip\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onToggled\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/bool-toggler/bool-toggler.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/bool-toggler/bool-toggler.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/bool-toggler/bool-toggler.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onToggled\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/bool-toggler/bool-toggler.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/bool-toggler/bool-toggler.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'n52-bool-toggler',\n    templateUrl: './bool-toggler.component.html'\n})\nexport class BoolTogglerComponent {\n\n    @Input()\n    public value: boolean;\n\n    @Input()\n    public icon: string;\n\n    @Input()\n    public tooltip: string;\n\n    @Output()\n    public onToggled: EventEmitter = new EventEmitter();\n\n    public toggle() {\n        this.onToggled.emit(!this.value);\n    }\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoolTogglerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BufferedTime.html":{"url":"classes/BufferedTime.html","title":"class - BufferedTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  BufferedTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/timeInterval.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeInterval\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bufferInterval\n                            \n                            \n                                    Public\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(timestamp: Date, bufferInterval: number)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/model/internal/timeInterval.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timestamp\n                                                  \n                                                        \n                                                                    Date\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        bufferInterval\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bufferInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bufferInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/timeInterval.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timestamp:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/timeInterval.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class TimeInterval {\n\n}\n\nexport class Timespan extends TimeInterval {\n\n    public from: number;\n\n    public to: number;\n\n    constructor(\n        from: number,\n        to?: number\n    ) {\n        super();\n        this.from = from;\n        if (to) {\n            this.to = to;\n        } else {\n            this.to = from;\n        }\n    }\n\n}\n\nexport class BufferedTime extends TimeInterval {\n    public timestamp: Date;\n    public bufferInterval: number;\n\n    constructor(\n        timestamp: Date,\n        bufferInterval: number\n    ) {\n        super();\n        this.timestamp = timestamp;\n        this.bufferInterval = bufferInterval;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cache.html":{"url":"interfaces/Cache.html","title":"interface - Cache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/caching/src/lib/local-http-cache.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [id: string]:    CachedItem\n\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/caching/src/lib/local-http-cache.ts:11\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { HttpCache } from './model';\n\ninterface CachedItem {\n    expirationTime: number;\n    response: HttpResponse;\n}\n\ninterface Cache {\n    [id: string]: CachedItem;\n}\n\n@Injectable()\nexport class LocalHttpCache extends HttpCache {\n\n    private cache: Cache = {};\n\n    public get(req: HttpRequest): HttpResponse {\n        if (this.cache[req.urlWithParams]) {\n            const expirationTime = this.cache[req.urlWithParams].expirationTime;\n            const currentTime = new Date().getTime();\n            if (expirationTime >= currentTime) {\n                return this.cache[req.urlWithParams].response;\n            } else {\n                delete this.cache[req.urlWithParams];\n            }\n        }\n        return null;\n    }\n\n    public put(req: HttpRequest, expirationTime: number | Date, resp: HttpResponse) {\n        let time;\n        if (expirationTime instanceof Date) {\n            time = expirationTime.getTime();\n        } else {\n            time = new Date().getTime() + expirationTime;\n        }\n        this.cache[req.urlWithParams] = {\n            expirationTime: time,\n            response: resp\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CachedItem.html":{"url":"interfaces/CachedItem.html","title":"interface - CachedItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CachedItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/caching/src/lib/local-http-cache.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expirationTime\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expirationTime\n                                    \n                                \n                                \n                                    \n                                        expirationTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     HttpResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { HttpCache } from './model';\n\ninterface CachedItem {\n    expirationTime: number;\n    response: HttpResponse;\n}\n\ninterface Cache {\n    [id: string]: CachedItem;\n}\n\n@Injectable()\nexport class LocalHttpCache extends HttpCache {\n\n    private cache: Cache = {};\n\n    public get(req: HttpRequest): HttpResponse {\n        if (this.cache[req.urlWithParams]) {\n            const expirationTime = this.cache[req.urlWithParams].expirationTime;\n            const currentTime = new Date().getTime();\n            if (expirationTime >= currentTime) {\n                return this.cache[req.urlWithParams].response;\n            } else {\n                delete this.cache[req.urlWithParams];\n            }\n        }\n        return null;\n    }\n\n    public put(req: HttpRequest, expirationTime: number | Date, resp: HttpResponse) {\n        let time;\n        if (expirationTime instanceof Date) {\n            time = expirationTime.getTime();\n        } else {\n            time = new Date().getTime() + expirationTime;\n        }\n        this.cache[req.urlWithParams] = {\n            expirationTime: time,\n            response: resp\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CachedMapComponent.html":{"url":"classes/CachedMapComponent.html","title":"class - CachedMapComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  CachedMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/cached-map-component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        OnChanges\n                        DoCheck\n                        OnDestroy\n                        OnInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseMaps\n                            \n                            \n                                    Private\n                                _differBaseMaps\n                            \n                            \n                                    Private\n                                _differOverlayMaps\n                            \n                            \n                                    Private\n                                _overlayMaps\n                            \n                            \n                                    Protected\n                                layerControl\n                            \n                            \n                                    Protected\n                                map\n                            \n                            \n                                    Protected\n                                oldBaseLayer\n                            \n                            \n                                    Protected\n                                oldOverlayLayer\n                            \n                            \n                                    Protected\n                                zoomControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addBaseMap\n                            \n                            \n                                    Private\n                                addOverlayMap\n                            \n                            \n                                    Protected\n                                createMap\n                            \n                            \n                                    Private\n                                generateUUID\n                            \n                            \n                                    Public\n                                ngDoCheck\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                removeBaseMap\n                            \n                            \n                                    Private\n                                removeOverlayMap\n                            \n                            \n                                    Private\n                                updateLayerControl\n                            \n                            \n                                    Private\n                                updateZoomControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                baseMaps\n                            \n                            \n                                fitBounds\n                            \n                            \n                                layerControlOptions\n                            \n                            \n                                mapId\n                            \n                            \n                                mapOptions\n                            \n                            \n                                overlayMaps\n                            \n                            \n                                zoomControlOptions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapCache: MapCache, differs: KeyValueDiffers)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapCache\n                                                  \n                                                        \n                                                                    MapCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        differs\n                                                  \n                                                        \n                                                                    KeyValueDiffers\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseMaps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseMaps:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _differBaseMaps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _differBaseMaps:     KeyValueDiffer\n\n                    \n                \n                    \n                        \n                            Type :     KeyValueDiffer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _differOverlayMaps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _differOverlayMaps:     KeyValueDiffer\n\n                    \n                \n                    \n                        \n                            Type :     KeyValueDiffer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _overlayMaps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _overlayMaps:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layerControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layerControl:     L.Control.Layers\n\n                    \n                \n                    \n                        \n                            Type :     L.Control.Layers\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     L.Map\n\n                    \n                \n                    \n                        \n                            Type :     L.Map\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:46\n                            \n                        \n\n                \n                    \n                        The map object.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            oldBaseLayer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldBaseLayer:     L.Control.LayersObject\n\n                    \n                \n                    \n                        \n                            Type :     L.Control.LayersObject\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            oldOverlayLayer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldOverlayLayer:     L.Control.LayersObject\n\n                    \n                \n                    \n                        \n                            Type :     L.Control.LayersObject\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            zoomControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zoomControl:     L.Control.Zoom\n\n                    \n                \n                    \n                        \n                            Type :     L.Control.Zoom\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:51\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addBaseMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addBaseMap(layerOptions?: LayerOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:148\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layerOptions\n                                                        \n                                                                    LayerOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addOverlayMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addOverlayMap(layerOptions: LayerOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layerOptions\n                                                        \n                                                                    LayerOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createMap()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            generateUUID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateUUID()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:123\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngDoCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngDoCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            removeBaseMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeBaseMap(layerOptions: LayerOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:166\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layerOptions\n                                                        \n                                                                    LayerOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            removeOverlayMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeOverlayMap(layerOptions: LayerOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:141\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layerOptions\n                                                        \n                                                                    LayerOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateLayerControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateLayerControl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:173\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateZoomControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateZoomControl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:186\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        baseMaps\n                    \n                    \n                            \n                            Type:    Map\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fitBounds\n                    \n                    \n                            \n                            Type:    L.LatLngBoundsExpression\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layerControlOptions\n                    \n                    \n                            \n                            Type:    L.Control.LayersOptions\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapOptions\n                    \n                    \n                            \n                            Type:    L.MapOptions\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        overlayMaps\n                    \n                    \n                            \n                            Type:    Map\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomControlOptions\n                    \n                    \n                            \n                            Type:    L.Control.ZoomOptions\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:38\n                            \n                        \n            \n        \n\n\n\n\n    \n\n\n    \n        import { DoCheck, Input, KeyValueDiffer, KeyValueDiffers, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport * as L from 'leaflet';\n\nimport { MapCache } from './map-cache.service';\nimport { LayerOptions } from './map-options';\n\nconst DEFAULT_BASE_LAYER_NAME = 'BaseLayer';\nconst DEFAULT_BASE_LAYER_URL = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\nconst DEFAULT_BASE_LAYER_ATTRIBUTION = '&copy; OpenStreetMap contributors';\n\nexport abstract class CachedMapComponent implements OnChanges, DoCheck, OnDestroy, OnInit {\n\n    /**\n     * @input A map with the given ID is created inside this component. This ID can be used outside of the component the\n     * work with the map.\n     *\n     * @memberof MapSelectorComponent\n     */\n    @Input()\n    public mapId: string;\n\n    @Input()\n    public mapOptions: L.MapOptions;\n\n    @Input()\n    public fitBounds: L.LatLngBoundsExpression;\n\n    @Input()\n    public overlayMaps: Map;\n\n    @Input()\n    public baseMaps: Map;\n\n    @Input()\n    public layerControlOptions: L.Control.LayersOptions;\n\n    @Input()\n    public zoomControlOptions: L.Control.ZoomOptions;\n\n    /**\n     * The map object.\n     *\n     * @protected\n     * @memberof MapSelectorComponent\n     */\n    protected map: L.Map;\n\n    protected oldOverlayLayer: L.Control.LayersObject = {};\n    protected oldBaseLayer: L.Control.LayersObject = {};\n    protected layerControl: L.Control.Layers;\n    protected zoomControl: L.Control.Zoom;\n\n    private _overlayMaps: Map;\n    private _differOverlayMaps: KeyValueDiffer;\n    private _baseMaps: Map;\n    private _differBaseMaps: KeyValueDiffer;\n\n    constructor(\n        protected mapCache: MapCache,\n        protected differs: KeyValueDiffers\n    ) {\n        this._differOverlayMaps = this.differs.find({}).create();\n        this._differBaseMaps = this.differs.find({}).create();\n    }\n\n    public ngOnInit(): void {\n        if (this.mapId === undefined || this.mapId === null) {\n            this.mapId = this.generateUUID();\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.map) {\n            if (changes.fitBounds) {\n                this.map.fitBounds(this.fitBounds);\n            }\n            if (changes.zoomControlOptions) {\n                this.updateZoomControl();\n            }\n        }\n    }\n\n    public ngDoCheck(): void {\n        if (this._differOverlayMaps) {\n            const changes = this._differOverlayMaps.diff(this.overlayMaps);\n            if (changes) {\n                changes.forEachRemovedItem((e) => this.removeOverlayMap(e.previousValue));\n                changes.forEachAddedItem((e) => this.addOverlayMap(e.currentValue));\n                this.updateLayerControl();\n            }\n        }\n        if (this._differBaseMaps) {\n            const changes = this._differBaseMaps.diff(this.baseMaps);\n            if (changes) {\n                changes.forEachRemovedItem((e) => this.removeBaseMap(e.previousValue));\n                changes.forEachAddedItem((e) => this.addBaseMap(e.currentValue));\n                this.updateLayerControl();\n            }\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.map.remove();\n    }\n\n    protected createMap(): void {\n        if (!this.mapOptions || this.zoomControlOptions) { this.mapOptions = { zoomControl: false }; }\n        this.map = L.map(this.mapId, this.mapOptions);\n        this.mapCache.setMap(this.mapId, this.map);\n        if (this.baseMaps && this.baseMaps.size > 0) {\n            this.baseMaps.forEach((entry, key) => this.addBaseMap(entry));\n        } else {\n            this.addBaseMap();\n        }\n        if (this.overlayMaps) { this.overlayMaps.forEach((entry, key) => this.addOverlayMap(entry)); }\n        this.updateZoomControl();\n        this.updateLayerControl();\n        if (this.fitBounds) {\n            this.map.fitBounds(this.fitBounds);\n        }\n    }\n\n    private generateUUID(): string {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n    }\n\n    private addOverlayMap(layerOptions: LayerOptions) {\n        if (this.map) {\n            if (!this.oldOverlayLayer.hasOwnProperty[layerOptions.label]) {\n                this.oldOverlayLayer[layerOptions.label] = layerOptions.layer;\n                if (layerOptions.visible) { layerOptions.layer.addTo(this.map); }\n            }\n        }\n    }\n\n    private removeOverlayMap(layerOptions: LayerOptions) {\n        if (this.oldOverlayLayer.hasOwnProperty(layerOptions.label)) {\n            this.map.removeLayer(this.oldOverlayLayer[layerOptions.label]);\n            delete this.oldOverlayLayer[layerOptions.label];\n        }\n    }\n\n    private addBaseMap(layerOptions?: LayerOptions) {\n        if (this.map) {\n            if (!this.baseMaps || this.baseMaps.size === 0) {\n                layerOptions = {\n                    label: DEFAULT_BASE_LAYER_NAME,\n                    visible: true,\n                    layer: L.tileLayer(DEFAULT_BASE_LAYER_URL, {\n                        attribution: DEFAULT_BASE_LAYER_ATTRIBUTION\n                    })\n                };\n            }\n            if (!this.oldBaseLayer.hasOwnProperty[layerOptions.label]) {\n                this.oldBaseLayer[layerOptions.label] = layerOptions.layer;\n                if (layerOptions.visible) { layerOptions.layer.addTo(this.map); }\n            }\n        }\n    }\n\n    private removeBaseMap(layerOptions: LayerOptions) {\n        if (this.oldBaseLayer.hasOwnProperty(layerOptions.label)) {\n            this.map.removeLayer(this.oldBaseLayer[layerOptions.label]);\n            delete this.oldBaseLayer[layerOptions.label];\n        }\n    }\n\n    private updateLayerControl() {\n        if (this.map) {\n            if (this.layerControl) {\n                this.map.removeControl(this.layerControl);\n            }\n            if (this.layerControlOptions\n                && (Object.keys(this.oldBaseLayer).length > 1 || Object.keys(this.oldOverlayLayer).length > 0)) {\n                this.layerControl =\n                    L.control.layers(this.oldBaseLayer, this.oldOverlayLayer, this.layerControlOptions).addTo(this.map);\n            }\n        }\n    }\n\n    private updateZoomControl() {\n        if (this.zoomControl) { this.map.removeControl(this.zoomControl); }\n        if (this.zoomControlOptions) {\n            this.zoomControl = L.control.zoom(this.zoomControlOptions).addTo(this.map);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CachingInterceptor.html":{"url":"injectables/CachingInterceptor.html","title":"injectable - CachingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CachingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/caching/src/lib/cache-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: HttpCache, ongoingCache: OnGoingHttpCache)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/caching/src/lib/cache-interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                    HttpCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ongoingCache\n                                                  \n                                                        \n                                                                    OnGoingHttpCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, metadata: HttpServiceMetadata, next: HttpServiceHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/cache-interceptor.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        metadata\n                                                        \n                                                                    HttpServiceMetadata\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpServiceHandler\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/share';\n\nimport { HttpEvent, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpServiceHandler, HttpServiceInterceptor, HttpServiceMetadata } from '@helgoland/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { HttpCache, OnGoingHttpCache } from './model';\n\n@Injectable()\nexport class CachingInterceptor implements HttpServiceInterceptor {\n    constructor(\n        protected cache: HttpCache,\n        protected ongoingCache: OnGoingHttpCache\n    ) { }\n\n    public intercept(\n        req: HttpRequest, metadata: HttpServiceMetadata, next: HttpServiceHandler\n    ): Observable> {\n\n        // Before doing anything, it's important to only cache GET requests.\n        // Skip this interceptor if the request method isn't GET.\n        if (req.method !== 'GET') {\n            return next.handle(req, metadata);\n        }\n\n        if (metadata.forceUpdate) {\n            return next.handle(req, metadata);\n        }\n\n        // First, check the cache to see if this request exists.\n        const cachedResponse = this.cache.get(req);\n        if (cachedResponse) {\n            // A cached response exists. Serve it instead of forwarding\n            // the request to the next handler.\n            return Observable.of(cachedResponse);\n        }\n\n        // check if the same request is still in the pipe\n        if (this.ongoingCache.has(req)) {\n            return this.ongoingCache.observe(req);\n        } else {\n            // No cached response exists. Go to the network, and cache\n            // the response when it arrives.\n            return new Observable>((observer: Observer>) => {\n                const share = next.handle(req, metadata).share();\n                share.subscribe((res) => {\n                    if (res instanceof HttpResponse) {\n                        this.cache.put(req, metadata.expirationTime, res);\n                        this.ongoingCache.clear(req);\n                        observer.next(res);\n                        observer.complete();\n                    }\n                }, (error) => {\n                    observer.error(error);\n                    observer.complete();\n                });\n                this.ongoingCache.set(req, share);\n            });\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/category.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\n\nexport interface Category extends Parameter {\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CollectionMetadata.html":{"url":"interfaces/CollectionMetadata.html","title":"interface - CollectionMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CollectionMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/response.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        limit\n                                \n                                \n                                        offset\n                                \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Id {\n    id: string;\n    href: string;\n}\n\nexport interface EventingEvent extends Id {\n    label: string;\n    eventType: Id;\n    notificationLevel: Id;\n    publication: Id;\n    subscription: Id;\n    timestamp: number;\n    timestampCreated: number;\n    data?: {\n        eventTrigger: {\n            code: number;\n            label: string;\n            threshold: number;\n            thresholdUnit: string;\n        }\n        previousTimestamp: number;\n        previousValue: number;\n        unit: string;\n        value: number;\n    };\n}\n\nexport interface EventingEventResults {\n    data: EventingEvent[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingSubscription extends Id {\n    deliveryMethod: Id;\n    template: EventingTemplate;\n    user: Id;\n}\n\nexport interface EventingSubscriptionResults {\n    data: EventingSubscription[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingTemplate extends Id {\n    label: string;\n    publication: Id;\n}\n\nexport interface CollectionMetadata {\n    limit: number;\n    offset: number;\n    total: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorSelectorComponent.html":{"url":"components/ColorSelectorComponent.html","title":"component - ColorSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/modification/src/lib/color-selector/color-selector.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-color-selector\n            \n\n\n\n\n            \n                templateUrl\n                ./color-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                colorList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onColorChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/color-selector/color-selector.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        colorList\n                    \n                    \n                            \n                            Type:    string[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/color-selector/color-selector.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onColorChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/color-selector/color-selector.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'n52-color-selector',\n    templateUrl: './color-selector.component.html'\n})\nexport class ColorSelectorComponent {\n\n    @Input()\n    public color: string;\n\n    @Input()\n    public colorList: string[];\n\n    @Output()\n    public onColorChange: EventEmitter = new EventEmitter();\n\n}\n\n    \n\n    \n        \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ColorService.html":{"url":"injectables/ColorService.html","title":"injectable - ColorService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ColorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/color/color.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getColor\n                            \n                            \n                                    Private\n                                getRandomColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getColor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/color/color.service.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getRandomColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRandomColor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/color/color.service.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ColorService {\n\n    public getColor(): string {\n        return this.getRandomColor();\n    }\n\n    private getRandomColor(): string {\n        const letters = '0123456789ABCDEF';\n        let color = '#';\n        for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/D3GraphOptions.html":{"url":"interfaces/D3GraphOptions.html","title":"interface - D3GraphOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  D3GraphOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/d3/src/lib/model/d3-graph-options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        axisType\n                                \n                                \n                                        dotted\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        axisType\n                                    \n                                \n                                \n                                    \n                                        axisType:     D3AxisType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     D3AxisType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dotted\n                                    \n                                \n                                \n                                    \n                                        dotted:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { D3AxisType } from './d3-axis-type';\n\nexport interface D3GraphOptions {\n    axisType: D3AxisType;\n    dotted: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/D3OverviewTimeseriesGraphComponent.html":{"url":"components/D3OverviewTimeseriesGraphComponent.html","title":"component - D3OverviewTimeseriesGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  D3OverviewTimeseriesGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n                AfterViewInit\n                HasLoadableContent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-d3-overview-timeseries-graph\n            \n\n            \n                styleUrls\n                d3-overview-timeseries-graph.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./d3-overview-timeseries-graph.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Public\n                                isContentLoading\n                            \n                            \n                                    Public\n                                overviewTimespan\n                            \n                            \n                                    Public\n                                timespan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateOverviewRange\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                onGraphLoading\n                            \n                            \n                                    Public\n                                timeSpanChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                datasetIds\n                            \n                            \n                                datasetOptions\n                            \n                            \n                                graphOptions\n                            \n                            \n                                rangefactor\n                            \n                            \n                                timeInterval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onContentLoading\n                            \n                            \n                                onLoading\n                            \n                            \n                                onTimespanChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(timeSrvc: Time, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeSrvc\n                                                  \n                                                        \n                                                                    Time\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        datasetIds\n                    \n                    \n                            \n                            Type:    string[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        datasetOptions\n                    \n                    \n                            \n                            Type:    Map\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        graphOptions\n                    \n                    \n                            \n                            Type:    D3PlotOptions\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rangefactor\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        timeInterval\n                    \n                    \n                            \n                            Type:    TimeInterval\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onContentLoading\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLoading\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onTimespanChanged\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            calculateOverviewRange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calculateOverviewRange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onGraphLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onGraphLoading(loading: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeSpanChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        timeSpanChanged(timespan: Timespan)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        init:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isContentLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isContentLoading:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            overviewTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        overviewTimespan:     Timespan\n\n                    \n                \n                    \n                        \n                            Type :     Timespan\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timespan:     Timespan\n\n                    \n                \n                    \n                        \n                            Type :     Timespan\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { DatasetOptions, HasLoadableContent, Mixin, Time, TimeInterval, Timespan } from '@helgoland/core';\n\nimport { D3PlotOptions } from '../model/d3-plot-options';\n\n@Component({\n    selector: 'n52-d3-overview-timeseries-graph',\n    templateUrl: './d3-overview-timeseries-graph.component.html',\n    styleUrls: ['./d3-overview-timeseries-graph.component.scss']\n})\n@Mixin([HasLoadableContent])\nexport class D3OverviewTimeseriesGraphComponent implements OnChanges, AfterViewInit, HasLoadableContent {\n\n    @Input()\n    public datasetIds: string[];\n\n    @Input()\n    public datasetOptions: Map;\n\n    @Input()\n    public graphOptions: D3PlotOptions;\n\n    @Input()\n    public timeInterval: TimeInterval;\n\n    @Input()\n    public rangefactor: number;\n\n    @Output()\n    public onTimespanChanged: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onLoading: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onContentLoading: EventEmitter = new EventEmitter();\n\n    public isContentLoading: (loading: boolean) => void;\n\n    public overviewTimespan: Timespan;\n    public timespan: Timespan;\n\n    private init = false;\n\n    constructor(\n        protected timeSrvc: Time,\n        protected cd: ChangeDetectorRef\n    ) {\n        if (this.graphOptions) {\n            this.graphOptions.overview = true;\n        } else {\n            this.graphOptions = { overview: true };\n        }\n    }\n\n    public ngAfterViewInit(): void {\n        this.rangefactor = this.rangefactor || 1;\n        this.calculateOverviewRange();\n        this.init = true;\n        this.cd.detectChanges();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.timeInterval && this.init) {\n            this.calculateOverviewRange();\n        }\n    }\n\n    public timeSpanChanged(timespan: Timespan) {\n        this.onTimespanChanged.emit(timespan);\n    }\n\n    public onGraphLoading(loading: boolean) {\n        this.isContentLoading(loading);\n    }\n\n    private calculateOverviewRange() {\n        const timespan = this.timeSrvc.createTimespanOfInterval(this.timeInterval);\n        this.timespan = timespan;\n        this.overviewTimespan = this.timeSrvc.getBufferedTimespan(timespan, this.rangefactor);\n    }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'D3OverviewTimeseriesGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/D3PlotOptions.html":{"url":"interfaces/D3PlotOptions.html","title":"interface - D3PlotOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  D3PlotOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/d3/src/lib/model/d3-plot-options.ts\n        \n\n            \n                Description\n            \n            \n                Plot options for D3 component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        generalizeAllways\n                                \n                                \n                                            Optional\n                                        grid\n                                \n                                \n                                            Optional\n                                        hoverable\n                                \n                                \n                                            Optional\n                                        overview\n                                \n                                \n                                            Optional\n                                        showReferenceValues\n                                \n                                \n                                            Optional\n                                        togglePanZoom\n                                \n                                \n                                            Optional\n                                        yaxis\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        generalizeAllways\n                                    \n                                \n                                \n                                    \n                                        generalizeAllways:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    requests the dataset data generalized\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grid\n                                    \n                                \n                                \n                                    \n                                        grid:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    show or hide grid lines inside plot\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hoverable\n                                    \n                                \n                                \n                                    \n                                        hoverable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    show or hide lines with values when hovering with mouse\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overview\n                                    \n                                \n                                \n                                    \n                                        overview:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    indicating if component should build overview diagram or not\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showReferenceValues\n                                    \n                                \n                                \n                                    \n                                        showReferenceValues:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    show reference values for a graph\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        togglePanZoom\n                                    \n                                \n                                \n                                    \n                                        togglePanZoom:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    toggle panning (true) and zooming (false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yaxis\n                                    \n                                \n                                \n                                    \n                                        yaxis:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    show or hide y axis\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface D3PlotOptions {\n\n    /**\n     * show reference values for a graph\n     *\n     * @type {boolean}\n     * @memberof D3PlotOptions\n     */\n    showReferenceValues?: boolean;\n\n    /**\n     * requests the dataset data generalized\n     *\n     * @type {boolean}\n     * @memberof D3PlotOptions\n     */\n    generalizeAllways?: boolean;\n\n    /**\n     * toggle panning (true) and zooming (false)\n     *\n     * @type {boolean}\n     * @memberof D3PlotOptions\n     */\n    togglePanZoom?: boolean;\n\n    /**\n     * show or hide y axis\n     *\n     * @type {boolean}\n     * @memberof D3PlotOptions\n     */\n    yaxis?: boolean;\n\n    /**\n     * show or hide grid lines inside plot\n     *\n     * @type {boolean}\n     * @memberof D3PlotOptions\n     */\n    grid?: boolean;\n\n    /**\n     * show or hide lines with values when hovering with mouse\n     *\n     * @type {boolean}\n     * @memberof D3PlotOptions\n     */\n    hoverable?: boolean;\n\n    /**\n     * indicating if component should build overview diagram or not\n     *\n     * @type {boolean}\n     * @memberof D3PlotOptions\n     */\n    overview?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/D3SelectionRange.html":{"url":"classes/D3SelectionRange.html","title":"class - D3SelectionRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  D3SelectionRange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/d3/src/lib/model/d3-selection-range.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                from\n                            \n                            \n                                    Public\n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            from\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        from:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/model/d3-selection-range.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            to\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        to:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/model/d3-selection-range.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class D3SelectionRange {\n    public from: number;\n    public to: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        referenceValues\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        referenceValues\n                                    \n                                \n                                \n                                    \n                                        referenceValues:     ReferenceValues\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ReferenceValues\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IDataEntry { }\n\nexport interface Data {\n    values: T[];\n    referenceValues: ReferenceValues;\n}\n\nexport class ReferenceValues {\n    [key: string]: T[];\n}\n\nexport interface TimeValueEntry extends IDataEntry {\n    timestamp: number;\n    value: number;\n}\n\nexport interface LocatedTimeValueEntry extends TimeValueEntry {\n    geometry: GeoJSON.Point;\n}\n\nexport interface ProfileDataEntry extends IDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n}\n\nexport interface LocatedProfileDataEntry extends ProfileDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n    geometry: GeoJSON.GeoJsonObject;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataConst.html":{"url":"interfaces/DataConst.html","title":"interface - DataConst","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataConst\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/d3/src/lib/d3-timeseries-graph/d3-timeseries-graph.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    IDataset\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     Data<>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Data<>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    IterableDiffers,\n    Output,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    ColorService,\n    Data,\n    DatasetApiInterface,\n    DatasetOptions,\n    DatasetPresenterComponent,\n    IDataset,\n    InternalIdHandler,\n    MinMaxRange,\n    Time,\n    Timeseries,\n    Timespan,\n} from '@helgoland/core';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { D3PlotOptions } from '../model/d3-plot-options';\n\ninterface DataEntry {\n    yDiagCoord?: number;\n    timestamp?: number;\n    xDiagMin?: number;\n    xDiagMax?: number;\n    yDiagMin?: number;\n    yDiagMax?: number;\n    xDiagCoord?: number;\n}\n\ninterface HighlightDataset {\n    id: string;\n    change: boolean;\n}\n\ninterface YScale {\n    buffer: number;\n    yScale: d3.ScaleLinear;\n}\n\ninterface YRanges {\n    uom: string;\n    range: MinMaxRange;\n    zeroBased: boolean;\n    ids: string[];\n    first?: boolean;\n    yScale?: d3.ScaleLinear;\n    offset?: number;\n}\n\ninterface InternalDataEntry {\n    internalId: string;\n    color: string;\n    data: [number, number][];\n    points: {\n        fillColor: string\n    };\n    lines: {\n        lineWidth: number;\n        pointRadius: number;\n    };\n    bars: {\n        lineWidth: number;\n    };\n    axisOptions: {\n        uom: string;\n        label: string;\n        zeroBased: boolean;\n        yAxisRange: MinMaxRange;\n    };\n    visible: boolean;\n}\n\ninterface DataYRange {\n    uom: string;\n    range?: MinMaxRange;\n    id: string;\n    zeroBasedYAxis: boolean;\n}\n\ninterface DataConst extends IDataset {\n    data?: Data;\n}\n\n@Component({\n    selector: 'n52-d3-timeseries-graph',\n    templateUrl: './d3-timeseries-graph.component.html',\n    styleUrls: ['./d3-timeseries-graph.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class D3TimeseriesGraphComponent\n    extends DatasetPresenterComponent\n    implements AfterViewInit {\n\n    @Input()\n    // difference to timespan/timeInterval --> if brush, then this is the timespan of the main-diagram\n    public mainTimeInterval: Timespan;\n\n    @Output()\n    public onSelectId: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onContentLoading: EventEmitter = new EventEmitter();\n\n    @ViewChild('d3timeseries')\n    public d3Elem: ElementRef;\n\n    // set zoom limit --> can be adapted to needs\n    private config = {\n        time: {\n            zoomLimit: 10800000  // 3 hour ((3 * 3600) * 1000) limitation\n        }\n    };\n\n    private preparedData = Array(); // : DataSeries[]\n    private mousedownBrush: boolean;\n    private rawSvg: any; // d3.Selection;\n    private graph: any;\n    private graphBody: any;\n    private dragRect: any;\n    private dragRectG: any;\n    private xAxisRange: Timespan; // x domain range\n    private xAxisRangeOrigin: any; // x domain range\n    private xAxisRangePan: [number, number]; // x domain range\n    private yRangesEachUom: YRanges[]; // y array of objects containing ranges for each uom\n    private dataYranges: DataYRange[]; // y array of objects containing ranges of all datasets\n    private ypos: any; // y array of objects containing ranges of all datasets\n    private idxOfPos = 0;\n\n    private height: number;\n    private width: number;\n    private margin = {\n        top: 10,\n        right: 10,\n        bottom: 40,\n        left: 40\n    };\n    private maxLabelwidth = 0;\n    private xScaleBase: d3.ScaleLinear; // calculate diagram coord of x value\n    private yScaleBase: d3.ScaleLinear; // calculate diagram coord of y value\n    private background: any;\n    private focusG: any;\n    private highlightFocus: any;\n    private focuslabelTime: any;\n    private bufferSum: number;\n    private labelTimestamp: number[];\n\n    private dragging: boolean;\n    private dragStart: [number, number];\n    private dragCurrent: [number, number];\n\n    private draggingMove: boolean;\n    private dragMoveStart: [number, number];\n    private dragMoveRange: [number, number];\n\n    private addLineWidth = 2; // value added to linewidth\n\n    // default plot options\n    private plotOptions: D3PlotOptions = {\n        showReferenceValues: false,\n        generalizeAllways: true,\n        togglePanZoom: true,\n        hoverable: true,\n        grid: true,\n        yaxis: true,\n        overview: false\n    };\n\n    private datasetMap: Map = new Map();\n\n    private loadingCounter = 0;\n    private currentTimeId: string;\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time,\n        private colorService: ColorService\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc);\n    }\n\n    public ngAfterViewInit(): void {\n        this.currentTimeId = this.uuidv4();\n\n        this.rawSvg = d3.select(this.d3Elem.nativeElement)\n            .append('svg')\n            .attr('width', '100%')\n            .attr('height', '100%');\n\n        this.graph = this.rawSvg\n            .append('g')\n            .attr('transform', 'translate(' + (this.margin.left + this.maxLabelwidth) + ',' + this.margin.top + ')');\n\n        this.mousedownBrush = false;\n        this.dataYranges = [];\n        this.xAxisRangeOrigin = [];\n    }\n\n    public reloadData(): void {\n        // not implemented yet\n    }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getSingleTimeseries(id, url).subscribe(\n            (timeseries) => this.loadAddedDataset(timeseries),\n            (error) => {\n                this.api.getDataset(id, url).subscribe(\n                    (dataset) => this.loadAddedDataset(dataset),\n                );\n            }\n        );\n    }\n    protected removeDataset(internalId: string): void {\n        this.dataYranges = [];\n        this.xAxisRangeOrigin = [];\n        this.datasetMap.delete(internalId);\n        let spliceIdx = this.preparedData.findIndex((entry) => entry.internalId === internalId);\n        if (spliceIdx >= 0) {\n            this.preparedData.splice(spliceIdx, 1);\n            if (this.preparedData.length  {\n                    this.processData(entry);\n                });\n            }\n        }\n    }\n    protected setSelectedId(internalId: string): void {\n        const tsData = this.preparedData.find((e) => e.internalId === internalId);\n        if (!tsData.selected || tsData.selected === undefined) {\n            tsData.selected = true;\n            tsData.lines.lineWidth += this.addLineWidth;\n            tsData.lines.pointRadius += this.addLineWidth;\n            tsData.bars.lineWidth += this.addLineWidth;\n        }\n        this.plotGraph();\n    }\n    protected removeSelectedId(internalId: string): void {\n        const tsData = this.preparedData.find((e) => e.internalId === internalId);\n        if (tsData.selected || tsData.selected === undefined) {\n            tsData.selected = false;\n            tsData.lines.lineWidth -= this.addLineWidth;\n            tsData.lines.pointRadius -= this.addLineWidth;\n            tsData.bars.lineWidth -= this.addLineWidth;\n        }\n        this.plotGraph();\n    }\n    protected graphOptionsChanged(options: D3PlotOptions): void {\n\n        Object.assign(this.plotOptions, options);\n        if (this.rawSvg && this.yRangesEachUom) {\n            this.plotGraph();\n        }\n    }\n    protected datasetOptionsChanged(internalId: string, options: DatasetOptions, firstChange: boolean) {\n        if (!firstChange && this.datasetMap.has(internalId)) {\n            this.loadDataset(this.datasetMap.get(internalId));\n        }\n    }\n    protected timeIntervalChanges(): void {\n        this.datasetMap.forEach((dataset) => {\n            this.loadDataset(dataset);\n        });\n    }\n    protected onResize(): void {\n        this.plotGraph();\n    }\n\n    private changeTime(from: number, to: number) {\n        if (to - from (dataset.id, dataset.url, buffer,\n                {\n                    format: 'flot',\n                    expanded: this.plotOptions.showReferenceValues === true,\n                    generalize: this.plotOptions.generalizeAllways || datasetOptions.generalize\n                }\n            ).subscribe(\n                (result) => {\n                    this.datasetMap.get(dataset.internalId).data = result;\n                    this.prepareTsData(dataset).subscribe(() => {\n                    });\n                },\n                (error) => this.onError(error),\n                () => {\n                    this.onCompleteLoadingData();\n                }\n            );\n        }\n    }\n\n    private onCompleteLoadingData() {\n        this.loadingCounter--;\n        if (this.loadingCounter === 0) { this.isContentLoadingD3(false); }\n    }\n\n    /**\n     * Function to prepare each dataset for the graph and adding it to an array of datasets.\n     * @param dataset {IDataset} Object of the whole dataset\n     */\n    private prepareTsData(dataset: IDataset): Observable { // , data: Data\n        return Observable.create((observer: Observer) => {\n            const datasetIdx = this.preparedData.findIndex((e) => e.internalId === dataset.internalId);\n            const styles = this.datasetOptions.get(dataset.internalId);\n            const data = this.datasetMap.get(dataset.internalId).data;\n\n            // TODO: change uom for testing\n            // if (this.preparedData.length > 0) {\n            //     dataset.uom = 'mc';\n            // }\n\n            // generate random color, if color is not defined\n            if (styles.color === undefined) {\n                styles.color = this.colorService.getColor();\n            }\n\n\n            // end of check for datasets\n            const dataEntry: InternalDataEntry = {\n                internalId: dataset.internalId,\n                color: styles.color,\n                data: styles.visible ? data.values : [],\n                points: {\n                    fillColor: styles.color\n                },\n                lines: {\n                    lineWidth: styles.lineWidth,\n                    pointRadius: styles.pointRadius\n                },\n                bars: {\n                    lineWidth: styles.lineWidth\n                },\n                axisOptions: {\n                    uom: dataset.uom,\n                    label: dataset.label,\n                    zeroBased: styles.zeroBasedYAxis,\n                    yAxisRange: styles.yAxisRange\n                },\n                visible: styles.visible\n            };\n            // alternative linewWidth = this.plotOptions.selected.includes(dataset.uom)\n            if (this.selectedDatasetIds.indexOf(dataset.internalId) >= 0) {\n                dataEntry.lines.lineWidth += this.addLineWidth;\n                dataEntry.lines.pointRadius += this.addLineWidth;\n                dataEntry.bars.lineWidth += this.addLineWidth;\n            }\n\n            if (datasetIdx >= 0) {\n                this.preparedData[datasetIdx] = dataEntry;\n            } else {\n                this.preparedData.push(dataEntry);\n            }\n            this.addReferenceValueData(dataset.internalId, styles, data, dataset.uom);\n            this.processData(dataEntry);\n            this.plotGraph();\n        });\n    }\n\n    /**\n     * Function to add referencevaluedata to the dataset (e.g. mean).\n     * @param internalId {String} String with the id of a dataset\n     * @param styles {DatasetOptions} Object containing information for dataset styling\n     * @param data {Data} Array of Arrays containing the measurement-data of the dataset\n     * @param uomO {String} String with the uom of a dataset\n     */\n    private addReferenceValueData(internalId: string, styles: DatasetOptions, data: Data, uomO: string) {\n        this.preparedData = this.preparedData.filter((entry) => {\n            return !entry.internalId.startsWith('ref' + internalId);\n        });\n        if (this.plotOptions.showReferenceValues) {\n            styles.showReferenceValues.forEach((refValue) => {\n                const refDataEntry = {\n                    internalId: 'ref' + internalId + refValue.id,\n                    color: refValue.color,\n                    data: data.referenceValues[refValue.id],\n                    points: {\n                        fillColor: refValue.color\n                    },\n                    lines: {\n                        lineWidth: 1\n                    },\n                    axisOptions: {\n                        uom: uomO\n                    }\n                };\n                this.preparedData.push(refDataEntry);\n            });\n        }\n    }\n\n    /**\n     * Function that processes the data to calculate y axis range of each dataset.\n     * @param dataEntry {DataEntry} Object containing dataset related data.\n     * @param internalId {String} String with the ID of a dataset.\n     */\n    private processData(dataEntry: InternalDataEntry) {\n        let calculatedRange: MinMaxRange;\n        let predefinedRange = dataEntry.axisOptions.yAxisRange;\n\n        // get min and max value of data\n        const dataExtent = d3.extent(dataEntry.data, (datum, index, array) => {\n            return datum[1]; // datum[0] = timestamp -- datum[1] = value\n        });\n\n        // let outOfrange = false;\n        let setDataExtent = false;\n\n        // calculate out of predefined range\n        if (predefinedRange && !this.graphOptions.overview) {\n            if (predefinedRange.min > predefinedRange.max) {\n                calculatedRange = { min: predefinedRange.max, max: predefinedRange.min };\n            } else {\n                calculatedRange = predefinedRange;\n            }\n            if (predefinedRange.min > dataExtent[1] || predefinedRange.max = 0) {\n                calculatedRange.min = 0;\n            }\n        }\n\n        const newDatasetIdx = this.preparedData.findIndex((e) => e.internalId === dataEntry.internalId);\n\n        // set range, uom and id for each dataset\n        if (dataEntry.visible) {\n            this.dataYranges[newDatasetIdx] = {\n                uom: dataEntry.axisOptions.uom,\n                id: dataEntry.internalId,\n                zeroBasedYAxis: dataEntry.axisOptions.zeroBased\n            };\n            if (isFinite(calculatedRange.min) && isFinite(calculatedRange.max)) {\n                this.dataYranges[newDatasetIdx].range = calculatedRange;\n            }\n        } else {\n            this.dataYranges[newDatasetIdx] = null;\n        }\n\n        // set range and array of IDs for each uom to generate y-axis later on\n        this.yRangesEachUom = [];\n        this.dataYranges.forEach((obj) => {\n            if (obj !== null) {\n                let idx = this.yRangesEachUom.findIndex((e) => e.uom === obj.uom);\n                let yrangeObj: YRanges = {\n                    uom: obj.uom,\n                    range: obj.range,\n                    ids: [obj.id],\n                    zeroBased: obj.zeroBasedYAxis\n                };\n\n                if (idx >= 0) {\n                    if (this.yRangesEachUom[idx].range) {\n                        if (obj.range) {\n                            if (this.yRangesEachUom[idx].range.min > obj.range.min && !isNaN(obj.range.min)) {\n                                this.yRangesEachUom[idx].range.min = obj.range.min;\n                            }\n                            if (this.yRangesEachUom[idx].range.max  {\n            entry.first = (this.yScaleBase === null);\n            entry.offset = this.bufferSum;\n\n            let yAxisResult = this.drawYaxis(entry);\n            if (this.yScaleBase === null) {\n                this.yScaleBase = yAxisResult.yScale;\n            } else {\n                this.bufferSum = yAxisResult.buffer;\n            }\n            entry.yScale = yAxisResult.yScale;\n        });\n\n        if (!this.yScaleBase) {\n            return;\n        }\n\n        // draw x and y axis\n        this.drawXaxis(this.bufferSum);\n        this.preparedData.forEach((entry) => {\n            this.drawGraphLine(entry);\n        });\n\n        // #####################################################\n        // create background rect\n        if (!this.plotOptions.overview) {\n            // execute when it is not an overview diagram\n            this.background = this.graph.append('svg:rect')\n                .attr('width', this.width - this.bufferSum)\n                .attr('height', this.height)\n                .attr('fill', 'none')\n                .attr('stroke', 'none')\n                .attr('pointer-events', 'all')\n                .attr('transform', 'translate(' + this.bufferSum + ', 0)');\n\n            // mouse events hovering\n            if (this.plotOptions.hoverable) {\n                this.background\n                    .on('mousemove.focus', this.mousemoveHandler)\n                    .on('mouseout.focus', this.mouseoutHandler);\n\n                // line inside graph\n                this.focusG = this.graph.append('g');\n                this.highlightFocus = this.focusG.append('svg:line')\n                    .attr('class', 'mouse-focus-line')\n                    .attr('x2', '0')\n                    .attr('y2', '0')\n                    .attr('x1', '0')\n                    .attr('y1', '0')\n                    .style('stroke', 'black')\n                    .style('stroke-width', '1px');\n\n                this.preparedData.forEach((entry) => {\n                    // label inside graph\n                    entry.focusLabelRect = this.focusG.append('svg:rect')\n                        .attr('class', 'mouse-focus-label')\n                        .style('fill', 'white')\n                        .style('stroke', 'none')\n                        .style('pointer-events', 'none');\n                    entry.focusLabel = this.focusG.append('svg:text')\n                        .attr('class', 'mouse-focus-label')\n                        .style('pointer-events', 'none')\n                        .style('fill', entry.color)\n                        .style('font-weight', 'lighter');\n\n                    this.focuslabelTime = this.focusG.append('svg:text')\n                        .style('pointer-events', 'none')\n                        .attr('class', 'mouse-focus-time');\n                });\n            }\n\n            if (this.plotOptions.togglePanZoom === false) {\n                this.background\n                    .call(d3.zoom()\n                        .on('start', this.zoomStartHandler)\n                        .on('zoom', this.zoomHandler)\n                        .on('end', this.zoomEndHandler)\n                    );\n            } else {\n                this.background\n                    .call(d3.drag()\n                        .on('start', this.panStartHandler)\n                        .on('drag', this.panMoveHandler)\n                        .on('end', this.panEndHandler));\n            }\n        } else {\n            // execute when it is overview diagram\n            let interval = this.getXDomainByTimestamp();\n            let overviewTimespanInterval = [interval[0], interval[1]];\n\n            // create brush\n            let brush = d3.brushX()\n                .extent([[0, 0], [this.width, this.height]])\n                .on('end', () => {\n                    // on mouseclick change time after brush was moved\n                    if (this.mousedownBrush) {\n                        let timeByCoord = this.getTimestampByCoord(d3.event.selection[0], d3.event.selection[1]);\n                        this.changeTime(timeByCoord[0], timeByCoord[1]);\n                    }\n                    this.mousedownBrush = false;\n                });\n\n            // add brush to svg\n            this.background = this.graph.append('g')\n                .attr('width', this.width)\n                .attr('height', this.height)\n                .attr('pointer-events', 'all')\n                .attr('class', 'brush')\n                .call(brush)\n                .call(brush.move, overviewTimespanInterval);\n\n            /**\n             * add event to selection to prevent unnecessary re-rendering of brush\n             * add style of brush selection here\n             * e.g. 'fill' for color,\n             * 'stroke' for borderline-color,\n             * 'stroke-dasharray' for customizing borderline-style\n             */\n            this.background.selectAll('.selection')\n                .attr('stroke', 'none')\n                .on('mousedown', () => {\n                    this.mousedownBrush = true;\n                });\n\n            // do not allow clear selection\n            this.background.selectAll('.overlay')\n                .remove();\n\n            // add event to resizing handle to allow change time on resize\n            this.background.selectAll('.handle')\n                .style('fill', 'red')\n                .style('opacity', 0.3)\n                .attr('stroke', 'none')\n                .on('mousedown', () => {\n                    this.mousedownBrush = true;\n                });\n        }\n    }\n\n    /**\n     * Function that calculates and returns the x diagram coordinate for the brush range\n     * for the overview diagram by the selected time interval of the main diagram.\n     * Calculate to get brush extent when main diagram time interval changes.\n     */\n    private getXDomainByTimestamp() {\n        /**\n         * calculate range of brush with timestamp and not diagram coordinates\n         * formula:\n         * brush_min =\n         * (overview_width / (overview_max - overview_min)) * (brush_min - overview_min)\n         * brus_max =\n         * (overview_width / (overview_max - overview_min)) * (brush_max - overview_min)\n         */\n\n        let minOverviewTimeInterval = this.timespan.from;\n        let maxOverviewTimeInterval = this.timespan.to;\n        let minDiagramTimestamp = this.mainTimeInterval.from;\n        let maxDiagramTimestamp = this.mainTimeInterval.to;\n        let diagramWidth = this.width;\n\n        let diffOverviewTimeInterval = maxOverviewTimeInterval - minOverviewTimeInterval;\n        let divOverviewTimeWidth = diagramWidth / diffOverviewTimeInterval;\n        let minCalcBrush = divOverviewTimeWidth * (minDiagramTimestamp - minOverviewTimeInterval);\n        let maxCalcBrush = divOverviewTimeWidth * (maxDiagramTimestamp - minOverviewTimeInterval);\n\n        return [minCalcBrush, maxCalcBrush];\n    }\n\n    /**\n     * Function that calculates and returns the timestamp for the main diagram calculated\n     * by the selected coordinate of the brush range.\n     * @param minCalcBrush {Number} Number with the minimum coordinate of the selected brush range.\n     * @param maxCalcBrush {Number} Number with the maximum coordinate of the selected brush range.\n     */\n    private getTimestampByCoord(minCalcBrush, maxCalcBrush) {\n        /**\n         * calculate range of brush with timestamp and not diagram coordinates\n         * formula:\n         * minDiagramTimestamp =\n         * ((minCalcBrush / overview_width) * (overview_max - overview_min)) + overview_min\n         * maxDiagramTimestamp =\n         * ((maxCalcBrush / overview_width) * (overview_max - overview_min)) + overview_min\n         */\n\n        let minOverviewTimeInterval = this.timespan.from;\n        let maxOverviewTimeInterval = this.timespan.to;\n        let diagramWidth = this.width;\n\n        let diffOverviewTimeInterval = maxOverviewTimeInterval - minOverviewTimeInterval;\n        let minDiagramTimestamp = ((minCalcBrush / diagramWidth) * diffOverviewTimeInterval) + minOverviewTimeInterval;\n        let maxDiagramTimestamp = ((maxCalcBrush / diagramWidth) * diffOverviewTimeInterval) + minOverviewTimeInterval;\n\n        return [minDiagramTimestamp, maxDiagramTimestamp];\n    }\n\n    /**\n     * Function that returns the tickvalues for the x axis related to the timestep.\n     * @param time {String} String with the information how the time should be visualized in the x axis.\n     * @param range {Array} Array containing the minimum and maximum range.\n     * @param span {Number} Number with the ticksize for the axis generation.\n     */\n    private timeTickValues(time: String, range: any, span: number) {\n        if (time === 'minly') {\n            return d3.timeMinutes(range, new Date(this.xAxisRange.to), span);\n        }\n        if (time === 'hourly') {\n            return d3.timeHours(range, new Date(this.xAxisRange.to), span);\n        }\n        if (time === 'daily') {\n            return d3.timeDay.range(range, new Date(this.xAxisRange.to), span);\n        }\n    }\n\n    /**\n     * Function that draws the x axis to the svg element.\n     * @param bufferXrange {Number} Number with the distance between left edge and the beginning of the graph.\n     */\n    private drawXaxis(bufferXrange: number) {\n        // range for x axis scale\n        this.xScaleBase = d3.scaleLinear()\n            .domain([this.xAxisRange.from, this.xAxisRange.to])\n            .range([bufferXrange, this.width]);\n\n        // calculate range for about 7 ticks on x axis\n        let calcTicks = (((this.xAxisRange.to - this.xAxisRange.from) / 1000) / 7);\n        let hourly = Math.ceil(calcTicks / 3600);\n        let daily = Math.ceil(calcTicks / (3600 * 48));\n\n        if ((calcTicks / 3600)  11) {\n            timeFormatString = '%d %b %H:%M';\n        }\n\n        if (hourly > 47) {\n            timeFormatString = '%d %B';\n            tickSize = (Math.max(1, Math.round(hourly / 12))) * 12;\n        }\n\n        // calculate minimum range dependent on tickSize for UTC // 7200000 (e.g. tickSize = 4 --> every 4 hours)\n        let minRange = this.xAxisRange.from + ((3600000 * tickSize) - (this.xAxisRange.from % (3600000 * tickSize)));\n        // minimum range for UTC+2\n        let minRangeGer = minRange + 3600000 * (tickSize / 2);\n        if ((minRange - 3600000 * (tickSize / 2)) >= this.xAxisRange.from) {\n            minRangeGer = minRange - 3600000 * (tickSize / 2);\n        }\n\n        // calculate tickvalues dependent on tickSize for UTC+2\n        let xAxisGen;\n        if (tickSize >= 1) {\n            xAxisGen = d3.axisBottom(this.xScaleBase)\n                .tickValues(this.timeTickValues(timeString, minRangeGer, tickSize))\n                .tickFormat((d) => {\n                    return d3.timeFormat(timeFormatString)(new Date(d.valueOf()));\n                });\n        } else {\n            timeString = 'minly';\n            xAxisGen = d3.axisBottom(this.xScaleBase)\n                .tickValues(this.timeTickValues(timeString, minRangeGer, 30))\n                .tickFormat((d) => {\n                    return d3.timeFormat(timeFormatString)(new Date(d.valueOf()));\n                });\n        }\n\n        // draw x axis\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(xAxisGen)\n            .selectAll('text')\n            .style('text-anchor', 'middle');\n\n        if (this.plotOptions.grid) {\n            // draw the x grid lines\n            this.graph.append('svg:g')\n                .attr('class', 'grid')\n                .attr('transform', 'translate(0,' + this.height + ')')\n                .call(xAxisGen\n                    .tickSize(-this.height)\n                    .tickFormat(() => '')\n                );\n        }\n\n        // draw upper axis as border\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .call(d3.axisTop(this.xScaleBase).ticks(0).tickSize(0));\n\n        // text label for the x axis\n        this.graph.append('text')\n            .attr('x', (this.width + bufferXrange) / 2)\n            .attr('y', this.height + this.margin.bottom - 5)\n            .style('text-anchor', 'middle')\n            .text('time');\n    }\n\n    /**\n     * Function to draw the y axis for each dataset.\n     * Each uom has its own axis.\n     * @param entry {DataEntry} Object containing a dataset.\n     */\n    private drawYaxis(entry): YScale {\n        let showAxis = (this.plotOptions.yaxis === undefined ? true : this.plotOptions.yaxis);\n        const range = this.getyAxisRange(entry.uom);\n\n        let yMin = range.min;\n        let yMax = range.max;\n\n        // range for y axis scale\n        const rangeOffset = (yMax - yMin) * 0.10;\n        const yScale = d3.scaleLinear()\n            .domain([yMin - rangeOffset, yMax + rangeOffset])\n            .range([this.height, 0]);\n\n        let yAxisGen = d3.axisLeft(yScale).ticks(5);\n        let buffer = 0;\n\n        // only if yAxis should not be visible\n        if (!showAxis) {\n            yAxisGen\n                .tickFormat(() => '')\n                .tickSize(0);\n        }\n\n        // draw y axis\n        const axis = this.graph.append('svg:g')\n            .attr('class', 'y axis')\n            .call(yAxisGen);\n\n        // only if yAxis should be visible\n        if (showAxis) {\n            // draw y axis label\n            const text = this.graph.append('text')\n                .attr('transform', 'rotate(-90)')\n                .attr('dy', '1em')\n                .style('text-anchor', 'middle')\n                .style('fill', 'black')\n                .text(entry.uom);\n\n            const axisWidth = axis.node().getBBox().width + 5 + this.getDimensions(text.node()).h;\n            // if yAxis should not be visible, buffer will be set to 0\n            buffer = (showAxis ? entry.offset + (axisWidth  {\n                    d3.select(k[0])\n                        .attr('fill', 'grey')\n                        .attr('opacity', 0.4);\n                })\n                .on('mouseout', (d, i, k) => {\n                    d3.select(k[0])\n                        .attr('fill', 'white')\n                        .attr('opacity', 0);\n                })\n                .on('mouseup', () => {\n                    this.highlightLine(entry.ids, entry.uom);\n                });\n\n            if (!entry.first) {\n                axisDiv\n                    .attr('x', entry.offset)\n                    .attr('y', 0);\n            } else {\n                axisDiv\n                    .attr('x', 0 - this.margin.left - this.maxLabelwidth)\n                    .attr('y', 0);\n            }\n\n        }\n\n        // draw the y grid lines\n        if (this.datasetIds.length === 1) {\n            this.graph.append('svg:g')\n                .attr('class', 'grid')\n                .call(d3.axisLeft(yScale)\n                    .ticks(5)\n                    .tickSize(-this.width)\n                    .tickFormat(() => '')\n                );\n        }\n\n        return {\n            buffer,\n            yScale\n        };\n    }\n\n    /**\n     * Function to set selected Ids that should be highlighted.\n     * @param ids {Array} Array of Strings containing the Ids.\n     * @param uom {String} String with the uom for the selected Ids\n     */\n    private highlightLine(ids, uom) {\n        let changeFalse: HighlightDataset[] = [];\n        let changeTrue: HighlightDataset[] = [];\n        ids.forEach((ID) => {\n            if (this.selectedDatasetIds.indexOf(ID) >= 0) {\n                changeFalse.push({ id: ID, change: false });\n            }\n            changeTrue.push({ id: ID, change: true });\n        });\n\n        let changeAll = true;\n        if (ids.length === changeFalse.length) {\n            this.changeSelectedIds(changeFalse, true);\n        } else {\n            this.changeSelectedIds(changeTrue, false);\n        }\n    }\n\n    /**\n     * Function that changes state of selected Ids.\n     */\n    private changeSelectedIds(toHighlightDataset: HighlightDataset[], change: boolean) {\n        if (change) {\n            toHighlightDataset.forEach((obj) => {\n                this.removeSelectedId(obj.id);\n                this.selectedDatasetIds.splice(this.selectedDatasetIds.findIndex((entry) => entry === obj.id), 1);\n            });\n        } else {\n            toHighlightDataset.forEach((obj) => {\n                if (this.selectedDatasetIds.indexOf(obj.id)  {\n            if (obj.uom === entry.axisOptions.uom) {\n                return true;\n            } // uom does exist in this.yRangesEachUom\n        });\n\n        if (entry.data.length > 0) {\n            let xScaleBase = this.xScaleBase;\n            if (getYaxisRange !== undefined) {\n                let yScaleBase = getYaxisRange.yScale;\n\n                // #####################################################\n                // create body to clip graph\n                // unique ID generated through the current time (current time when initialized)\n                let querySelectorClip = 'clip' + this.currentTimeId;\n\n                this.graph\n                    .append('svg:clipPath')\n                    .attr('id', querySelectorClip)\n                    .append('svg:rect')\n                    .attr('x', this.bufferSum)\n                    .attr('y', 0)\n                    .attr('width', this.width - this.bufferSum)\n                    .attr('height', this.height);\n\n                // draw grah line\n                this.graphBody = this.graph\n                    .append('g')\n                    .attr('clip-path', 'url(#' + querySelectorClip + ')');\n\n                // create graph line\n                let line = d3.line()\n                    .x((d) => {\n                        d.timestamp = d[0];\n                        const xDiagCoord = xScaleBase(d[0]);\n                        if (xDiagCoord !== NaN) {\n                            d.xDiagCoord = xDiagCoord;\n                            return xDiagCoord;\n                        }\n                    })\n                    .y((d) => {\n                        const yDiagCoord = yScaleBase(d[1]);\n                        if (yDiagCoord !== NaN) {\n                            d.yDiagCoord = yDiagCoord;\n                            return yDiagCoord;\n                        }\n                    })\n                    .curve(d3.curveLinear);\n\n                this.graphBody\n                    .append('svg:path')\n                    .datum(entry.data)\n                    .attr('class', 'line')\n                    .attr('fill', 'none')\n                    .attr('stroke', entry.color)\n                    .attr('stroke-width', entry.lines.lineWidth)\n                    .attr('d', line);\n\n                this.graphBody.selectAll('.dot')\n                    .data(entry.data.filter((d) => d))\n                    .enter().append('circle')\n                    .attr('class', 'dot')\n                    .attr('stroke', entry.color)\n                    .attr('fill', entry.color)\n                    .attr('cx', line.x())\n                    .attr('cy', line.y())\n                    .attr('r', entry.lines.pointRadius);\n            }\n        }\n    }\n\n    /**\n     * Function that shows labeling via mousmove.\n     */\n    private mousemoveHandler = () => {\n        const coords = d3.mouse(this.background.node());\n        this.ypos = [];\n        this.idxOfPos = 0;\n        this.labelTimestamp = [];\n        this.preparedData.forEach((entry, entryIdx) => {\n            const idx = this.getItemForX(coords[0] + this.bufferSum, entry.data);\n            this.showDiagramIndicator(entry, idx, coords[0], entryIdx);\n        });\n        // focus do not overlap each other\n        if (this.ypos !== undefined) {\n            let firstLabel = [];\n            // only push one of the pairs of objects (rectangle and label)\n            this.ypos.forEach((e, i) => {\n                if (i % 2 === 0) {\n                    firstLabel.push(e);\n                }\n            });\n            let yPos = firstLabel.sort((a, b) => a.y - b.y);\n            yPos.forEach((p, i) => {\n                if (i > 0) {\n                    let last = yPos[i - 1].y;\n                    yPos[i].off = Math.max(0, (last + 30) - yPos[i].y);\n                    yPos[i].y += yPos[i].off;\n                }\n            });\n            yPos.sort((a, b) => a.idx - b.idx);\n\n            let c1 = 0;\n            let c2 = 0;\n\n            // d3.selectAll('.mouse-focus-label')\n            d3.selectAll('.focus-visibility')\n                .attr('transform', (d, i) => {\n                    // pairs of 2 objects (rectangle (equal) and label (odd))\n                    if (i > 0) {\n                        c1 = (i - 1) % 2;\n                    }\n                    c2 += c1;\n                    if (yPos[c2] && yPos[c2].off) {\n                        return 'translate(0,' + (5 + yPos[c2].off) + ')';\n                    }\n                });\n        }\n    }\n\n    /**\n     * Function that hides the labeling inside the graph.\n     */\n    private mouseoutHandler = () => {\n        this.hideDiagramIndicator();\n    }\n\n    /**\n     * Function starting the drag handling for the diagram.\n     */\n    private panStartHandler = () => {\n        this.draggingMove = false;\n        this.dragMoveStart = d3.event.x;\n        this.dragMoveRange = [this.xAxisRange.from, this.xAxisRange.to];\n    }\n\n    /**\n     * Function that controlls the panning (dragging) of the graph.\n     */\n    private panMoveHandler = () => {\n        this.draggingMove = true;\n        if (this.dragMoveStart && this.draggingMove) {\n            let diff = -(d3.event.x - d3.event.subject.x);\n            let amountTimestamp = this.dragMoveRange[1] - this.dragMoveRange[0];\n            let ratioTimestampDiagCoord = amountTimestamp / this.width;\n            let newTimeMin = this.dragMoveRange[0] + (ratioTimestampDiagCoord * diff);\n            let newTimeMax = this.dragMoveRange[1] + (ratioTimestampDiagCoord * diff);\n\n            this.xAxisRangePan = [newTimeMin, newTimeMax];\n            this.timespan = { from: this.xAxisRangePan[0], to: this.xAxisRangePan[1] };\n            this.plotGraph();\n        }\n    }\n\n    /**\n     * Function that ends the dragging control.\n     */\n    private panEndHandler = () => {\n        this.changeTime(this.xAxisRangePan[0], this.xAxisRangePan[1]);\n        this.plotGraph();\n        this.dragMoveStart = null;\n        this.draggingMove = false;\n    }\n\n    /**\n     * Function that starts the zoom handling.\n     */\n    private zoomStartHandler = () => {\n        this.dragging = false;\n        this.dragStart = d3.mouse(this.background.node());\n        this.xAxisRangeOrigin.push([this.xAxisRange.from, this.xAxisRange.to]);\n    }\n\n    /**\n     * Function that draws a rectangle when zoom is started and the mouse is moving.\n     */\n    private zoomHandler = () => {\n        this.dragging = true;\n        this.drawDragRectangle();\n    }\n\n    /**\n     * Function that ends the zoom handling and calculates the via zoom selected time interval.\n     */\n    private zoomEndHandler = () => {\n        if (!this.dragStart || !this.dragging) {\n            if (this.xAxisRangeOrigin[0]) {\n                // back to origin range (from - to)\n                this.changeTime(this.xAxisRangeOrigin[0][0], this.xAxisRangeOrigin[0][1]);\n                this.xAxisRangeOrigin = [];\n                this.plotGraph();\n            }\n        } else {\n            let xDomainRange;\n            if (this.dragStart[0]  {\n            domMinArr.push(entry.data.find((elem, index, array) => {\n                if (elem.xDiagCoord) {\n                    if (elem.xDiagCoord >= start) {\n                        return array[index];\n                    }\n                }\n            }));\n            domMaxArr.push(entry.data.find((elem, index, array) => {\n                if (elem.xDiagCoord >= end) {\n                    return array[index];\n                }\n            }));\n        });\n\n        for (let i = 0; i  {\n            return d[0];\n        }).left;\n        return bisectDate(data, index);\n    }\n\n    /**\n     * Function that disables the labeling.\n     */\n    private hideDiagramIndicator() {\n        this.focusG.style('visibility', 'hidden');\n        d3.selectAll('.focus-visibility')\n            .attr('visibility', 'hidden');\n    }\n\n    /**\n     * Function that enables the lableing of each dataset entry.\n     * @param entry {DataEntry} Object containing the dataset.\n     * @param idx {Number} Number with the position of the dataset entry in the data array.\n     * @param xCoordMouse {Number} Number of the x coordinate of the mouse.\n     * @param entryIdx {Number} Number of the index of the entry.\n     */\n    private showDiagramIndicator = (entry, idx: number, xCoordMouse: number, entryIdx: number) => {\n        const item = entry.data[idx];\n        if (item !== undefined) {\n            // create line where mouse is\n            this.focusG.style('visibility', 'visible');\n            // show label if data available for time\n            this.chVisLabel(entry, true);\n\n            let onLeftSide = false;\n            if ((this.background.node().getBBox().width + this.bufferSum) / 2 > item.xDiagCoord) { onLeftSide = true; }\n\n            let labelBuffer = ((this.timespan.from / (this.timespan.to - this.timespan.from)) * 0.0001)\n                * ((this.timespan.from / (this.timespan.to - this.timespan.from)) * 0.0001);\n\n            labelBuffer = Math.max(4, labelBuffer);\n\n            this.showLabelValues(entry, item, onLeftSide);\n            this.showTimeIndicatorLabel(item, onLeftSide, entryIdx);\n\n            if ((xCoordMouse) > (item.xDiagCoord + labelBuffer) || (xCoordMouse) = xCoordMouse) {\n                    this.showLabelValues(entry, entry.data[idx - 1], onLeftSide);\n                    this.showTimeIndicatorLabel(item, onLeftSide, entryIdx);\n\n                    this.chVisLabel(entry, true);\n                }\n            }\n        } else {\n            // hide label if no data available for time\n            this.chVisLabel(entry, false);\n        }\n    }\n\n    /**\n     * Function to change visibility of label and white rectangle inside graph (next to mouse-cursor line).\n     * @param entry {DataEntry} Object containing the dataset.\n     * @param visible {Boolean} Boolean giving information about visibility of a label.\n     */\n    private chVisLabel(entry, visible: boolean) {\n        if (visible) {\n            entry.focusLabel\n                .attr('visibility', 'visible')\n                .attr('class', 'focus-visibility');\n            entry.focusLabelRect\n                .attr('visibility', 'visible')\n                .attr('class', 'focus-visibility');\n        } else {\n            entry.focusLabel\n                .attr('visibility', 'hidden');\n            entry.focusLabelRect\n                .attr('visibility', 'hidden');\n        }\n    }\n\n    /**\n     * Function to show the labeling inside the graph.\n     * @param entry {DataEntry} Object containg the dataset.\n     * @param item {DataEntry} Object of the entry in the dataset.\n     * @param onLeftSide {Boolean} Boolean giving information if the mouse is on left side of the diagram.\n     */\n    private showLabelValues(entry, item: DataEntry, onLeftSide: boolean) {\n        let id = 1;\n        if (entry.focusLabel) {\n            entry.focusLabel.text(item[id] + (entry.axisOptions.uom ? entry.axisOptions.uom : ''));\n            const entryX = onLeftSide ?\n                item.xDiagCoord + 4 : item.xDiagCoord - this.getDimensions(entry.focusLabel.node()).w + 4;\n            entry.focusLabel\n                .attr('x', entryX)\n                .attr('y', item.yDiagCoord);\n            entry.focusLabelRect\n                .attr('x', entryX)\n                .attr('y', item.yDiagCoord - this.getDimensions(entry.focusLabel.node()).h + 3)\n                .attr('width', this.getDimensions(entry.focusLabel.node()).w)\n                .attr('height', this.getDimensions(entry.focusLabel.node()).h);\n            this.ypos.push({ idx: this.idxOfPos++, y: item.yDiagCoord, off: 0 });\n        }\n    }\n\n    /**\n     * Function to show the time labeling inside the graph.\n     * @param item {DataEntry} Object of the entry in the dataset.\n     * @param onLeftSide {Boolean} Boolean giving information if the mouse is on left side of the diagram.\n     * @param entryIdx {Number} Number of the index of the entry.\n     */\n    private showTimeIndicatorLabel(item: DataEntry, onLeftSide: boolean, entryIdx: number) {\n        // timestamp is the time where the mouse-cursor is\n        this.labelTimestamp[entryIdx] = item.timestamp;\n        let min = d3.min(this.labelTimestamp);\n        let idxOfMin = this.labelTimestamp.findIndex((elem) => elem === min);\n        let right = item.xDiagCoord + 2;\n        let left = item.xDiagCoord - this.getDimensions(this.focuslabelTime.node()).w - 2;\n        this.focuslabelTime.text(moment(this.labelTimestamp[idxOfMin]).format('DD.MM.YY HH:mm'));\n        this.focuslabelTime\n            .attr('x', onLeftSide ? right : left)\n            .attr('y', 13);\n        if (item.timestamp === min) {\n            this.highlightFocus\n                .attr('x1', item.xDiagCoord)\n                .attr('y1', 0)\n                .attr('x2', item.xDiagCoord)\n                .attr('y2', this.height)\n                .classed('hidden', false);\n        }\n    }\n\n    /**\n     * Function that returns the boundings of a html element.\n     * @param el {Object} Object of the html element.\n     */\n    private getDimensions(el: any): { w: number, h: number } {\n        let w = 0;\n        let h = 0;\n        if (el) {\n            const dimensions = el.getBBox();\n            w = dimensions.width;\n            h = dimensions.height;\n        } else {\n            console.log('error: getDimensions() ' + el + ' not found.');\n        }\n        return {\n            w,\n            h\n        };\n    }\n\n    /**\n     * Function to generate uuid for a diagram\n     */\n    private uuidv4(): string {\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + this.s4();\n    }\n\n    /**\n     * Function to generate components of the uuid for a diagram\n     */\n    private s4(): string {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n\n    /**\n     * Function that logs the error in the console.\n     * @param error {Object} Object with the error.\n     */\n    private onError(error: any) {\n        console.error(error);\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataParameterFilter.html":{"url":"interfaces/DataParameterFilter.html","title":"interface - DataParameterFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataParameterFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/http-requests.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ParameterFilter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        format\n                                \n                                \n                                            Optional\n                                        generalize\n                                \n                                \n                                            Optional\n                                        timespan\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        generalize\n                                    \n                                \n                                \n                                    \n                                        generalize:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timespan\n                                    \n                                \n                                \n                                    \n                                        timespan:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ParameterFilter {\n    service?: string;\n    phenomenon?: string;\n    valueTypes?: string;\n    platformTypes?: string;\n    expanded?: boolean;\n    lang?: string;\n    [key: string]: any;\n}\n\nexport interface DataParameterFilter extends ParameterFilter {\n    format?: string;\n    timespan?: string;\n    generalize?: boolean;\n}\n\nexport interface HttpRequestOptions {\n    forceUpdate?: boolean;\n    basicAuthToken?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSeries.html":{"url":"interfaces/DataSeries.html","title":"interface - DataSeries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataSeries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/flot/src/lib/model/dataSeries.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        internalId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        internalId\n                                    \n                                \n                                \n                                    \n                                        internalId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SeriesOptions extends jquery.flot.seriesOptions {\n    selected?: boolean;\n}\n\nexport interface DataSeries extends jquery.flot.dataSeries, SeriesOptions {\n    internalId: string;\n    data: any[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Dataset.html":{"url":"classes/Dataset.html","title":"class - Dataset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Dataset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IDataset\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                datasetType\n                            \n                            \n                                    Public\n                                firstValue\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                internalId\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                lastValue\n                            \n                            \n                                    Public\n                                parameters\n                            \n                            \n                                    Public\n                                platformType\n                            \n                            \n                                    Public\n                                referenceValues\n                            \n                            \n                                    Public\n                                    Optional\n                                seriesParameters\n                            \n                            \n                                    Public\n                                uom\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datasetType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        datasetType:     DatasetTypes\n\n                    \n                \n                    \n                        \n                            Type :     DatasetTypes\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstValue:     FirstLastValue\n\n                    \n                \n                    \n                        \n                            Type :     FirstLastValue\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            internalId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        internalId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastValue:     FirstLastValue\n\n                    \n                \n                    \n                        \n                            Type :     FirstLastValue\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parameters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parameters:     DatasetParameterConstellation\n\n                    \n                \n                    \n                        \n                            Type :     DatasetParameterConstellation\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platformType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platformType:     PlatformTypes\n\n                    \n                \n                    \n                        \n                            Type :     PlatformTypes\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            referenceValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        referenceValues:     ReferenceValue[]\n\n                    \n                \n                    \n                        \n                            Type :     ReferenceValue[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            seriesParameters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seriesParameters:     DatasetParameterConstellation\n\n                    \n                \n                    \n                        \n                            Type :     DatasetParameterConstellation\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uom:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatasetApi.html":{"url":"interfaces/DatasetApi.html","title":"interface - DatasetApi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatasetApi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/settings/settings.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timespan } from './../internal/timeInterval';\n\nexport interface Settings {\n    datasetApis?: DatasetApi[];\n    providerBlackList?: BlacklistedService[];\n    solveLabels?: boolean;\n    proxyUrl?: string;\n    timespanPresets?: TimespanPreset[];\n    colorList?: string[];\n    languages?: [{ label: string, code: string }];\n    refreshDataInterval?: number;\n}\n\nexport interface DatasetApi {\n    name: string;\n    url: string;\n}\n\nexport interface BlacklistedService {\n    serviceId: string;\n    apiUrl: string;\n}\n\nexport interface TimespanPreset {\n    name: string;\n    label: string;\n    timespan: TimespanMomentTemplate;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface ParsedTimespanPreset {\n    name: string;\n    label: string;\n    timespan: Timespan;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface TimespanMomentTemplate {\n    to: string;\n    from: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatasetApiMapping.html":{"url":"injectables/DatasetApiMapping.html","title":"injectable - DatasetApiMapping","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DatasetApiMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/api-mapping.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                confirmVersion\n                            \n                            \n                                    Public\n                                getApiVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/dataset-api/api-mapping.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            confirmVersion\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        confirmVersion(observer: Observer, version: DatasetApiVersion)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/api-mapping.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observer\n                                                        \n                                                                    Observer\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        version\n                                                        \n                                                                    DatasetApiVersion\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getApiVersion\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getApiVersion(apiUrl: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/api-mapping.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cache:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/api-mapping.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nexport enum DatasetApiVersion {\n    V1,\n    V2\n}\n\n@Injectable()\nexport class DatasetApiMapping {\n\n    private cache: Map = new Map();\n\n    constructor(\n        protected http: HttpClient\n    ) { }\n\n    public getApiVersion(apiUrl: string): Observable {\n        return new Observable((observer: Observer) => {\n            if (this.cache.has(apiUrl)) {\n                this.confirmVersion(observer, this.cache.get(apiUrl));\n            } else {\n                this.http.get(apiUrl).subscribe((result) => {\n                    let version = DatasetApiVersion.V1;\n                    result.forEach((entry) => {\n                        if (entry.id === 'platforms') {\n                            version = DatasetApiVersion.V2;\n                        }\n                    });\n                    this.cache.set(apiUrl, version);\n                    this.confirmVersion(observer, version);\n                });\n            }\n        });\n    }\n\n    private confirmVersion(observer: Observer, version: DatasetApiVersion) {\n        observer.next(version);\n        observer.complete();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatasetApiV2.html":{"url":"interfaces/DatasetApiV2.html","title":"interface - DatasetApiV2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatasetApiV2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/interfaces/api-v2.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DatasetApiV1\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getData\n                                \n                                \n                                    getDataset\n                                \n                                \n                                    getDatasets\n                                \n                                \n                                    getPlatform\n                                \n                                \n                                    getPlatforms\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetData(id: string, apiUrl: string, timespan: Timespan, params?: DataParameterFilter, options?: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/interfaces/api-v2.interface.ts:25\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    DataParameterFilter\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDataset(id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/interfaces/api-v2.interface.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    ParameterFilter\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDatasets\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDatasets(apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/interfaces/api-v2.interface.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    ParameterFilter\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlatform\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlatform(id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/interfaces/api-v2.interface.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    ParameterFilter\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlatforms\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlatforms(apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/interfaces/api-v2.interface.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    ParameterFilter\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nimport { Data } from '../../model/dataset-api/data';\nimport { Dataset } from '../../model/dataset-api/dataset';\nimport { Platform } from '../../model/dataset-api/platform';\nimport { DataParameterFilter, HttpRequestOptions, ParameterFilter } from '../../model/internal/http-requests';\nimport { Timespan } from '../../model/internal/timeInterval';\nimport { DatasetApiV1 } from './api-v1.interface';\n\nexport interface DatasetApiV2 extends DatasetApiV1 {\n\n    getPlatforms(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    getPlatform(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n\n    getDatasets(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    getDataset(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    getData(\n        id: string, apiUrl: string, timespan: Timespan, params?: DataParameterFilter, options?: HttpRequestOptions\n    ): Observable>;\n\n    // getGeometries(id: string, apiUrl: string, params?): Observable<>;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatasetByStationSelectorComponent.html":{"url":"components/DatasetByStationSelectorComponent.html","title":"component - DatasetByStationSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatasetByStationSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-dataset-by-station-selector\n            \n\n            \n                styleUrls\n                dataset-by-station-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dataset-by-station-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                counter\n                            \n                            \n                                    Public\n                                timeseriesList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Private\n                                updateSelection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                defaultSelected\n                            \n                            \n                                station\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onSelectionChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiInterface: DatasetApiInterface)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiInterface\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        defaultSelected\n                    \n                    \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        station\n                    \n                    \n                            \n                            Type:    Station\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onSelectionChanged\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(timeseries: ExtendedTimeseries)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeseries\n                                                        \n                                                                    ExtendedTimeseries\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateSelection()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            counter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        counter:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeseriesList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeseriesList:     ExtendedTimeseries[]\n\n                    \n                \n                    \n                        \n                            Type :     ExtendedTimeseries[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { DatasetApiInterface, Station, Timeseries } from '@helgoland/core';\n\nexport class ExtendedTimeseries extends Timeseries {\n    public selected: boolean;\n}\n\n@Component({\n    selector: 'n52-dataset-by-station-selector',\n    templateUrl: './dataset-by-station-selector.component.html',\n    styleUrls: ['./dataset-by-station-selector.component.scss']\n})\nexport class DatasetByStationSelectorComponent implements OnInit {\n\n    @Input()\n    public station: Station;\n\n    @Input()\n    public url: string;\n\n    @Input()\n    public defaultSelected = false;\n\n    @Output()\n    public onSelectionChanged: EventEmitter = new EventEmitter();\n\n    public timeseriesList: ExtendedTimeseries[] = [];\n\n    public counter: number;\n\n    constructor(\n        protected apiInterface: DatasetApiInterface\n    ) { }\n\n    public ngOnInit() {\n        if (this.station) {\n            this.apiInterface.getStation(this.station.properties.id, this.url)\n                .subscribe((station) => {\n                    this.station = station;\n                    this.counter = 0;\n                    for (const id in this.station.properties.timeseries) {\n                        if (this.station.properties.timeseries.hasOwnProperty(id)) {\n                            this.counter++;\n                            this.apiInterface.getSingleTimeseries(id, this.url)\n                                .subscribe((result) => {\n                                    const ts = result as ExtendedTimeseries;\n                                    ts.selected = this.defaultSelected;\n                                    this.timeseriesList.push(ts);\n                                    this.updateSelection();\n                                    this.counter--;\n                                }, (error) => {\n                                    this.counter--;\n                                });\n                        }\n                    }\n                });\n        }\n    }\n\n    public toggle(timeseries: ExtendedTimeseries) {\n        timeseries.selected = !timeseries.selected;\n        this.updateSelection();\n    }\n\n    private updateSelection() {\n        const selection = this.timeseriesList.filter((entry) => entry.selected);\n        this.onSelectionChanged.emit(selection);\n    }\n\n}\n\n    \n\n    \n        \n    \n        {{counter}} timeseries are loading...\n    \n    \n        \n            {{timeseries.parameters.phenomenon.label}}\n        \n        {{timeseries.parameters.procedure.label}}\n        ({{timeseries.parameters.category.label}})\n        \n            {{timeseries.lastValue.value}}\n            {{timeseries.uom}}\n            ({{timeseries.lastValue.timestamp| date: 'short'}})\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{counter}} timeseries are loading...                            {{timeseries.parameters.phenomenon.label}}                {{timeseries.parameters.procedure.label}}        ({{timeseries.parameters.category.label}})                    {{timeseries.lastValue.value}}            {{timeseries.uom}}            ({{timeseries.lastValue.timestamp| date: \\'short\\'}})            '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DatasetByStationSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatasetConstellation.html":{"url":"interfaces/DatasetConstellation.html","title":"interface - DatasetConstellation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatasetConstellation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/d3/src/lib/d3-trajectory-graph/d3-trajectory-graph.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        dataset\n                                \n                                \n                                            Optional\n                                        drawOptions\n                                \n                                \n                                            Optional\n                                        focusLabel\n                                \n                                \n                                            Optional\n                                        focusLabelRect\n                                \n                                \n                                            Optional\n                                        yScale\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     LocatedTimeValueEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LocatedTimeValueEntry[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataset\n                                    \n                                \n                                \n                                    \n                                        dataset:     IDataset\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IDataset\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        drawOptions\n                                    \n                                \n                                \n                                    \n                                        drawOptions:     DrawOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DrawOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        focusLabel\n                                    \n                                \n                                \n                                    \n                                        focusLabel:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        focusLabelRect\n                                    \n                                \n                                \n                                    \n                                        focusLabelRect:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yScale\n                                    \n                                \n                                \n                                    \n                                        yScale:     ScaleLinear\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ScaleLinear\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    IterableDiffers,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    DatasetApiInterface,\n    DatasetOptions,\n    DatasetPresenterComponent,\n    IDataset,\n    InternalIdHandler,\n    LocatedTimeValueEntry,\n    Time,\n} from '@helgoland/core';\nimport {\n    area,\n    axisBottom,\n    axisLeft,\n    axisRight,\n    axisTop,\n    bisector,\n    curveLinear,\n    extent,\n    line,\n    mouse,\n    ScaleLinear,\n    scaleLinear,\n    select,\n    timeFormat,\n} from 'd3';\nimport moment from 'moment';\n\nimport { D3AxisType } from '../model/d3-axis-type';\nimport { D3GraphOptions } from '../model/d3-graph-options';\nimport { D3SelectionRange } from '../model/d3-selection-range';\n\ninterface DataEntry extends LocatedTimeValueEntry {\n    dist: number;\n    tick: number;\n    x: number;\n    y: number;\n    xDiagCoord?: number;\n    [id: string]: any;\n}\n\ninterface DatasetConstellation {\n    dataset?: IDataset;\n    data?: LocatedTimeValueEntry[];\n    yScale?: ScaleLinear;\n    drawOptions?: DrawOptions;\n    focusLabelRect?: any;\n    focusLabel?: any;\n}\n\ninterface DrawOptions {\n    uom: string;\n    id: string;\n    color: string;\n    first: boolean;\n    offset: number;\n}\n\n@Component({\n    selector: 'n52-d3-trajectory-graph',\n    templateUrl: './d3-trajectory-graph.component.html',\n    styleUrls: ['./d3-trajectory-graph.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class D3TrajectoryGraphComponent\n    extends DatasetPresenterComponent\n    implements AfterViewInit, OnChanges {\n\n    @Input()\n    public selection: D3SelectionRange;\n\n    @Output()\n    public onSelectionChangedFinished: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onSelectionChanged: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onHoverHighlight: EventEmitter = new EventEmitter();\n\n    @ViewChild('dthree')\n    public d3Elem: ElementRef;\n\n    private datasetMap: Map = new Map();\n    private rawSvg: any;\n    private graph: any;\n    private height: number;\n    private width: number;\n    private margin = {\n        top: 10,\n        right: 10,\n        bottom: 40,\n        left: 40\n    };\n    private maxLabelwidth = 0;\n    private lineFun: d3.Line;\n    private area: d3.Area;\n    private xScaleBase: d3.ScaleLinear;\n    private yScaleBase: d3.ScaleLinear;\n    private background: any;\n    private focusG: any;\n    private highlightFocus: any;\n    private focuslabelTime: any;\n    private focuslabelY: any;\n    private yAxisGen: d3.Axis;\n    private baseValues: DataEntry[] = [];\n    private dragging: boolean;\n    private dragStart: [number, number];\n    private dragCurrent: [number, number];\n    private dragRect: any;\n    private dragRectG: any;\n    private bufferSum: number;\n    private dataLength: number;\n\n    private defaultGraphOptions: D3GraphOptions = {\n        axisType: D3AxisType.Distance,\n        dotted: false\n    };\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc);\n        this.graphOptions = this.defaultGraphOptions;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        super.ngOnChanges(changes);\n        if (changes.selection && this.selection) {\n            this.processAllData();\n            this.drawLineGraph();\n        }\n    }\n\n    public ngAfterViewInit(): void {\n        this.rawSvg = select(this.d3Elem.nativeElement)\n            .append('svg')\n            .attr('width', '100%')\n            .attr('height', '100%');\n\n        this.graph = this.rawSvg\n            .append('g')\n            .attr('transform', 'translate(' + (this.margin.left + this.maxLabelwidth) + ',' + this.margin.top + ')');\n\n        this.lineFun = line()\n            .x(this.calcXValue)\n            .y(this.calcYValue)\n            .curve(curveLinear);\n\n        this.area = area()\n            .x(this.calcXValue)\n            .y0(this.height)\n            .y1(this.calcYValue)\n            .curve(curveLinear);\n\n        this.drawLineGraph();\n    }\n\n    public reloadData(): void {\n        console.log('reload data at ' + new Date());\n    }\n\n    protected timeIntervalChanges(): void {\n        this.datasetMap.forEach((entry) => {\n            if (entry.dataset) {\n                this.loadData(entry.dataset);\n            }\n        });\n    }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getDataset(id, url).subscribe((dataset) => {\n            this.datasetMap.set(dataset.internalId, { dataset });\n            this.loadData(dataset);\n        });\n    }\n\n    protected removeDataset(internalId: string): void {\n        this.datasetMap.delete(internalId);\n        this.processAllData();\n        this.drawLineGraph();\n    }\n\n    protected setSelectedId(internalId: string): void {\n        throw new Error('Method not implemented.');\n    }\n\n    protected removeSelectedId(internalId: string): void {\n        throw new Error('Method not implemented.');\n    }\n\n    protected graphOptionsChanged(options: D3GraphOptions): void {\n        this.timeIntervalChanges();\n    }\n\n    protected datasetOptionsChanged(internalId: string, options: DatasetOptions, firstChange: boolean): void {\n        if (!firstChange && this.datasetMap.has(internalId)) {\n            this.loadData(this.datasetMap.get(internalId).dataset);\n        }\n    }\n\n    protected onResize(): void {\n        this.drawLineGraph();\n    }\n\n    private loadData(dataset: IDataset) {\n        if (this.timespan &&\n            this.datasetOptions.has(dataset.internalId) &&\n            this.datasetOptions.get(dataset.internalId).visible) {\n            const buffer = this.timeSrvc.getBufferedTimespan(this.timespan, 0.2);\n            const option = this.datasetOptions.get(dataset.internalId);\n            this.api.getData(dataset.id, dataset.url, buffer,\n                {\n                    generalize: option.generalize\n                })\n                .subscribe((result) => {\n                    this.dataLength = result.values.length;\n                    this.datasetMap.get(dataset.internalId).data = result.values;\n                    this.processDataForId(dataset.internalId);\n                    this.drawLineGraph();\n                });\n        } else {\n            this.drawLineGraph();\n        }\n    }\n\n    private processAllData() {\n        this.baseValues = [];\n        this.datasetIds.forEach((id) => this.processDataForId(id));\n    }\n\n    private processDataForId(internalId: string) {\n        if (this.datasetOptions.get(internalId).visible) {\n            const datasetEntry = this.datasetMap.get(internalId);\n            const firstEntry = this.baseValues.length === 0;\n            let previous: DataEntry = null;\n            datasetEntry.data.forEach((elem, idx) => {\n                if (firstEntry) {\n                    const entry = this.createDataEntry(internalId, elem, previous, idx);\n                    if (this.selection) {\n                        if (idx >= this.selection.from && idx = this.selection.from && idx  {\n        return this.yScaleBase(d.value);\n    }\n\n    private calcXValue = (d: DataEntry, i: number) => {\n        const xDiagCoord = this.xScaleBase(this.getXValue(d));\n        d.xDiagCoord = xDiagCoord;\n        return xDiagCoord;\n    }\n\n    private calculateHeight(): number {\n        return this.rawSvg.node().height.baseVal.value - this.margin.top - this.margin.bottom;\n    }\n\n    private calculateWidth(): number {\n        return this.rawSvg.node().width.baseVal.value - this.margin.left - this.margin.right - this.maxLabelwidth;\n    }\n\n    private getXValue(data: DataEntry) {\n        switch (this.graphOptions.axisType) {\n            case D3AxisType.Distance:\n                return data.dist;\n            case D3AxisType.Time:\n                return data.timestamp;\n            case D3AxisType.Ticks:\n                return data.tick;\n            default:\n                return data.tick;\n        }\n    }\n\n    private drawDots(values: DataEntry[], yScale: d3.ScaleLinear, options: DrawOptions) {\n        this.graph.selectAll('dot')\n            .data(values)\n            .enter().append('circle')\n            .attr('stroke', options.color)\n            .attr('r', 1.5)\n            .attr('fill', options.color)\n            .attr('cx', this.calcXValue)\n            .attr('cy', (d: DataEntry) => yScale(d[options.id]));\n    }\n\n    private drawValueLine(values: DataEntry[], yScale: d3.ScaleLinear, options: DrawOptions) {\n        this.graph.append('svg:path')\n            .datum(values)\n            .attr('class', 'line')\n            .attr('fill', 'none')\n            .attr('stroke', options.color)\n            .attr('stroke-width', 1)\n            .attr('d', line()\n                .x(this.calcXValue)\n                .y((d: DataEntry) => yScale(d[options.id]))\n                .curve(curveLinear));\n    }\n\n    private drawGraph(yScale: d3.ScaleLinear, options: DrawOptions) {\n        if (this.graphOptions.dotted) {\n            this.drawDots(this.baseValues, yScale, options);\n        } else {\n            this.drawValueLine(this.baseValues, yScale, options);\n        }\n    }\n\n    private drawLineGraph() {\n        if (!this.baseValues || this.baseValues.length === 0 || !this.graph) {\n            return;\n        }\n\n        this.height = this.calculateHeight();\n        this.width = this.calculateWidth();\n\n        this.graph.selectAll('*').remove();\n\n        this.bufferSum = 0;\n\n        this.yScaleBase = null;\n\n        this.datasetMap.forEach((datasetEntry, id) => {\n            if (this.datasetOptions.has(id) && datasetEntry.data && this.datasetOptions.get(id).visible) {\n                datasetEntry.drawOptions = {\n                    uom: datasetEntry.dataset.uom,\n                    id: datasetEntry.dataset.internalId,\n                    color: this.datasetOptions.get(id).color,\n                    first: this.yScaleBase === null,\n                    offset: this.bufferSum\n                };\n                const axisResult = this.drawYAxis(datasetEntry.drawOptions);\n                if (this.yScaleBase === null) {\n                    this.yScaleBase = axisResult.yScale;\n                } else {\n                    this.bufferSum = axisResult.buffer;\n                }\n                datasetEntry.yScale = axisResult.yScale;\n            }\n        });\n\n        if (!this.yScaleBase) {\n            return;\n        }\n\n        // draw right axis as border\n        this.graph.append('svg:g')\n            .attr('class', 'y axis')\n            .attr('transform', 'translate(' + this.width + ', 0)')\n            .call(axisRight(this.yScaleBase).tickSize(0).ticks(0));\n\n        this.drawXAxis(this.bufferSum);\n\n        this.datasetMap.forEach((entry, id) => {\n            if (this.datasetOptions.has(id) && this.datasetOptions.get(id).visible && entry.data) {\n                this.drawGraph(entry.yScale, entry.drawOptions);\n            }\n        });\n\n        this.background = this.graph.append('svg:rect')\n            .attr('width', this.width - this.bufferSum)\n            .attr('height', this.height)\n            .attr('fill', 'none')\n            .attr('stroke', 'none')\n            .attr('pointer-events', 'all')\n            .attr('transform', 'translate(' + this.bufferSum + ', 0)')\n            .on('mousemove.focus', this.mousemoveHandler)\n            .on('mouseout.focus', this.mouseoutHandler)\n            .on('mousedown.drag', this.dragStartHandler)\n            .on('mousemove.drag', this.dragHandler)\n            .on('mouseup.drag', this.dragEndHandler);\n\n        this.focusG = this.graph.append('g');\n        this.highlightFocus = this.focusG.append('svg:line')\n            .attr('class', 'mouse-focus-line')\n            .attr('x2', '0')\n            .attr('y2', '0')\n            .attr('x1', '0')\n            .attr('y1', '0')\n            .style('stroke', 'black')\n            .style('stroke-width', '1px');\n\n        this.datasetMap.forEach((entry, id) => {\n            if (this.datasetOptions.has(id) && this.datasetOptions.get(id).visible && entry.data) {\n                entry.focusLabelRect = this.focusG.append('svg:rect')\n                    .style('fill', 'white')\n                    .style('stroke', 'none')\n                    .style('pointer-events', 'none');\n                entry.focusLabel = this.focusG.append('svg:text').attr('class', 'mouse-focus-label-x')\n                    .style('pointer-events', 'none')\n                    .style('fill', this.datasetOptions.get(id).color)\n                    .style('font-weight', 'lighter');\n            }\n        });\n\n        this.focuslabelTime = this.focusG.append('svg:text')\n            .style('pointer-events', 'none')\n            .attr('class', 'mouse-focus-label-x');\n        this.focuslabelY = this.focusG.append('svg:text')\n            .style('pointer-events', 'none')\n            .attr('class', 'mouse-focus-label-y');\n    }\n\n    private mousemoveHandler = () => {\n        if (!this.baseValues || this.baseValues.length === 0) {\n            return;\n        }\n        const coords = mouse(this.background.node());\n        const idx = this.getItemForX(coords[0] + this.bufferSum, this.baseValues);\n        this.showDiagramIndicator(idx);\n        this.onHoverHighlight.emit(this.baseValues[idx].tick);\n    }\n\n    private mouseoutHandler = () => {\n        this.hideDiagramIndicator();\n    }\n\n    private dragStartHandler = () => {\n        this.dragging = false;\n        this.dragStart = mouse(this.background.node());\n    }\n\n    private dragHandler = () => {\n        this.dragging = true;\n        this.drawDragRectangle();\n    }\n\n    private dragEndHandler = () => {\n        if (!this.dragStart || !this.dragging) {\n            this.onSelectionChangedFinished.emit({ from: 0, to: this.dataLength });\n        } else {\n            const from = this.getItemForX(this.dragStart[0] + this.bufferSum, this.baseValues);\n            const to = this.getItemForX(this.dragCurrent[0] + this.bufferSum, this.baseValues);\n            this.onSelectionChangedFinished.emit(this.prepareRange(this.baseValues[from].tick, this.baseValues[to].tick));\n        }\n        this.dragStart = null;\n        this.dragging = false;\n        this.resetDrag();\n    }\n\n    private prepareRange(from: number, to: number): D3SelectionRange {\n        if (from  {\n        const item = this.baseValues[idx];\n        this.focusG.style('visibility', 'visible');\n        this.highlightFocus.attr('x1', item.xDiagCoord)\n            .attr('y1', 0)\n            .attr('x2', item.xDiagCoord)\n            .attr('y2', this.height)\n            .classed('hidden', false);\n\n        let onLeftSide = false;\n        if ((this.background.node().getBBox().width + this.bufferSum) / 2 > item.xDiagCoord) { onLeftSide = true; }\n\n        this.showLabelValues(item, onLeftSide);\n        this.showTimeIndicatorLabel(item, onLeftSide);\n        this.showBottomIndicatorLabel(item, onLeftSide);\n    }\n\n    private showLabelValues(item: DataEntry, onLeftSide: boolean) {\n        this.datasetMap.forEach((entry, id) => {\n            if (this.datasetOptions.get(id).visible) {\n                if (entry.focusLabel) {\n                    entry.focusLabel.text(item[id] + (entry.dataset.uom ? entry.dataset.uom : ''));\n                    const entryX = onLeftSide ?\n                        item.xDiagCoord + 2 : item.xDiagCoord - this.getDimensions(entry.focusLabel.node()).w;\n                    entry.focusLabel\n                        .attr('x', entryX)\n                        .attr('y', entry.yScale(item[id]) + this.getDimensions(entry.focusLabel.node()).h - 3);\n                    entry.focusLabelRect\n                        .attr('x', entryX)\n                        .attr('y', entry.yScale(item[id]))\n                        .attr('width', this.getDimensions(entry.focusLabel.node()).w)\n                        .attr('height', this.getDimensions(entry.focusLabel.node()).h);\n                }\n            }\n        });\n    }\n\n    private showTimeIndicatorLabel(item: DataEntry, onLeftSide: boolean) {\n        this.focuslabelTime.text(moment(item.timestamp).format('DD.MM.YY HH:mm'));\n        this.focuslabelTime\n            .attr('x', onLeftSide ? item.xDiagCoord + 2 : item.xDiagCoord - this.getDimensions(this.focuslabelTime.node()).w)\n            .attr('y', 13);\n    }\n\n    private showBottomIndicatorLabel(item: DataEntry, onLeftSide: boolean) {\n        if (this.graphOptions.axisType === D3AxisType.Distance) {\n            this.focuslabelY.text(item.dist + ' km');\n        }\n        if (this.graphOptions.axisType === D3AxisType.Ticks) {\n            this.focuslabelY.text('Measurement: ' + item.tick);\n        }\n        this.focuslabelY\n            .attr('y', this.calculateHeight() - 5)\n            .attr('x', onLeftSide ? item.xDiagCoord + 2 : item.xDiagCoord - this.getDimensions(this.focuslabelY.node()).w);\n    }\n\n    private getDimensions(el: any) {\n        let w = 0;\n        let h = 0;\n        if (el) {\n            const dimensions = el.getBBox();\n            w = dimensions.width;\n            h = dimensions.height;\n        } else {\n            console.log('error: getDimensions() ' + el + ' not found.');\n        }\n        return {\n            w,\n            h\n        };\n    }\n\n    private getItemForX(x: number, data: DataEntry[]) {\n        const index = this.xScaleBase.invert(x);\n        const bisectDate = bisector((d: DataEntry) => {\n            switch (this.graphOptions.axisType) {\n                case D3AxisType.Distance:\n                    return d.dist;\n                case D3AxisType.Time:\n                    return d.timestamp;\n                case D3AxisType.Ticks:\n                default:\n                    return d.tick;\n            }\n        }).left;\n        return bisectDate(this.baseValues, index);\n    }\n\n    private drawYAxis(options: DrawOptions): any {\n        const range = extent(this.baseValues, (datum, index, array) => {\n            return datum[options.id]; // here with ID\n        });\n        const rangeOffset = (range[1] - range[0]) * 0.10;\n        const yScale = scaleLinear()\n            .domain([range[0] - rangeOffset, range[1] + rangeOffset])\n            .range([this.height, 0]);\n\n        this.yAxisGen = axisLeft(yScale).ticks(5);\n\n        // draw y axis\n        const axis = this.graph.append('svg:g')\n            .attr('class', 'y axis')\n            .call(this.yAxisGen);\n\n        // draw y axis label\n        const text = this.graph.append('text')\n            .attr('transform', 'rotate(-90)')\n            .attr('dy', '1em')\n            .style('text-anchor', 'middle')\n            .style('fill', options.color)\n            .text(options.uom);\n\n        const axisWidth = axis.node().getBBox().width + 5 + this.getDimensions(text.node()).h;\n        const buffer = options.offset + (axisWidth  '')\n                );\n        }\n\n        return {\n            buffer,\n            yScale\n        };\n    }\n\n    private drawXAxis(buffer: number) {\n        this.xScaleBase = scaleLinear()\n            .domain(this.getXDomain(this.baseValues))\n            .range([buffer, this.width]);\n\n        const xAxisGen = axisBottom(this.xScaleBase).ticks(5);\n\n        if (this.graphOptions.axisType === D3AxisType.Time) {\n            xAxisGen.tickFormat((d) => {\n                return timeFormat('%d.%m.%Y %H:%M:%S')(new Date(d.valueOf()));\n            });\n        }\n\n        // draw x axis\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(xAxisGen);\n\n        // draw the x grid lines\n        this.graph.append('svg:g')\n            .attr('class', 'grid')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(axisBottom(this.xScaleBase)\n                .ticks(10)\n                .tickSize(-this.height)\n                .tickFormat(() => '')\n            );\n\n        // draw upper axis as border\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .call(axisTop(this.xScaleBase).ticks(0).tickSize(0));\n\n        // text label for the x axis\n        this.graph.append('text')\n            .attr('x', (this.width + buffer) / 2)\n            .attr('y', this.height + this.margin.bottom - 5)\n            .style('text-anchor', 'middle')\n            .text(this.getXAxisLabel());\n    }\n\n    private getXDomain(values: DataEntry[]) {\n        switch (this.graphOptions.axisType) {\n            case D3AxisType.Distance:\n                return [values[0].dist, values[values.length - 1].dist];\n            case D3AxisType.Time:\n                return [values[0].timestamp, values[values.length - 1].timestamp];\n            default:\n                return [values[0].tick, values[values.length - 1].tick];\n        }\n    }\n\n    private getXAxisLabel() {\n        switch (this.graphOptions.axisType) {\n            case D3AxisType.Distance:\n                return 'Distance';\n            case D3AxisType.Time:\n                return 'Time';\n            default:\n                return 'Ticks';\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatasetOptions.html":{"url":"classes/DatasetOptions.html","title":"class - DatasetOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatasetOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/options.ts\n        \n\n            \n                Description\n            \n            \n                Options for each dataset.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                color\n                            \n                            \n                                    Public\n                                    Optional\n                                generalize\n                            \n                            \n                                    Public\n                                internalId\n                            \n                            \n                                    Public\n                                lineWidth\n                            \n                            \n                                    Public\n                                    Optional\n                                loading\n                            \n                            \n                                    Public\n                                pointRadius\n                            \n                            \n                                    Public\n                                    Optional\n                                separateYAxis\n                            \n                            \n                                    Public\n                                showReferenceValues\n                            \n                            \n                                    Public\n                                visible\n                            \n                            \n                                    Public\n                                    Optional\n                                yAxisRange\n                            \n                            \n                                    Public\n                                    Optional\n                                zeroBasedYAxis\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(internalId: string, color: string)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/model/internal/options.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        color\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            color\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        color:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:23\n                            \n                        \n\n                \n                    \n                        color of the dataset\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            generalize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        generalize:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:57\n                            \n                        \n\n                \n                    \n                        marker to request dataset data generalized\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            internalId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        internalId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:15\n                            \n                        \n\n                \n                    \n                        internal dataset id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lineWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lineWidth:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:81\n                            \n                        \n\n                \n                    \n                        width of graphline\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pointRadius\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pointRadius:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:73\n                            \n                        \n\n                \n                    \n                        radius of graphpoint\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            separateYAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        separateYAxis:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:41\n                            \n                        \n\n                \n                    \n                        separate y axis of datasets with same unit\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showReferenceValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showReferenceValues:     ReferenceValueOption[]\n\n                    \n                \n                    \n                        \n                            Type :     ReferenceValueOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:65\n                            \n                        \n\n                \n                    \n                        list of visible reference values\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:31\n                            \n                        \n\n                \n                    \n                        show or hide in the graph\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            yAxisRange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        yAxisRange:     MinMaxRange\n\n                    \n                \n                    \n                        \n                            Type :     MinMaxRange\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:89\n                            \n                        \n\n                \n                    \n                        min and max range of y axis\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            zeroBasedYAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zeroBasedYAxis:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:49\n                            \n                        \n\n                \n                    \n                        align graph that zero y axis is visible\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DatasetOptions {\n\n    /**\n     * internal dataset id\n     *\n     * @type {string}\n     * @memberof DatasetOptions\n     */\n    public internalId: string;\n\n    /**\n     * color of the dataset\n     *\n     * @type {string}\n     * @memberof DatasetOptions\n     */\n    public color: string;\n\n    /**\n     * show or hide in the graph\n     *\n     * @type {boolean}\n     * @memberof DatasetOptions\n     */\n    public visible: boolean = true;\n\n    public loading?: boolean;\n\n    /**\n     * separate y axis of datasets with same unit\n     *\n     * @type {boolean}\n     * @memberof DatasetOptions\n     */\n    public separateYAxis?: boolean = false;\n\n    /**\n     * align graph that zero y axis is visible\n     *\n     * @type {boolean}\n     * @memberof DatasetOptions\n     */\n    public zeroBasedYAxis?: boolean = false;\n\n    /**\n     * marker to request dataset data generalized\n     *\n     * @type {boolean}\n     * @memberof DatasetOptions\n     */\n    public generalize?: boolean = false;\n\n    /**\n     * list of visible reference values\n     *\n     * @type {ReferenceValueOption[]}\n     * @memberof DatasetOptions\n     */\n    public showReferenceValues: ReferenceValueOption[] = [];\n\n    /**\n     * radius of graphpoint\n     *\n     * @type {number}\n     * @memberof DatasetOptions\n     */\n    public pointRadius: number = 0;\n\n    /**\n     * width of graphline\n     *\n     * @type {number}\n     * @memberof DatasetOptions\n     */\n    public lineWidth: number = 1;\n\n    /**\n     * min and max range of y axis\n     *\n     * @type {MinMaxRange}\n     * @memberof DatasetOptions\n     */\n    public yAxisRange?: MinMaxRange;\n\n    constructor(\n        internalId: string,\n        color: string\n    ) {\n        this.internalId = internalId;\n        this.color = color;\n    }\n}\n\nexport class ReferenceValueOption {\n    public id: string;\n    public color: string;\n}\n\n/**\n * numbered range with a min and a max value\n *\n * @export\n * @interface MinMaxRange\n */\nexport interface MinMaxRange {\n    min: number;\n    max: number;\n}\n\nexport class TimedDatasetOptions extends DatasetOptions {\n    public timestamp: number;\n\n    constructor(\n        internalId: string,\n        color: string,\n        timestamp: number\n    ) {\n        super(internalId, color);\n        this.timestamp = timestamp;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatasetParameterConstellation.html":{"url":"classes/DatasetParameterConstellation.html","title":"class - DatasetParameterConstellation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatasetParameterConstellation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ParameterConstellation\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                platform\n                            \n                            \n                                    Public\n                                category\n                            \n                            \n                                    Public\n                                feature\n                            \n                            \n                                    Public\n                                offering\n                            \n                            \n                                    Public\n                                phenomenon\n                            \n                            \n                                    Public\n                                procedure\n                            \n                            \n                                    Public\n                                service\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platform:     PlatformParameter\n\n                    \n                \n                    \n                        \n                            Type :     PlatformParameter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            category\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        category:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ParameterConstellation\n\n                                \n                            \n                        \n                            \n                                    Defined in ParameterConstellation:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            feature\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        feature:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ParameterConstellation\n\n                                \n                            \n                        \n                            \n                                    Defined in ParameterConstellation:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offering\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        offering:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ParameterConstellation\n\n                                \n                            \n                        \n                            \n                                    Defined in ParameterConstellation:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            phenomenon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        phenomenon:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ParameterConstellation\n\n                                \n                            \n                        \n                            \n                                    Defined in ParameterConstellation:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            procedure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        procedure:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ParameterConstellation\n\n                                \n                            \n                        \n                            \n                                    Defined in ParameterConstellation:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ParameterConstellation\n\n                                \n                            \n                        \n                            \n                                    Defined in ParameterConstellation:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatasetPresenterComponent.html":{"url":"classes/DatasetPresenterComponent.html","title":"class - DatasetPresenterComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatasetPresenterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ResizableComponent\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        DoCheck\n                        HasLoadableContent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                datasetIdsDiffer\n                            \n                            \n                                    Public\n                                isContentLoading\n                            \n                            \n                                    Public\n                                oldDatasetOptions\n                            \n                            \n                                    Private\n                                oldGraphOptions\n                            \n                            \n                                    Private\n                                selectedDatasetIdsDiffer\n                            \n                            \n                                    Protected\n                                timespan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    \n                                addDataset\n                            \n                            \n                                    Protected\n                                addDatasetByInternalId\n                            \n                            \n                                    Protected\n                                    \n                                datasetOptionsChanged\n                            \n                            \n                                    Protected\n                                    \n                                graphOptionsChanged\n                            \n                            \n                                    Public\n                                ngDoCheck\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                    \n                                reloadData\n                            \n                            \n                                    Protected\n                                    \n                                removeDataset\n                            \n                            \n                                    Protected\n                                    \n                                removeSelectedId\n                            \n                            \n                                    Protected\n                                    \n                                setSelectedId\n                            \n                            \n                                    Protected\n                                    \n                                timeIntervalChanges\n                            \n                            \n                                    Protected\n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                datasetIds\n                            \n                            \n                                datasetOptions\n                            \n                            \n                                graphOptions\n                            \n                            \n                                selectedDatasetIds\n                            \n                            \n                                timeInterval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onContentLoading\n                            \n                            \n                                onDatasetSelected\n                            \n                            \n                                onMessageThrown\n                            \n                            \n                                onTimespanChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iterableDiffers: IterableDiffers, api: DatasetApiInterface, datasetIdResolver: InternalIdHandler, timeSrvc: Time)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iterableDiffers\n                                                  \n                                                        \n                                                                    IterableDiffers\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        datasetIdResolver\n                                                  \n                                                        \n                                                                    InternalIdHandler\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeSrvc\n                                                  \n                                                        \n                                                                    Time\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            datasetIdsDiffer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        datasetIdsDiffer:     IterableDiffer\n\n                    \n                \n                    \n                        \n                            Type :     IterableDiffer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isContentLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isContentLoading:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            oldDatasetOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldDatasetOptions:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            oldGraphOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldGraphOptions:     U\n\n                    \n                \n                    \n                        \n                            Type :     U\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedDatasetIdsDiffer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedDatasetIdsDiffer:     IterableDiffer\n\n                    \n                \n                    \n                        \n                            Type :     IterableDiffer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            timespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timespan:     Timespan\n\n                    \n                \n                    \n                        \n                            Type :     Timespan\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:56\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            addDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addDataset(id: string, url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            addDatasetByInternalId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addDatasetByInternalId(internalId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            datasetOptionsChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        datasetOptionsChanged(internalId: string, options: T, firstChange: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:138\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstChange\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            graphOptionsChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        graphOptionsChanged(options: U)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:136\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    U\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngDoCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngDoCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            reloadData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reloadData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            removeDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeDataset(internalId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:130\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            removeSelectedId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeSelectedId(internalId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            setSelectedId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setSelectedId(internalId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            timeIntervalChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        timeIntervalChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:126\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            onResize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onResize()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResizableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResizableComponent:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        datasetIds\n                    \n                    \n                            \n                            Type:    string[]\n\n                            \n                        \n                            Default value: []\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        datasetOptions\n                    \n                    \n                            \n                            Type:    Map\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        graphOptions\n                    \n                    \n                            \n                            Type:    U\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedDatasetIds\n                    \n                    \n                            \n                            Type:    string[]\n\n                            \n                        \n                            Default value: []\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        timeInterval\n                    \n                    \n                            \n                            Type:    TimeInterval\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:33\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        onContentLoading\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onDatasetSelected\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMessageThrown\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onTimespanChanged\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:46\n                            \n                        \n            \n        \n\n\n\n    \n\n\n    \n        import {\n    DoCheck,\n    EventEmitter,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\n\nimport { DatasetApiInterface } from '../dataset-api/api-interface';\nimport { InternalIdHandler } from '../dataset-api/internal-id-handler.service';\nimport { DatasetOptions } from '../model/internal/options';\nimport { ResizableComponent } from '../model/internal/ResizableComponent';\nimport { TimeInterval, Timespan } from '../model/internal/timeInterval';\nimport { HasLoadableContent } from '../model/mixins/has-loadable-content';\nimport { Time } from '../time/time.service';\nimport { PresenterMessage } from './presenter-message';\n\nconst equal = require('deep-equal');\n\nexport abstract class DatasetPresenterComponent\n    extends ResizableComponent implements OnChanges, DoCheck, HasLoadableContent {\n\n    @Input()\n    public datasetIds: string[] = [];\n\n    @Input()\n    public selectedDatasetIds: string[] = [];\n\n    @Input()\n    public timeInterval: TimeInterval;\n\n    @Input()\n    public datasetOptions: Map;\n    public oldDatasetOptions: Map;\n\n    @Input()\n    public graphOptions: U;\n\n    @Output()\n    public onDatasetSelected: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onTimespanChanged: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onMessageThrown: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onContentLoading: EventEmitter = new EventEmitter();\n\n    public isContentLoading: (loading: boolean) => void;\n\n    protected timespan: Timespan;\n\n    private datasetIdsDiffer: IterableDiffer;\n    private selectedDatasetIdsDiffer: IterableDiffer;\n    private oldGraphOptions: U;\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time\n    ) {\n        super();\n        this.datasetIdsDiffer = this.iterableDiffers.find([]).create();\n        this.selectedDatasetIdsDiffer = this.iterableDiffers.find([]).create();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.timeInterval && this.timeInterval) {\n            this.timespan = this.timeSrvc.createTimespanOfInterval(this.timeInterval);\n            this.timeIntervalChanges();\n        }\n    }\n\n    public ngDoCheck(): void {\n        const datasetIdsChanges = this.datasetIdsDiffer.diff(this.datasetIds);\n        if (datasetIdsChanges) {\n            datasetIdsChanges.forEachAddedItem((addedItem) => {\n                this.addDatasetByInternalId(addedItem.item);\n            });\n            datasetIdsChanges.forEachRemovedItem((removedItem) => {\n                this.removeDataset(removedItem.item);\n            });\n        }\n\n        const selectedDatasetIdsChanges = this.selectedDatasetIdsDiffer.diff(this.selectedDatasetIds);\n        if (selectedDatasetIdsChanges) {\n            selectedDatasetIdsChanges.forEachAddedItem((addedItem) => {\n                this.setSelectedId(addedItem.item);\n            });\n            selectedDatasetIdsChanges.forEachRemovedItem((removedItem) => {\n                this.removeSelectedId(removedItem.item);\n            });\n        }\n\n        if (!equal(this.oldGraphOptions, this.graphOptions)) {\n            this.oldGraphOptions = Object.assign({}, this.graphOptions);\n            const options = Object.assign({}, this.graphOptions);\n            this.graphOptionsChanged(options);\n        }\n\n        if (this.datasetOptions) {\n            const firstChange = this.oldDatasetOptions === undefined;\n            if (firstChange) { this.oldDatasetOptions = new Map(); }\n            this.datasetOptions.forEach((value, key) => {\n                if (!equal(value, this.oldDatasetOptions.get(key))) {\n                    this.oldDatasetOptions.set(key, Object.assign({}, this.datasetOptions.get(key)));\n                    this.datasetOptionsChanged(key, value, firstChange);\n                }\n            });\n        }\n    }\n\n    public abstract reloadData(): void;\n\n    protected addDatasetByInternalId(internalId: string) {\n        const internalIdObj = this.datasetIdResolver.resolveInternalId(internalId);\n        this.addDataset(internalIdObj.id, internalIdObj.url);\n    }\n\n    protected abstract timeIntervalChanges(): void;\n\n    protected abstract addDataset(id: string, url: string): void;\n\n    protected abstract removeDataset(internalId: string): void;\n\n    protected abstract setSelectedId(internalId: string): void;\n\n    protected abstract removeSelectedId(internalId: string): void;\n\n    protected abstract graphOptionsChanged(options: U): void;\n\n    protected abstract datasetOptionsChanged(internalId: string, options: T, firstChange: boolean): void;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatasetService.html":{"url":"classes/DatasetService.html","title":"class - DatasetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatasetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/abstract-services/dataset.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                datasetIds\n                            \n                            \n                                    Public\n                                datasetOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addDataset\n                            \n                            \n                                    Protected\n                                    \n                                createStyles\n                            \n                            \n                                    Public\n                                hasDatasets\n                            \n                            \n                                    Protected\n                                    \n                                loadState\n                            \n                            \n                                    Public\n                                removeAllDatasets\n                            \n                            \n                                    Public\n                                removeDataset\n                            \n                            \n                                    Protected\n                                    \n                                saveState\n                            \n                            \n                                    Public\n                                updateDatasetOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorage\n                                                  \n                                                        \n                                                                    LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datasetIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        datasetIds:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datasetOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        datasetOptions:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addDataset(internalId: string, options?: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            createStyles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createStyles(internalId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasDatasets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasDatasets()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            loadState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadState()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeAllDatasets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeAllDatasets()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeDataset(internalId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            saveState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveState()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateDatasetOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateDatasetOptions(options: T, internalId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { LocalStorage } from '../local-storage/local-storage.service';\nimport { DatasetOptions } from '../model/internal/options';\n\nexport abstract class DatasetService {\n\n    public datasetIds: string[] = [];\n\n    public datasetOptions: Map = new Map();\n\n    constructor(\n        protected localStorage: LocalStorage\n    ) { }\n\n    public addDataset(internalId: string, options?: T) {\n        if (this.datasetIds.indexOf(internalId)  temp.push(e));\n            this.saveState();\n        }\n    }\n\n    public removeAllDatasets() {\n        this.datasetIds.length = 0;\n        this.datasetOptions.clear();\n        this.saveState();\n    }\n\n    public removeDataset(internalId: string) {\n        const datasetIdx = this.datasetIds.indexOf(internalId);\n        if (datasetIdx > -1) {\n            this.datasetIds.splice(datasetIdx, 1);\n            this.datasetOptions.delete(internalId);\n        }\n        this.saveState();\n    }\n\n    public hasDatasets(): boolean {\n        return this.datasetIds.length > 0;\n    }\n\n    public updateDatasetOptions(options: T, internalId: string) {\n        this.datasetOptions.set(internalId, options);\n        this.saveState();\n    }\n\n    protected abstract createStyles(internalId: string): T;\n\n    protected abstract saveState(): void;\n\n    protected abstract loadState(): void;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatasetTableData.html":{"url":"interfaces/DatasetTableData.html","title":"interface - DatasetTableData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatasetTableData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/dataset-table-data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        datetime\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datetime\n                                    \n                                \n                                \n                                    \n                                        datetime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DatasetTableData {\n    datetime: number;\n    values: number[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DateProxyPipe.html":{"url":"pipes/DateProxyPipe.html","title":"pipe - DateProxyPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  DateProxyPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/pipes/dateproxy/dateproxy.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        date\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        transform(value: any, pattern: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/pipes/dateproxy/dateproxy.pipe.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        pattern\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'mediumDate'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Pipe({\n    name: 'date',\n    pure: false\n})\nexport class DateProxyPipe implements PipeTransform {\n\n    constructor(\n        protected translate: TranslateService\n    ) { }\n\n    public transform(value: any, pattern: string = 'mediumDate'): any {\n        // simply forward to built-in pipe, but take into account the current language\n        const builtinDatePipe = new DatePipe(this.translate.currentLang || 'en');\n        try {\n            return builtinDatePipe.transform(value, pattern);\n        } catch (error) {\n            console.error(error);\n            return new DatePipe('en').transform(value, pattern);\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DefinedTimespanService.html":{"url":"injectables/DefinedTimespanService.html","title":"injectable - DefinedTimespanService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DefinedTimespanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/time/defined-timespan.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                intervals\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getInterval\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/time/defined-timespan.service.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getInterval(intervalDescriber: DefinedTimespan)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/defined-timespan.service.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        intervalDescriber\n                                                        \n                                                                    DefinedTimespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Timespan\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            intervals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        intervals:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/defined-timespan.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport moment from 'moment';\n\nimport { Timespan } from '../model/internal/timeInterval';\n\nexport enum DefinedTimespan {\n    LASTHOUR = 'last_hour',\n    TODAY = 'today',\n    YESTERDAY = 'yesterday',\n    TODAY_YESTERDAY = 'today_yesterday',\n    CURRENT_WEEK = 'current_week',\n    LAST_WEEK = 'last_week',\n    CURRENT_MONTH = 'current_month',\n    LAST_MONTH = 'last_month',\n    CURRENT_YEAR = 'current_year',\n    LAST_YEAR = 'last_year'\n}\n\n@Injectable()\nexport class DefinedTimespanService {\n\n    private intervals: Map Timespan> = new Map();\n\n    constructor() {\n        this.intervals.set(DefinedTimespan.LASTHOUR, () => {\n            const from = moment().subtract(1, 'hours').unix() * 1000;\n            const to = moment().unix() * 1000;\n            return new Timespan(from, to);\n        });\n        this.intervals.set(DefinedTimespan.TODAY, () => {\n            const from = moment().startOf('day').unix() * 1000;\n            const to = moment().endOf('day').unix() * 1000;\n            return new Timespan(from, to);\n        });\n        this.intervals.set(DefinedTimespan.YESTERDAY, () => {\n            const from = moment().subtract(1, 'days').startOf('day').unix() * 1000;\n            const to = moment().subtract(1, 'days').endOf('day').unix() * 1000;\n            return new Timespan(from, to);\n        });\n        this.intervals.set(DefinedTimespan.TODAY_YESTERDAY, () => {\n            const from = moment().subtract(1, 'days').startOf('day').unix() * 1000;\n            const to = moment().endOf('day').unix() * 1000;\n            return new Timespan(from, to);\n        });\n        this.intervals.set(DefinedTimespan.CURRENT_WEEK, () => {\n            const from = moment().startOf('isoWeek').unix() * 1000;\n            const to = moment().endOf('isoWeek').unix() * 1000;\n            return new Timespan(from, to);\n        });\n        this.intervals.set(DefinedTimespan.LAST_WEEK, () => {\n            const from = moment().subtract(1, 'weeks').startOf('isoWeek').unix() * 1000;\n            const to = moment().subtract(1, 'weeks').endOf('isoWeek').unix() * 1000;\n            return new Timespan(from, to);\n        });\n        this.intervals.set(DefinedTimespan.CURRENT_MONTH, () => {\n            const from = moment().startOf('month').unix() * 1000;\n            const to = moment().endOf('month').unix() * 1000;\n            return new Timespan(from, to);\n        });\n        this.intervals.set(DefinedTimespan.LAST_MONTH, () => {\n            const from = moment().subtract(1, 'months').startOf('month').unix() * 1000;\n            const to = moment().subtract(1, 'months').endOf('month').unix() * 1000;\n            return new Timespan(from, to);\n        });\n        this.intervals.set(DefinedTimespan.CURRENT_YEAR, () => {\n            const from = moment().startOf('year').unix() * 1000;\n            const to = moment().endOf('year').unix() * 1000;\n            return new Timespan(from, to);\n        });\n        this.intervals.set(DefinedTimespan.LAST_YEAR, () => {\n            const from = moment().subtract(1, 'years').startOf('year').unix() * 1000;\n            const to = moment().subtract(1, 'years').endOf('year').unix() * 1000;\n            return new Timespan(from, to);\n        });\n    }\n\n    public getInterval(intervalDescriber: DefinedTimespan): Timespan {\n        if (this.intervals.has(intervalDescriber)) {\n            return this.intervals.get(intervalDescriber)();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DragOptionsComponent.html":{"url":"components/DragOptionsComponent.html","title":"component - DragOptionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DragOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/modification/src/lib/drag-options/drag-options.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-drag-options\n            \n\n\n\n\n            \n                templateUrl\n                ./drag-options.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                togglePanZoom\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTogglePanZoom\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTogglePanZoom\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/drag-options/drag-options.component.ts:10\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            togglePanZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        togglePanZoom()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/drag-options/drag-options.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n    selector: 'n52-drag-options',\n    templateUrl: './drag-options.component.html'\n})\nexport class DragOptionsComponent {\n\n    @Output()\n    public onTogglePanZoom: EventEmitter = new EventEmitter();\n\n    public togglePanZoom() {\n        this.onTogglePanZoom.emit();\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DragOptionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawOptions.html":{"url":"interfaces/DrawOptions.html","title":"interface - DrawOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/d3/src/lib/d3-trajectory-graph/d3-trajectory-graph.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        color\n                                \n                                \n                                        first\n                                \n                                \n                                        id\n                                \n                                \n                                        offset\n                                \n                                \n                                        uom\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                    \n                                \n                                \n                                    \n                                        first:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uom\n                                    \n                                \n                                \n                                    \n                                        uom:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    IterableDiffers,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    DatasetApiInterface,\n    DatasetOptions,\n    DatasetPresenterComponent,\n    IDataset,\n    InternalIdHandler,\n    LocatedTimeValueEntry,\n    Time,\n} from '@helgoland/core';\nimport {\n    area,\n    axisBottom,\n    axisLeft,\n    axisRight,\n    axisTop,\n    bisector,\n    curveLinear,\n    extent,\n    line,\n    mouse,\n    ScaleLinear,\n    scaleLinear,\n    select,\n    timeFormat,\n} from 'd3';\nimport moment from 'moment';\n\nimport { D3AxisType } from '../model/d3-axis-type';\nimport { D3GraphOptions } from '../model/d3-graph-options';\nimport { D3SelectionRange } from '../model/d3-selection-range';\n\ninterface DataEntry extends LocatedTimeValueEntry {\n    dist: number;\n    tick: number;\n    x: number;\n    y: number;\n    xDiagCoord?: number;\n    [id: string]: any;\n}\n\ninterface DatasetConstellation {\n    dataset?: IDataset;\n    data?: LocatedTimeValueEntry[];\n    yScale?: ScaleLinear;\n    drawOptions?: DrawOptions;\n    focusLabelRect?: any;\n    focusLabel?: any;\n}\n\ninterface DrawOptions {\n    uom: string;\n    id: string;\n    color: string;\n    first: boolean;\n    offset: number;\n}\n\n@Component({\n    selector: 'n52-d3-trajectory-graph',\n    templateUrl: './d3-trajectory-graph.component.html',\n    styleUrls: ['./d3-trajectory-graph.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class D3TrajectoryGraphComponent\n    extends DatasetPresenterComponent\n    implements AfterViewInit, OnChanges {\n\n    @Input()\n    public selection: D3SelectionRange;\n\n    @Output()\n    public onSelectionChangedFinished: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onSelectionChanged: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onHoverHighlight: EventEmitter = new EventEmitter();\n\n    @ViewChild('dthree')\n    public d3Elem: ElementRef;\n\n    private datasetMap: Map = new Map();\n    private rawSvg: any;\n    private graph: any;\n    private height: number;\n    private width: number;\n    private margin = {\n        top: 10,\n        right: 10,\n        bottom: 40,\n        left: 40\n    };\n    private maxLabelwidth = 0;\n    private lineFun: d3.Line;\n    private area: d3.Area;\n    private xScaleBase: d3.ScaleLinear;\n    private yScaleBase: d3.ScaleLinear;\n    private background: any;\n    private focusG: any;\n    private highlightFocus: any;\n    private focuslabelTime: any;\n    private focuslabelY: any;\n    private yAxisGen: d3.Axis;\n    private baseValues: DataEntry[] = [];\n    private dragging: boolean;\n    private dragStart: [number, number];\n    private dragCurrent: [number, number];\n    private dragRect: any;\n    private dragRectG: any;\n    private bufferSum: number;\n    private dataLength: number;\n\n    private defaultGraphOptions: D3GraphOptions = {\n        axisType: D3AxisType.Distance,\n        dotted: false\n    };\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc);\n        this.graphOptions = this.defaultGraphOptions;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        super.ngOnChanges(changes);\n        if (changes.selection && this.selection) {\n            this.processAllData();\n            this.drawLineGraph();\n        }\n    }\n\n    public ngAfterViewInit(): void {\n        this.rawSvg = select(this.d3Elem.nativeElement)\n            .append('svg')\n            .attr('width', '100%')\n            .attr('height', '100%');\n\n        this.graph = this.rawSvg\n            .append('g')\n            .attr('transform', 'translate(' + (this.margin.left + this.maxLabelwidth) + ',' + this.margin.top + ')');\n\n        this.lineFun = line()\n            .x(this.calcXValue)\n            .y(this.calcYValue)\n            .curve(curveLinear);\n\n        this.area = area()\n            .x(this.calcXValue)\n            .y0(this.height)\n            .y1(this.calcYValue)\n            .curve(curveLinear);\n\n        this.drawLineGraph();\n    }\n\n    public reloadData(): void {\n        console.log('reload data at ' + new Date());\n    }\n\n    protected timeIntervalChanges(): void {\n        this.datasetMap.forEach((entry) => {\n            if (entry.dataset) {\n                this.loadData(entry.dataset);\n            }\n        });\n    }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getDataset(id, url).subscribe((dataset) => {\n            this.datasetMap.set(dataset.internalId, { dataset });\n            this.loadData(dataset);\n        });\n    }\n\n    protected removeDataset(internalId: string): void {\n        this.datasetMap.delete(internalId);\n        this.processAllData();\n        this.drawLineGraph();\n    }\n\n    protected setSelectedId(internalId: string): void {\n        throw new Error('Method not implemented.');\n    }\n\n    protected removeSelectedId(internalId: string): void {\n        throw new Error('Method not implemented.');\n    }\n\n    protected graphOptionsChanged(options: D3GraphOptions): void {\n        this.timeIntervalChanges();\n    }\n\n    protected datasetOptionsChanged(internalId: string, options: DatasetOptions, firstChange: boolean): void {\n        if (!firstChange && this.datasetMap.has(internalId)) {\n            this.loadData(this.datasetMap.get(internalId).dataset);\n        }\n    }\n\n    protected onResize(): void {\n        this.drawLineGraph();\n    }\n\n    private loadData(dataset: IDataset) {\n        if (this.timespan &&\n            this.datasetOptions.has(dataset.internalId) &&\n            this.datasetOptions.get(dataset.internalId).visible) {\n            const buffer = this.timeSrvc.getBufferedTimespan(this.timespan, 0.2);\n            const option = this.datasetOptions.get(dataset.internalId);\n            this.api.getData(dataset.id, dataset.url, buffer,\n                {\n                    generalize: option.generalize\n                })\n                .subscribe((result) => {\n                    this.dataLength = result.values.length;\n                    this.datasetMap.get(dataset.internalId).data = result.values;\n                    this.processDataForId(dataset.internalId);\n                    this.drawLineGraph();\n                });\n        } else {\n            this.drawLineGraph();\n        }\n    }\n\n    private processAllData() {\n        this.baseValues = [];\n        this.datasetIds.forEach((id) => this.processDataForId(id));\n    }\n\n    private processDataForId(internalId: string) {\n        if (this.datasetOptions.get(internalId).visible) {\n            const datasetEntry = this.datasetMap.get(internalId);\n            const firstEntry = this.baseValues.length === 0;\n            let previous: DataEntry = null;\n            datasetEntry.data.forEach((elem, idx) => {\n                if (firstEntry) {\n                    const entry = this.createDataEntry(internalId, elem, previous, idx);\n                    if (this.selection) {\n                        if (idx >= this.selection.from && idx = this.selection.from && idx  {\n        return this.yScaleBase(d.value);\n    }\n\n    private calcXValue = (d: DataEntry, i: number) => {\n        const xDiagCoord = this.xScaleBase(this.getXValue(d));\n        d.xDiagCoord = xDiagCoord;\n        return xDiagCoord;\n    }\n\n    private calculateHeight(): number {\n        return this.rawSvg.node().height.baseVal.value - this.margin.top - this.margin.bottom;\n    }\n\n    private calculateWidth(): number {\n        return this.rawSvg.node().width.baseVal.value - this.margin.left - this.margin.right - this.maxLabelwidth;\n    }\n\n    private getXValue(data: DataEntry) {\n        switch (this.graphOptions.axisType) {\n            case D3AxisType.Distance:\n                return data.dist;\n            case D3AxisType.Time:\n                return data.timestamp;\n            case D3AxisType.Ticks:\n                return data.tick;\n            default:\n                return data.tick;\n        }\n    }\n\n    private drawDots(values: DataEntry[], yScale: d3.ScaleLinear, options: DrawOptions) {\n        this.graph.selectAll('dot')\n            .data(values)\n            .enter().append('circle')\n            .attr('stroke', options.color)\n            .attr('r', 1.5)\n            .attr('fill', options.color)\n            .attr('cx', this.calcXValue)\n            .attr('cy', (d: DataEntry) => yScale(d[options.id]));\n    }\n\n    private drawValueLine(values: DataEntry[], yScale: d3.ScaleLinear, options: DrawOptions) {\n        this.graph.append('svg:path')\n            .datum(values)\n            .attr('class', 'line')\n            .attr('fill', 'none')\n            .attr('stroke', options.color)\n            .attr('stroke-width', 1)\n            .attr('d', line()\n                .x(this.calcXValue)\n                .y((d: DataEntry) => yScale(d[options.id]))\n                .curve(curveLinear));\n    }\n\n    private drawGraph(yScale: d3.ScaleLinear, options: DrawOptions) {\n        if (this.graphOptions.dotted) {\n            this.drawDots(this.baseValues, yScale, options);\n        } else {\n            this.drawValueLine(this.baseValues, yScale, options);\n        }\n    }\n\n    private drawLineGraph() {\n        if (!this.baseValues || this.baseValues.length === 0 || !this.graph) {\n            return;\n        }\n\n        this.height = this.calculateHeight();\n        this.width = this.calculateWidth();\n\n        this.graph.selectAll('*').remove();\n\n        this.bufferSum = 0;\n\n        this.yScaleBase = null;\n\n        this.datasetMap.forEach((datasetEntry, id) => {\n            if (this.datasetOptions.has(id) && datasetEntry.data && this.datasetOptions.get(id).visible) {\n                datasetEntry.drawOptions = {\n                    uom: datasetEntry.dataset.uom,\n                    id: datasetEntry.dataset.internalId,\n                    color: this.datasetOptions.get(id).color,\n                    first: this.yScaleBase === null,\n                    offset: this.bufferSum\n                };\n                const axisResult = this.drawYAxis(datasetEntry.drawOptions);\n                if (this.yScaleBase === null) {\n                    this.yScaleBase = axisResult.yScale;\n                } else {\n                    this.bufferSum = axisResult.buffer;\n                }\n                datasetEntry.yScale = axisResult.yScale;\n            }\n        });\n\n        if (!this.yScaleBase) {\n            return;\n        }\n\n        // draw right axis as border\n        this.graph.append('svg:g')\n            .attr('class', 'y axis')\n            .attr('transform', 'translate(' + this.width + ', 0)')\n            .call(axisRight(this.yScaleBase).tickSize(0).ticks(0));\n\n        this.drawXAxis(this.bufferSum);\n\n        this.datasetMap.forEach((entry, id) => {\n            if (this.datasetOptions.has(id) && this.datasetOptions.get(id).visible && entry.data) {\n                this.drawGraph(entry.yScale, entry.drawOptions);\n            }\n        });\n\n        this.background = this.graph.append('svg:rect')\n            .attr('width', this.width - this.bufferSum)\n            .attr('height', this.height)\n            .attr('fill', 'none')\n            .attr('stroke', 'none')\n            .attr('pointer-events', 'all')\n            .attr('transform', 'translate(' + this.bufferSum + ', 0)')\n            .on('mousemove.focus', this.mousemoveHandler)\n            .on('mouseout.focus', this.mouseoutHandler)\n            .on('mousedown.drag', this.dragStartHandler)\n            .on('mousemove.drag', this.dragHandler)\n            .on('mouseup.drag', this.dragEndHandler);\n\n        this.focusG = this.graph.append('g');\n        this.highlightFocus = this.focusG.append('svg:line')\n            .attr('class', 'mouse-focus-line')\n            .attr('x2', '0')\n            .attr('y2', '0')\n            .attr('x1', '0')\n            .attr('y1', '0')\n            .style('stroke', 'black')\n            .style('stroke-width', '1px');\n\n        this.datasetMap.forEach((entry, id) => {\n            if (this.datasetOptions.has(id) && this.datasetOptions.get(id).visible && entry.data) {\n                entry.focusLabelRect = this.focusG.append('svg:rect')\n                    .style('fill', 'white')\n                    .style('stroke', 'none')\n                    .style('pointer-events', 'none');\n                entry.focusLabel = this.focusG.append('svg:text').attr('class', 'mouse-focus-label-x')\n                    .style('pointer-events', 'none')\n                    .style('fill', this.datasetOptions.get(id).color)\n                    .style('font-weight', 'lighter');\n            }\n        });\n\n        this.focuslabelTime = this.focusG.append('svg:text')\n            .style('pointer-events', 'none')\n            .attr('class', 'mouse-focus-label-x');\n        this.focuslabelY = this.focusG.append('svg:text')\n            .style('pointer-events', 'none')\n            .attr('class', 'mouse-focus-label-y');\n    }\n\n    private mousemoveHandler = () => {\n        if (!this.baseValues || this.baseValues.length === 0) {\n            return;\n        }\n        const coords = mouse(this.background.node());\n        const idx = this.getItemForX(coords[0] + this.bufferSum, this.baseValues);\n        this.showDiagramIndicator(idx);\n        this.onHoverHighlight.emit(this.baseValues[idx].tick);\n    }\n\n    private mouseoutHandler = () => {\n        this.hideDiagramIndicator();\n    }\n\n    private dragStartHandler = () => {\n        this.dragging = false;\n        this.dragStart = mouse(this.background.node());\n    }\n\n    private dragHandler = () => {\n        this.dragging = true;\n        this.drawDragRectangle();\n    }\n\n    private dragEndHandler = () => {\n        if (!this.dragStart || !this.dragging) {\n            this.onSelectionChangedFinished.emit({ from: 0, to: this.dataLength });\n        } else {\n            const from = this.getItemForX(this.dragStart[0] + this.bufferSum, this.baseValues);\n            const to = this.getItemForX(this.dragCurrent[0] + this.bufferSum, this.baseValues);\n            this.onSelectionChangedFinished.emit(this.prepareRange(this.baseValues[from].tick, this.baseValues[to].tick));\n        }\n        this.dragStart = null;\n        this.dragging = false;\n        this.resetDrag();\n    }\n\n    private prepareRange(from: number, to: number): D3SelectionRange {\n        if (from  {\n        const item = this.baseValues[idx];\n        this.focusG.style('visibility', 'visible');\n        this.highlightFocus.attr('x1', item.xDiagCoord)\n            .attr('y1', 0)\n            .attr('x2', item.xDiagCoord)\n            .attr('y2', this.height)\n            .classed('hidden', false);\n\n        let onLeftSide = false;\n        if ((this.background.node().getBBox().width + this.bufferSum) / 2 > item.xDiagCoord) { onLeftSide = true; }\n\n        this.showLabelValues(item, onLeftSide);\n        this.showTimeIndicatorLabel(item, onLeftSide);\n        this.showBottomIndicatorLabel(item, onLeftSide);\n    }\n\n    private showLabelValues(item: DataEntry, onLeftSide: boolean) {\n        this.datasetMap.forEach((entry, id) => {\n            if (this.datasetOptions.get(id).visible) {\n                if (entry.focusLabel) {\n                    entry.focusLabel.text(item[id] + (entry.dataset.uom ? entry.dataset.uom : ''));\n                    const entryX = onLeftSide ?\n                        item.xDiagCoord + 2 : item.xDiagCoord - this.getDimensions(entry.focusLabel.node()).w;\n                    entry.focusLabel\n                        .attr('x', entryX)\n                        .attr('y', entry.yScale(item[id]) + this.getDimensions(entry.focusLabel.node()).h - 3);\n                    entry.focusLabelRect\n                        .attr('x', entryX)\n                        .attr('y', entry.yScale(item[id]))\n                        .attr('width', this.getDimensions(entry.focusLabel.node()).w)\n                        .attr('height', this.getDimensions(entry.focusLabel.node()).h);\n                }\n            }\n        });\n    }\n\n    private showTimeIndicatorLabel(item: DataEntry, onLeftSide: boolean) {\n        this.focuslabelTime.text(moment(item.timestamp).format('DD.MM.YY HH:mm'));\n        this.focuslabelTime\n            .attr('x', onLeftSide ? item.xDiagCoord + 2 : item.xDiagCoord - this.getDimensions(this.focuslabelTime.node()).w)\n            .attr('y', 13);\n    }\n\n    private showBottomIndicatorLabel(item: DataEntry, onLeftSide: boolean) {\n        if (this.graphOptions.axisType === D3AxisType.Distance) {\n            this.focuslabelY.text(item.dist + ' km');\n        }\n        if (this.graphOptions.axisType === D3AxisType.Ticks) {\n            this.focuslabelY.text('Measurement: ' + item.tick);\n        }\n        this.focuslabelY\n            .attr('y', this.calculateHeight() - 5)\n            .attr('x', onLeftSide ? item.xDiagCoord + 2 : item.xDiagCoord - this.getDimensions(this.focuslabelY.node()).w);\n    }\n\n    private getDimensions(el: any) {\n        let w = 0;\n        let h = 0;\n        if (el) {\n            const dimensions = el.getBBox();\n            w = dimensions.width;\n            h = dimensions.height;\n        } else {\n            console.log('error: getDimensions() ' + el + ' not found.');\n        }\n        return {\n            w,\n            h\n        };\n    }\n\n    private getItemForX(x: number, data: DataEntry[]) {\n        const index = this.xScaleBase.invert(x);\n        const bisectDate = bisector((d: DataEntry) => {\n            switch (this.graphOptions.axisType) {\n                case D3AxisType.Distance:\n                    return d.dist;\n                case D3AxisType.Time:\n                    return d.timestamp;\n                case D3AxisType.Ticks:\n                default:\n                    return d.tick;\n            }\n        }).left;\n        return bisectDate(this.baseValues, index);\n    }\n\n    private drawYAxis(options: DrawOptions): any {\n        const range = extent(this.baseValues, (datum, index, array) => {\n            return datum[options.id]; // here with ID\n        });\n        const rangeOffset = (range[1] - range[0]) * 0.10;\n        const yScale = scaleLinear()\n            .domain([range[0] - rangeOffset, range[1] + rangeOffset])\n            .range([this.height, 0]);\n\n        this.yAxisGen = axisLeft(yScale).ticks(5);\n\n        // draw y axis\n        const axis = this.graph.append('svg:g')\n            .attr('class', 'y axis')\n            .call(this.yAxisGen);\n\n        // draw y axis label\n        const text = this.graph.append('text')\n            .attr('transform', 'rotate(-90)')\n            .attr('dy', '1em')\n            .style('text-anchor', 'middle')\n            .style('fill', options.color)\n            .text(options.uom);\n\n        const axisWidth = axis.node().getBBox().width + 5 + this.getDimensions(text.node()).h;\n        const buffer = options.offset + (axisWidth  '')\n                );\n        }\n\n        return {\n            buffer,\n            yScale\n        };\n    }\n\n    private drawXAxis(buffer: number) {\n        this.xScaleBase = scaleLinear()\n            .domain(this.getXDomain(this.baseValues))\n            .range([buffer, this.width]);\n\n        const xAxisGen = axisBottom(this.xScaleBase).ticks(5);\n\n        if (this.graphOptions.axisType === D3AxisType.Time) {\n            xAxisGen.tickFormat((d) => {\n                return timeFormat('%d.%m.%Y %H:%M:%S')(new Date(d.valueOf()));\n            });\n        }\n\n        // draw x axis\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(xAxisGen);\n\n        // draw the x grid lines\n        this.graph.append('svg:g')\n            .attr('class', 'grid')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(axisBottom(this.xScaleBase)\n                .ticks(10)\n                .tickSize(-this.height)\n                .tickFormat(() => '')\n            );\n\n        // draw upper axis as border\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .call(axisTop(this.xScaleBase).ticks(0).tickSize(0));\n\n        // text label for the x axis\n        this.graph.append('text')\n            .attr('x', (this.width + buffer) / 2)\n            .attr('y', this.height + this.margin.bottom - 5)\n            .style('text-anchor', 'middle')\n            .text(this.getXAxisLabel());\n    }\n\n    private getXDomain(values: DataEntry[]) {\n        switch (this.graphOptions.axisType) {\n            case D3AxisType.Distance:\n                return [values[0].dist, values[values.length - 1].dist];\n            case D3AxisType.Time:\n                return [values[0].timestamp, values[values.length - 1].timestamp];\n            default:\n                return [values[0].tick, values[values.length - 1].tick];\n        }\n    }\n\n    private getXAxisLabel() {\n        switch (this.graphOptions.axisType) {\n            case D3AxisType.Distance:\n                return 'Distance';\n            case D3AxisType.Time:\n                return 'Time';\n            default:\n                return 'Ticks';\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventingApiService.html":{"url":"classes/EventingApiService.html","title":"class - EventingApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventingApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/eventing-api.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ApiInterface\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                getEvent\n                            \n                            \n                                    Public\n                                    \n                                getEvents\n                            \n                            \n                                    Public\n                                    \n                                getSubscription\n                            \n                            \n                                    Public\n                                    \n                                getSubscriptions\n                            \n                            \n                                    Protected\n                                createRequestTimespan\n                            \n                            \n                                    Protected\n                                createRequestUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            getEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEvent(id: string, apiUrl: string, options?: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-api.service.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            getEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEvents(apiUrl: string, params?: EventingEventFilter, options?: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-api.service.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    EventingEventFilter\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            getSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSubscription(id: string, apiUrl: string, options?: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-api.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            getSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSubscriptions(apiUrl: string, params?: EventingSubscriptionFilter, options?: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-api.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    EventingSubscriptionFilter\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createRequestTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createRequestTimespan(timespan: Timespan)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ApiInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in ApiInterface:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createRequestUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createRequestUrl(apiUrl: string, endpoint: string, id?: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ApiInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in ApiInterface:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        endpoint\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiInterface, HttpRequestOptions } from '@helgoland/core';\nimport { Observable } from 'rxjs';\n\nimport { EventingEventFilter, EventingSubscriptionFilter } from './model/request';\nimport { EventingEvent, EventingEventResults, EventingSubscription, EventingSubscriptionResults } from './model/response';\n\nexport abstract class EventingApiService extends ApiInterface {\n\n  public abstract getEvents(apiUrl: string, params?: EventingEventFilter, options?: HttpRequestOptions): Observable;\n\n  public abstract getEvent(id: string, apiUrl: string, options?: HttpRequestOptions): Observable;\n\n  public abstract getSubscriptions(apiUrl: string, params?: EventingSubscriptionFilter, options?: HttpRequestOptions): Observable;\n\n  public abstract getSubscription(id: string, apiUrl: string, options?: HttpRequestOptions): Observable;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventingEvent.html":{"url":"interfaces/EventingEvent.html","title":"interface - EventingEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventingEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/response.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Id\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                        eventType\n                                \n                                \n                                        label\n                                \n                                \n                                        notificationLevel\n                                \n                                \n                                        publication\n                                \n                                \n                                        subscription\n                                \n                                \n                                        timestamp\n                                \n                                \n                                        timestampCreated\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventType\n                                    \n                                \n                                \n                                    \n                                        eventType:     Id\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Id\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notificationLevel\n                                    \n                                \n                                \n                                    \n                                        notificationLevel:     Id\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Id\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publication\n                                    \n                                \n                                \n                                    \n                                        publication:     Id\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Id\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                    \n                                \n                                \n                                    \n                                        subscription:     Id\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Id\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestampCreated\n                                    \n                                \n                                \n                                    \n                                        timestampCreated:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Id {\n    id: string;\n    href: string;\n}\n\nexport interface EventingEvent extends Id {\n    label: string;\n    eventType: Id;\n    notificationLevel: Id;\n    publication: Id;\n    subscription: Id;\n    timestamp: number;\n    timestampCreated: number;\n    data?: {\n        eventTrigger: {\n            code: number;\n            label: string;\n            threshold: number;\n            thresholdUnit: string;\n        }\n        previousTimestamp: number;\n        previousValue: number;\n        unit: string;\n        value: number;\n    };\n}\n\nexport interface EventingEventResults {\n    data: EventingEvent[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingSubscription extends Id {\n    deliveryMethod: Id;\n    template: EventingTemplate;\n    user: Id;\n}\n\nexport interface EventingSubscriptionResults {\n    data: EventingSubscription[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingTemplate extends Id {\n    label: string;\n    publication: Id;\n}\n\nexport interface CollectionMetadata {\n    limit: number;\n    offset: number;\n    total: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventingEventFilter.html":{"url":"interfaces/EventingEventFilter.html","title":"interface - EventingEventFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventingEventFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/request.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EventingFilter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        latest\n                                \n                                \n                                            Optional\n                                        subscriptions\n                                \n                                \n                                            Optional\n                                        timespan\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latest\n                                    \n                                \n                                \n                                    \n                                        latest:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscriptions\n                                    \n                                \n                                \n                                    \n                                        subscriptions:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timespan\n                                    \n                                \n                                \n                                    \n                                        timespan:     Timespan\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timespan\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timespan } from '@helgoland/core';\n\nexport interface EventingFilter {\n    expanded?: boolean;\n    offset?: number;\n    limit?: number;\n}\n\nexport interface EventingEventFilter extends EventingFilter {\n    latest?: boolean;\n    subscriptions?: string;\n    timespan?: Timespan;\n}\n\nexport interface EventingSubscriptionFilter extends EventingFilter { }\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventingEventResults.html":{"url":"interfaces/EventingEventResults.html","title":"interface - EventingEventResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventingEventResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/response.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        metadata\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     EventingEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventingEvent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                    \n                                \n                                \n                                    \n                                        metadata:     CollectionMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CollectionMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Id {\n    id: string;\n    href: string;\n}\n\nexport interface EventingEvent extends Id {\n    label: string;\n    eventType: Id;\n    notificationLevel: Id;\n    publication: Id;\n    subscription: Id;\n    timestamp: number;\n    timestampCreated: number;\n    data?: {\n        eventTrigger: {\n            code: number;\n            label: string;\n            threshold: number;\n            thresholdUnit: string;\n        }\n        previousTimestamp: number;\n        previousValue: number;\n        unit: string;\n        value: number;\n    };\n}\n\nexport interface EventingEventResults {\n    data: EventingEvent[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingSubscription extends Id {\n    deliveryMethod: Id;\n    template: EventingTemplate;\n    user: Id;\n}\n\nexport interface EventingSubscriptionResults {\n    data: EventingSubscription[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingTemplate extends Id {\n    label: string;\n    publication: Id;\n}\n\nexport interface CollectionMetadata {\n    limit: number;\n    offset: number;\n    total: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventingFilter.html":{"url":"interfaces/EventingFilter.html","title":"interface - EventingFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventingFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/request.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        expanded\n                                \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        offset\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                    \n                                \n                                \n                                    \n                                        expanded:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timespan } from '@helgoland/core';\n\nexport interface EventingFilter {\n    expanded?: boolean;\n    offset?: number;\n    limit?: number;\n}\n\nexport interface EventingEventFilter extends EventingFilter {\n    latest?: boolean;\n    subscriptions?: string;\n    timespan?: Timespan;\n}\n\nexport interface EventingSubscriptionFilter extends EventingFilter { }\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventingImplApiInterface.html":{"url":"injectables/EventingImplApiInterface.html","title":"injectable - EventingImplApiInterface","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  EventingImplApiInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addParameterFilter\n                            \n                            \n                                    Private\n                                addTimespan\n                            \n                            \n                                    Private\n                                createBasicAuthHeader\n                            \n                            \n                                    Public\n                                getEvent\n                            \n                            \n                                    Public\n                                getEvents\n                            \n                            \n                                    Public\n                                getSubscription\n                            \n                            \n                                    Public\n                                getSubscriptions\n                            \n                            \n                                    Protected\n                                prepareFilterParams\n                            \n                            \n                                    Protected\n                                requestApi\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addParameterFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addParameterFilter(params: EventingFilter, key: string, httpParams: HttpParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    EventingFilter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        httpParams\n                                                        \n                                                                    HttpParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpParams\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addTimespan(timespan: Timespan, httpParams: HttpParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        httpParams\n                                                        \n                                                                    HttpParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpParams\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createBasicAuthHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createBasicAuthHeader(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpHeaders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEvent(id: string, apiUrl: string, options: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEvents(apiUrl: string, filterParameter: EventingEventFilter, options: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        filterParameter\n                                                        \n                                                                    EventingEventFilter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSubscription(id: string, apiUrl: string, options: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSubscriptions(apiUrl: string, filterParameter: EventingSubscriptionFilter, options: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        filterParameter\n                                                        \n                                                                    EventingSubscriptionFilter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            prepareFilterParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        prepareFilterParams(params: EventingFilter)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    EventingFilter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpParams\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            requestApi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        requestApi(url: string, params: HttpParams, options: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:42\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    HttpParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                new HttpParams()\n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpRequestOptions, HttpService, Timespan, UriParameterCoder } from '@helgoland/core';\nimport { Observable } from 'rxjs';\n\nimport { EventingApiService } from './eventing-api.service';\nimport { EventingEventFilter, EventingFilter, EventingSubscriptionFilter } from './model/request';\nimport { EventingEvent, EventingEventResults, EventingSubscription, EventingSubscriptionResults } from './model/response';\n\n@Injectable()\nexport class EventingImplApiInterface extends EventingApiService {\n\n    constructor(\n        private httpService: HttpService\n    ) { super(); }\n\n    public getEvents(apiUrl: string, filterParameter: EventingEventFilter = {}, options: HttpRequestOptions = {}): Observable {\n        const url = this.createRequestUrl(apiUrl, 'events');\n        let httpParams = this.prepareFilterParams(filterParameter);\n        httpParams = this.addParameterFilter(filterParameter, 'latest', httpParams);\n        httpParams = this.addParameterFilter(filterParameter, 'subscriptions', httpParams);\n        httpParams = this.addTimespan(filterParameter.timespan, httpParams);\n        return this.requestApi(url, httpParams, options);\n    }\n\n    public getEvent(id: string, apiUrl: string, options: HttpRequestOptions = {}): Observable {\n        const url = this.createRequestUrl(apiUrl, 'events', id);\n        return this.requestApi(url, null, options);\n    }\n\n    public getSubscriptions(apiUrl: string, filterParameter: EventingSubscriptionFilter = {}, options: HttpRequestOptions = {}): Observable {\n        const url = this.createRequestUrl(apiUrl, 'subscriptions');\n        const httpParams = this.prepareFilterParams(filterParameter);\n        return this.requestApi(url, httpParams, options);\n    }\n\n    public getSubscription(id: string, apiUrl: string, options: HttpRequestOptions = {}): Observable {\n        const url = this.createRequestUrl(apiUrl, 'subscriptions', id);\n        return this.requestApi(url, null, options);\n    }\n\n    protected requestApi(url: string, params: HttpParams = new HttpParams(), options: HttpRequestOptions = {}): Observable {\n        const headers = this.createBasicAuthHeader(options.basicAuthToken);\n        return this.httpService.client(options).get(url, { params, headers });\n    }\n\n    protected prepareFilterParams(params: EventingFilter): HttpParams {\n        let httpParams = new HttpParams({ encoder: new UriParameterCoder() });\n        httpParams = this.addParameterFilter(params, 'expanded', httpParams);\n        httpParams = this.addParameterFilter(params, 'offset', httpParams);\n        httpParams = this.addParameterFilter(params, 'limit', httpParams);\n        return httpParams;\n    }\n\n    private addTimespan(timespan: Timespan, httpParams: HttpParams): HttpParams {\n        if (timespan !== undefined) {\n            return httpParams.set('timespan', this.createRequestTimespan(timespan));\n        }\n        return httpParams;\n    }\n\n    private createBasicAuthHeader(token: string): HttpHeaders {\n        const headers = new HttpHeaders();\n        if (token) { return headers.set('Authorization', token); }\n        return headers;\n    }\n\n    private addParameterFilter(params: EventingFilter, key: string, httpParams: HttpParams): HttpParams {\n        if (params && params[key] !== undefined) {\n            return httpParams.set(key, params[key]);\n        }\n        return httpParams;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventingModule.html":{"url":"modules/EventingModule.html","title":"module - EventingModule","body":"\n                   \n\n\n\n\n  Modules\n  EventingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/eventing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: [],\n  providers: []\n})\nexport class EventingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventingSubscription.html":{"url":"interfaces/EventingSubscription.html","title":"interface - EventingSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventingSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/response.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Id\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deliveryMethod\n                                \n                                \n                                        template\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deliveryMethod\n                                    \n                                \n                                \n                                    \n                                        deliveryMethod:     Id\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Id\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template\n                                    \n                                \n                                \n                                    \n                                        template:     EventingTemplate\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventingTemplate\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     Id\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Id\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Id {\n    id: string;\n    href: string;\n}\n\nexport interface EventingEvent extends Id {\n    label: string;\n    eventType: Id;\n    notificationLevel: Id;\n    publication: Id;\n    subscription: Id;\n    timestamp: number;\n    timestampCreated: number;\n    data?: {\n        eventTrigger: {\n            code: number;\n            label: string;\n            threshold: number;\n            thresholdUnit: string;\n        }\n        previousTimestamp: number;\n        previousValue: number;\n        unit: string;\n        value: number;\n    };\n}\n\nexport interface EventingEventResults {\n    data: EventingEvent[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingSubscription extends Id {\n    deliveryMethod: Id;\n    template: EventingTemplate;\n    user: Id;\n}\n\nexport interface EventingSubscriptionResults {\n    data: EventingSubscription[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingTemplate extends Id {\n    label: string;\n    publication: Id;\n}\n\nexport interface CollectionMetadata {\n    limit: number;\n    offset: number;\n    total: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventingSubscriptionFilter.html":{"url":"interfaces/EventingSubscriptionFilter.html","title":"interface - EventingSubscriptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventingSubscriptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/request.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EventingFilter\n            \n\n\n\n\n    \n\n\n    \n        import { Timespan } from '@helgoland/core';\n\nexport interface EventingFilter {\n    expanded?: boolean;\n    offset?: number;\n    limit?: number;\n}\n\nexport interface EventingEventFilter extends EventingFilter {\n    latest?: boolean;\n    subscriptions?: string;\n    timespan?: Timespan;\n}\n\nexport interface EventingSubscriptionFilter extends EventingFilter { }\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventingSubscriptionResults.html":{"url":"interfaces/EventingSubscriptionResults.html","title":"interface - EventingSubscriptionResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventingSubscriptionResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/response.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        metadata\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     EventingSubscription[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventingSubscription[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                    \n                                \n                                \n                                    \n                                        metadata:     CollectionMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CollectionMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Id {\n    id: string;\n    href: string;\n}\n\nexport interface EventingEvent extends Id {\n    label: string;\n    eventType: Id;\n    notificationLevel: Id;\n    publication: Id;\n    subscription: Id;\n    timestamp: number;\n    timestampCreated: number;\n    data?: {\n        eventTrigger: {\n            code: number;\n            label: string;\n            threshold: number;\n            thresholdUnit: string;\n        }\n        previousTimestamp: number;\n        previousValue: number;\n        unit: string;\n        value: number;\n    };\n}\n\nexport interface EventingEventResults {\n    data: EventingEvent[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingSubscription extends Id {\n    deliveryMethod: Id;\n    template: EventingTemplate;\n    user: Id;\n}\n\nexport interface EventingSubscriptionResults {\n    data: EventingSubscription[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingTemplate extends Id {\n    label: string;\n    publication: Id;\n}\n\nexport interface CollectionMetadata {\n    limit: number;\n    offset: number;\n    total: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventingTemplate.html":{"url":"interfaces/EventingTemplate.html","title":"interface - EventingTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventingTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/response.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Id\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        publication\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publication\n                                    \n                                \n                                \n                                    \n                                        publication:     Id\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Id\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Id {\n    id: string;\n    href: string;\n}\n\nexport interface EventingEvent extends Id {\n    label: string;\n    eventType: Id;\n    notificationLevel: Id;\n    publication: Id;\n    subscription: Id;\n    timestamp: number;\n    timestampCreated: number;\n    data?: {\n        eventTrigger: {\n            code: number;\n            label: string;\n            threshold: number;\n            thresholdUnit: string;\n        }\n        previousTimestamp: number;\n        previousValue: number;\n        unit: string;\n        value: number;\n    };\n}\n\nexport interface EventingEventResults {\n    data: EventingEvent[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingSubscription extends Id {\n    deliveryMethod: Id;\n    template: EventingTemplate;\n    user: Id;\n}\n\nexport interface EventingSubscriptionResults {\n    data: EventingSubscription[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingTemplate extends Id {\n    label: string;\n    publication: Id;\n}\n\nexport interface CollectionMetadata {\n    limit: number;\n    offset: number;\n    total: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtendedScatterData.html":{"url":"interfaces/ExtendedScatterData.html","title":"interface - ExtendedScatterData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExtendedScatterData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/plotly/src/lib/plotly-profile-graph/plotly-profile-graph.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Partial\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        timestamp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, Component, ElementRef, EventEmitter, IterableDiffers, Output, ViewChild } from '@angular/core';\nimport {\n    DatasetApiInterface,\n    DatasetPresenterComponent,\n    PresenterHighlight,\n    IDataset,\n    InternalIdHandler,\n    ProfileDataEntry,\n    Time,\n    TimedDatasetOptions,\n    Timespan,\n} from '@helgoland/core';\nimport * as d3 from 'd3';\n\nimport * as Plotly from 'plotly.js';\n\ninterface RawData {\n    dataset: IDataset;\n    datas: ProfileDataEntry[];\n    options: TimedDatasetOptions[];\n}\n\ninterface ExtendedScatterData extends Partial {\n    timestamp: number;\n    id: string;\n}\n\nconst LINE_WIDTH_SELECTED = 5;\nconst LINE_WIDTH = 2;\nconst MARKER_SIZE_SELECTED = 10;\nconst MARKER_SIZE = 6;\n\n@Component({\n    selector: 'n52-plotly-profile-graph',\n    templateUrl: './plotly-profile-graph.component.html',\n    styleUrls: ['./plotly-profile-graph.component.scss']\n})\nexport class PlotlyProfileGraphComponent\n    extends DatasetPresenterComponent\n    implements AfterViewInit {\n\n    @Output()\n    public onHighlight: EventEmitter = new EventEmitter();\n\n    @ViewChild('plotly')\n    public plotlyElem: ElementRef;\n\n    private plotlyArea: any;\n    private preparedData: ExtendedScatterData[] = [];\n    private rawData: Map = new Map();\n    private counterXAxis = 0;\n    private counterYAxis = 0;\n\n    private layout: Layout = {\n        autosize: true,\n        showlegend: false,\n        dragmode: 'pan',\n        margin: {\n            l: 40,\n            r: 10,\n            b: 40,\n            t: 10\n            // pad: 100\n        },\n        hovermode: 'closest'\n    };\n\n    private settings: Partial = {\n        displayModeBar: false,\n        modeBarButtonsToRemove: [\n            'sendDataToCloud',\n            'hoverCompareCartesian'\n        ],\n        displaylogo: false,\n        showTips: false,\n        scrollZoom: true\n    };\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc);\n    }\n\n    public ngAfterViewInit(): void {\n        this.plotlyArea = this.plotlyElem.nativeElement;\n        this.drawChart();\n    }\n\n    public reloadData(): void {\n        console.log('reload data at ' + new Date());\n    }\n\n    // tslint:disable-next-line:no-empty\n    protected timeIntervalChanges(): void { }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getDataset(id, url).subscribe((dataset) => {\n            const options = this.datasetOptions.get(dataset.internalId);\n            options.forEach((option) => {\n                if (option.timestamp) {\n                    const timespan = new Timespan(option.timestamp);\n                    this.api.getData(id, url, timespan).subscribe((data) => {\n                        if (data.values.length === 1) {\n                            if (this.rawData.has(dataset.internalId)) {\n                                this.rawData.get(dataset.internalId).datas.push(data.values[0]);\n                                this.rawData.get(dataset.internalId).options.push(option);\n                            } else {\n                                this.rawData.set(dataset.internalId, {\n                                    dataset,\n                                    datas: [data.values[0]],\n                                    options: [option]\n                                });\n                            }\n                        }\n                        this.drawChart();\n                    });\n                }\n            });\n        });\n    }\n\n    protected removeDataset(internalId: string): void {\n        this.rawData.delete(internalId);\n        this.drawChart();\n    }\n\n    protected setSelectedId(internalId: string): void {\n        this.drawChart();\n    }\n\n    protected removeSelectedId(internalId: string): void {\n        this.drawChart();\n    }\n\n    // tslint:disable-next-line:no-empty\n    protected graphOptionsChanged(options: any): void { }\n\n    protected datasetOptionsChanged(internalId: string, options: TimedDatasetOptions[], firstChange: boolean): void {\n        if (!firstChange) {\n            // remove unused options\n            const removedIdx = this.rawData.get(internalId).options.findIndex((option) => {\n                const idx = options.findIndex((e) => e.timestamp === option.timestamp);\n                if (idx === -1) {\n                    return true;\n                }\n            });\n            if (removedIdx > -1) {\n                this.rawData.get(internalId).options.splice(removedIdx, 1);\n                this.rawData.get(internalId).datas.splice(removedIdx, 1);\n            }\n            this.drawChart();\n        }\n    }\n\n    protected onResize(): void {\n        this.redrawChart();\n    }\n\n    private processData() {\n        this.clearLayout();\n        this.clearData();\n        this.rawData.forEach((dataEntry) => {\n            dataEntry.options.forEach((option, key) => {\n                if (option.visible) {\n                    const x = new Array();\n                    const y = new Array();\n                    const selected = this.selectedDatasetIds.indexOf(dataEntry.dataset.internalId) >= 0;\n                    dataEntry.datas[key].value.forEach((entry) => {\n                        x.push(entry.value);\n                        y.push(entry.vertical);\n                    });\n                    const prepared: ExtendedScatterData = {\n                        x,\n                        y,\n                        type: 'scatter',\n                        name: '',\n                        timestamp: option.timestamp,\n                        id: dataEntry.dataset.internalId,\n                        yaxis: this.createYAxis(dataEntry.dataset, dataEntry.datas[key]),\n                        xaxis: this.createXAxis(dataEntry.dataset, dataEntry.datas[key]),\n                        // hovertext: dataEntry.label,\n                        line: {\n                            color: option.color,\n                            width: selected ? LINE_WIDTH_SELECTED : LINE_WIDTH\n                        },\n                        marker: {\n                            size: selected ? MARKER_SIZE_SELECTED : MARKER_SIZE\n                        }\n                    };\n                    this.preparedData.push(prepared);\n                }\n            });\n        });\n\n        this.updateAxis();\n    }\n\n    private createXAxis(dataset: IDataset, data: ProfileDataEntry): string {\n        let axis;\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis') && this.layout[key].title === dataset.uom) {\n                axis = this.layout[key];\n            }\n        }\n        const range = d3.extent(data.value, (d) => d.value);\n        if (!axis) {\n            this.counterXAxis = this.counterXAxis + 1;\n            axis = this.layout['xaxis' + this.counterXAxis] = {\n                id: 'x' + (this.counterXAxis > 1 ? this.counterXAxis : ''),\n                anchor: 'free',\n                title: dataset.uom,\n                zeroline: true,\n                hoverformat: '.2f',\n                showline: false,\n                range: [range[0], range[1]],\n                overlaying: '',\n                // rangemode: 'tozero',\n                fixedrange: false\n            };\n            if (this.counterXAxis !== 1) {\n                axis.overlaying = 'x';\n            }\n        } else {\n            axis.range = d3.extent([range[0], range[1], axis.range[0], axis.range[1]]);\n        }\n        return axis.id;\n    }\n\n    private createYAxis(dataset: IDataset, data: ProfileDataEntry): string {\n        let axis;\n        // find axis\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) &&\n                key.startsWith('yaxis') &&\n                this.layout[key].title === data.verticalUnit) {\n                axis = this.layout[key];\n            }\n        }\n        if (!axis) {\n            // add axis\n            this.counterYAxis = this.counterYAxis + 1;\n            axis = this.layout[('yaxis' + this.counterYAxis)] = {\n                id: 'y' + (this.counterYAxis > 1 ? this.counterYAxis : ''),\n                // zeroline: true,\n                anchor: 'free',\n                hoverformat: '.2r',\n                side: 'left',\n                autorange: 'reversed',\n                showline: false,\n                overlaying: '',\n                title: data.verticalUnit,\n                fixedrange: false\n            };\n            if (this.counterYAxis !== 1) {\n                axis.overlaying = 'y';\n            }\n        }\n        return axis.id;\n    }\n\n    private updateAxis() {\n        if (this.counterYAxis > 1) {\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                    this.layout[key].domain = [(0.1 * this.counterYAxis) - 0.1, 1];\n                }\n            }\n            let yaxisCount = 0;\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('yaxis')) {\n                    this.layout[key].position = 0.1 * yaxisCount;\n                    yaxisCount += 1;\n                }\n            }\n        }\n        if (this.counterXAxis > 1) {\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('yaxis')) {\n                    this.layout[key].domain = [(0.06 * this.counterXAxis) - 0.06, 1];\n                }\n            }\n            let xaxisCount = 0;\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                    this.layout[key].position = 0.06 * xaxisCount;\n                    xaxisCount += 1;\n                }\n            }\n        }\n        // add offset to xaxis ranges\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                const range = this.layout[key].range;\n                const rangeOffset = (range[1] - range[0]) * 0.05;\n                this.layout[key].range = [range[0] - rangeOffset, range[1] + rangeOffset];\n            }\n        }\n    }\n\n    private drawChart() {\n        if (this.plotlyArea && this.rawData.size > 0) {\n            this.processData();\n            Plotly.newPlot(this.plotlyArea, this.preparedData, this.layout, this.settings);\n            this.plotlyArea.on('plotly_hover', (entry: any) => {\n                if (entry.points.length === 1) {\n                    this.onHighlight.emit({\n                        internalId: entry.points[0].data.id,\n                        dataIndex: entry.points[0].pointNumber\n                    });\n                }\n            });\n        }\n    }\n\n    private clearLayout() {\n        // todo remove yaxis\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && (key.startsWith('yaxis') || key.startsWith('xaxis'))) {\n                delete this.layout[key];\n            }\n        }\n        // reset counter\n        this.counterYAxis = 0;\n        this.counterXAxis = 0;\n    }\n\n    private clearData() {\n        this.preparedData = [];\n    }\n\n    private redrawChart() {\n        if (this.plotlyArea) {\n            Plotly.relayout(this.plotlyArea, {});\n        }\n    }\n}\n\ninterface ScatterData extends Partial {\n    id: string;\n    timestamp: number;\n}\n\ninterface Layout extends Partial {\n    [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExtendedTimeseries.html":{"url":"classes/ExtendedTimeseries.html","title":"class - ExtendedTimeseries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExtendedTimeseries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Timeseries\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                selected\n                            \n                            \n                                    Public\n                                firstValue\n                            \n                            \n                                    Public\n                                hasData\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                internalId\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                lastValue\n                            \n                            \n                                    Public\n                                parameters\n                            \n                            \n                                    Public\n                                referenceValues\n                            \n                            \n                                    Public\n                                station\n                            \n                            \n                                    Public\n                                    Optional\n                                statusIntervals\n                            \n                            \n                                    Public\n                                uom\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstValue:     FirstLastValue\n\n                    \n                \n                    \n                        \n                            Type :     FirstLastValue\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasData:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            internalId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        internalId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastValue:     FirstLastValue\n\n                    \n                \n                    \n                        \n                            Type :     FirstLastValue\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parameters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parameters:     ParameterConstellation\n\n                    \n                \n                    \n                        \n                            Type :     ParameterConstellation\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            referenceValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        referenceValues:     ReferenceValue[]\n\n                    \n                \n                    \n                        \n                            Type :     ReferenceValue[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            station\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        station:     Station\n\n                    \n                \n                    \n                        \n                            Type :     Station\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            statusIntervals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statusIntervals:     StatusInterval[]\n\n                    \n                \n                    \n                        \n                            Type :     StatusInterval[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uom:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { DatasetApiInterface, Station, Timeseries } from '@helgoland/core';\n\nexport class ExtendedTimeseries extends Timeseries {\n    public selected: boolean;\n}\n\n@Component({\n    selector: 'n52-dataset-by-station-selector',\n    templateUrl: './dataset-by-station-selector.component.html',\n    styleUrls: ['./dataset-by-station-selector.component.scss']\n})\nexport class DatasetByStationSelectorComponent implements OnInit {\n\n    @Input()\n    public station: Station;\n\n    @Input()\n    public url: string;\n\n    @Input()\n    public defaultSelected = false;\n\n    @Output()\n    public onSelectionChanged: EventEmitter = new EventEmitter();\n\n    public timeseriesList: ExtendedTimeseries[] = [];\n\n    public counter: number;\n\n    constructor(\n        protected apiInterface: DatasetApiInterface\n    ) { }\n\n    public ngOnInit() {\n        if (this.station) {\n            this.apiInterface.getStation(this.station.properties.id, this.url)\n                .subscribe((station) => {\n                    this.station = station;\n                    this.counter = 0;\n                    for (const id in this.station.properties.timeseries) {\n                        if (this.station.properties.timeseries.hasOwnProperty(id)) {\n                            this.counter++;\n                            this.apiInterface.getSingleTimeseries(id, this.url)\n                                .subscribe((result) => {\n                                    const ts = result as ExtendedTimeseries;\n                                    ts.selected = this.defaultSelected;\n                                    this.timeseriesList.push(ts);\n                                    this.updateSelection();\n                                    this.counter--;\n                                }, (error) => {\n                                    this.counter--;\n                                });\n                        }\n                    }\n                });\n        }\n    }\n\n    public toggle(timeseries: ExtendedTimeseries) {\n        timeseries.selected = !timeseries.selected;\n        this.updateSelection();\n    }\n\n    private updateSelection() {\n        const selection = this.timeseriesList.filter((entry) => entry.selected);\n        this.onSelectionChanged.emit(selection);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExtentControlComponent.html":{"url":"components/ExtentControlComponent.html","title":"component - ExtentControlComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ExtentControlComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/map/src/lib/control/extent/extent.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-extent-control\n            \n\n\n\n\n            \n                templateUrl\n                ./extent.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                zoomToExtent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extent\n                            \n                            \n                                mapId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mapCache: MapCache)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/control/extent/extent.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapCache\n                                                  \n                                                        \n                                                                    MapCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        extent\n                    \n                    \n                            \n                            Type:    L.LatLngBoundsExpression\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/extent/extent.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/extent/extent.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zoomToExtent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        zoomToExtent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/extent/extent.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { MapCache } from '../../base/map-cache.service';\n\n@Component({\n  selector: 'n52-extent-control',\n  templateUrl: './extent.component.html'\n})\nexport class ExtentControlComponent {\n\n  @Input()\n  public mapId: string;\n\n  @Input()\n  public extent: L.LatLngBoundsExpression;\n\n  constructor(\n    protected mapCache: MapCache\n  ) { }\n\n  public zoomToExtent() {\n    this.mapCache.getMap(this.mapId).fitBounds(this.extent);\n  }\n\n}\n\n    \n\n    \n        \n  zoom to extent\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  zoom to extent'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExtentControlComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Favorite.html":{"url":"interfaces/Favorite.html","title":"interface - Favorite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Favorite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/favorite/src/lib/service/favorite.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IDataset, LocalStorage } from '@helgoland/core';\n\nconst CACHE_PARAM_FAVORITES_SINGLE = 'SingleFavorites';\nconst CACHE_PARAM_FAVORITES_GROUP = 'GroupFavorites';\n\n@Injectable()\nexport class FavoriteService {\n\n  private singleFavs: Map;\n  private groupFavs: Map;\n  private groupCounter = 0;\n\n  constructor(\n    protected localStorage: LocalStorage\n  ) {\n    this.loadFavorites();\n  }\n\n  public addFavorite(dataset: IDataset, label?: string): boolean {\n    if (!this.singleFavs.has(dataset.internalId)) {\n      this.singleFavs.set(dataset.internalId, {\n        id: dataset.internalId,\n        label: label ? label : dataset.label,\n        favorite: dataset\n      });\n      this.saveFavorites();\n      return true;\n    }\n    return false;\n  }\n\n  public hasFavorite(dataset: IDataset): boolean {\n    return this.singleFavs.has(dataset.internalId);\n  }\n\n  public getFavorites(): SingleFavorite[] {\n    return Array.from(this.singleFavs.values());\n  }\n\n  public removeFavorite(favoriteId: string): boolean {\n    if (this.singleFavs.has(favoriteId)) {\n      this.singleFavs.delete(favoriteId);\n      this.saveFavorites();\n      return true;\n    }\n    if (this.groupFavs.has(favoriteId)) {\n      this.groupFavs.delete(favoriteId);\n      this.saveFavorites();\n      return true;\n    }\n    return false;\n  }\n\n  public addFavoriteGroup(datasets: IDataset[], label?: string): boolean {\n    const id = 'Group' + this.groupCounter++;\n    this.groupFavs.set(id, {\n      id,\n      label: label ? label : id,\n      favorites: datasets\n    });\n    this.saveFavorites();\n    return true;\n  }\n\n  public getFavoriteGroups(): GroupFavorite[] {\n    return Array.from(this.groupFavs.values());\n  }\n\n  public removeAllFavorites(): boolean {\n    this.singleFavs.clear();\n    this.groupFavs.clear();\n    this.saveFavorites();\n    return true;\n  }\n\n  public changeLabel(favorite: Favorite, label: string) {\n    favorite.label = label;\n    if (isSingleFavorite(favorite)) { this.singleFavs.set(favorite.id, favorite); }\n    if (isGroupFavorite(favorite)) { this.groupFavs.set(favorite.id, favorite); }\n    this.saveFavorites();\n  }\n\n  private saveFavorites(): void {\n    this.localStorage.save(CACHE_PARAM_FAVORITES_SINGLE, this.getFavorites());\n    this.localStorage.save(CACHE_PARAM_FAVORITES_GROUP, this.getFavoriteGroups());\n  }\n\n  private loadFavorites(): void {\n    this.singleFavs = new Map();\n    this.groupFavs = new Map();\n    const loadedSingleFavs = this.localStorage.loadArray(CACHE_PARAM_FAVORITES_SINGLE);\n    if (loadedSingleFavs) {\n      loadedSingleFavs.forEach((entry) => this.singleFavs.set(entry.id, entry));\n    }\n    const loadedGroupFavs = this.localStorage.loadArray(CACHE_PARAM_FAVORITES_GROUP);\n    if (loadedGroupFavs) {\n      loadedGroupFavs.forEach((entry) => this.groupFavs.set(entry.id, entry));\n    }\n  }\n}\n\nexport interface Favorite {\n  id: string;\n  label: string;\n}\n\nexport interface SingleFavorite extends Favorite {\n  favorite: IDataset;\n}\n\nfunction isSingleFavorite(object: any): object is SingleFavorite {\n  return 'favorite' in object;\n}\n\nexport interface GroupFavorite extends Favorite {\n  favorites: IDataset[];\n}\n\nfunction isGroupFavorite(object: any): object is GroupFavorite {\n  return 'favorites' in object;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FavoriteService.html":{"url":"injectables/FavoriteService.html","title":"injectable - FavoriteService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  FavoriteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/favorite/src/lib/service/favorite.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                groupCounter\n                            \n                            \n                                    Private\n                                groupFavs\n                            \n                            \n                                    Private\n                                singleFavs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addFavorite\n                            \n                            \n                                    Public\n                                addFavoriteGroup\n                            \n                            \n                                    Public\n                                changeLabel\n                            \n                            \n                                    Public\n                                getFavoriteGroups\n                            \n                            \n                                    Public\n                                getFavorites\n                            \n                            \n                                    Public\n                                hasFavorite\n                            \n                            \n                                    Private\n                                loadFavorites\n                            \n                            \n                                    Public\n                                removeAllFavorites\n                            \n                            \n                                    Public\n                                removeFavorite\n                            \n                            \n                                    Private\n                                saveFavorites\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorage\n                                                  \n                                                        \n                                                                    LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addFavorite\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addFavorite(dataset: IDataset, label?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataset\n                                                        \n                                                                    IDataset\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addFavoriteGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addFavoriteGroup(datasets: IDataset[], label?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        datasets\n                                                        \n                                                                    IDataset[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeLabel(favorite: Favorite, label: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        favorite\n                                                        \n                                                                    Favorite\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFavoriteGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFavoriteGroups()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     GroupFavorite[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFavorites()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     SingleFavorite[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasFavorite\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasFavorite(dataset: IDataset)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataset\n                                                        \n                                                                    IDataset\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadFavorites()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeAllFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeAllFavorites()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFavorite\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFavorite(favoriteId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        favoriteId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            saveFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveFavorites()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            groupCounter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        groupCounter:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            groupFavs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        groupFavs:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            singleFavs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        singleFavs:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IDataset, LocalStorage } from '@helgoland/core';\n\nconst CACHE_PARAM_FAVORITES_SINGLE = 'SingleFavorites';\nconst CACHE_PARAM_FAVORITES_GROUP = 'GroupFavorites';\n\n@Injectable()\nexport class FavoriteService {\n\n  private singleFavs: Map;\n  private groupFavs: Map;\n  private groupCounter = 0;\n\n  constructor(\n    protected localStorage: LocalStorage\n  ) {\n    this.loadFavorites();\n  }\n\n  public addFavorite(dataset: IDataset, label?: string): boolean {\n    if (!this.singleFavs.has(dataset.internalId)) {\n      this.singleFavs.set(dataset.internalId, {\n        id: dataset.internalId,\n        label: label ? label : dataset.label,\n        favorite: dataset\n      });\n      this.saveFavorites();\n      return true;\n    }\n    return false;\n  }\n\n  public hasFavorite(dataset: IDataset): boolean {\n    return this.singleFavs.has(dataset.internalId);\n  }\n\n  public getFavorites(): SingleFavorite[] {\n    return Array.from(this.singleFavs.values());\n  }\n\n  public removeFavorite(favoriteId: string): boolean {\n    if (this.singleFavs.has(favoriteId)) {\n      this.singleFavs.delete(favoriteId);\n      this.saveFavorites();\n      return true;\n    }\n    if (this.groupFavs.has(favoriteId)) {\n      this.groupFavs.delete(favoriteId);\n      this.saveFavorites();\n      return true;\n    }\n    return false;\n  }\n\n  public addFavoriteGroup(datasets: IDataset[], label?: string): boolean {\n    const id = 'Group' + this.groupCounter++;\n    this.groupFavs.set(id, {\n      id,\n      label: label ? label : id,\n      favorites: datasets\n    });\n    this.saveFavorites();\n    return true;\n  }\n\n  public getFavoriteGroups(): GroupFavorite[] {\n    return Array.from(this.groupFavs.values());\n  }\n\n  public removeAllFavorites(): boolean {\n    this.singleFavs.clear();\n    this.groupFavs.clear();\n    this.saveFavorites();\n    return true;\n  }\n\n  public changeLabel(favorite: Favorite, label: string) {\n    favorite.label = label;\n    if (isSingleFavorite(favorite)) { this.singleFavs.set(favorite.id, favorite); }\n    if (isGroupFavorite(favorite)) { this.groupFavs.set(favorite.id, favorite); }\n    this.saveFavorites();\n  }\n\n  private saveFavorites(): void {\n    this.localStorage.save(CACHE_PARAM_FAVORITES_SINGLE, this.getFavorites());\n    this.localStorage.save(CACHE_PARAM_FAVORITES_GROUP, this.getFavoriteGroups());\n  }\n\n  private loadFavorites(): void {\n    this.singleFavs = new Map();\n    this.groupFavs = new Map();\n    const loadedSingleFavs = this.localStorage.loadArray(CACHE_PARAM_FAVORITES_SINGLE);\n    if (loadedSingleFavs) {\n      loadedSingleFavs.forEach((entry) => this.singleFavs.set(entry.id, entry));\n    }\n    const loadedGroupFavs = this.localStorage.loadArray(CACHE_PARAM_FAVORITES_GROUP);\n    if (loadedGroupFavs) {\n      loadedGroupFavs.forEach((entry) => this.groupFavs.set(entry.id, entry));\n    }\n  }\n}\n\nexport interface Favorite {\n  id: string;\n  label: string;\n}\n\nexport interface SingleFavorite extends Favorite {\n  favorite: IDataset;\n}\n\nfunction isSingleFavorite(object: any): object is SingleFavorite {\n  return 'favorite' in object;\n}\n\nexport interface GroupFavorite extends Favorite {\n  favorites: IDataset[];\n}\n\nfunction isGroupFavorite(object: any): object is GroupFavorite {\n  return 'favorites' in object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoriteTogglerComponent.html":{"url":"components/FavoriteTogglerComponent.html","title":"component - FavoriteTogglerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoriteTogglerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/favorite/src/lib/favorite-toggler/favorite-toggler.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-favorite-toggler\n            \n\n\n\n\n            \n                templateUrl\n                ./favorite-toggler.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isFavorite\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataset\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(favSrvc: FavoriteService, notifier: NotifierService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/favorite/src/lib/favorite-toggler/favorite-toggler.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        favSrvc\n                                                  \n                                                        \n                                                                    FavoriteService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifier\n                                                  \n                                                        \n                                                                    NotifierService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataset\n                    \n                    \n                            \n                            Type:    IDataset\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/favorite-toggler/favorite-toggler.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/favorite-toggler/favorite-toggler.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/favorite-toggler/favorite-toggler.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isFavorite\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isFavorite:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/favorite-toggler/favorite-toggler.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { IDataset, NotifierService } from '@helgoland/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { FavoriteService } from '../service/favorite.service';\n\n@Component({\n  selector: 'n52-favorite-toggler',\n  templateUrl: './favorite-toggler.component.html'\n})\nexport class FavoriteTogglerComponent implements OnChanges {\n\n  @Input()\n  public dataset: IDataset;\n  public isFavorite: boolean;\n\n  constructor(\n    protected favSrvc: FavoriteService,\n    protected notifier: NotifierService,\n    protected translate: TranslateService\n  ) { }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.dataset && this.dataset) {\n      this.isFavorite = this.favSrvc.hasFavorite(this.dataset);\n    }\n  }\n\n  public toggle() {\n    if (this.isFavorite) {\n      this.isFavorite = false;\n      this.favSrvc.removeFavorite(this.dataset.internalId);\n      this.translate.get('favorite.notifier.remove-favorite').subscribe((translation) => {\n        this.notifier.notify(translation + ': ' + this.dataset.label);\n      });\n    } else {\n      this.isFavorite = true;\n      this.favSrvc.addFavorite(this.dataset);\n      this.translate.get('favorite.notifier.add-favorite').subscribe((translation) => {\n        this.notifier.notify(translation + ': ' + this.dataset.label);\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavoriteTogglerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Feature.html":{"url":"interfaces/Feature.html","title":"interface - Feature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Feature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/feature.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\n\nexport interface Feature extends Parameter {\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filter.html":{"url":"classes/Filter.html","title":"class - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/filter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filter\n                            \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filter:     ParameterFilter\n\n                    \n                \n                    \n                        \n                            Type :     ParameterFilter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/filter.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/filter.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/filter.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/filter.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ParameterFilter } from './../internal/http-requests';\n\nexport class Filter {\n    public url: string;\n    public service: string;\n    public itemId: string;\n    public filter: ParameterFilter;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilteredParameter.html":{"url":"interfaces/FilteredParameter.html","title":"interface - FilteredParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilteredParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        filterList\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filterList\n                                    \n                                \n                                \n                                    \n                                        filterList:     Filter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Filter[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport {\n    DatasetApiInterface,\n    Filter,\n    FilteredProvider,\n    LanguageChangNotifier,\n    Parameter,\n    ParameterFilter,\n} from '@helgoland/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * Component to select an item out of a list of provider with a given filter combination.\n */\n@Component({\n    selector: 'n52-multi-service-filter-selector',\n    templateUrl: './multi-service-filter-selector.component.html'\n})\nexport class MultiServiceFilterSelectorComponent extends LanguageChangNotifier implements OnChanges {\n\n    @Input()\n    public endpoint: string;\n\n    @Input()\n    public filterList: FilteredProvider[];\n\n    @Output()\n    public onItemSelected: EventEmitter = new EventEmitter();\n\n    public loading = 0;\n    public items: FilteredParameter[];\n\n    constructor(\n        protected apiInterface: DatasetApiInterface,\n        protected translate: TranslateService\n    ) {\n        super(translate);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        this.loadItems();\n    }\n\n    public onSelectItem(item: FilteredParameter): void {\n        this.onItemSelected.emit(item);\n    }\n\n    protected languageChanged(): void {\n        this.loadItems();\n    }\n\n    private loadItems() {\n        this.items = [];\n        this.filterList.forEach((entry) => {\n            this.loading++;\n            const filter = entry.filter || {};\n            filter.service = entry.id;\n            switch (this.endpoint) {\n                case 'offering':\n                    this.apiInterface.getOfferings(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'phenomenon':\n                    this.apiInterface.getPhenomena(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'procedure':\n                    this.apiInterface.getProcedures(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'feature':\n                    this.apiInterface.getFeatures(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'category':\n                    this.apiInterface.getCategories(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'platform':\n                    this.apiInterface.getPlatforms(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'dataset':\n                    this.apiInterface.getDatasets(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                default:\n                    console.error('Wrong endpoint: ' + this.endpoint);\n                    this.loading--;\n            }\n        });\n    }\n\n    private errorOnLoading(): void {\n        this.loading--;\n    }\n\n    private setItems(res: FilteredParameter[], prevfilter: ParameterFilter, url: string, service: string): void {\n        this.loading--;\n        res.forEach((entry) => {\n            const filter: Filter = {\n                filter: prevfilter,\n                itemId: entry.id,\n                url,\n                service\n            };\n            const item = this.items.find((elem) => {\n                if (elem.label === entry.label) { return true; }\n            });\n            if (item) {\n                item.filterList.push(filter);\n            } else {\n                entry.filterList = [filter];\n                this.items.push(entry);\n            }\n        });\n    }\n\n}\n\nexport interface FilteredParameter extends Parameter {\n    filterList?: Filter[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilteredProvider.html":{"url":"interfaces/FilteredProvider.html","title":"interface - FilteredProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilteredProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/provider.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Provider\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:     ParameterFilter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParameterFilter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ParameterFilter } from './../internal/http-requests';\n\nexport interface Provider {\n    id: string;\n    url: string;\n}\n\nexport interface FilteredProvider extends Provider {\n    filter: ParameterFilter;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirstLastValue.html":{"url":"classes/FirstLastValue.html","title":"class - FirstLastValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirstLastValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                timestamp\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timestamp:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlotOverviewTimeseriesGraphComponent.html":{"url":"components/FlotOverviewTimeseriesGraphComponent.html","title":"component - FlotOverviewTimeseriesGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FlotOverviewTimeseriesGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n                AfterViewInit\n                HasLoadableContent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-flot-overview-timeseries-graph\n            \n\n            \n                styleUrls\n                flot-overview-timeseries-graph.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./flot-overview-timeseries-graph.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Public\n                                isContentLoading\n                            \n                            \n                                    Public\n                                overviewTimespan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateOverviewRange\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                timeChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                datasetIds\n                            \n                            \n                                datasetOptions\n                            \n                            \n                                graphOptions\n                            \n                            \n                                rangefactor\n                            \n                            \n                                timeInterval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onContentLoading\n                            \n                            \n                                onLoading\n                            \n                            \n                                onTimespanChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(timeSrvc: Time, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeSrvc\n                                                  \n                                                        \n                                                                    Time\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        datasetIds\n                    \n                    \n                            \n                            Type:    string[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        datasetOptions\n                    \n                    \n                            \n                            Type:    Map\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        graphOptions\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rangefactor\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        timeInterval\n                    \n                    \n                            \n                            Type:    TimeInterval\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:31\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onContentLoading\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLoading\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onTimespanChanged\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            calculateOverviewRange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calculateOverviewRange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        timeChanged(timespan: Timespan)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        init:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isContentLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isContentLoading:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            overviewTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        overviewTimespan:     Timespan\n\n                    \n                \n                    \n                        \n                            Type :     Timespan\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { DatasetOptions, HasLoadableContent, Mixin, Time, TimeInterval, Timespan } from '@helgoland/core';\n\n@Component({\n    selector: 'n52-flot-overview-timeseries-graph',\n    templateUrl: './flot-overview-timeseries-graph.component.html',\n    styleUrls: ['./flot-overview-timeseries-graph.component.scss']\n})\n// @Mixin([HasLoadableContent])\nexport class FlotOverviewTimeseriesGraphComponent implements OnChanges, AfterViewInit, HasLoadableContent {\n\n    @Input()\n    public datasetIds: string[];\n\n    @Input()\n    public datasetOptions: Map;\n\n    @Input()\n    public graphOptions: any;\n\n    @Input()\n    public timeInterval: TimeInterval;\n\n    @Input()\n    public rangefactor: number;\n\n    @Output()\n    public onTimespanChanged: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onLoading: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onContentLoading: EventEmitter = new EventEmitter();\n\n    public isContentLoading: (loading: boolean) => void;\n\n    public overviewTimespan: Timespan;\n\n    private init = false;\n\n    constructor(\n        protected timeSrvc: Time,\n        protected cd: ChangeDetectorRef\n    ) { }\n\n    public ngAfterViewInit(): void {\n        this.rangefactor = this.rangefactor || 1;\n        this.calculateOverviewRange();\n        this.init = true;\n        this.cd.detectChanges();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.timeInterval && this.init) {\n            this.calculateOverviewRange();\n        }\n    }\n\n    public timeChanged(timespan: Timespan) {\n        this.onTimespanChanged.emit(timespan);\n    }\n\n    private calculateOverviewRange() {\n        const timespan = this.timeSrvc.createTimespanOfInterval(this.timeInterval);\n        this.overviewTimespan = this.timeSrvc.getBufferedTimespan(timespan, this.rangefactor);\n        this.graphOptions.selection.range = {\n            from: timespan.from,\n            to: timespan.to\n        };\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlotOverviewTimeseriesGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeoCureGeoJSON.html":{"url":"classes/GeoCureGeoJSON.html","title":"class - GeoCureGeoJSON","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeoCureGeoJSON\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geocure/geocure-layer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    GeoJSON\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fetchData\n                            \n                            \n                                    Public\n                                getEvents\n                            \n                            \n                                    Private\n                                loadData\n                            \n                            \n                                    Public\n                                onAdd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: GeoCureGeoJSONOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/base/geocure/geocure-layer.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    GeoCureGeoJSONOptions\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     GeoCureGeoJSONOptions\n\n                    \n                \n                    \n                        \n                            Type :     GeoCureGeoJSONOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geocure/geocure-layer.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fetchData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fetchData(map: L.Map)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geocure/geocure-layer.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    L.Map\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEvents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geocure/geocure-layer.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     { moveend: (event: any) => void; }\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadData(bounds: LatLngBounds)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geocure/geocure-layer.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bounds\n                                                        \n                                                                    LatLngBounds\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onAdd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onAdd(map: L.Map)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geocure/geocure-layer.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    L.Map\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { GeoJSON, GeoJSONOptions, LatLngBounds, LeafletEvent } from 'leaflet';\n\nexport interface GeoCureGeoJSONOptions extends GeoJSONOptions {\n    url: string;\n    httpClient: HttpClient;\n    showOnMinZoom?: number;\n    showOnMaxZoom?: number;\n}\n\nexport class GeoCureGeoJSON extends GeoJSON {\n\n    public options: GeoCureGeoJSONOptions;\n\n    constructor(\n        options?: GeoCureGeoJSONOptions\n    ) {\n        super();\n        if (options) {\n            this.options = options;\n        }\n    }\n\n    public getEvents() {\n        const events = {\n            moveend: (event: LeafletEvent) => this.fetchData(event.target)\n        };\n        return events;\n    }\n\n    public onAdd(map: L.Map): this  {\n        super.onAdd(map);\n        this.fetchData(map);\n        return this;\n    }\n\n    private fetchData(map: L.Map) {\n        const matchMaxZoom = this.options.showOnMaxZoom ? map.getZoom() = this.options.showOnMinZoom : true;\n        if (matchMinZoom && matchMaxZoom) {\n            this.loadData(map.getBounds());\n        } else {\n            this.clearLayers();\n        }\n    }\n\n    private loadData(bounds: LatLngBounds) {\n        const bboxparam = [bounds.getWest(), bounds.getSouth(), bounds.getEast(), bounds.getNorth()].join(',');\n        this.options.httpClient\n            .get>(this.options.url, {\n                params: {\n                    bbox: bboxparam\n                }\n            })\n            .subscribe((geojson) => {\n                this.clearLayers();\n                this.addData(geojson);\n            });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoCureGeoJSONOptions.html":{"url":"interfaces/GeoCureGeoJSONOptions.html","title":"interface - GeoCureGeoJSONOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoCureGeoJSONOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geocure/geocure-layer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    GeoJSONOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        httpClient\n                                \n                                \n                                            Optional\n                                        showOnMaxZoom\n                                \n                                \n                                            Optional\n                                        showOnMinZoom\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        httpClient\n                                    \n                                \n                                \n                                    \n                                        httpClient:     HttpClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpClient\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showOnMaxZoom\n                                    \n                                \n                                \n                                    \n                                        showOnMaxZoom:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showOnMinZoom\n                                    \n                                \n                                \n                                    \n                                        showOnMinZoom:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { GeoJSON, GeoJSONOptions, LatLngBounds, LeafletEvent } from 'leaflet';\n\nexport interface GeoCureGeoJSONOptions extends GeoJSONOptions {\n    url: string;\n    httpClient: HttpClient;\n    showOnMinZoom?: number;\n    showOnMaxZoom?: number;\n}\n\nexport class GeoCureGeoJSON extends GeoJSON {\n\n    public options: GeoCureGeoJSONOptions;\n\n    constructor(\n        options?: GeoCureGeoJSONOptions\n    ) {\n        super();\n        if (options) {\n            this.options = options;\n        }\n    }\n\n    public getEvents() {\n        const events = {\n            moveend: (event: LeafletEvent) => this.fetchData(event.target)\n        };\n        return events;\n    }\n\n    public onAdd(map: L.Map): this  {\n        super.onAdd(map);\n        this.fetchData(map);\n        return this;\n    }\n\n    private fetchData(map: L.Map) {\n        const matchMaxZoom = this.options.showOnMaxZoom ? map.getZoom() = this.options.showOnMinZoom : true;\n        if (matchMinZoom && matchMaxZoom) {\n            this.loadData(map.getBounds());\n        } else {\n            this.clearLayers();\n        }\n    }\n\n    private loadData(bounds: LatLngBounds) {\n        const bboxparam = [bounds.getWest(), bounds.getSouth(), bounds.getEast(), bounds.getNorth()].join(',');\n        this.options.httpClient\n            .get>(this.options.url, {\n                params: {\n                    bbox: bboxparam\n                }\n            })\n            .subscribe((geojson) => {\n                this.clearLayers();\n                this.addData(geojson);\n            });\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoReverseOptions.html":{"url":"interfaces/GeoReverseOptions.html","title":"interface - GeoReverseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoReverseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geosearch/geosearch.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Point } from 'geojson';\nimport { LatLngBoundsLiteral } from 'leaflet';\nimport { Observable } from 'rxjs/Observable';\n\nexport interface GeoSearchResult {\n    name: string;\n    geometry: GeoJSON.GeoJsonObject;\n    bounds?: LatLngBoundsLiteral;\n}\n\nexport interface GeoSearchOptions {\n    countrycodes?: string[];\n    asPointGeometry?: boolean;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface GeoReverseOptions { }\n\nexport interface GeoReverseResult {\n    lat: string;\n    lon: string;\n    displayName?: string;\n    address?: {\n        houseNumber: string;\n        road: string;\n        neighbourhood: string;\n        suburb: string;\n        cityDistrict: string;\n        city: string;\n        county: string;\n        stateDistrict: string;\n        state: string;\n        postcode: string;\n        country: string;\n        countryCode: string;\n    };\n    boundingbox?: string[];\n}\n\nexport abstract class GeoSearch {\n\n    public abstract searchTerm(term: string, options?: GeoSearchOptions): Observable;\n\n    public abstract reverse(point: Point, options?: GeoReverseOptions): Observable;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoReverseResult.html":{"url":"interfaces/GeoReverseResult.html","title":"interface - GeoReverseResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoReverseResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geosearch/geosearch.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        boundingbox\n                                \n                                \n                                            Optional\n                                        displayName\n                                \n                                \n                                        lat\n                                \n                                \n                                        lon\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        boundingbox\n                                    \n                                \n                                \n                                    \n                                        boundingbox:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                    \n                                \n                                \n                                    \n                                        lon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Point } from 'geojson';\nimport { LatLngBoundsLiteral } from 'leaflet';\nimport { Observable } from 'rxjs/Observable';\n\nexport interface GeoSearchResult {\n    name: string;\n    geometry: GeoJSON.GeoJsonObject;\n    bounds?: LatLngBoundsLiteral;\n}\n\nexport interface GeoSearchOptions {\n    countrycodes?: string[];\n    asPointGeometry?: boolean;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface GeoReverseOptions { }\n\nexport interface GeoReverseResult {\n    lat: string;\n    lon: string;\n    displayName?: string;\n    address?: {\n        houseNumber: string;\n        road: string;\n        neighbourhood: string;\n        suburb: string;\n        cityDistrict: string;\n        city: string;\n        county: string;\n        stateDistrict: string;\n        state: string;\n        postcode: string;\n        country: string;\n        countryCode: string;\n    };\n    boundingbox?: string[];\n}\n\nexport abstract class GeoSearch {\n\n    public abstract searchTerm(term: string, options?: GeoSearchOptions): Observable;\n\n    public abstract reverse(point: Point, options?: GeoReverseOptions): Observable;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeoSearch.html":{"url":"classes/GeoSearch.html","title":"class - GeoSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeoSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geosearch/geosearch.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                reverse\n                            \n                            \n                                    Public\n                                    \n                                searchTerm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            reverse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reverse(point: Point, options?: GeoReverseOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geosearch/geosearch.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        point\n                                                        \n                                                                    Point\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    GeoReverseOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            searchTerm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        searchTerm(term: string, options?: GeoSearchOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geosearch/geosearch.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    GeoSearchOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Point } from 'geojson';\nimport { LatLngBoundsLiteral } from 'leaflet';\nimport { Observable } from 'rxjs/Observable';\n\nexport interface GeoSearchResult {\n    name: string;\n    geometry: GeoJSON.GeoJsonObject;\n    bounds?: LatLngBoundsLiteral;\n}\n\nexport interface GeoSearchOptions {\n    countrycodes?: string[];\n    asPointGeometry?: boolean;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface GeoReverseOptions { }\n\nexport interface GeoReverseResult {\n    lat: string;\n    lon: string;\n    displayName?: string;\n    address?: {\n        houseNumber: string;\n        road: string;\n        neighbourhood: string;\n        suburb: string;\n        cityDistrict: string;\n        city: string;\n        county: string;\n        stateDistrict: string;\n        state: string;\n        postcode: string;\n        country: string;\n        countryCode: string;\n    };\n    boundingbox?: string[];\n}\n\nexport abstract class GeoSearch {\n\n    public abstract searchTerm(term: string, options?: GeoSearchOptions): Observable;\n\n    public abstract reverse(point: Point, options?: GeoReverseOptions): Observable;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoSearchOptions.html":{"url":"interfaces/GeoSearchOptions.html","title":"interface - GeoSearchOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoSearchOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geosearch/geosearch.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        asPointGeometry\n                                \n                                \n                                            Optional\n                                        countrycodes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asPointGeometry\n                                    \n                                \n                                \n                                    \n                                        asPointGeometry:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        countrycodes\n                                    \n                                \n                                \n                                    \n                                        countrycodes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Point } from 'geojson';\nimport { LatLngBoundsLiteral } from 'leaflet';\nimport { Observable } from 'rxjs/Observable';\n\nexport interface GeoSearchResult {\n    name: string;\n    geometry: GeoJSON.GeoJsonObject;\n    bounds?: LatLngBoundsLiteral;\n}\n\nexport interface GeoSearchOptions {\n    countrycodes?: string[];\n    asPointGeometry?: boolean;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface GeoReverseOptions { }\n\nexport interface GeoReverseResult {\n    lat: string;\n    lon: string;\n    displayName?: string;\n    address?: {\n        houseNumber: string;\n        road: string;\n        neighbourhood: string;\n        suburb: string;\n        cityDistrict: string;\n        city: string;\n        county: string;\n        stateDistrict: string;\n        state: string;\n        postcode: string;\n        country: string;\n        countryCode: string;\n    };\n    boundingbox?: string[];\n}\n\nexport abstract class GeoSearch {\n\n    public abstract searchTerm(term: string, options?: GeoSearchOptions): Observable;\n\n    public abstract reverse(point: Point, options?: GeoReverseOptions): Observable;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoSearchResult.html":{"url":"interfaces/GeoSearchResult.html","title":"interface - GeoSearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoSearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geosearch/geosearch.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bounds\n                                \n                                \n                                        geometry\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bounds\n                                    \n                                \n                                \n                                    \n                                        bounds:     LatLngBoundsLiteral\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LatLngBoundsLiteral\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     GeoJSON.GeoJsonObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GeoJSON.GeoJsonObject\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Point } from 'geojson';\nimport { LatLngBoundsLiteral } from 'leaflet';\nimport { Observable } from 'rxjs/Observable';\n\nexport interface GeoSearchResult {\n    name: string;\n    geometry: GeoJSON.GeoJsonObject;\n    bounds?: LatLngBoundsLiteral;\n}\n\nexport interface GeoSearchOptions {\n    countrycodes?: string[];\n    asPointGeometry?: boolean;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface GeoReverseOptions { }\n\nexport interface GeoReverseResult {\n    lat: string;\n    lon: string;\n    displayName?: string;\n    address?: {\n        houseNumber: string;\n        road: string;\n        neighbourhood: string;\n        suburb: string;\n        cityDistrict: string;\n        city: string;\n        county: string;\n        stateDistrict: string;\n        state: string;\n        postcode: string;\n        country: string;\n        countryCode: string;\n    };\n    boundingbox?: string[];\n}\n\nexport abstract class GeoSearch {\n\n    public abstract searchTerm(term: string, options?: GeoSearchOptions): Observable;\n\n    public abstract reverse(point: Point, options?: GeoReverseOptions): Observable;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeosearchControlComponent.html":{"url":"components/GeosearchControlComponent.html","title":"component - GeosearchControlComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GeosearchControlComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-geosearch-control\n            \n\n\n\n\n            \n                templateUrl\n                ./geosearch.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                result\n                            \n                            \n                                    Public\n                                resultGeometry\n                            \n                            \n                                    Public\n                                searchTerm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearSearch\n                            \n                            \n                                    Private\n                                removeOldGeometry\n                            \n                            \n                                    Public\n                                triggerSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapId\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onResultChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mapCache: MapCache, geosearch: GeoSearch)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapCache\n                                                  \n                                                        \n                                                                    MapCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        geosearch\n                                                  \n                                                        \n                                                                    GeoSearch\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                            \n                            Type:    GeoSearchOptions\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onResultChanged\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clearSearch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearSearch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            removeOldGeometry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeOldGeometry()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            triggerSearch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        triggerSearch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            result\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        result:     GeoSearchResult\n\n                    \n                \n                    \n                        \n                            Type :     GeoSearchResult\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultGeometry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resultGeometry:     L.GeoJSON\n\n                    \n                \n                    \n                        \n                            Type :     L.GeoJSON\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchTerm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchTerm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport * as L from 'leaflet';\n\nimport { GeoSearch, GeoSearchOptions, GeoSearchResult } from '../../base/geosearch/geosearch';\nimport { MapCache } from '../../base/map-cache.service';\n\n@Component({\n    selector: 'n52-geosearch-control',\n    templateUrl: './geosearch.component.html'\n})\nexport class GeosearchControlComponent {\n\n    @Input()\n    public mapId: string;\n\n    @Input()\n    public options: GeoSearchOptions;\n\n    @Output()\n    public onResultChanged: EventEmitter = new EventEmitter();\n\n    public result: GeoSearchResult;\n\n    public resultGeometry: L.GeoJSON;\n\n    public searchTerm: string;\n\n    public loading: boolean;\n\n    constructor(\n        protected mapCache: MapCache,\n        protected geosearch: GeoSearch\n    ) { }\n\n    public triggerSearch() {\n        this.removeOldGeometry();\n        if (this.searchTerm) {\n            this.loading = true;\n            this.geosearch.searchTerm(this.searchTerm, this.options).subscribe(\n                (result) => {\n                    if (!result) {\n                        this.searchTerm = '';\n                        return;\n                    }\n                    this.onResultChanged.emit(result);\n                    this.result = result;\n                    if (this.mapId) {\n                        this.resultGeometry = L.geoJSON(result.geometry).addTo(this.mapCache.getMap(this.mapId));\n                        if (result.bounds) {\n                            this.mapCache.getMap(this.mapId).fitBounds(result.bounds);\n                        } else {\n                            this.mapCache.getMap(this.mapId).fitBounds(this.resultGeometry.getBounds());\n                        }\n                    }\n                },\n                (error) => this.searchTerm = 'error occurred',\n                () => { this.loading = false; }\n            );\n        }\n    }\n\n    public clearSearch() {\n        this.searchTerm = '';\n        this.onResultChanged.emit(null);\n        this.removeOldGeometry();\n    }\n\n    private removeOldGeometry() {\n        if (this.resultGeometry) {\n            this.resultGeometry.remove();\n        }\n    }\n\n}\n\n    \n\n    \n        \n  \n  loading...\n  X\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    loading...  X'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GeosearchControlComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupFavorite.html":{"url":"interfaces/GroupFavorite.html","title":"interface - GroupFavorite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GroupFavorite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/favorite/src/lib/service/favorite.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Favorite\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        favorites\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        favorites\n                                    \n                                \n                                \n                                    \n                                        favorites:     IDataset[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IDataset[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IDataset, LocalStorage } from '@helgoland/core';\n\nconst CACHE_PARAM_FAVORITES_SINGLE = 'SingleFavorites';\nconst CACHE_PARAM_FAVORITES_GROUP = 'GroupFavorites';\n\n@Injectable()\nexport class FavoriteService {\n\n  private singleFavs: Map;\n  private groupFavs: Map;\n  private groupCounter = 0;\n\n  constructor(\n    protected localStorage: LocalStorage\n  ) {\n    this.loadFavorites();\n  }\n\n  public addFavorite(dataset: IDataset, label?: string): boolean {\n    if (!this.singleFavs.has(dataset.internalId)) {\n      this.singleFavs.set(dataset.internalId, {\n        id: dataset.internalId,\n        label: label ? label : dataset.label,\n        favorite: dataset\n      });\n      this.saveFavorites();\n      return true;\n    }\n    return false;\n  }\n\n  public hasFavorite(dataset: IDataset): boolean {\n    return this.singleFavs.has(dataset.internalId);\n  }\n\n  public getFavorites(): SingleFavorite[] {\n    return Array.from(this.singleFavs.values());\n  }\n\n  public removeFavorite(favoriteId: string): boolean {\n    if (this.singleFavs.has(favoriteId)) {\n      this.singleFavs.delete(favoriteId);\n      this.saveFavorites();\n      return true;\n    }\n    if (this.groupFavs.has(favoriteId)) {\n      this.groupFavs.delete(favoriteId);\n      this.saveFavorites();\n      return true;\n    }\n    return false;\n  }\n\n  public addFavoriteGroup(datasets: IDataset[], label?: string): boolean {\n    const id = 'Group' + this.groupCounter++;\n    this.groupFavs.set(id, {\n      id,\n      label: label ? label : id,\n      favorites: datasets\n    });\n    this.saveFavorites();\n    return true;\n  }\n\n  public getFavoriteGroups(): GroupFavorite[] {\n    return Array.from(this.groupFavs.values());\n  }\n\n  public removeAllFavorites(): boolean {\n    this.singleFavs.clear();\n    this.groupFavs.clear();\n    this.saveFavorites();\n    return true;\n  }\n\n  public changeLabel(favorite: Favorite, label: string) {\n    favorite.label = label;\n    if (isSingleFavorite(favorite)) { this.singleFavs.set(favorite.id, favorite); }\n    if (isGroupFavorite(favorite)) { this.groupFavs.set(favorite.id, favorite); }\n    this.saveFavorites();\n  }\n\n  private saveFavorites(): void {\n    this.localStorage.save(CACHE_PARAM_FAVORITES_SINGLE, this.getFavorites());\n    this.localStorage.save(CACHE_PARAM_FAVORITES_GROUP, this.getFavoriteGroups());\n  }\n\n  private loadFavorites(): void {\n    this.singleFavs = new Map();\n    this.groupFavs = new Map();\n    const loadedSingleFavs = this.localStorage.loadArray(CACHE_PARAM_FAVORITES_SINGLE);\n    if (loadedSingleFavs) {\n      loadedSingleFavs.forEach((entry) => this.singleFavs.set(entry.id, entry));\n    }\n    const loadedGroupFavs = this.localStorage.loadArray(CACHE_PARAM_FAVORITES_GROUP);\n    if (loadedGroupFavs) {\n      loadedGroupFavs.forEach((entry) => this.groupFavs.set(entry.id, entry));\n    }\n  }\n}\n\nexport interface Favorite {\n  id: string;\n  label: string;\n}\n\nexport interface SingleFavorite extends Favorite {\n  favorite: IDataset;\n}\n\nfunction isSingleFavorite(object: any): object is SingleFavorite {\n  return 'favorite' in object;\n}\n\nexport interface GroupFavorite extends Favorite {\n  favorites: IDataset[];\n}\n\nfunction isGroupFavorite(object: any): object is GroupFavorite {\n  return 'favorites' in object;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HasLoadableContent.html":{"url":"classes/HasLoadableContent.html","title":"class - HasLoadableContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  HasLoadableContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/mixins/has-loadable-content.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onContentLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isContentLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onContentLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onContentLoading:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/mixins/has-loadable-content.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isContentLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isContentLoading(loading: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/mixins/has-loadable-content.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { EventEmitter, Output } from '@angular/core';\n\nexport class HasLoadableContent {\n\n    public onContentLoading: EventEmitter;\n\n    public isContentLoading(loading: boolean) {\n        this.onContentLoading.emit(loading);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandCachingModule.html":{"url":"modules/HelgolandCachingModule.html","title":"module - HelgolandCachingModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandCachingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/caching/src/lib/caching.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { HTTP_SERVICE_INTERCEPTORS } from '@helgoland/core';\n\nimport { CachingInterceptor } from './cache-interceptor';\nimport { LocalHttpCache } from './local-http-cache';\nimport { LocalOngoingHttpCache } from './local-ongoing-http-cache';\nimport { HttpCache, OnGoingHttpCache } from './model';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [\n    {\n      provide: HttpCache,\n      useClass: LocalHttpCache\n    },\n    {\n      provide: HTTP_SERVICE_INTERCEPTORS,\n      useClass: CachingInterceptor,\n      multi: true\n    },\n    {\n      provide: OnGoingHttpCache,\n      useClass: LocalOngoingHttpCache\n    },\n  ]\n})\nexport class HelgolandCachingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandControlModule.html":{"url":"modules/HelgolandControlModule.html","title":"module - HelgolandControlModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandControlModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandControlModule\n\n\n\ncluster_HelgolandControlModule_declarations\n\n\n\ncluster_HelgolandControlModule_exports\n\n\n\n\nBoolTogglerComponent\n\nBoolTogglerComponent\n\n\n\nHelgolandControlModule\n\nHelgolandControlModule\n\nHelgolandControlModule -->\n\nBoolTogglerComponent->HelgolandControlModule\n\n\n\n\n\nRefreshButtonComponent\n\nRefreshButtonComponent\n\nHelgolandControlModule -->\n\nRefreshButtonComponent->HelgolandControlModule\n\n\n\n\n\nStringTogglerComponent\n\nStringTogglerComponent\n\nHelgolandControlModule -->\n\nStringTogglerComponent->HelgolandControlModule\n\n\n\n\n\nBoolTogglerComponent \n\nBoolTogglerComponent \n\nBoolTogglerComponent  -->\n\nHelgolandControlModule->BoolTogglerComponent \n\n\n\n\n\nRefreshButtonComponent \n\nRefreshButtonComponent \n\nRefreshButtonComponent  -->\n\nHelgolandControlModule->RefreshButtonComponent \n\n\n\n\n\nStringTogglerComponent \n\nStringTogglerComponent \n\nStringTogglerComponent  -->\n\nHelgolandControlModule->StringTogglerComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/control/src/lib/control.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BoolTogglerComponent\n                            \n                            \n                                RefreshButtonComponent\n                            \n                            \n                                StringTogglerComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BoolTogglerComponent\n                            \n                            \n                                    RefreshButtonComponent\n                            \n                            \n                                    StringTogglerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { BoolTogglerComponent } from './bool-toggler/bool-toggler.component';\nimport { RefreshButtonComponent } from './refresh-button/refresh-button.component';\nimport { StringTogglerComponent } from './string-toggler/string-toggler.component';\n\nconst COMPONENTS = [\n  BoolTogglerComponent,\n  StringTogglerComponent,\n  RefreshButtonComponent\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    COMPONENTS\n  ],\n  providers: [\n  ]\n})\nexport class HelgolandControlModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandCoreModule.html":{"url":"modules/HelgolandCoreModule.html","title":"module - HelgolandCoreModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandCoreModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandCoreModule\n\n\n\ncluster_HelgolandCoreModule_declarations\n\n\n\ncluster_HelgolandCoreModule_exports\n\n\n\ncluster_HelgolandCoreModule_providers\n\n\n\n\nDateProxyPipe\n\nDateProxyPipe\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandCoreModule -->\n\nDateProxyPipe->HelgolandCoreModule\n\n\n\n\n\nDateProxyPipe \n\nDateProxyPipe \n\nDateProxyPipe  -->\n\nHelgolandCoreModule->DateProxyPipe \n\n\n\n\n\nColorService\n\nColorService\n\nHelgolandCoreModule -->\n\nColorService->HelgolandCoreModule\n\n\n\n\n\nDatasetApiMapping\n\nDatasetApiMapping\n\nHelgolandCoreModule -->\n\nDatasetApiMapping->HelgolandCoreModule\n\n\n\n\n\nDefinedTimespanService\n\nDefinedTimespanService\n\nHelgolandCoreModule -->\n\nDefinedTimespanService->HelgolandCoreModule\n\n\n\n\n\nInternalIdHandler\n\nInternalIdHandler\n\nHelgolandCoreModule -->\n\nInternalIdHandler->HelgolandCoreModule\n\n\n\n\n\nLocalStorage\n\nLocalStorage\n\nHelgolandCoreModule -->\n\nLocalStorage->HelgolandCoreModule\n\n\n\n\n\nNotifierService\n\nNotifierService\n\nHelgolandCoreModule -->\n\nNotifierService->HelgolandCoreModule\n\n\n\n\n\nStatusIntervalResolverService\n\nStatusIntervalResolverService\n\nHelgolandCoreModule -->\n\nStatusIntervalResolverService->HelgolandCoreModule\n\n\n\n\n\nTime\n\nTime\n\nHelgolandCoreModule -->\n\nTime->HelgolandCoreModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/core.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DateProxyPipe\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ColorService\n                            \n                            \n                                     DatasetApiMapping\n                            \n                            \n                                     DefinedTimespanService\n                            \n                            \n                                     InternalIdHandler\n                            \n                            \n                                     LocalStorage\n                            \n                            \n                                     NotifierService\n                            \n                            \n                                     StatusIntervalResolverService\n                            \n                            \n                                     Time\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DateProxyPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { ColorService } from './color/color.service';\nimport { DatasetApiMapping } from './dataset-api/api-mapping.service';\nimport { StatusIntervalResolverService } from './dataset-api/helper/status-interval-resolver.service';\nimport { InternalIdHandler } from './dataset-api/internal-id-handler.service';\nimport { LocalStorage } from './local-storage/local-storage.service';\nimport { NotifierService } from './notifier/notifier.service';\nimport { DateProxyPipe } from './pipes/dateproxy/dateproxy.pipe';\nimport { DefinedTimespanService } from './time/defined-timespan.service';\nimport { Time } from './time/time.service';\n\n@NgModule({\n  declarations: [\n    DateProxyPipe\n  ],\n  imports: [\n    HttpClientModule\n  ],\n  exports: [\n    DateProxyPipe\n  ],\n  providers: [\n    ColorService,\n    DatasetApiMapping,\n    DefinedTimespanService,\n    InternalIdHandler,\n    LocalStorage,\n    NotifierService,\n    StatusIntervalResolverService,\n    Time\n  ]\n})\nexport class HelgolandCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandD3Module.html":{"url":"modules/HelgolandD3Module.html","title":"module - HelgolandD3Module","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandD3Module\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandD3Module\n\n\n\ncluster_HelgolandD3Module_declarations\n\n\n\ncluster_HelgolandD3Module_imports\n\n\n\ncluster_HelgolandD3Module_exports\n\n\n\n\nD3OverviewTimeseriesGraphComponent\n\nD3OverviewTimeseriesGraphComponent\n\n\n\nHelgolandD3Module\n\nHelgolandD3Module\n\nHelgolandD3Module -->\n\nD3OverviewTimeseriesGraphComponent->HelgolandD3Module\n\n\n\n\n\nD3TimeseriesGraphComponent\n\nD3TimeseriesGraphComponent\n\nHelgolandD3Module -->\n\nD3TimeseriesGraphComponent->HelgolandD3Module\n\n\n\n\n\nD3TrajectoryGraphComponent\n\nD3TrajectoryGraphComponent\n\nHelgolandD3Module -->\n\nD3TrajectoryGraphComponent->HelgolandD3Module\n\n\n\n\n\nD3OverviewTimeseriesGraphComponent \n\nD3OverviewTimeseriesGraphComponent \n\nD3OverviewTimeseriesGraphComponent  -->\n\nHelgolandD3Module->D3OverviewTimeseriesGraphComponent \n\n\n\n\n\nD3TimeseriesGraphComponent \n\nD3TimeseriesGraphComponent \n\nD3TimeseriesGraphComponent  -->\n\nHelgolandD3Module->D3TimeseriesGraphComponent \n\n\n\n\n\nD3TrajectoryGraphComponent \n\nD3TrajectoryGraphComponent \n\nD3TrajectoryGraphComponent  -->\n\nHelgolandD3Module->D3TrajectoryGraphComponent \n\n\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandD3Module -->\n\nHelgolandCoreModule->HelgolandD3Module\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/d3/src/lib/d3.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                D3OverviewTimeseriesGraphComponent\n                            \n                            \n                                D3TimeseriesGraphComponent\n                            \n                            \n                                D3TrajectoryGraphComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandCoreModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    D3OverviewTimeseriesGraphComponent\n                            \n                            \n                                    D3TimeseriesGraphComponent\n                            \n                            \n                                    D3TrajectoryGraphComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { HelgolandCoreModule } from '@helgoland/core';\n\nimport { D3TimeseriesGraphComponent } from './d3-timeseries-graph/d3-timeseries-graph.component';\nimport { D3OverviewTimeseriesGraphComponent } from './d3-overview-timeseries-graph/d3-overview-timeseries-graph.component';\nimport { D3TrajectoryGraphComponent } from './d3-trajectory-graph/d3-trajectory-graph.component';\n\n@NgModule({\n  declarations: [\n    D3TrajectoryGraphComponent,\n    D3TimeseriesGraphComponent,\n    D3OverviewTimeseriesGraphComponent\n  ],\n  imports: [\n    HelgolandCoreModule\n  ],\n  exports: [\n    D3TrajectoryGraphComponent,\n    D3TimeseriesGraphComponent,\n    D3OverviewTimeseriesGraphComponent\n  ],\n  providers: []\n})\nexport class HelgolandD3Module { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandDatasetTableModule.html":{"url":"modules/HelgolandDatasetTableModule.html","title":"module - HelgolandDatasetTableModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandDatasetTableModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandDatasetTableModule\n\n\n\ncluster_HelgolandDatasetTableModule_declarations\n\n\n\ncluster_HelgolandDatasetTableModule_imports\n\n\n\ncluster_HelgolandDatasetTableModule_exports\n\n\n\n\nDatasetTableComponent\n\nDatasetTableComponent\n\n\n\nHelgolandDatasetTableModule\n\nHelgolandDatasetTableModule\n\nHelgolandDatasetTableModule -->\n\nDatasetTableComponent->HelgolandDatasetTableModule\n\n\n\n\n\nDatasetTableComponent \n\nDatasetTableComponent \n\nDatasetTableComponent  -->\n\nHelgolandDatasetTableModule->DatasetTableComponent \n\n\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandDatasetTableModule -->\n\nHelgolandCoreModule->HelgolandDatasetTableModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/depiction/src/lib/dataset-table/module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DatasetTableComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandCoreModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DatasetTableComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HelgolandCoreModule } from '@helgoland/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { DatasetTableComponent } from './dataset-table.component';\n\n@NgModule({\n    declarations: [\n        DatasetTableComponent\n    ],\n    imports: [\n        CommonModule,\n        TranslateModule,\n        HelgolandCoreModule\n    ],\n    exports: [\n        DatasetTableComponent\n    ],\n    providers: [\n    ]\n})\nexport class HelgolandDatasetTableModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandDatasetlistModule.html":{"url":"modules/HelgolandDatasetlistModule.html","title":"module - HelgolandDatasetlistModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandDatasetlistModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandDatasetlistModule\n\n\n\ncluster_HelgolandDatasetlistModule_declarations\n\n\n\ncluster_HelgolandDatasetlistModule_imports\n\n\n\ncluster_HelgolandDatasetlistModule_exports\n\n\n\ncluster_HelgolandDatasetlistModule_providers\n\n\n\n\nBoolTogglerComponent\n\nBoolTogglerComponent\n\n\n\nHelgolandDatasetlistModule\n\nHelgolandDatasetlistModule\n\nHelgolandDatasetlistModule -->\n\nBoolTogglerComponent->HelgolandDatasetlistModule\n\n\n\n\n\nRefreshButtonComponent\n\nRefreshButtonComponent\n\nHelgolandDatasetlistModule -->\n\nRefreshButtonComponent->HelgolandDatasetlistModule\n\n\n\n\n\nStringTogglerComponent\n\nStringTogglerComponent\n\nHelgolandDatasetlistModule -->\n\nStringTogglerComponent->HelgolandDatasetlistModule\n\n\n\n\n\nBoolTogglerComponent \n\nBoolTogglerComponent \n\nBoolTogglerComponent  -->\n\nHelgolandDatasetlistModule->BoolTogglerComponent \n\n\n\n\n\nRefreshButtonComponent \n\nRefreshButtonComponent \n\nRefreshButtonComponent  -->\n\nHelgolandDatasetlistModule->RefreshButtonComponent \n\n\n\n\n\nStringTogglerComponent \n\nStringTogglerComponent \n\nStringTogglerComponent  -->\n\nHelgolandDatasetlistModule->StringTogglerComponent \n\n\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandDatasetlistModule -->\n\nHelgolandCoreModule->HelgolandDatasetlistModule\n\n\n\n\n\nHelgolandLabelMapperModule\n\nHelgolandLabelMapperModule\n\nHelgolandDatasetlistModule -->\n\nHelgolandLabelMapperModule->HelgolandDatasetlistModule\n\n\n\n\n\nReferenceValueColorCache\n\nReferenceValueColorCache\n\nHelgolandDatasetlistModule -->\n\nReferenceValueColorCache->HelgolandDatasetlistModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/depiction/src/lib/datasetlist/module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BoolTogglerComponent\n                            \n                            \n                                RefreshButtonComponent\n                            \n                            \n                                StringTogglerComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ReferenceValueColorCache\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandCoreModule\n                            \n                            \n                                    HelgolandLabelMapperModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BoolTogglerComponent\n                            \n                            \n                                    RefreshButtonComponent\n                            \n                            \n                                    StringTogglerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HelgolandCoreModule } from '@helgoland/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { HelgolandLabelMapperModule } from '../label-mapper/label-mapper.module';\nimport { ProfileEntryComponent } from './profile-entry/profile-entry.component';\nimport { ReferenceValueColorCache, TimeseriesEntryComponent } from './timeseries-entry/timeseries-entry.component';\nimport { TrajectoryEntryComponent } from './trajectory-entry/trajectory-entry.component';\nimport { FormsModule } from '@angular/forms';\n\nconst COMPONENTS = [\n  TimeseriesEntryComponent,\n  ProfileEntryComponent,\n  TrajectoryEntryComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    HelgolandCoreModule,\n    HelgolandLabelMapperModule,\n    FormsModule\n  ],\n  declarations: [\n    COMPONENTS\n  ],\n  exports: [\n    COMPONENTS\n  ],\n  providers: [\n    ReferenceValueColorCache\n  ]\n})\nexport class HelgolandDatasetlistModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandFavoriteModule.html":{"url":"modules/HelgolandFavoriteModule.html","title":"module - HelgolandFavoriteModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandFavoriteModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandFavoriteModule\n\n\n\ncluster_HelgolandFavoriteModule_declarations\n\n\n\ncluster_HelgolandFavoriteModule_exports\n\n\n\ncluster_HelgolandFavoriteModule_providers\n\n\n\n\nBoolTogglerComponent\n\nBoolTogglerComponent\n\n\n\nHelgolandFavoriteModule\n\nHelgolandFavoriteModule\n\nHelgolandFavoriteModule -->\n\nBoolTogglerComponent->HelgolandFavoriteModule\n\n\n\n\n\nRefreshButtonComponent\n\nRefreshButtonComponent\n\nHelgolandFavoriteModule -->\n\nRefreshButtonComponent->HelgolandFavoriteModule\n\n\n\n\n\nStringTogglerComponent\n\nStringTogglerComponent\n\nHelgolandFavoriteModule -->\n\nStringTogglerComponent->HelgolandFavoriteModule\n\n\n\n\n\nBoolTogglerComponent \n\nBoolTogglerComponent \n\nBoolTogglerComponent  -->\n\nHelgolandFavoriteModule->BoolTogglerComponent \n\n\n\n\n\nRefreshButtonComponent \n\nRefreshButtonComponent \n\nRefreshButtonComponent  -->\n\nHelgolandFavoriteModule->RefreshButtonComponent \n\n\n\n\n\nStringTogglerComponent \n\nStringTogglerComponent \n\nStringTogglerComponent  -->\n\nHelgolandFavoriteModule->StringTogglerComponent \n\n\n\n\n\nFavoriteService\n\nFavoriteService\n\nHelgolandFavoriteModule -->\n\nFavoriteService->HelgolandFavoriteModule\n\n\n\n\n\nJsonFavoriteExporterService\n\nJsonFavoriteExporterService\n\nHelgolandFavoriteModule -->\n\nJsonFavoriteExporterService->HelgolandFavoriteModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/favorite/src/lib/favorite.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BoolTogglerComponent\n                            \n                            \n                                RefreshButtonComponent\n                            \n                            \n                                StringTogglerComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     FavoriteService\n                            \n                            \n                                     JsonFavoriteExporterService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BoolTogglerComponent\n                            \n                            \n                                    RefreshButtonComponent\n                            \n                            \n                                    StringTogglerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FavoriteTogglerComponent } from './favorite-toggler/favorite-toggler.component';\nimport { FavoriteService } from './service/favorite.service';\nimport { JsonFavoriteExporterService } from './service/json-favorite-exporter.service';\n\nconst COMPONENTS = [\n  FavoriteTogglerComponent\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    COMPONENTS\n  ],\n  providers: [\n    FavoriteService,\n    JsonFavoriteExporterService\n  ]\n})\nexport class HelgolandFavoriteModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandFlotModule.html":{"url":"modules/HelgolandFlotModule.html","title":"module - HelgolandFlotModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandFlotModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandFlotModule\n\n\n\ncluster_HelgolandFlotModule_declarations\n\n\n\ncluster_HelgolandFlotModule_imports\n\n\n\ncluster_HelgolandFlotModule_exports\n\n\n\n\nFlotOverviewTimeseriesGraphComponent\n\nFlotOverviewTimeseriesGraphComponent\n\n\n\nHelgolandFlotModule\n\nHelgolandFlotModule\n\nHelgolandFlotModule -->\n\nFlotOverviewTimeseriesGraphComponent->HelgolandFlotModule\n\n\n\n\n\nFlotTimeseriesGraphComponent\n\nFlotTimeseriesGraphComponent\n\nHelgolandFlotModule -->\n\nFlotTimeseriesGraphComponent->HelgolandFlotModule\n\n\n\n\n\nFlotOverviewTimeseriesGraphComponent \n\nFlotOverviewTimeseriesGraphComponent \n\nFlotOverviewTimeseriesGraphComponent  -->\n\nHelgolandFlotModule->FlotOverviewTimeseriesGraphComponent \n\n\n\n\n\nFlotTimeseriesGraphComponent \n\nFlotTimeseriesGraphComponent \n\nFlotTimeseriesGraphComponent  -->\n\nHelgolandFlotModule->FlotTimeseriesGraphComponent \n\n\n\n\n\nHelgolandLabelMapperModule\n\nHelgolandLabelMapperModule\n\nHelgolandFlotModule -->\n\nHelgolandLabelMapperModule->HelgolandFlotModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/flot/src/lib/flot.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FlotOverviewTimeseriesGraphComponent\n                            \n                            \n                                FlotTimeseriesGraphComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandLabelMapperModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FlotOverviewTimeseriesGraphComponent\n                            \n                            \n                                    FlotTimeseriesGraphComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { HelgolandLabelMapperModule } from '@helgoland/depiction';\n\nimport {\n  FlotOverviewTimeseriesGraphComponent,\n} from './flot-overview-timeseries-graph/flot-overview-timeseries-graph.component';\nimport { FlotTimeseriesGraphComponent } from './flot-timeseries-graph/flot-timeseries-graph.component';\n\n@NgModule({\n  declarations: [\n    FlotTimeseriesGraphComponent,\n    FlotOverviewTimeseriesGraphComponent\n  ],\n  imports: [\n    HelgolandLabelMapperModule\n  ],\n  exports: [\n    FlotTimeseriesGraphComponent,\n    FlotOverviewTimeseriesGraphComponent\n  ],\n  providers: []\n})\nexport class HelgolandFlotModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandLabelMapperModule.html":{"url":"modules/HelgolandLabelMapperModule.html","title":"module - HelgolandLabelMapperModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandLabelMapperModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandLabelMapperModule\n\n\n\ncluster_HelgolandLabelMapperModule_declarations\n\n\n\ncluster_HelgolandLabelMapperModule_exports\n\n\n\ncluster_HelgolandLabelMapperModule_providers\n\n\n\n\nLabelMapperComponent\n\nLabelMapperComponent\n\n\n\nHelgolandLabelMapperModule\n\nHelgolandLabelMapperModule\n\nHelgolandLabelMapperModule -->\n\nLabelMapperComponent->HelgolandLabelMapperModule\n\n\n\n\n\nLabelMapperComponent \n\nLabelMapperComponent \n\nLabelMapperComponent  -->\n\nHelgolandLabelMapperModule->LabelMapperComponent \n\n\n\n\n\nLabelMapperService\n\nLabelMapperService\n\nHelgolandLabelMapperModule -->\n\nLabelMapperService->HelgolandLabelMapperModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/depiction/src/lib/label-mapper/label-mapper.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LabelMapperComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     LabelMapperService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LabelMapperComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { LabelMapperComponent } from './label-mapper.component';\nimport { LabelMapperService } from './label-mapper.service';\n\n@NgModule({\n  declarations: [\n    LabelMapperComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LabelMapperComponent\n  ],\n  providers: [\n    LabelMapperService\n  ]\n})\nexport class HelgolandLabelMapperModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandMapControlModule.html":{"url":"modules/HelgolandMapControlModule.html","title":"module - HelgolandMapControlModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandMapControlModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandMapControlModule\n\n\n\ncluster_HelgolandMapControlModule_declarations\n\n\n\ncluster_HelgolandMapControlModule_imports\n\n\n\ncluster_HelgolandMapControlModule_exports\n\n\n\ncluster_HelgolandMapControlModule_providers\n\n\n\n\nBoolTogglerComponent\n\nBoolTogglerComponent\n\n\n\nHelgolandMapControlModule\n\nHelgolandMapControlModule\n\nHelgolandMapControlModule -->\n\nBoolTogglerComponent->HelgolandMapControlModule\n\n\n\n\n\nRefreshButtonComponent\n\nRefreshButtonComponent\n\nHelgolandMapControlModule -->\n\nRefreshButtonComponent->HelgolandMapControlModule\n\n\n\n\n\nStringTogglerComponent\n\nStringTogglerComponent\n\nHelgolandMapControlModule -->\n\nStringTogglerComponent->HelgolandMapControlModule\n\n\n\n\n\nBoolTogglerComponent \n\nBoolTogglerComponent \n\nBoolTogglerComponent  -->\n\nHelgolandMapControlModule->BoolTogglerComponent \n\n\n\n\n\nRefreshButtonComponent \n\nRefreshButtonComponent \n\nRefreshButtonComponent  -->\n\nHelgolandMapControlModule->RefreshButtonComponent \n\n\n\n\n\nStringTogglerComponent \n\nStringTogglerComponent \n\nStringTogglerComponent  -->\n\nHelgolandMapControlModule->StringTogglerComponent \n\n\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandMapControlModule -->\n\nHelgolandCoreModule->HelgolandMapControlModule\n\n\n\n\n\nHelgolandMapModule\n\nHelgolandMapModule\n\nHelgolandMapControlModule -->\n\nHelgolandMapModule->HelgolandMapControlModule\n\n\n\n\n\nLocateService\n\nLocateService\n\nHelgolandMapControlModule -->\n\nLocateService->HelgolandMapControlModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/control/module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BoolTogglerComponent\n                            \n                            \n                                RefreshButtonComponent\n                            \n                            \n                                StringTogglerComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     LocateService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandCoreModule\n                            \n                            \n                                    HelgolandMapModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BoolTogglerComponent\n                            \n                            \n                                    RefreshButtonComponent\n                            \n                            \n                                    StringTogglerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HelgolandCoreModule } from '@helgoland/core';\n\nimport { HelgolandMapModule } from '../base/map.module';\nimport { ExtentControlComponent } from './extent/extent.component';\nimport { GeosearchControlComponent } from './geosearch/geosearch.component';\nimport { LocateControlComponent } from './locate/locate.component';\nimport { LocateService } from './locate/locate.service';\nimport { ZoomControlComponent } from './zoom/zoom.component';\n\nconst COMPONENTS = [\n  LocateControlComponent,\n  ZoomControlComponent,\n  GeosearchControlComponent,\n  ExtentControlComponent\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HelgolandCoreModule,\n    HelgolandMapModule\n  ],\n  exports: [\n    COMPONENTS\n  ],\n  providers: [\n    LocateService\n  ]\n})\nexport class HelgolandMapControlModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandMapModule.html":{"url":"modules/HelgolandMapModule.html","title":"module - HelgolandMapModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandMapModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandMapModule\n\n\n\ncluster_HelgolandMapModule_declarations\n\n\n\ncluster_HelgolandMapModule_exports\n\n\n\ncluster_HelgolandMapModule_providers\n\n\n\n\nBoolTogglerComponent\n\nBoolTogglerComponent\n\n\n\nHelgolandMapModule\n\nHelgolandMapModule\n\nHelgolandMapModule -->\n\nBoolTogglerComponent->HelgolandMapModule\n\n\n\n\n\nRefreshButtonComponent\n\nRefreshButtonComponent\n\nHelgolandMapModule -->\n\nRefreshButtonComponent->HelgolandMapModule\n\n\n\n\n\nStringTogglerComponent\n\nStringTogglerComponent\n\nHelgolandMapModule -->\n\nStringTogglerComponent->HelgolandMapModule\n\n\n\n\n\nBoolTogglerComponent \n\nBoolTogglerComponent \n\nBoolTogglerComponent  -->\n\nHelgolandMapModule->BoolTogglerComponent \n\n\n\n\n\nRefreshButtonComponent \n\nRefreshButtonComponent \n\nRefreshButtonComponent  -->\n\nHelgolandMapModule->RefreshButtonComponent \n\n\n\n\n\nStringTogglerComponent \n\nStringTogglerComponent \n\nStringTogglerComponent  -->\n\nHelgolandMapModule->StringTogglerComponent \n\n\n\n\n\nMapCache\n\nMapCache\n\nHelgolandMapModule -->\n\nMapCache->HelgolandMapModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/map.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BoolTogglerComponent\n                            \n                            \n                                RefreshButtonComponent\n                            \n                            \n                                StringTogglerComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MapCache\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BoolTogglerComponent\n                            \n                            \n                                    RefreshButtonComponent\n                            \n                            \n                                    StringTogglerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { MapCache } from './map-cache.service';\n\nconst COMPONENTS = [\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n  ],\n  exports: [\n    COMPONENTS\n  ],\n  providers: [\n    MapCache\n  ]\n})\nexport class HelgolandMapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandMapSelectorModule.html":{"url":"modules/HelgolandMapSelectorModule.html","title":"module - HelgolandMapSelectorModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandMapSelectorModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandMapSelectorModule\n\n\n\ncluster_HelgolandMapSelectorModule_declarations\n\n\n\ncluster_HelgolandMapSelectorModule_imports\n\n\n\ncluster_HelgolandMapSelectorModule_exports\n\n\n\n\nBoolTogglerComponent\n\nBoolTogglerComponent\n\n\n\nHelgolandMapSelectorModule\n\nHelgolandMapSelectorModule\n\nHelgolandMapSelectorModule -->\n\nBoolTogglerComponent->HelgolandMapSelectorModule\n\n\n\n\n\nRefreshButtonComponent\n\nRefreshButtonComponent\n\nHelgolandMapSelectorModule -->\n\nRefreshButtonComponent->HelgolandMapSelectorModule\n\n\n\n\n\nStringTogglerComponent\n\nStringTogglerComponent\n\nHelgolandMapSelectorModule -->\n\nStringTogglerComponent->HelgolandMapSelectorModule\n\n\n\n\n\nBoolTogglerComponent \n\nBoolTogglerComponent \n\nBoolTogglerComponent  -->\n\nHelgolandMapSelectorModule->BoolTogglerComponent \n\n\n\n\n\nRefreshButtonComponent \n\nRefreshButtonComponent \n\nRefreshButtonComponent  -->\n\nHelgolandMapSelectorModule->RefreshButtonComponent \n\n\n\n\n\nStringTogglerComponent \n\nStringTogglerComponent \n\nStringTogglerComponent  -->\n\nHelgolandMapSelectorModule->StringTogglerComponent \n\n\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandMapSelectorModule -->\n\nHelgolandCoreModule->HelgolandMapSelectorModule\n\n\n\n\n\nHelgolandMapModule\n\nHelgolandMapModule\n\nHelgolandMapSelectorModule -->\n\nHelgolandMapModule->HelgolandMapSelectorModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/selector/module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BoolTogglerComponent\n                            \n                            \n                                RefreshButtonComponent\n                            \n                            \n                                StringTogglerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandCoreModule\n                            \n                            \n                                    HelgolandMapModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BoolTogglerComponent\n                            \n                            \n                                    RefreshButtonComponent\n                            \n                            \n                                    StringTogglerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HelgolandCoreModule } from '@helgoland/core';\n\nimport { HelgolandMapModule } from '../base/map.module';\nimport { PlatformMapSelectorComponent } from './platform-map-selector/platform-map-selector.component';\nimport { StationMapSelectorComponent } from './station-map-selector/station-map-selector.component';\nimport { ProfileTrajectoryMapSelectorComponent } from './trajectory-map-selector/trajectory-map-selector.component';\n\nconst COMPONENTS = [\n    PlatformMapSelectorComponent,\n    StationMapSelectorComponent,\n    ProfileTrajectoryMapSelectorComponent\n];\n\n@NgModule({\n    declarations: [\n        COMPONENTS\n    ],\n    imports: [\n        CommonModule,\n        HelgolandCoreModule,\n        HelgolandMapModule\n    ],\n    exports: [\n        COMPONENTS\n    ],\n    providers: [\n    ]\n})\nexport class HelgolandMapSelectorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandMapViewModule.html":{"url":"modules/HelgolandMapViewModule.html","title":"module - HelgolandMapViewModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandMapViewModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandMapViewModule\n\n\n\ncluster_HelgolandMapViewModule_declarations\n\n\n\ncluster_HelgolandMapViewModule_imports\n\n\n\ncluster_HelgolandMapViewModule_exports\n\n\n\n\nGeometryMapViewerComponent\n\nGeometryMapViewerComponent\n\n\n\nHelgolandMapViewModule\n\nHelgolandMapViewModule\n\nHelgolandMapViewModule -->\n\nGeometryMapViewerComponent->HelgolandMapViewModule\n\n\n\n\n\nGeometryMapViewerComponent \n\nGeometryMapViewerComponent \n\nGeometryMapViewerComponent  -->\n\nHelgolandMapViewModule->GeometryMapViewerComponent \n\n\n\n\n\nHelgolandMapModule\n\nHelgolandMapModule\n\nHelgolandMapViewModule -->\n\nHelgolandMapModule->HelgolandMapViewModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/view/module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GeometryMapViewerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandMapModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    GeometryMapViewerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { HelgolandMapModule } from '../base/map.module';\nimport { GeometryMapViewerComponent } from './geometry-map-viewer/geometry-map-viewer.component';\n\n@NgModule({\n    declarations: [\n        GeometryMapViewerComponent\n    ],\n    imports: [\n        HelgolandMapModule\n    ],\n    exports: [\n        GeometryMapViewerComponent\n    ],\n    providers: [\n    ]\n})\nexport class HelgolandMapViewModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandModificationModule.html":{"url":"modules/HelgolandModificationModule.html","title":"module - HelgolandModificationModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandModificationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandModificationModule\n\n\n\ncluster_HelgolandModificationModule_declarations\n\n\n\ncluster_HelgolandModificationModule_imports\n\n\n\ncluster_HelgolandModificationModule_exports\n\n\n\n\nAxesOptionsComponent\n\nAxesOptionsComponent\n\n\n\nHelgolandModificationModule\n\nHelgolandModificationModule\n\nHelgolandModificationModule -->\n\nAxesOptionsComponent->HelgolandModificationModule\n\n\n\n\n\nColorSelectorComponent\n\nColorSelectorComponent\n\nHelgolandModificationModule -->\n\nColorSelectorComponent->HelgolandModificationModule\n\n\n\n\n\nDragOptionsComponent\n\nDragOptionsComponent\n\nHelgolandModificationModule -->\n\nDragOptionsComponent->HelgolandModificationModule\n\n\n\n\n\nMinMaxRangeComponent\n\nMinMaxRangeComponent\n\nHelgolandModificationModule -->\n\nMinMaxRangeComponent->HelgolandModificationModule\n\n\n\n\n\nAxesOptionsComponent \n\nAxesOptionsComponent \n\nAxesOptionsComponent  -->\n\nHelgolandModificationModule->AxesOptionsComponent \n\n\n\n\n\nColorSelectorComponent \n\nColorSelectorComponent \n\nColorSelectorComponent  -->\n\nHelgolandModificationModule->ColorSelectorComponent \n\n\n\n\n\nDragOptionsComponent \n\nDragOptionsComponent \n\nDragOptionsComponent  -->\n\nHelgolandModificationModule->DragOptionsComponent \n\n\n\n\n\nMinMaxRangeComponent \n\nMinMaxRangeComponent \n\nMinMaxRangeComponent  -->\n\nHelgolandModificationModule->MinMaxRangeComponent \n\n\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandModificationModule -->\n\nHelgolandCoreModule->HelgolandModificationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/modification/src/lib/modification.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AxesOptionsComponent\n                            \n                            \n                                ColorSelectorComponent\n                            \n                            \n                                DragOptionsComponent\n                            \n                            \n                                MinMaxRangeComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandCoreModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AxesOptionsComponent\n                            \n                            \n                                    ColorSelectorComponent\n                            \n                            \n                                    DragOptionsComponent\n                            \n                            \n                                    MinMaxRangeComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HelgolandCoreModule } from '@helgoland/core';\nimport { ColorPickerModule } from 'ngx-color-picker';\n\nimport { AxesOptionsComponent } from './axes-options/axes-options.component';\nimport { ColorSelectorComponent } from './color-selector/color-selector.component';\nimport { DragOptionsComponent } from './drag-options/drag-options.component';\nimport { MinMaxRangeComponent } from './min-max-range/min-max-range.component';\n\n@NgModule({\n  declarations: [\n    ColorSelectorComponent,\n    AxesOptionsComponent,\n    DragOptionsComponent,\n    MinMaxRangeComponent\n  ],\n  imports: [\n    HelgolandCoreModule,\n    FormsModule,\n    ColorPickerModule\n  ],\n  exports: [\n    ColorSelectorComponent,\n    AxesOptionsComponent,\n    DragOptionsComponent,\n    MinMaxRangeComponent\n  ],\n  providers: [\n  ]\n})\nexport class HelgolandModificationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandPermalinkModule.html":{"url":"modules/HelgolandPermalinkModule.html","title":"module - HelgolandPermalinkModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandPermalinkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandPermalinkModule\n\n\n\ncluster_HelgolandPermalinkModule_declarations\n\n\n\ncluster_HelgolandPermalinkModule_exports\n\n\n\n\nBoolTogglerComponent\n\nBoolTogglerComponent\n\n\n\nHelgolandPermalinkModule\n\nHelgolandPermalinkModule\n\nHelgolandPermalinkModule -->\n\nBoolTogglerComponent->HelgolandPermalinkModule\n\n\n\n\n\nRefreshButtonComponent\n\nRefreshButtonComponent\n\nHelgolandPermalinkModule -->\n\nRefreshButtonComponent->HelgolandPermalinkModule\n\n\n\n\n\nStringTogglerComponent\n\nStringTogglerComponent\n\nHelgolandPermalinkModule -->\n\nStringTogglerComponent->HelgolandPermalinkModule\n\n\n\n\n\nBoolTogglerComponent \n\nBoolTogglerComponent \n\nBoolTogglerComponent  -->\n\nHelgolandPermalinkModule->BoolTogglerComponent \n\n\n\n\n\nRefreshButtonComponent \n\nRefreshButtonComponent \n\nRefreshButtonComponent  -->\n\nHelgolandPermalinkModule->RefreshButtonComponent \n\n\n\n\n\nStringTogglerComponent \n\nStringTogglerComponent \n\nStringTogglerComponent  -->\n\nHelgolandPermalinkModule->StringTogglerComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/permalink/src/lib/permalink.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BoolTogglerComponent\n                            \n                            \n                                RefreshButtonComponent\n                            \n                            \n                                StringTogglerComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BoolTogglerComponent\n                            \n                            \n                                    RefreshButtonComponent\n                            \n                            \n                                    StringTogglerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ClipboardModule } from 'ngx-clipboard';\n\nimport { PermalinkInMailComponent } from './permalink-in-mail/permalink-in-mail.component';\nimport { PermalinkNewWindowComponent } from './permalink-new-window/permalink-new-window.component';\nimport { PermalinkToClipboardComponent } from './permalink-to-clipboard/permalink-to-clipboard.component';\n\nconst COMPONENTS = [\n  PermalinkInMailComponent,\n  PermalinkNewWindowComponent,\n  PermalinkToClipboardComponent\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n    ClipboardModule\n  ],\n  exports: [\n    COMPONENTS\n  ],\n  providers: [\n  ]\n})\nexport class HelgolandPermalinkModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandPlotlyModule.html":{"url":"modules/HelgolandPlotlyModule.html","title":"module - HelgolandPlotlyModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandPlotlyModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandPlotlyModule\n\n\n\ncluster_HelgolandPlotlyModule_declarations\n\n\n\ncluster_HelgolandPlotlyModule_imports\n\n\n\ncluster_HelgolandPlotlyModule_exports\n\n\n\n\nPlotlyProfileGraphComponent\n\nPlotlyProfileGraphComponent\n\n\n\nHelgolandPlotlyModule\n\nHelgolandPlotlyModule\n\nHelgolandPlotlyModule -->\n\nPlotlyProfileGraphComponent->HelgolandPlotlyModule\n\n\n\n\n\nPlotlyProfileGraphComponent \n\nPlotlyProfileGraphComponent \n\nPlotlyProfileGraphComponent  -->\n\nHelgolandPlotlyModule->PlotlyProfileGraphComponent \n\n\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandPlotlyModule -->\n\nHelgolandCoreModule->HelgolandPlotlyModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/plotly/src/lib/plotly.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PlotlyProfileGraphComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandCoreModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    PlotlyProfileGraphComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { HelgolandCoreModule } from '@helgoland/core';\n\nimport { PlotlyProfileGraphComponent } from './plotly-profile-graph/plotly-profile-graph.component';\n\n@NgModule({\n  declarations: [\n    PlotlyProfileGraphComponent\n  ],\n  imports: [\n    HelgolandCoreModule\n  ],\n  exports: [\n    PlotlyProfileGraphComponent\n  ],\n  providers: []\n})\nexport class HelgolandPlotlyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandSelectorModule.html":{"url":"modules/HelgolandSelectorModule.html","title":"module - HelgolandSelectorModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandSelectorModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandSelectorModule\n\n\n\ncluster_HelgolandSelectorModule_declarations\n\n\n\ncluster_HelgolandSelectorModule_imports\n\n\n\ncluster_HelgolandSelectorModule_exports\n\n\n\ncluster_HelgolandSelectorModule_providers\n\n\n\n\nDatasetByStationSelectorComponent\n\nDatasetByStationSelectorComponent\n\n\n\nHelgolandSelectorModule\n\nHelgolandSelectorModule\n\nHelgolandSelectorModule -->\n\nDatasetByStationSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nListSelectorComponent\n\nListSelectorComponent\n\nHelgolandSelectorModule -->\n\nListSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nMultiServiceFilterSelectorComponent\n\nMultiServiceFilterSelectorComponent\n\nHelgolandSelectorModule -->\n\nMultiServiceFilterSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nServiceFilterSelectorComponent\n\nServiceFilterSelectorComponent\n\nHelgolandSelectorModule -->\n\nServiceFilterSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nServiceSelectorComponent\n\nServiceSelectorComponent\n\nHelgolandSelectorModule -->\n\nServiceSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nDatasetByStationSelectorComponent \n\nDatasetByStationSelectorComponent \n\nDatasetByStationSelectorComponent  -->\n\nHelgolandSelectorModule->DatasetByStationSelectorComponent \n\n\n\n\n\nListSelectorComponent \n\nListSelectorComponent \n\nListSelectorComponent  -->\n\nHelgolandSelectorModule->ListSelectorComponent \n\n\n\n\n\nMultiServiceFilterSelectorComponent \n\nMultiServiceFilterSelectorComponent \n\nMultiServiceFilterSelectorComponent  -->\n\nHelgolandSelectorModule->MultiServiceFilterSelectorComponent \n\n\n\n\n\nServiceFilterSelectorComponent \n\nServiceFilterSelectorComponent \n\nServiceFilterSelectorComponent  -->\n\nHelgolandSelectorModule->ServiceFilterSelectorComponent \n\n\n\n\n\nServiceSelectorComponent \n\nServiceSelectorComponent \n\nServiceSelectorComponent  -->\n\nHelgolandSelectorModule->ServiceSelectorComponent \n\n\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandSelectorModule -->\n\nHelgolandCoreModule->HelgolandSelectorModule\n\n\n\n\n\nHelgolandLabelMapperModule\n\nHelgolandLabelMapperModule\n\nHelgolandSelectorModule -->\n\nHelgolandLabelMapperModule->HelgolandSelectorModule\n\n\n\n\n\nListSelectorService\n\nListSelectorService\n\nHelgolandSelectorModule -->\n\nListSelectorService->HelgolandSelectorModule\n\n\n\n\n\nServiceSelectorService\n\nServiceSelectorService\n\nHelgolandSelectorModule -->\n\nServiceSelectorService->HelgolandSelectorModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/selector/src/lib/selector.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DatasetByStationSelectorComponent\n                            \n                            \n                                ListSelectorComponent\n                            \n                            \n                                MultiServiceFilterSelectorComponent\n                            \n                            \n                                ServiceFilterSelectorComponent\n                            \n                            \n                                ServiceSelectorComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ListSelectorService\n                            \n                            \n                                     ServiceSelectorService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandCoreModule\n                            \n                            \n                                    HelgolandLabelMapperModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DatasetByStationSelectorComponent\n                            \n                            \n                                    ListSelectorComponent\n                            \n                            \n                                    MultiServiceFilterSelectorComponent\n                            \n                            \n                                    ServiceFilterSelectorComponent\n                            \n                            \n                                    ServiceSelectorComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HelgolandCoreModule } from '@helgoland/core';\nimport { HelgolandLabelMapperModule } from '@helgoland/depiction';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { DatasetByStationSelectorComponent } from './dataset-by-station-selector/dataset-by-station-selector.component';\nimport { ListSelectorComponent } from './list-selector/list-selector.component';\nimport { ListSelectorService } from './list-selector/list-selector.service';\nimport {\n  MultiServiceFilterSelectorComponent,\n} from './multi-service-filter-selector/multi-service-filter-selector.component';\nimport { ServiceFilterSelectorComponent } from './service-filter-selector/service-filter-selector.component';\nimport { ServiceSelectorComponent } from './service-selector/service-selector.component';\nimport { ServiceSelectorService } from './service-selector/service-selector.service';\n\n@NgModule({\n  declarations: [\n    ServiceSelectorComponent,\n    ServiceFilterSelectorComponent,\n    DatasetByStationSelectorComponent,\n    MultiServiceFilterSelectorComponent,\n    ListSelectorComponent\n  ],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    HelgolandLabelMapperModule,\n    HelgolandCoreModule\n  ],\n  exports: [\n    ServiceSelectorComponent,\n    ServiceFilterSelectorComponent,\n    DatasetByStationSelectorComponent,\n    MultiServiceFilterSelectorComponent,\n    ListSelectorComponent\n  ],\n  providers: [\n    ServiceSelectorService,\n    ListSelectorService\n  ]\n})\nexport class HelgolandSelectorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandTimeModule.html":{"url":"modules/HelgolandTimeModule.html","title":"module - HelgolandTimeModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandTimeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandTimeModule\n\n\n\ncluster_HelgolandTimeModule_declarations\n\n\n\ncluster_HelgolandTimeModule_imports\n\n\n\ncluster_HelgolandTimeModule_exports\n\n\n\n\nBoolTogglerComponent\n\nBoolTogglerComponent\n\n\n\nHelgolandTimeModule\n\nHelgolandTimeModule\n\nHelgolandTimeModule -->\n\nBoolTogglerComponent->HelgolandTimeModule\n\n\n\n\n\nRefreshButtonComponent\n\nRefreshButtonComponent\n\nHelgolandTimeModule -->\n\nRefreshButtonComponent->HelgolandTimeModule\n\n\n\n\n\nStringTogglerComponent\n\nStringTogglerComponent\n\nHelgolandTimeModule -->\n\nStringTogglerComponent->HelgolandTimeModule\n\n\n\n\n\nBoolTogglerComponent \n\nBoolTogglerComponent \n\nBoolTogglerComponent  -->\n\nHelgolandTimeModule->BoolTogglerComponent \n\n\n\n\n\nRefreshButtonComponent \n\nRefreshButtonComponent \n\nRefreshButtonComponent  -->\n\nHelgolandTimeModule->RefreshButtonComponent \n\n\n\n\n\nStringTogglerComponent \n\nStringTogglerComponent \n\nStringTogglerComponent  -->\n\nHelgolandTimeModule->StringTogglerComponent \n\n\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandTimeModule -->\n\nHelgolandCoreModule->HelgolandTimeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/time/src/lib/time.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BoolTogglerComponent\n                            \n                            \n                                RefreshButtonComponent\n                            \n                            \n                                StringTogglerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandCoreModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BoolTogglerComponent\n                            \n                            \n                                    RefreshButtonComponent\n                            \n                            \n                                    StringTogglerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HelgolandCoreModule } from '@helgoland/core';\n\nimport { PredefinedTimespanSelectorComponent } from './predefined-timespan-selector/predefined-timespan-selector.component';\nimport { TimeListSelectorComponent } from './time-list-selector/time-list-selector.component';\nimport { TimespanButtonComponent } from './timespan-button/timespan-button.component';\nimport { TimespanShiftSelectorComponent } from './timespan-shift-selector/timespan-shift-selector.component';\n\nconst COMPONENTS = [\n  PredefinedTimespanSelectorComponent,\n  TimeListSelectorComponent,\n  TimespanShiftSelectorComponent,\n  TimespanButtonComponent\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HelgolandCoreModule\n  ],\n  exports: [\n    COMPONENTS\n  ]\n})\nexport class HelgolandTimeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandTimeRangeSliderModule.html":{"url":"modules/HelgolandTimeRangeSliderModule.html","title":"module - HelgolandTimeRangeSliderModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandTimeRangeSliderModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandTimeRangeSliderModule\n\n\n\ncluster_HelgolandTimeRangeSliderModule_declarations\n\n\n\ncluster_HelgolandTimeRangeSliderModule_exports\n\n\n\ncluster_HelgolandTimeRangeSliderModule_providers\n\n\n\n\nTimeRangeSliderComponent\n\nTimeRangeSliderComponent\n\n\n\nHelgolandTimeRangeSliderModule\n\nHelgolandTimeRangeSliderModule\n\nHelgolandTimeRangeSliderModule -->\n\nTimeRangeSliderComponent->HelgolandTimeRangeSliderModule\n\n\n\n\n\nTimeRangeSliderComponent \n\nTimeRangeSliderComponent \n\nTimeRangeSliderComponent  -->\n\nHelgolandTimeRangeSliderModule->TimeRangeSliderComponent \n\n\n\n\n\nTimeRangeSliderCache\n\nTimeRangeSliderCache\n\nHelgolandTimeRangeSliderModule -->\n\nTimeRangeSliderCache->HelgolandTimeRangeSliderModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/time-range-slider/src/lib/time-range-slider.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TimeRangeSliderComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TimeRangeSliderCache\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TimeRangeSliderComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { TimeRangeSliderComponent } from './time-range-slider.component';\nimport { TimeRangeSliderCache } from './time-range-slider.service';\n\n@NgModule({\n    declarations: [TimeRangeSliderComponent],\n    exports: [TimeRangeSliderComponent],\n    imports: [CommonModule],\n    providers: [TimeRangeSliderCache]\n})\nexport class HelgolandTimeRangeSliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HighlightDataset.html":{"url":"interfaces/HighlightDataset.html","title":"interface - HighlightDataset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HighlightDataset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/d3/src/lib/d3-timeseries-graph/d3-timeseries-graph.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        change\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                    \n                                \n                                \n                                    \n                                        change:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    IterableDiffers,\n    Output,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    ColorService,\n    Data,\n    DatasetApiInterface,\n    DatasetOptions,\n    DatasetPresenterComponent,\n    IDataset,\n    InternalIdHandler,\n    MinMaxRange,\n    Time,\n    Timeseries,\n    Timespan,\n} from '@helgoland/core';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { D3PlotOptions } from '../model/d3-plot-options';\n\ninterface DataEntry {\n    yDiagCoord?: number;\n    timestamp?: number;\n    xDiagMin?: number;\n    xDiagMax?: number;\n    yDiagMin?: number;\n    yDiagMax?: number;\n    xDiagCoord?: number;\n}\n\ninterface HighlightDataset {\n    id: string;\n    change: boolean;\n}\n\ninterface YScale {\n    buffer: number;\n    yScale: d3.ScaleLinear;\n}\n\ninterface YRanges {\n    uom: string;\n    range: MinMaxRange;\n    zeroBased: boolean;\n    ids: string[];\n    first?: boolean;\n    yScale?: d3.ScaleLinear;\n    offset?: number;\n}\n\ninterface InternalDataEntry {\n    internalId: string;\n    color: string;\n    data: [number, number][];\n    points: {\n        fillColor: string\n    };\n    lines: {\n        lineWidth: number;\n        pointRadius: number;\n    };\n    bars: {\n        lineWidth: number;\n    };\n    axisOptions: {\n        uom: string;\n        label: string;\n        zeroBased: boolean;\n        yAxisRange: MinMaxRange;\n    };\n    visible: boolean;\n}\n\ninterface DataYRange {\n    uom: string;\n    range?: MinMaxRange;\n    id: string;\n    zeroBasedYAxis: boolean;\n}\n\ninterface DataConst extends IDataset {\n    data?: Data;\n}\n\n@Component({\n    selector: 'n52-d3-timeseries-graph',\n    templateUrl: './d3-timeseries-graph.component.html',\n    styleUrls: ['./d3-timeseries-graph.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class D3TimeseriesGraphComponent\n    extends DatasetPresenterComponent\n    implements AfterViewInit {\n\n    @Input()\n    // difference to timespan/timeInterval --> if brush, then this is the timespan of the main-diagram\n    public mainTimeInterval: Timespan;\n\n    @Output()\n    public onSelectId: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onContentLoading: EventEmitter = new EventEmitter();\n\n    @ViewChild('d3timeseries')\n    public d3Elem: ElementRef;\n\n    // set zoom limit --> can be adapted to needs\n    private config = {\n        time: {\n            zoomLimit: 10800000  // 3 hour ((3 * 3600) * 1000) limitation\n        }\n    };\n\n    private preparedData = Array(); // : DataSeries[]\n    private mousedownBrush: boolean;\n    private rawSvg: any; // d3.Selection;\n    private graph: any;\n    private graphBody: any;\n    private dragRect: any;\n    private dragRectG: any;\n    private xAxisRange: Timespan; // x domain range\n    private xAxisRangeOrigin: any; // x domain range\n    private xAxisRangePan: [number, number]; // x domain range\n    private yRangesEachUom: YRanges[]; // y array of objects containing ranges for each uom\n    private dataYranges: DataYRange[]; // y array of objects containing ranges of all datasets\n    private ypos: any; // y array of objects containing ranges of all datasets\n    private idxOfPos = 0;\n\n    private height: number;\n    private width: number;\n    private margin = {\n        top: 10,\n        right: 10,\n        bottom: 40,\n        left: 40\n    };\n    private maxLabelwidth = 0;\n    private xScaleBase: d3.ScaleLinear; // calculate diagram coord of x value\n    private yScaleBase: d3.ScaleLinear; // calculate diagram coord of y value\n    private background: any;\n    private focusG: any;\n    private highlightFocus: any;\n    private focuslabelTime: any;\n    private bufferSum: number;\n    private labelTimestamp: number[];\n\n    private dragging: boolean;\n    private dragStart: [number, number];\n    private dragCurrent: [number, number];\n\n    private draggingMove: boolean;\n    private dragMoveStart: [number, number];\n    private dragMoveRange: [number, number];\n\n    private addLineWidth = 2; // value added to linewidth\n\n    // default plot options\n    private plotOptions: D3PlotOptions = {\n        showReferenceValues: false,\n        generalizeAllways: true,\n        togglePanZoom: true,\n        hoverable: true,\n        grid: true,\n        yaxis: true,\n        overview: false\n    };\n\n    private datasetMap: Map = new Map();\n\n    private loadingCounter = 0;\n    private currentTimeId: string;\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time,\n        private colorService: ColorService\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc);\n    }\n\n    public ngAfterViewInit(): void {\n        this.currentTimeId = this.uuidv4();\n\n        this.rawSvg = d3.select(this.d3Elem.nativeElement)\n            .append('svg')\n            .attr('width', '100%')\n            .attr('height', '100%');\n\n        this.graph = this.rawSvg\n            .append('g')\n            .attr('transform', 'translate(' + (this.margin.left + this.maxLabelwidth) + ',' + this.margin.top + ')');\n\n        this.mousedownBrush = false;\n        this.dataYranges = [];\n        this.xAxisRangeOrigin = [];\n    }\n\n    public reloadData(): void {\n        // not implemented yet\n    }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getSingleTimeseries(id, url).subscribe(\n            (timeseries) => this.loadAddedDataset(timeseries),\n            (error) => {\n                this.api.getDataset(id, url).subscribe(\n                    (dataset) => this.loadAddedDataset(dataset),\n                );\n            }\n        );\n    }\n    protected removeDataset(internalId: string): void {\n        this.dataYranges = [];\n        this.xAxisRangeOrigin = [];\n        this.datasetMap.delete(internalId);\n        let spliceIdx = this.preparedData.findIndex((entry) => entry.internalId === internalId);\n        if (spliceIdx >= 0) {\n            this.preparedData.splice(spliceIdx, 1);\n            if (this.preparedData.length  {\n                    this.processData(entry);\n                });\n            }\n        }\n    }\n    protected setSelectedId(internalId: string): void {\n        const tsData = this.preparedData.find((e) => e.internalId === internalId);\n        if (!tsData.selected || tsData.selected === undefined) {\n            tsData.selected = true;\n            tsData.lines.lineWidth += this.addLineWidth;\n            tsData.lines.pointRadius += this.addLineWidth;\n            tsData.bars.lineWidth += this.addLineWidth;\n        }\n        this.plotGraph();\n    }\n    protected removeSelectedId(internalId: string): void {\n        const tsData = this.preparedData.find((e) => e.internalId === internalId);\n        if (tsData.selected || tsData.selected === undefined) {\n            tsData.selected = false;\n            tsData.lines.lineWidth -= this.addLineWidth;\n            tsData.lines.pointRadius -= this.addLineWidth;\n            tsData.bars.lineWidth -= this.addLineWidth;\n        }\n        this.plotGraph();\n    }\n    protected graphOptionsChanged(options: D3PlotOptions): void {\n\n        Object.assign(this.plotOptions, options);\n        if (this.rawSvg && this.yRangesEachUom) {\n            this.plotGraph();\n        }\n    }\n    protected datasetOptionsChanged(internalId: string, options: DatasetOptions, firstChange: boolean) {\n        if (!firstChange && this.datasetMap.has(internalId)) {\n            this.loadDataset(this.datasetMap.get(internalId));\n        }\n    }\n    protected timeIntervalChanges(): void {\n        this.datasetMap.forEach((dataset) => {\n            this.loadDataset(dataset);\n        });\n    }\n    protected onResize(): void {\n        this.plotGraph();\n    }\n\n    private changeTime(from: number, to: number) {\n        if (to - from (dataset.id, dataset.url, buffer,\n                {\n                    format: 'flot',\n                    expanded: this.plotOptions.showReferenceValues === true,\n                    generalize: this.plotOptions.generalizeAllways || datasetOptions.generalize\n                }\n            ).subscribe(\n                (result) => {\n                    this.datasetMap.get(dataset.internalId).data = result;\n                    this.prepareTsData(dataset).subscribe(() => {\n                    });\n                },\n                (error) => this.onError(error),\n                () => {\n                    this.onCompleteLoadingData();\n                }\n            );\n        }\n    }\n\n    private onCompleteLoadingData() {\n        this.loadingCounter--;\n        if (this.loadingCounter === 0) { this.isContentLoadingD3(false); }\n    }\n\n    /**\n     * Function to prepare each dataset for the graph and adding it to an array of datasets.\n     * @param dataset {IDataset} Object of the whole dataset\n     */\n    private prepareTsData(dataset: IDataset): Observable { // , data: Data\n        return Observable.create((observer: Observer) => {\n            const datasetIdx = this.preparedData.findIndex((e) => e.internalId === dataset.internalId);\n            const styles = this.datasetOptions.get(dataset.internalId);\n            const data = this.datasetMap.get(dataset.internalId).data;\n\n            // TODO: change uom for testing\n            // if (this.preparedData.length > 0) {\n            //     dataset.uom = 'mc';\n            // }\n\n            // generate random color, if color is not defined\n            if (styles.color === undefined) {\n                styles.color = this.colorService.getColor();\n            }\n\n\n            // end of check for datasets\n            const dataEntry: InternalDataEntry = {\n                internalId: dataset.internalId,\n                color: styles.color,\n                data: styles.visible ? data.values : [],\n                points: {\n                    fillColor: styles.color\n                },\n                lines: {\n                    lineWidth: styles.lineWidth,\n                    pointRadius: styles.pointRadius\n                },\n                bars: {\n                    lineWidth: styles.lineWidth\n                },\n                axisOptions: {\n                    uom: dataset.uom,\n                    label: dataset.label,\n                    zeroBased: styles.zeroBasedYAxis,\n                    yAxisRange: styles.yAxisRange\n                },\n                visible: styles.visible\n            };\n            // alternative linewWidth = this.plotOptions.selected.includes(dataset.uom)\n            if (this.selectedDatasetIds.indexOf(dataset.internalId) >= 0) {\n                dataEntry.lines.lineWidth += this.addLineWidth;\n                dataEntry.lines.pointRadius += this.addLineWidth;\n                dataEntry.bars.lineWidth += this.addLineWidth;\n            }\n\n            if (datasetIdx >= 0) {\n                this.preparedData[datasetIdx] = dataEntry;\n            } else {\n                this.preparedData.push(dataEntry);\n            }\n            this.addReferenceValueData(dataset.internalId, styles, data, dataset.uom);\n            this.processData(dataEntry);\n            this.plotGraph();\n        });\n    }\n\n    /**\n     * Function to add referencevaluedata to the dataset (e.g. mean).\n     * @param internalId {String} String with the id of a dataset\n     * @param styles {DatasetOptions} Object containing information for dataset styling\n     * @param data {Data} Array of Arrays containing the measurement-data of the dataset\n     * @param uomO {String} String with the uom of a dataset\n     */\n    private addReferenceValueData(internalId: string, styles: DatasetOptions, data: Data, uomO: string) {\n        this.preparedData = this.preparedData.filter((entry) => {\n            return !entry.internalId.startsWith('ref' + internalId);\n        });\n        if (this.plotOptions.showReferenceValues) {\n            styles.showReferenceValues.forEach((refValue) => {\n                const refDataEntry = {\n                    internalId: 'ref' + internalId + refValue.id,\n                    color: refValue.color,\n                    data: data.referenceValues[refValue.id],\n                    points: {\n                        fillColor: refValue.color\n                    },\n                    lines: {\n                        lineWidth: 1\n                    },\n                    axisOptions: {\n                        uom: uomO\n                    }\n                };\n                this.preparedData.push(refDataEntry);\n            });\n        }\n    }\n\n    /**\n     * Function that processes the data to calculate y axis range of each dataset.\n     * @param dataEntry {DataEntry} Object containing dataset related data.\n     * @param internalId {String} String with the ID of a dataset.\n     */\n    private processData(dataEntry: InternalDataEntry) {\n        let calculatedRange: MinMaxRange;\n        let predefinedRange = dataEntry.axisOptions.yAxisRange;\n\n        // get min and max value of data\n        const dataExtent = d3.extent(dataEntry.data, (datum, index, array) => {\n            return datum[1]; // datum[0] = timestamp -- datum[1] = value\n        });\n\n        // let outOfrange = false;\n        let setDataExtent = false;\n\n        // calculate out of predefined range\n        if (predefinedRange && !this.graphOptions.overview) {\n            if (predefinedRange.min > predefinedRange.max) {\n                calculatedRange = { min: predefinedRange.max, max: predefinedRange.min };\n            } else {\n                calculatedRange = predefinedRange;\n            }\n            if (predefinedRange.min > dataExtent[1] || predefinedRange.max = 0) {\n                calculatedRange.min = 0;\n            }\n        }\n\n        const newDatasetIdx = this.preparedData.findIndex((e) => e.internalId === dataEntry.internalId);\n\n        // set range, uom and id for each dataset\n        if (dataEntry.visible) {\n            this.dataYranges[newDatasetIdx] = {\n                uom: dataEntry.axisOptions.uom,\n                id: dataEntry.internalId,\n                zeroBasedYAxis: dataEntry.axisOptions.zeroBased\n            };\n            if (isFinite(calculatedRange.min) && isFinite(calculatedRange.max)) {\n                this.dataYranges[newDatasetIdx].range = calculatedRange;\n            }\n        } else {\n            this.dataYranges[newDatasetIdx] = null;\n        }\n\n        // set range and array of IDs for each uom to generate y-axis later on\n        this.yRangesEachUom = [];\n        this.dataYranges.forEach((obj) => {\n            if (obj !== null) {\n                let idx = this.yRangesEachUom.findIndex((e) => e.uom === obj.uom);\n                let yrangeObj: YRanges = {\n                    uom: obj.uom,\n                    range: obj.range,\n                    ids: [obj.id],\n                    zeroBased: obj.zeroBasedYAxis\n                };\n\n                if (idx >= 0) {\n                    if (this.yRangesEachUom[idx].range) {\n                        if (obj.range) {\n                            if (this.yRangesEachUom[idx].range.min > obj.range.min && !isNaN(obj.range.min)) {\n                                this.yRangesEachUom[idx].range.min = obj.range.min;\n                            }\n                            if (this.yRangesEachUom[idx].range.max  {\n            entry.first = (this.yScaleBase === null);\n            entry.offset = this.bufferSum;\n\n            let yAxisResult = this.drawYaxis(entry);\n            if (this.yScaleBase === null) {\n                this.yScaleBase = yAxisResult.yScale;\n            } else {\n                this.bufferSum = yAxisResult.buffer;\n            }\n            entry.yScale = yAxisResult.yScale;\n        });\n\n        if (!this.yScaleBase) {\n            return;\n        }\n\n        // draw x and y axis\n        this.drawXaxis(this.bufferSum);\n        this.preparedData.forEach((entry) => {\n            this.drawGraphLine(entry);\n        });\n\n        // #####################################################\n        // create background rect\n        if (!this.plotOptions.overview) {\n            // execute when it is not an overview diagram\n            this.background = this.graph.append('svg:rect')\n                .attr('width', this.width - this.bufferSum)\n                .attr('height', this.height)\n                .attr('fill', 'none')\n                .attr('stroke', 'none')\n                .attr('pointer-events', 'all')\n                .attr('transform', 'translate(' + this.bufferSum + ', 0)');\n\n            // mouse events hovering\n            if (this.plotOptions.hoverable) {\n                this.background\n                    .on('mousemove.focus', this.mousemoveHandler)\n                    .on('mouseout.focus', this.mouseoutHandler);\n\n                // line inside graph\n                this.focusG = this.graph.append('g');\n                this.highlightFocus = this.focusG.append('svg:line')\n                    .attr('class', 'mouse-focus-line')\n                    .attr('x2', '0')\n                    .attr('y2', '0')\n                    .attr('x1', '0')\n                    .attr('y1', '0')\n                    .style('stroke', 'black')\n                    .style('stroke-width', '1px');\n\n                this.preparedData.forEach((entry) => {\n                    // label inside graph\n                    entry.focusLabelRect = this.focusG.append('svg:rect')\n                        .attr('class', 'mouse-focus-label')\n                        .style('fill', 'white')\n                        .style('stroke', 'none')\n                        .style('pointer-events', 'none');\n                    entry.focusLabel = this.focusG.append('svg:text')\n                        .attr('class', 'mouse-focus-label')\n                        .style('pointer-events', 'none')\n                        .style('fill', entry.color)\n                        .style('font-weight', 'lighter');\n\n                    this.focuslabelTime = this.focusG.append('svg:text')\n                        .style('pointer-events', 'none')\n                        .attr('class', 'mouse-focus-time');\n                });\n            }\n\n            if (this.plotOptions.togglePanZoom === false) {\n                this.background\n                    .call(d3.zoom()\n                        .on('start', this.zoomStartHandler)\n                        .on('zoom', this.zoomHandler)\n                        .on('end', this.zoomEndHandler)\n                    );\n            } else {\n                this.background\n                    .call(d3.drag()\n                        .on('start', this.panStartHandler)\n                        .on('drag', this.panMoveHandler)\n                        .on('end', this.panEndHandler));\n            }\n        } else {\n            // execute when it is overview diagram\n            let interval = this.getXDomainByTimestamp();\n            let overviewTimespanInterval = [interval[0], interval[1]];\n\n            // create brush\n            let brush = d3.brushX()\n                .extent([[0, 0], [this.width, this.height]])\n                .on('end', () => {\n                    // on mouseclick change time after brush was moved\n                    if (this.mousedownBrush) {\n                        let timeByCoord = this.getTimestampByCoord(d3.event.selection[0], d3.event.selection[1]);\n                        this.changeTime(timeByCoord[0], timeByCoord[1]);\n                    }\n                    this.mousedownBrush = false;\n                });\n\n            // add brush to svg\n            this.background = this.graph.append('g')\n                .attr('width', this.width)\n                .attr('height', this.height)\n                .attr('pointer-events', 'all')\n                .attr('class', 'brush')\n                .call(brush)\n                .call(brush.move, overviewTimespanInterval);\n\n            /**\n             * add event to selection to prevent unnecessary re-rendering of brush\n             * add style of brush selection here\n             * e.g. 'fill' for color,\n             * 'stroke' for borderline-color,\n             * 'stroke-dasharray' for customizing borderline-style\n             */\n            this.background.selectAll('.selection')\n                .attr('stroke', 'none')\n                .on('mousedown', () => {\n                    this.mousedownBrush = true;\n                });\n\n            // do not allow clear selection\n            this.background.selectAll('.overlay')\n                .remove();\n\n            // add event to resizing handle to allow change time on resize\n            this.background.selectAll('.handle')\n                .style('fill', 'red')\n                .style('opacity', 0.3)\n                .attr('stroke', 'none')\n                .on('mousedown', () => {\n                    this.mousedownBrush = true;\n                });\n        }\n    }\n\n    /**\n     * Function that calculates and returns the x diagram coordinate for the brush range\n     * for the overview diagram by the selected time interval of the main diagram.\n     * Calculate to get brush extent when main diagram time interval changes.\n     */\n    private getXDomainByTimestamp() {\n        /**\n         * calculate range of brush with timestamp and not diagram coordinates\n         * formula:\n         * brush_min =\n         * (overview_width / (overview_max - overview_min)) * (brush_min - overview_min)\n         * brus_max =\n         * (overview_width / (overview_max - overview_min)) * (brush_max - overview_min)\n         */\n\n        let minOverviewTimeInterval = this.timespan.from;\n        let maxOverviewTimeInterval = this.timespan.to;\n        let minDiagramTimestamp = this.mainTimeInterval.from;\n        let maxDiagramTimestamp = this.mainTimeInterval.to;\n        let diagramWidth = this.width;\n\n        let diffOverviewTimeInterval = maxOverviewTimeInterval - minOverviewTimeInterval;\n        let divOverviewTimeWidth = diagramWidth / diffOverviewTimeInterval;\n        let minCalcBrush = divOverviewTimeWidth * (minDiagramTimestamp - minOverviewTimeInterval);\n        let maxCalcBrush = divOverviewTimeWidth * (maxDiagramTimestamp - minOverviewTimeInterval);\n\n        return [minCalcBrush, maxCalcBrush];\n    }\n\n    /**\n     * Function that calculates and returns the timestamp for the main diagram calculated\n     * by the selected coordinate of the brush range.\n     * @param minCalcBrush {Number} Number with the minimum coordinate of the selected brush range.\n     * @param maxCalcBrush {Number} Number with the maximum coordinate of the selected brush range.\n     */\n    private getTimestampByCoord(minCalcBrush, maxCalcBrush) {\n        /**\n         * calculate range of brush with timestamp and not diagram coordinates\n         * formula:\n         * minDiagramTimestamp =\n         * ((minCalcBrush / overview_width) * (overview_max - overview_min)) + overview_min\n         * maxDiagramTimestamp =\n         * ((maxCalcBrush / overview_width) * (overview_max - overview_min)) + overview_min\n         */\n\n        let minOverviewTimeInterval = this.timespan.from;\n        let maxOverviewTimeInterval = this.timespan.to;\n        let diagramWidth = this.width;\n\n        let diffOverviewTimeInterval = maxOverviewTimeInterval - minOverviewTimeInterval;\n        let minDiagramTimestamp = ((minCalcBrush / diagramWidth) * diffOverviewTimeInterval) + minOverviewTimeInterval;\n        let maxDiagramTimestamp = ((maxCalcBrush / diagramWidth) * diffOverviewTimeInterval) + minOverviewTimeInterval;\n\n        return [minDiagramTimestamp, maxDiagramTimestamp];\n    }\n\n    /**\n     * Function that returns the tickvalues for the x axis related to the timestep.\n     * @param time {String} String with the information how the time should be visualized in the x axis.\n     * @param range {Array} Array containing the minimum and maximum range.\n     * @param span {Number} Number with the ticksize for the axis generation.\n     */\n    private timeTickValues(time: String, range: any, span: number) {\n        if (time === 'minly') {\n            return d3.timeMinutes(range, new Date(this.xAxisRange.to), span);\n        }\n        if (time === 'hourly') {\n            return d3.timeHours(range, new Date(this.xAxisRange.to), span);\n        }\n        if (time === 'daily') {\n            return d3.timeDay.range(range, new Date(this.xAxisRange.to), span);\n        }\n    }\n\n    /**\n     * Function that draws the x axis to the svg element.\n     * @param bufferXrange {Number} Number with the distance between left edge and the beginning of the graph.\n     */\n    private drawXaxis(bufferXrange: number) {\n        // range for x axis scale\n        this.xScaleBase = d3.scaleLinear()\n            .domain([this.xAxisRange.from, this.xAxisRange.to])\n            .range([bufferXrange, this.width]);\n\n        // calculate range for about 7 ticks on x axis\n        let calcTicks = (((this.xAxisRange.to - this.xAxisRange.from) / 1000) / 7);\n        let hourly = Math.ceil(calcTicks / 3600);\n        let daily = Math.ceil(calcTicks / (3600 * 48));\n\n        if ((calcTicks / 3600)  11) {\n            timeFormatString = '%d %b %H:%M';\n        }\n\n        if (hourly > 47) {\n            timeFormatString = '%d %B';\n            tickSize = (Math.max(1, Math.round(hourly / 12))) * 12;\n        }\n\n        // calculate minimum range dependent on tickSize for UTC // 7200000 (e.g. tickSize = 4 --> every 4 hours)\n        let minRange = this.xAxisRange.from + ((3600000 * tickSize) - (this.xAxisRange.from % (3600000 * tickSize)));\n        // minimum range for UTC+2\n        let minRangeGer = minRange + 3600000 * (tickSize / 2);\n        if ((minRange - 3600000 * (tickSize / 2)) >= this.xAxisRange.from) {\n            minRangeGer = minRange - 3600000 * (tickSize / 2);\n        }\n\n        // calculate tickvalues dependent on tickSize for UTC+2\n        let xAxisGen;\n        if (tickSize >= 1) {\n            xAxisGen = d3.axisBottom(this.xScaleBase)\n                .tickValues(this.timeTickValues(timeString, minRangeGer, tickSize))\n                .tickFormat((d) => {\n                    return d3.timeFormat(timeFormatString)(new Date(d.valueOf()));\n                });\n        } else {\n            timeString = 'minly';\n            xAxisGen = d3.axisBottom(this.xScaleBase)\n                .tickValues(this.timeTickValues(timeString, minRangeGer, 30))\n                .tickFormat((d) => {\n                    return d3.timeFormat(timeFormatString)(new Date(d.valueOf()));\n                });\n        }\n\n        // draw x axis\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(xAxisGen)\n            .selectAll('text')\n            .style('text-anchor', 'middle');\n\n        if (this.plotOptions.grid) {\n            // draw the x grid lines\n            this.graph.append('svg:g')\n                .attr('class', 'grid')\n                .attr('transform', 'translate(0,' + this.height + ')')\n                .call(xAxisGen\n                    .tickSize(-this.height)\n                    .tickFormat(() => '')\n                );\n        }\n\n        // draw upper axis as border\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .call(d3.axisTop(this.xScaleBase).ticks(0).tickSize(0));\n\n        // text label for the x axis\n        this.graph.append('text')\n            .attr('x', (this.width + bufferXrange) / 2)\n            .attr('y', this.height + this.margin.bottom - 5)\n            .style('text-anchor', 'middle')\n            .text('time');\n    }\n\n    /**\n     * Function to draw the y axis for each dataset.\n     * Each uom has its own axis.\n     * @param entry {DataEntry} Object containing a dataset.\n     */\n    private drawYaxis(entry): YScale {\n        let showAxis = (this.plotOptions.yaxis === undefined ? true : this.plotOptions.yaxis);\n        const range = this.getyAxisRange(entry.uom);\n\n        let yMin = range.min;\n        let yMax = range.max;\n\n        // range for y axis scale\n        const rangeOffset = (yMax - yMin) * 0.10;\n        const yScale = d3.scaleLinear()\n            .domain([yMin - rangeOffset, yMax + rangeOffset])\n            .range([this.height, 0]);\n\n        let yAxisGen = d3.axisLeft(yScale).ticks(5);\n        let buffer = 0;\n\n        // only if yAxis should not be visible\n        if (!showAxis) {\n            yAxisGen\n                .tickFormat(() => '')\n                .tickSize(0);\n        }\n\n        // draw y axis\n        const axis = this.graph.append('svg:g')\n            .attr('class', 'y axis')\n            .call(yAxisGen);\n\n        // only if yAxis should be visible\n        if (showAxis) {\n            // draw y axis label\n            const text = this.graph.append('text')\n                .attr('transform', 'rotate(-90)')\n                .attr('dy', '1em')\n                .style('text-anchor', 'middle')\n                .style('fill', 'black')\n                .text(entry.uom);\n\n            const axisWidth = axis.node().getBBox().width + 5 + this.getDimensions(text.node()).h;\n            // if yAxis should not be visible, buffer will be set to 0\n            buffer = (showAxis ? entry.offset + (axisWidth  {\n                    d3.select(k[0])\n                        .attr('fill', 'grey')\n                        .attr('opacity', 0.4);\n                })\n                .on('mouseout', (d, i, k) => {\n                    d3.select(k[0])\n                        .attr('fill', 'white')\n                        .attr('opacity', 0);\n                })\n                .on('mouseup', () => {\n                    this.highlightLine(entry.ids, entry.uom);\n                });\n\n            if (!entry.first) {\n                axisDiv\n                    .attr('x', entry.offset)\n                    .attr('y', 0);\n            } else {\n                axisDiv\n                    .attr('x', 0 - this.margin.left - this.maxLabelwidth)\n                    .attr('y', 0);\n            }\n\n        }\n\n        // draw the y grid lines\n        if (this.datasetIds.length === 1) {\n            this.graph.append('svg:g')\n                .attr('class', 'grid')\n                .call(d3.axisLeft(yScale)\n                    .ticks(5)\n                    .tickSize(-this.width)\n                    .tickFormat(() => '')\n                );\n        }\n\n        return {\n            buffer,\n            yScale\n        };\n    }\n\n    /**\n     * Function to set selected Ids that should be highlighted.\n     * @param ids {Array} Array of Strings containing the Ids.\n     * @param uom {String} String with the uom for the selected Ids\n     */\n    private highlightLine(ids, uom) {\n        let changeFalse: HighlightDataset[] = [];\n        let changeTrue: HighlightDataset[] = [];\n        ids.forEach((ID) => {\n            if (this.selectedDatasetIds.indexOf(ID) >= 0) {\n                changeFalse.push({ id: ID, change: false });\n            }\n            changeTrue.push({ id: ID, change: true });\n        });\n\n        let changeAll = true;\n        if (ids.length === changeFalse.length) {\n            this.changeSelectedIds(changeFalse, true);\n        } else {\n            this.changeSelectedIds(changeTrue, false);\n        }\n    }\n\n    /**\n     * Function that changes state of selected Ids.\n     */\n    private changeSelectedIds(toHighlightDataset: HighlightDataset[], change: boolean) {\n        if (change) {\n            toHighlightDataset.forEach((obj) => {\n                this.removeSelectedId(obj.id);\n                this.selectedDatasetIds.splice(this.selectedDatasetIds.findIndex((entry) => entry === obj.id), 1);\n            });\n        } else {\n            toHighlightDataset.forEach((obj) => {\n                if (this.selectedDatasetIds.indexOf(obj.id)  {\n            if (obj.uom === entry.axisOptions.uom) {\n                return true;\n            } // uom does exist in this.yRangesEachUom\n        });\n\n        if (entry.data.length > 0) {\n            let xScaleBase = this.xScaleBase;\n            if (getYaxisRange !== undefined) {\n                let yScaleBase = getYaxisRange.yScale;\n\n                // #####################################################\n                // create body to clip graph\n                // unique ID generated through the current time (current time when initialized)\n                let querySelectorClip = 'clip' + this.currentTimeId;\n\n                this.graph\n                    .append('svg:clipPath')\n                    .attr('id', querySelectorClip)\n                    .append('svg:rect')\n                    .attr('x', this.bufferSum)\n                    .attr('y', 0)\n                    .attr('width', this.width - this.bufferSum)\n                    .attr('height', this.height);\n\n                // draw grah line\n                this.graphBody = this.graph\n                    .append('g')\n                    .attr('clip-path', 'url(#' + querySelectorClip + ')');\n\n                // create graph line\n                let line = d3.line()\n                    .x((d) => {\n                        d.timestamp = d[0];\n                        const xDiagCoord = xScaleBase(d[0]);\n                        if (xDiagCoord !== NaN) {\n                            d.xDiagCoord = xDiagCoord;\n                            return xDiagCoord;\n                        }\n                    })\n                    .y((d) => {\n                        const yDiagCoord = yScaleBase(d[1]);\n                        if (yDiagCoord !== NaN) {\n                            d.yDiagCoord = yDiagCoord;\n                            return yDiagCoord;\n                        }\n                    })\n                    .curve(d3.curveLinear);\n\n                this.graphBody\n                    .append('svg:path')\n                    .datum(entry.data)\n                    .attr('class', 'line')\n                    .attr('fill', 'none')\n                    .attr('stroke', entry.color)\n                    .attr('stroke-width', entry.lines.lineWidth)\n                    .attr('d', line);\n\n                this.graphBody.selectAll('.dot')\n                    .data(entry.data.filter((d) => d))\n                    .enter().append('circle')\n                    .attr('class', 'dot')\n                    .attr('stroke', entry.color)\n                    .attr('fill', entry.color)\n                    .attr('cx', line.x())\n                    .attr('cy', line.y())\n                    .attr('r', entry.lines.pointRadius);\n            }\n        }\n    }\n\n    /**\n     * Function that shows labeling via mousmove.\n     */\n    private mousemoveHandler = () => {\n        const coords = d3.mouse(this.background.node());\n        this.ypos = [];\n        this.idxOfPos = 0;\n        this.labelTimestamp = [];\n        this.preparedData.forEach((entry, entryIdx) => {\n            const idx = this.getItemForX(coords[0] + this.bufferSum, entry.data);\n            this.showDiagramIndicator(entry, idx, coords[0], entryIdx);\n        });\n        // focus do not overlap each other\n        if (this.ypos !== undefined) {\n            let firstLabel = [];\n            // only push one of the pairs of objects (rectangle and label)\n            this.ypos.forEach((e, i) => {\n                if (i % 2 === 0) {\n                    firstLabel.push(e);\n                }\n            });\n            let yPos = firstLabel.sort((a, b) => a.y - b.y);\n            yPos.forEach((p, i) => {\n                if (i > 0) {\n                    let last = yPos[i - 1].y;\n                    yPos[i].off = Math.max(0, (last + 30) - yPos[i].y);\n                    yPos[i].y += yPos[i].off;\n                }\n            });\n            yPos.sort((a, b) => a.idx - b.idx);\n\n            let c1 = 0;\n            let c2 = 0;\n\n            // d3.selectAll('.mouse-focus-label')\n            d3.selectAll('.focus-visibility')\n                .attr('transform', (d, i) => {\n                    // pairs of 2 objects (rectangle (equal) and label (odd))\n                    if (i > 0) {\n                        c1 = (i - 1) % 2;\n                    }\n                    c2 += c1;\n                    if (yPos[c2] && yPos[c2].off) {\n                        return 'translate(0,' + (5 + yPos[c2].off) + ')';\n                    }\n                });\n        }\n    }\n\n    /**\n     * Function that hides the labeling inside the graph.\n     */\n    private mouseoutHandler = () => {\n        this.hideDiagramIndicator();\n    }\n\n    /**\n     * Function starting the drag handling for the diagram.\n     */\n    private panStartHandler = () => {\n        this.draggingMove = false;\n        this.dragMoveStart = d3.event.x;\n        this.dragMoveRange = [this.xAxisRange.from, this.xAxisRange.to];\n    }\n\n    /**\n     * Function that controlls the panning (dragging) of the graph.\n     */\n    private panMoveHandler = () => {\n        this.draggingMove = true;\n        if (this.dragMoveStart && this.draggingMove) {\n            let diff = -(d3.event.x - d3.event.subject.x);\n            let amountTimestamp = this.dragMoveRange[1] - this.dragMoveRange[0];\n            let ratioTimestampDiagCoord = amountTimestamp / this.width;\n            let newTimeMin = this.dragMoveRange[0] + (ratioTimestampDiagCoord * diff);\n            let newTimeMax = this.dragMoveRange[1] + (ratioTimestampDiagCoord * diff);\n\n            this.xAxisRangePan = [newTimeMin, newTimeMax];\n            this.timespan = { from: this.xAxisRangePan[0], to: this.xAxisRangePan[1] };\n            this.plotGraph();\n        }\n    }\n\n    /**\n     * Function that ends the dragging control.\n     */\n    private panEndHandler = () => {\n        this.changeTime(this.xAxisRangePan[0], this.xAxisRangePan[1]);\n        this.plotGraph();\n        this.dragMoveStart = null;\n        this.draggingMove = false;\n    }\n\n    /**\n     * Function that starts the zoom handling.\n     */\n    private zoomStartHandler = () => {\n        this.dragging = false;\n        this.dragStart = d3.mouse(this.background.node());\n        this.xAxisRangeOrigin.push([this.xAxisRange.from, this.xAxisRange.to]);\n    }\n\n    /**\n     * Function that draws a rectangle when zoom is started and the mouse is moving.\n     */\n    private zoomHandler = () => {\n        this.dragging = true;\n        this.drawDragRectangle();\n    }\n\n    /**\n     * Function that ends the zoom handling and calculates the via zoom selected time interval.\n     */\n    private zoomEndHandler = () => {\n        if (!this.dragStart || !this.dragging) {\n            if (this.xAxisRangeOrigin[0]) {\n                // back to origin range (from - to)\n                this.changeTime(this.xAxisRangeOrigin[0][0], this.xAxisRangeOrigin[0][1]);\n                this.xAxisRangeOrigin = [];\n                this.plotGraph();\n            }\n        } else {\n            let xDomainRange;\n            if (this.dragStart[0]  {\n            domMinArr.push(entry.data.find((elem, index, array) => {\n                if (elem.xDiagCoord) {\n                    if (elem.xDiagCoord >= start) {\n                        return array[index];\n                    }\n                }\n            }));\n            domMaxArr.push(entry.data.find((elem, index, array) => {\n                if (elem.xDiagCoord >= end) {\n                    return array[index];\n                }\n            }));\n        });\n\n        for (let i = 0; i  {\n            return d[0];\n        }).left;\n        return bisectDate(data, index);\n    }\n\n    /**\n     * Function that disables the labeling.\n     */\n    private hideDiagramIndicator() {\n        this.focusG.style('visibility', 'hidden');\n        d3.selectAll('.focus-visibility')\n            .attr('visibility', 'hidden');\n    }\n\n    /**\n     * Function that enables the lableing of each dataset entry.\n     * @param entry {DataEntry} Object containing the dataset.\n     * @param idx {Number} Number with the position of the dataset entry in the data array.\n     * @param xCoordMouse {Number} Number of the x coordinate of the mouse.\n     * @param entryIdx {Number} Number of the index of the entry.\n     */\n    private showDiagramIndicator = (entry, idx: number, xCoordMouse: number, entryIdx: number) => {\n        const item = entry.data[idx];\n        if (item !== undefined) {\n            // create line where mouse is\n            this.focusG.style('visibility', 'visible');\n            // show label if data available for time\n            this.chVisLabel(entry, true);\n\n            let onLeftSide = false;\n            if ((this.background.node().getBBox().width + this.bufferSum) / 2 > item.xDiagCoord) { onLeftSide = true; }\n\n            let labelBuffer = ((this.timespan.from / (this.timespan.to - this.timespan.from)) * 0.0001)\n                * ((this.timespan.from / (this.timespan.to - this.timespan.from)) * 0.0001);\n\n            labelBuffer = Math.max(4, labelBuffer);\n\n            this.showLabelValues(entry, item, onLeftSide);\n            this.showTimeIndicatorLabel(item, onLeftSide, entryIdx);\n\n            if ((xCoordMouse) > (item.xDiagCoord + labelBuffer) || (xCoordMouse) = xCoordMouse) {\n                    this.showLabelValues(entry, entry.data[idx - 1], onLeftSide);\n                    this.showTimeIndicatorLabel(item, onLeftSide, entryIdx);\n\n                    this.chVisLabel(entry, true);\n                }\n            }\n        } else {\n            // hide label if no data available for time\n            this.chVisLabel(entry, false);\n        }\n    }\n\n    /**\n     * Function to change visibility of label and white rectangle inside graph (next to mouse-cursor line).\n     * @param entry {DataEntry} Object containing the dataset.\n     * @param visible {Boolean} Boolean giving information about visibility of a label.\n     */\n    private chVisLabel(entry, visible: boolean) {\n        if (visible) {\n            entry.focusLabel\n                .attr('visibility', 'visible')\n                .attr('class', 'focus-visibility');\n            entry.focusLabelRect\n                .attr('visibility', 'visible')\n                .attr('class', 'focus-visibility');\n        } else {\n            entry.focusLabel\n                .attr('visibility', 'hidden');\n            entry.focusLabelRect\n                .attr('visibility', 'hidden');\n        }\n    }\n\n    /**\n     * Function to show the labeling inside the graph.\n     * @param entry {DataEntry} Object containg the dataset.\n     * @param item {DataEntry} Object of the entry in the dataset.\n     * @param onLeftSide {Boolean} Boolean giving information if the mouse is on left side of the diagram.\n     */\n    private showLabelValues(entry, item: DataEntry, onLeftSide: boolean) {\n        let id = 1;\n        if (entry.focusLabel) {\n            entry.focusLabel.text(item[id] + (entry.axisOptions.uom ? entry.axisOptions.uom : ''));\n            const entryX = onLeftSide ?\n                item.xDiagCoord + 4 : item.xDiagCoord - this.getDimensions(entry.focusLabel.node()).w + 4;\n            entry.focusLabel\n                .attr('x', entryX)\n                .attr('y', item.yDiagCoord);\n            entry.focusLabelRect\n                .attr('x', entryX)\n                .attr('y', item.yDiagCoord - this.getDimensions(entry.focusLabel.node()).h + 3)\n                .attr('width', this.getDimensions(entry.focusLabel.node()).w)\n                .attr('height', this.getDimensions(entry.focusLabel.node()).h);\n            this.ypos.push({ idx: this.idxOfPos++, y: item.yDiagCoord, off: 0 });\n        }\n    }\n\n    /**\n     * Function to show the time labeling inside the graph.\n     * @param item {DataEntry} Object of the entry in the dataset.\n     * @param onLeftSide {Boolean} Boolean giving information if the mouse is on left side of the diagram.\n     * @param entryIdx {Number} Number of the index of the entry.\n     */\n    private showTimeIndicatorLabel(item: DataEntry, onLeftSide: boolean, entryIdx: number) {\n        // timestamp is the time where the mouse-cursor is\n        this.labelTimestamp[entryIdx] = item.timestamp;\n        let min = d3.min(this.labelTimestamp);\n        let idxOfMin = this.labelTimestamp.findIndex((elem) => elem === min);\n        let right = item.xDiagCoord + 2;\n        let left = item.xDiagCoord - this.getDimensions(this.focuslabelTime.node()).w - 2;\n        this.focuslabelTime.text(moment(this.labelTimestamp[idxOfMin]).format('DD.MM.YY HH:mm'));\n        this.focuslabelTime\n            .attr('x', onLeftSide ? right : left)\n            .attr('y', 13);\n        if (item.timestamp === min) {\n            this.highlightFocus\n                .attr('x1', item.xDiagCoord)\n                .attr('y1', 0)\n                .attr('x2', item.xDiagCoord)\n                .attr('y2', this.height)\n                .classed('hidden', false);\n        }\n    }\n\n    /**\n     * Function that returns the boundings of a html element.\n     * @param el {Object} Object of the html element.\n     */\n    private getDimensions(el: any): { w: number, h: number } {\n        let w = 0;\n        let h = 0;\n        if (el) {\n            const dimensions = el.getBBox();\n            w = dimensions.width;\n            h = dimensions.height;\n        } else {\n            console.log('error: getDimensions() ' + el + ' not found.');\n        }\n        return {\n            w,\n            h\n        };\n    }\n\n    /**\n     * Function to generate uuid for a diagram\n     */\n    private uuidv4(): string {\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + this.s4();\n    }\n\n    /**\n     * Function to generate components of the uuid for a diagram\n     */\n    private s4(): string {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n\n    /**\n     * Function that logs the error in the console.\n     * @param error {Object} Object with the error.\n     */\n    private onError(error: any) {\n        console.error(error);\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpCache.html":{"url":"classes/HttpCache.html","title":"class - HttpCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/caching/src/lib/model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                get\n                            \n                            \n                                    Public\n                                    \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/model.ts:8\n                            \n                        \n\n\n                \n                    \n                            Returns a cached response, if any, or null if not present.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpResponse | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            put\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        put(req: HttpRequest, expirationTime: number | Date, resp: HttpResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/model.ts:13\n                            \n                        \n\n\n                \n                    \n                            Adds or updates the response in the cache.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        expirationTime\n                                                        \n                                                                    number | Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resp\n                                                        \n                                                                    HttpResponse\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpEvent, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\nexport abstract class HttpCache {\n    /**\n     * Returns a cached response, if any, or null if not present.\n     */\n    public abstract get(req: HttpRequest): HttpResponse | null;\n\n    /**\n     * Adds or updates the response in the cache.\n     */\n    public abstract put(req: HttpRequest, expirationTime: number | Date, resp: HttpResponse): void;\n}\n\nexport abstract class OnGoingHttpCache {\n\n    public abstract has(req: HttpRequest): boolean;\n    public abstract set(req: HttpRequest, request: Observable>): void;\n    public abstract observe(req: HttpRequest): Observable>;\n    public abstract clear(req: HttpRequest): void;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpRequestOptions.html":{"url":"interfaces/HttpRequestOptions.html","title":"interface - HttpRequestOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HttpRequestOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/http-requests.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        basicAuthToken\n                                \n                                \n                                            Optional\n                                        forceUpdate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        basicAuthToken\n                                    \n                                \n                                \n                                    \n                                        basicAuthToken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forceUpdate\n                                    \n                                \n                                \n                                    \n                                        forceUpdate:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ParameterFilter {\n    service?: string;\n    phenomenon?: string;\n    valueTypes?: string;\n    platformTypes?: string;\n    expanded?: boolean;\n    lang?: string;\n    [key: string]: any;\n}\n\nexport interface DataParameterFilter extends ParameterFilter {\n    format?: string;\n    timespan?: string;\n    generalize?: boolean;\n}\n\nexport interface HttpRequestOptions {\n    forceUpdate?: boolean;\n    basicAuthToken?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/http.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handler\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                client\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpHandler: HttpHandler, interceptors: HttpServiceInterceptor[] | null)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/dataset-api/http.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpHandler\n                                                  \n                                                        \n                                                                    HttpHandler\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        interceptors\n                                                  \n                                                        \n                                                                    HttpServiceInterceptor[] | null\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        client(metadata: HttpServiceMetadata)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/http.service.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        metadata\n                                                        \n                                                                    HttpServiceMetadata\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        handler:     HttpServiceHandler\n\n                    \n                \n                    \n                        \n                            Type :     HttpServiceHandler\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/http.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\n\nexport const HTTP_SERVICE_INTERCEPTORS = new InjectionToken('HTTP_SERVICE_INTERCEPTORS');\n\nexport interface HttpServiceMetadata {\n    forceUpdate?: boolean;\n    expirationTime?: number | Date;\n}\n\nexport interface HttpServiceHandler {\n    handle(req: HttpRequest, metadata: Partial);\n}\n\nexport interface HttpServiceInterceptor {\n    intercept(req: HttpRequest, metadata: Partial, next: HttpServiceHandler);\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n\n    private handler: HttpServiceHandler;\n\n    constructor(\n        protected httpHandler: HttpHandler,\n        @Optional() @Inject(HTTP_SERVICE_INTERCEPTORS) interceptors: HttpServiceInterceptor[] | null\n    ) {\n        let handler: HttpServiceHandler = {\n            handle: (req, metadata) => httpHandler.handle(req)\n        };\n        if (interceptors) {\n            handler = interceptors.reduceRight((next, interceptor) => ({\n                handle: (req, metadata) => interceptor.intercept(req, metadata, next)\n            }), handler);\n        }\n        this.handler = handler;\n    }\n\n    public client(metadata: HttpServiceMetadata = {}): HttpClient {\n        return new HttpClient({\n            handle: (req) => this.handler.handle(req, metadata)\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpServiceHandler.html":{"url":"interfaces/HttpServiceHandler.html","title":"interface - HttpServiceHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HttpServiceHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/http.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    handle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handle\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandle(req: HttpRequest, metadata: Partial)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/http.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        metadata\n                                                        \n                                                                    Partial\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpClient, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\n\nexport const HTTP_SERVICE_INTERCEPTORS = new InjectionToken('HTTP_SERVICE_INTERCEPTORS');\n\nexport interface HttpServiceMetadata {\n    forceUpdate?: boolean;\n    expirationTime?: number | Date;\n}\n\nexport interface HttpServiceHandler {\n    handle(req: HttpRequest, metadata: Partial);\n}\n\nexport interface HttpServiceInterceptor {\n    intercept(req: HttpRequest, metadata: Partial, next: HttpServiceHandler);\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n\n    private handler: HttpServiceHandler;\n\n    constructor(\n        protected httpHandler: HttpHandler,\n        @Optional() @Inject(HTTP_SERVICE_INTERCEPTORS) interceptors: HttpServiceInterceptor[] | null\n    ) {\n        let handler: HttpServiceHandler = {\n            handle: (req, metadata) => httpHandler.handle(req)\n        };\n        if (interceptors) {\n            handler = interceptors.reduceRight((next, interceptor) => ({\n                handle: (req, metadata) => interceptor.intercept(req, metadata, next)\n            }), handler);\n        }\n        this.handler = handler;\n    }\n\n    public client(metadata: HttpServiceMetadata = {}): HttpClient {\n        return new HttpClient({\n            handle: (req) => this.handler.handle(req, metadata)\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpServiceInterceptor.html":{"url":"interfaces/HttpServiceInterceptor.html","title":"interface - HttpServiceInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HttpServiceInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/http.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    intercept\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(req: HttpRequest, metadata: Partial, next: HttpServiceHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/http.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        metadata\n                                                        \n                                                                    Partial\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpServiceHandler\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpClient, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\n\nexport const HTTP_SERVICE_INTERCEPTORS = new InjectionToken('HTTP_SERVICE_INTERCEPTORS');\n\nexport interface HttpServiceMetadata {\n    forceUpdate?: boolean;\n    expirationTime?: number | Date;\n}\n\nexport interface HttpServiceHandler {\n    handle(req: HttpRequest, metadata: Partial);\n}\n\nexport interface HttpServiceInterceptor {\n    intercept(req: HttpRequest, metadata: Partial, next: HttpServiceHandler);\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n\n    private handler: HttpServiceHandler;\n\n    constructor(\n        protected httpHandler: HttpHandler,\n        @Optional() @Inject(HTTP_SERVICE_INTERCEPTORS) interceptors: HttpServiceInterceptor[] | null\n    ) {\n        let handler: HttpServiceHandler = {\n            handle: (req, metadata) => httpHandler.handle(req)\n        };\n        if (interceptors) {\n            handler = interceptors.reduceRight((next, interceptor) => ({\n                handle: (req, metadata) => interceptor.intercept(req, metadata, next)\n            }), handler);\n        }\n        this.handler = handler;\n    }\n\n    public client(metadata: HttpServiceMetadata = {}): HttpClient {\n        return new HttpClient({\n            handle: (req) => this.handler.handle(req, metadata)\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpServiceMetadata.html":{"url":"interfaces/HttpServiceMetadata.html","title":"interface - HttpServiceMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HttpServiceMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/http.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        expirationTime\n                                \n                                \n                                            Optional\n                                        forceUpdate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expirationTime\n                                    \n                                \n                                \n                                    \n                                        expirationTime:     number | Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forceUpdate\n                                    \n                                \n                                \n                                    \n                                        forceUpdate:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\n\nexport const HTTP_SERVICE_INTERCEPTORS = new InjectionToken('HTTP_SERVICE_INTERCEPTORS');\n\nexport interface HttpServiceMetadata {\n    forceUpdate?: boolean;\n    expirationTime?: number | Date;\n}\n\nexport interface HttpServiceHandler {\n    handle(req: HttpRequest, metadata: Partial);\n}\n\nexport interface HttpServiceInterceptor {\n    intercept(req: HttpRequest, metadata: Partial, next: HttpServiceHandler);\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n\n    private handler: HttpServiceHandler;\n\n    constructor(\n        protected httpHandler: HttpHandler,\n        @Optional() @Inject(HTTP_SERVICE_INTERCEPTORS) interceptors: HttpServiceInterceptor[] | null\n    ) {\n        let handler: HttpServiceHandler = {\n            handle: (req, metadata) => httpHandler.handle(req)\n        };\n        if (interceptors) {\n            handler = interceptors.reduceRight((next, interceptor) => ({\n                handle: (req, metadata) => interceptor.intercept(req, metadata, next)\n            }), handler);\n        }\n        this.handler = handler;\n    }\n\n    public client(metadata: HttpServiceMetadata = {}): HttpClient {\n        return new HttpClient({\n            handle: (req) => this.handler.handle(req, metadata)\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDataEntry.html":{"url":"interfaces/IDataEntry.html","title":"interface - IDataEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDataEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/data.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export interface IDataEntry { }\n\nexport interface Data {\n    values: T[];\n    referenceValues: ReferenceValues;\n}\n\nexport class ReferenceValues {\n    [key: string]: T[];\n}\n\nexport interface TimeValueEntry extends IDataEntry {\n    timestamp: number;\n    value: number;\n}\n\nexport interface LocatedTimeValueEntry extends TimeValueEntry {\n    geometry: GeoJSON.Point;\n}\n\nexport interface ProfileDataEntry extends IDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n}\n\nexport interface LocatedProfileDataEntry extends ProfileDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n    geometry: GeoJSON.GeoJsonObject;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDataset.html":{"url":"interfaces/IDataset.html","title":"interface - IDataset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDataset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firstValue\n                                \n                                \n                                        internalId\n                                \n                                \n                                        lastValue\n                                \n                                \n                                        parameters\n                                \n                                \n                                        referenceValues\n                                \n                                \n                                        uom\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstValue\n                                    \n                                \n                                \n                                    \n                                        firstValue:     FirstLastValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FirstLastValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        internalId\n                                    \n                                \n                                \n                                    \n                                        internalId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastValue\n                                    \n                                \n                                \n                                    \n                                        lastValue:     FirstLastValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FirstLastValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parameters\n                                    \n                                \n                                \n                                    \n                                        parameters:     ParameterConstellation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParameterConstellation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        referenceValues\n                                    \n                                \n                                \n                                    \n                                        referenceValues:     ReferenceValue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ReferenceValue[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uom\n                                    \n                                \n                                \n                                    \n                                        uom:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id.html":{"url":"interfaces/Id.html","title":"interface - Id","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Id\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/response.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        href\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                    \n                                \n                                \n                                    \n                                        href:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Id {\n    id: string;\n    href: string;\n}\n\nexport interface EventingEvent extends Id {\n    label: string;\n    eventType: Id;\n    notificationLevel: Id;\n    publication: Id;\n    subscription: Id;\n    timestamp: number;\n    timestampCreated: number;\n    data?: {\n        eventTrigger: {\n            code: number;\n            label: string;\n            threshold: number;\n            thresholdUnit: string;\n        }\n        previousTimestamp: number;\n        previousValue: number;\n        unit: string;\n        value: number;\n    };\n}\n\nexport interface EventingEventResults {\n    data: EventingEvent[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingSubscription extends Id {\n    deliveryMethod: Id;\n    template: EventingTemplate;\n    user: Id;\n}\n\nexport interface EventingSubscriptionResults {\n    data: EventingSubscription[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingTemplate extends Id {\n    label: string;\n    publication: Id;\n}\n\nexport interface CollectionMetadata {\n    limit: number;\n    offset: number;\n    total: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdCache.html":{"url":"classes/IdCache.html","title":"class - IdCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/id-cache.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                has\n                            \n                            \n                                    Public\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cache:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/id-cache.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/id-cache.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            has\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        has(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/id-cache.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(id: string, value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/id-cache.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class IdCache {\n\n    private cache: Map = new Map();\n\n    public has(id: string): boolean {\n        return this.cache.has(id);\n    }\n\n    public get(id: string): T {\n        return this.cache.get(id);\n    }\n\n    public set(id: string, value: T) {\n        this.cache.set(id, value);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Identifiable.html":{"url":"interfaces/Identifiable.html","title":"interface - Identifiable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Identifiable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/identifiable.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Identifiable {\n    id: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalDatasetId.html":{"url":"interfaces/InternalDatasetId.html","title":"interface - InternalDatasetId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InternalDatasetId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/internal-id-handler.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import 'rxjs/operator/map';\n\nimport { Injectable } from '@angular/core';\n\nimport { IDataset } from '../model/dataset-api/dataset';\n\nconst INTERNAL_ID_SEPERATOR = '__';\n\nexport interface InternalDatasetId {\n  id: string;\n  url: string;\n}\n\n/**\n * Service to generate or resolve internal dataset IDs\n */\n@Injectable()\nexport class InternalIdHandler {\n\n  /**\n   * Generates an internal id for the given dataset.\n   * @param dataset The dataset for which the internal id will be generated and saved.\n   */\n  public generateInternalId(dataset: IDataset) {\n    dataset.internalId = dataset.url + INTERNAL_ID_SEPERATOR + dataset.id;\n  }\n\n  /**\n   * Resolves the internal ID to the url and the API specific dataset id.\n   * @param internalId The internal id as string\n   * @returns Construct of url and API id\n   */\n  public resolveInternalId(internalId: string): InternalDatasetId {\n    const split = internalId.split(INTERNAL_ID_SEPERATOR);\n    if (split.length !== 2) {\n      console.error('InternalID ' + internalId + ' is not resolvable');\n    } else {\n      return {\n        url: split[0],\n        id: split[1]\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InternalIdHandler.html":{"url":"injectables/InternalIdHandler.html","title":"injectable - InternalIdHandler","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  InternalIdHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/internal-id-handler.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to generate or resolve internal dataset IDs\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                generateInternalId\n                            \n                            \n                                    Public\n                                resolveInternalId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            generateInternalId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateInternalId(dataset: IDataset)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/internal-id-handler.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            Generates an internal id for the given dataset.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataset\n                                                        \n                                                                    IDataset\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The dataset for which the internal id will be generated and saved.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolveInternalId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolveInternalId(internalId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/internal-id-handler.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Resolves the internal ID to the url and the API specific dataset id.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The internal id as string\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     InternalDatasetId\n\n                            \n                                \n                                    Construct of url and API id\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import 'rxjs/operator/map';\n\nimport { Injectable } from '@angular/core';\n\nimport { IDataset } from '../model/dataset-api/dataset';\n\nconst INTERNAL_ID_SEPERATOR = '__';\n\nexport interface InternalDatasetId {\n  id: string;\n  url: string;\n}\n\n/**\n * Service to generate or resolve internal dataset IDs\n */\n@Injectable()\nexport class InternalIdHandler {\n\n  /**\n   * Generates an internal id for the given dataset.\n   * @param dataset The dataset for which the internal id will be generated and saved.\n   */\n  public generateInternalId(dataset: IDataset) {\n    dataset.internalId = dataset.url + INTERNAL_ID_SEPERATOR + dataset.id;\n  }\n\n  /**\n   * Resolves the internal ID to the url and the API specific dataset id.\n   * @param internalId The internal id as string\n   * @returns Construct of url and API id\n   */\n  public resolveInternalId(internalId: string): InternalDatasetId {\n    const split = internalId.split(INTERNAL_ID_SEPERATOR);\n    if (split.length !== 2) {\n      console.error('InternalID ' + internalId + ' is not resolvable');\n    } else {\n      return {\n        url: split[0],\n        id: split[1]\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonFavoriteExporterService.html":{"url":"injectables/JsonFavoriteExporterService.html","title":"injectable - JsonFavoriteExporterService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  JsonFavoriteExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/favorite/src/lib/service/json-favorite-exporter.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exportFavorites\n                            \n                            \n                                    Public\n                                importFavorites\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(favoriteSrvc: FavoriteService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/favorite/src/lib/service/json-favorite-exporter.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        favoriteSrvc\n                                                  \n                                                        \n                                                                    FavoriteService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            exportFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        exportFavorites()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/json-favorite-exporter.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            importFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        importFavorites(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/json-favorite-exporter.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { FavoriteService, SingleFavorite } from './favorite.service';\n\n@Injectable()\nexport class JsonFavoriteExporterService {\n\n  constructor(\n    protected favoriteSrvc: FavoriteService\n  ) { }\n\n  public exportFavorites() {\n    const filename = 'favorites.json';\n    const json = JSON.stringify(this.favoriteSrvc.getFavorites());\n    // if (window.navigator.msSaveBlob) {\n    //     // IE version >= 10\n    //     const blob = new Blob([json], {\n    //         type: 'application/json;charset=utf-8;'\n    //     });\n    //     window.navigator.msSaveBlob(blob, filename);\n    // } else {\n    // FF, Chrome ...\n    const a = document.createElement('a');\n    a.href = 'data:application/json,' + encodeURIComponent(json);\n    a.target = '_blank';\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    // }\n  }\n\n  public importFavorites(event: any): Observable {\n    return new Observable((observer: Observer) => {\n      const files = event.target.files;\n      if (files && files.length > 0) {\n        this.favoriteSrvc.removeAllFavorites();\n        const reader = new FileReader();\n        reader.readAsText(files[0]);\n        reader.onerror = () => {\n          // alertService.error($translate.instant('favorite.import.wrongFile'));\n        };\n        reader.onload = (e: any) => {\n          const result = e.target.result;\n          const favorites = JSON.parse(result) as SingleFavorite[];\n          favorites.forEach((entry) => {\n            this.favoriteSrvc.addFavorite(entry.favorite, entry.label);\n          });\n          observer.next(true);\n          observer.complete();\n        };\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabelMapperComponent.html":{"url":"components/LabelMapperComponent.html","title":"component - LabelMapperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LabelMapperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/depiction/src/lib/label-mapper/label-mapper.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-label-mapper\n            \n\n\n\n\n            \n                templateUrl\n                ./label-mapper.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                determinedLabel\n                            \n                            \n                                    Public\n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(labelMapperSrvc: LabelMapperService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelMapperSrvc\n                                                  \n                                                        \n                                                                    LabelMapperService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            determinedLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        determinedLabel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { LabelMapperService } from './label-mapper.service';\n\n@Component({\n    selector: 'n52-label-mapper',\n    templateUrl: './label-mapper.component.html'\n})\nexport class LabelMapperComponent implements OnChanges {\n\n    @Input()\n    public label: string;\n\n    public determinedLabel: string;\n\n    public loading = true;\n\n    constructor(\n        protected labelMapperSrvc: LabelMapperService\n    ) { }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.label) {\n            this.labelMapperSrvc.getMappedLabel(this.label)\n                .subscribe((label) => {\n                    this.determinedLabel = label;\n                    this.loading = false;\n                });\n        } else {\n            this.loading = false;\n        }\n    }\n}\n\n    \n\n    \n        {{determinedLabel}}\n\n  \n   loading label ...\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{determinedLabel}}     loading label ...'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LabelMapperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelMapperService.html":{"url":"injectables/LabelMapperService.html","title":"injectable - LabelMapperService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LabelMapperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/depiction/src/lib/label-mapper/label-mapper.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                confirmLabel\n                            \n                            \n                                    Private\n                                findUrl\n                            \n                            \n                                    Public\n                                getMappedLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, settingsSrvc: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsSrvc\n                                                  \n                                                        \n                                                                    SettingsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            confirmLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        confirmLabel(observer: Observer, label: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.service.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observer\n                                                        \n                                                                    Observer\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            findUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        findUrl(label: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getMappedLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMappedLabel(label: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cache:     IdCache\n\n                    \n                \n                    \n                        \n                            Type :     IdCache\n\n                        \n                    \n                    \n                        \n                            Default value : new IdCache()\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { IdCache, Settings, SettingsService } from '@helgoland/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\ndeclare var $: any;\n\n@Injectable()\nexport class LabelMapperService {\n\n    private cache: IdCache = new IdCache();\n\n    constructor(\n        protected httpClient: HttpClient,\n        protected settingsSrvc: SettingsService\n    ) { }\n\n    public getMappedLabel(label: string): Observable {\n        return new Observable((observer: Observer) => {\n            if (!this.settingsSrvc.getSettings().solveLabels) {\n                this.confirmLabel(observer, label);\n            } else {\n                const url = this.findUrl(label);\n                if (url) {\n                    if (this.cache.has(url)) {\n                        this.confirmLabel(observer, this.cache.get(url));\n                    } else {\n                        const labelUrl =\n                            this.settingsSrvc.getSettings().proxyUrl ? this.settingsSrvc.getSettings().proxyUrl + url : url;\n                        this.httpClient.get(labelUrl, { responseType: 'text' }).subscribe((res) => {\n                            try {\n                                const xml = $.parseXML(res);\n                                label = label.replace(url, $(xml).find('prefLabel').text());\n                            } catch (error) {\n                                // currently do nothing and use old label\n                            }\n                            this.cache.set(url, label);\n                            this.confirmLabel(observer, label);\n                        }, (error) => {\n                            const resolvedLabel = label.substring(label.lastIndexOf('/') + 1, label.length);\n                            this.cache.set(url, resolvedLabel);\n                            this.confirmLabel(observer, resolvedLabel);\n                        });\n                    }\n                } else {\n                    this.confirmLabel(observer, label);\n                }\n            }\n        });\n    }\n\n    private confirmLabel(observer: Observer, label: string) {\n        observer.next(label);\n        observer.complete();\n    }\n\n    private findUrl(label: string) {\n        const source = (label || '').toString();\n        const regexToken = /(((ftp|https?):\\/\\/)[\\-\\w@:%_\\+.~#?&\\/\\/=]+)/g;\n        const matchArray = regexToken.exec(source);\n        if (matchArray !== null) {\n            return matchArray[0];\n        }\n        return null;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Language.html":{"url":"interfaces/Language.html","title":"interface - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/language/model/language.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        label\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Language {\n    label: string;\n    code: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LanguageChangNotifier.html":{"url":"classes/LanguageChangNotifier.html","title":"class - LanguageChangNotifier","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LanguageChangNotifier\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/language/language-changer.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    \n                                languageChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/language/language-changer.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            languageChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        languageChanged()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/language/language-changer.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { TranslateService } from '@ngx-translate/core';\n\nexport abstract class LanguageChangNotifier {\n\n    constructor(\n        protected translate: TranslateService\n    ) {\n        this.translate.onLangChange.subscribe(() => this.languageChanged());\n    }\n\n    protected abstract languageChanged(): void;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayerOptions.html":{"url":"interfaces/LayerOptions.html","title":"interface - LayerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LayerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/map-options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        layer\n                                \n                                \n                                        visible\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layer\n                                    \n                                \n                                \n                                    \n                                        layer:     L.Layer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     L.Layer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LayerOptions {\n    label: string;\n    visible: boolean;\n    layer: L.Layer;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Layout.html":{"url":"interfaces/Layout.html","title":"interface - Layout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Layout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/plotly/src/lib/plotly-profile-graph/plotly-profile-graph.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Partial\n            \n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/plotly/src/lib/plotly-profile-graph/plotly-profile-graph.component.ts:347\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { AfterViewInit, Component, ElementRef, EventEmitter, IterableDiffers, Output, ViewChild } from '@angular/core';\nimport {\n    DatasetApiInterface,\n    DatasetPresenterComponent,\n    PresenterHighlight,\n    IDataset,\n    InternalIdHandler,\n    ProfileDataEntry,\n    Time,\n    TimedDatasetOptions,\n    Timespan,\n} from '@helgoland/core';\nimport * as d3 from 'd3';\n\nimport * as Plotly from 'plotly.js';\n\ninterface RawData {\n    dataset: IDataset;\n    datas: ProfileDataEntry[];\n    options: TimedDatasetOptions[];\n}\n\ninterface ExtendedScatterData extends Partial {\n    timestamp: number;\n    id: string;\n}\n\nconst LINE_WIDTH_SELECTED = 5;\nconst LINE_WIDTH = 2;\nconst MARKER_SIZE_SELECTED = 10;\nconst MARKER_SIZE = 6;\n\n@Component({\n    selector: 'n52-plotly-profile-graph',\n    templateUrl: './plotly-profile-graph.component.html',\n    styleUrls: ['./plotly-profile-graph.component.scss']\n})\nexport class PlotlyProfileGraphComponent\n    extends DatasetPresenterComponent\n    implements AfterViewInit {\n\n    @Output()\n    public onHighlight: EventEmitter = new EventEmitter();\n\n    @ViewChild('plotly')\n    public plotlyElem: ElementRef;\n\n    private plotlyArea: any;\n    private preparedData: ExtendedScatterData[] = [];\n    private rawData: Map = new Map();\n    private counterXAxis = 0;\n    private counterYAxis = 0;\n\n    private layout: Layout = {\n        autosize: true,\n        showlegend: false,\n        dragmode: 'pan',\n        margin: {\n            l: 40,\n            r: 10,\n            b: 40,\n            t: 10\n            // pad: 100\n        },\n        hovermode: 'closest'\n    };\n\n    private settings: Partial = {\n        displayModeBar: false,\n        modeBarButtonsToRemove: [\n            'sendDataToCloud',\n            'hoverCompareCartesian'\n        ],\n        displaylogo: false,\n        showTips: false,\n        scrollZoom: true\n    };\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc);\n    }\n\n    public ngAfterViewInit(): void {\n        this.plotlyArea = this.plotlyElem.nativeElement;\n        this.drawChart();\n    }\n\n    public reloadData(): void {\n        console.log('reload data at ' + new Date());\n    }\n\n    // tslint:disable-next-line:no-empty\n    protected timeIntervalChanges(): void { }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getDataset(id, url).subscribe((dataset) => {\n            const options = this.datasetOptions.get(dataset.internalId);\n            options.forEach((option) => {\n                if (option.timestamp) {\n                    const timespan = new Timespan(option.timestamp);\n                    this.api.getData(id, url, timespan).subscribe((data) => {\n                        if (data.values.length === 1) {\n                            if (this.rawData.has(dataset.internalId)) {\n                                this.rawData.get(dataset.internalId).datas.push(data.values[0]);\n                                this.rawData.get(dataset.internalId).options.push(option);\n                            } else {\n                                this.rawData.set(dataset.internalId, {\n                                    dataset,\n                                    datas: [data.values[0]],\n                                    options: [option]\n                                });\n                            }\n                        }\n                        this.drawChart();\n                    });\n                }\n            });\n        });\n    }\n\n    protected removeDataset(internalId: string): void {\n        this.rawData.delete(internalId);\n        this.drawChart();\n    }\n\n    protected setSelectedId(internalId: string): void {\n        this.drawChart();\n    }\n\n    protected removeSelectedId(internalId: string): void {\n        this.drawChart();\n    }\n\n    // tslint:disable-next-line:no-empty\n    protected graphOptionsChanged(options: any): void { }\n\n    protected datasetOptionsChanged(internalId: string, options: TimedDatasetOptions[], firstChange: boolean): void {\n        if (!firstChange) {\n            // remove unused options\n            const removedIdx = this.rawData.get(internalId).options.findIndex((option) => {\n                const idx = options.findIndex((e) => e.timestamp === option.timestamp);\n                if (idx === -1) {\n                    return true;\n                }\n            });\n            if (removedIdx > -1) {\n                this.rawData.get(internalId).options.splice(removedIdx, 1);\n                this.rawData.get(internalId).datas.splice(removedIdx, 1);\n            }\n            this.drawChart();\n        }\n    }\n\n    protected onResize(): void {\n        this.redrawChart();\n    }\n\n    private processData() {\n        this.clearLayout();\n        this.clearData();\n        this.rawData.forEach((dataEntry) => {\n            dataEntry.options.forEach((option, key) => {\n                if (option.visible) {\n                    const x = new Array();\n                    const y = new Array();\n                    const selected = this.selectedDatasetIds.indexOf(dataEntry.dataset.internalId) >= 0;\n                    dataEntry.datas[key].value.forEach((entry) => {\n                        x.push(entry.value);\n                        y.push(entry.vertical);\n                    });\n                    const prepared: ExtendedScatterData = {\n                        x,\n                        y,\n                        type: 'scatter',\n                        name: '',\n                        timestamp: option.timestamp,\n                        id: dataEntry.dataset.internalId,\n                        yaxis: this.createYAxis(dataEntry.dataset, dataEntry.datas[key]),\n                        xaxis: this.createXAxis(dataEntry.dataset, dataEntry.datas[key]),\n                        // hovertext: dataEntry.label,\n                        line: {\n                            color: option.color,\n                            width: selected ? LINE_WIDTH_SELECTED : LINE_WIDTH\n                        },\n                        marker: {\n                            size: selected ? MARKER_SIZE_SELECTED : MARKER_SIZE\n                        }\n                    };\n                    this.preparedData.push(prepared);\n                }\n            });\n        });\n\n        this.updateAxis();\n    }\n\n    private createXAxis(dataset: IDataset, data: ProfileDataEntry): string {\n        let axis;\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis') && this.layout[key].title === dataset.uom) {\n                axis = this.layout[key];\n            }\n        }\n        const range = d3.extent(data.value, (d) => d.value);\n        if (!axis) {\n            this.counterXAxis = this.counterXAxis + 1;\n            axis = this.layout['xaxis' + this.counterXAxis] = {\n                id: 'x' + (this.counterXAxis > 1 ? this.counterXAxis : ''),\n                anchor: 'free',\n                title: dataset.uom,\n                zeroline: true,\n                hoverformat: '.2f',\n                showline: false,\n                range: [range[0], range[1]],\n                overlaying: '',\n                // rangemode: 'tozero',\n                fixedrange: false\n            };\n            if (this.counterXAxis !== 1) {\n                axis.overlaying = 'x';\n            }\n        } else {\n            axis.range = d3.extent([range[0], range[1], axis.range[0], axis.range[1]]);\n        }\n        return axis.id;\n    }\n\n    private createYAxis(dataset: IDataset, data: ProfileDataEntry): string {\n        let axis;\n        // find axis\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) &&\n                key.startsWith('yaxis') &&\n                this.layout[key].title === data.verticalUnit) {\n                axis = this.layout[key];\n            }\n        }\n        if (!axis) {\n            // add axis\n            this.counterYAxis = this.counterYAxis + 1;\n            axis = this.layout[('yaxis' + this.counterYAxis)] = {\n                id: 'y' + (this.counterYAxis > 1 ? this.counterYAxis : ''),\n                // zeroline: true,\n                anchor: 'free',\n                hoverformat: '.2r',\n                side: 'left',\n                autorange: 'reversed',\n                showline: false,\n                overlaying: '',\n                title: data.verticalUnit,\n                fixedrange: false\n            };\n            if (this.counterYAxis !== 1) {\n                axis.overlaying = 'y';\n            }\n        }\n        return axis.id;\n    }\n\n    private updateAxis() {\n        if (this.counterYAxis > 1) {\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                    this.layout[key].domain = [(0.1 * this.counterYAxis) - 0.1, 1];\n                }\n            }\n            let yaxisCount = 0;\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('yaxis')) {\n                    this.layout[key].position = 0.1 * yaxisCount;\n                    yaxisCount += 1;\n                }\n            }\n        }\n        if (this.counterXAxis > 1) {\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('yaxis')) {\n                    this.layout[key].domain = [(0.06 * this.counterXAxis) - 0.06, 1];\n                }\n            }\n            let xaxisCount = 0;\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                    this.layout[key].position = 0.06 * xaxisCount;\n                    xaxisCount += 1;\n                }\n            }\n        }\n        // add offset to xaxis ranges\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                const range = this.layout[key].range;\n                const rangeOffset = (range[1] - range[0]) * 0.05;\n                this.layout[key].range = [range[0] - rangeOffset, range[1] + rangeOffset];\n            }\n        }\n    }\n\n    private drawChart() {\n        if (this.plotlyArea && this.rawData.size > 0) {\n            this.processData();\n            Plotly.newPlot(this.plotlyArea, this.preparedData, this.layout, this.settings);\n            this.plotlyArea.on('plotly_hover', (entry: any) => {\n                if (entry.points.length === 1) {\n                    this.onHighlight.emit({\n                        internalId: entry.points[0].data.id,\n                        dataIndex: entry.points[0].pointNumber\n                    });\n                }\n            });\n        }\n    }\n\n    private clearLayout() {\n        // todo remove yaxis\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && (key.startsWith('yaxis') || key.startsWith('xaxis'))) {\n                delete this.layout[key];\n            }\n        }\n        // reset counter\n        this.counterYAxis = 0;\n        this.counterXAxis = 0;\n    }\n\n    private clearData() {\n        this.preparedData = [];\n    }\n\n    private redrawChart() {\n        if (this.plotlyArea) {\n            Plotly.relayout(this.plotlyArea, {});\n        }\n    }\n}\n\ninterface ScatterData extends Partial {\n    id: string;\n    timestamp: number;\n}\n\ninterface Layout extends Partial {\n    [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListEntryComponent.html":{"url":"classes/ListEntryComponent.html","title":"class - ListEntryComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    \n                                loadDataset\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                removeDataset\n                            \n                            \n                                    Public\n                                toggleSelection\n                            \n                            \n                                    Public\n                                toggleUomSelection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                datasetId\n                            \n                            \n                                highlight\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteDataset\n                            \n                            \n                                onSelectDataset\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(internalIdHandler: InternalIdHandler)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalIdHandler\n                                                  \n                                                        \n                                                                    InternalIdHandler\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            loadDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadDataset(id: string, url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeDataset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleSelection()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleUomSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleUomSelection(id: , selected: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        selected\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        datasetId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:7\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        highlight\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:10\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        onDeleteDataset\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onSelectDataset\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n\n\n    \n        import { EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { InternalIdHandler } from '@helgoland/core';\n\nexport abstract class ListEntryComponent implements OnInit {\n\n    @Input()\n    public datasetId: string;\n\n    @Input()\n    public selected: boolean;\n\n    @Input()\n    public highlight: boolean;\n\n    @Output()\n    public onDeleteDataset: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onSelectDataset: EventEmitter = new EventEmitter();\n\n    constructor(\n        protected internalIdHandler: InternalIdHandler\n    ) { }\n\n    public ngOnInit(): void {\n        if (this.datasetId) {\n            const temp = this.internalIdHandler.resolveInternalId(this.datasetId);\n            this.loadDataset(temp.id, temp.url);\n        }\n    }\n\n    public removeDataset() {\n        this.onDeleteDataset.emit(true);\n    }\n\n    public toggleSelection() {\n        this.selected = !this.selected;\n        this.onSelectDataset.emit(this.selected);\n    }\n\n    public toggleUomSelection(id, selected) {\n        if (this.datasetId === id) {\n            this.selected = selected;\n            this.onSelectDataset.emit(this.selected);\n        }\n    }\n\n    protected abstract loadDataset(id: string, url: string): void;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListSelectorComponent.html":{"url":"components/ListSelectorComponent.html","title":"component - ListSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts\n\n\n    \n        Description\n    \n    \n        Component to select an item out of a list of provider with a given filter combination.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-list-selector\n            \n\n\n\n\n            \n                templateUrl\n                ./list-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activePanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isEqual\n                            \n                            \n                                    Public\n                                itemSelected\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Private\n                                openDataset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                parameters\n                            \n                            \n                                providerList\n                            \n                            \n                                selectorId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onDatasetSelection\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(listSelectorService: ListSelectorService, apiInterface: DatasetApiInterface, apiMapping: DatasetApiMapping)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listSelectorService\n                                                  \n                                                        \n                                                                    ListSelectorService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiInterface\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiMapping\n                                                  \n                                                        \n                                                                    DatasetApiMapping\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filter\n                    \n                    \n                            \n                            Type:    ParameterFilter\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parameters\n                    \n                    \n                            \n                            Type:    ListSelectorParameter[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        providerList\n                    \n                    \n                            \n                            Type:    FilteredProvider[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectorId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onDatasetSelection\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isEqual\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isEqual(listOne: FilteredProvider[], listTwo: FilteredProvider[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listOne\n                                                        \n                                                                    FilteredProvider[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        listTwo\n                                                        \n                                                                    FilteredProvider[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        itemSelected(item: FilteredParameter, index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    FilteredParameter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            openDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        openDataset(url: string, params: ParameterFilter)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    ParameterFilter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activePanel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activePanel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport {\n    DatasetApiInterface,\n    DatasetApiMapping,\n    DatasetApiVersion,\n    FilteredProvider,\n    IDataset,\n    ParameterFilter,\n} from '@helgoland/core';\n\nimport { FilteredParameter } from '../multi-service-filter-selector/multi-service-filter-selector.component';\nimport { ListSelectorParameter, ListSelectorService } from './list-selector.service';\n\n/**\n * Component to select an item out of a list of provider with a given filter combination.\n */\n@Component({\n    selector: 'n52-list-selector',\n    templateUrl: './list-selector.component.html'\n})\nexport class ListSelectorComponent implements OnChanges {\n\n    @Input()\n    public parameters: ListSelectorParameter[];\n\n    @Input()\n    public filter: ParameterFilter;\n\n    @Input()\n    public providerList: FilteredProvider[];\n\n    @Input()\n    public selectorId: string;\n\n    @Output()\n    public onDatasetSelection: EventEmitter = new EventEmitter();\n\n    public activePanel: string;\n\n    constructor(\n        protected listSelectorService: ListSelectorService,\n        protected apiInterface: DatasetApiInterface,\n        protected apiMapping: DatasetApiMapping\n    ) { }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.providerList && changes.providerList.currentValue) {\n            if (this.selectorId && this.listSelectorService.cache.has(this.selectorId)\n                && this.isEqual(this.providerList, this.listSelectorService.providerList)) {\n                this.parameters = this.listSelectorService.cache.get(this.selectorId);\n                const idx = this.parameters.findIndex((entry) => {\n                    return entry.isDisabled;\n                }) - 1;\n                this.activePanel = this.selectorId + '-' + idx;\n            } else {\n                if (this.selectorId) {\n                    this.listSelectorService.cache.set(this.selectorId, this.parameters);\n                }\n                // create filterlist for first parameter entry\n                this.parameters[0].filterList = this.providerList.map((entry) => {\n                    entry.filter = this.filter;\n                    return entry;\n                });\n                this.listSelectorService.providerList = this.providerList;\n                // open first tab\n                this.activePanel = this.selectorId + '-0';\n                this.parameters[0].isDisabled = false;\n                // disable parameterList\n                for (let i = 1; i  {\n                entry.filter[this.parameters[index].type] = entry.itemId;\n                return entry;\n            });\n            for (let i = index + 2; i  {\n                entry.filter[this.parameters[index].type] = entry.itemId;\n                this.openDataset(entry.url, entry.filter);\n            });\n        }\n    }\n\n    private openDataset(url: string, params: ParameterFilter) {\n        this.apiMapping.getApiVersion(url).subscribe((apiVersionId) => {\n            if (apiVersionId === DatasetApiVersion.V2) {\n                this.apiInterface.getDatasets(url, params).subscribe((result) => this.onDatasetSelection.emit(result));\n            } else if (apiVersionId === DatasetApiVersion.V1) {\n                this.apiInterface.getTimeseries(url, params).subscribe(\n                    (result) => this.onDatasetSelection.emit(result)\n                );\n            }\n        });\n    }\n\n    private isEqual(listOne: FilteredProvider[], listTwo: FilteredProvider[]): boolean {\n        let match = true;\n        if (listOne.length === listTwo.length) {\n            listOne.forEach((entryOne) => {\n                const found = listTwo.find((entryTwo) => {\n                    if (entryOne.id === entryTwo.id && entryOne.url === entryTwo.url) { return true; }\n                    return false;\n                });\n                if (!found) { match = false; }\n            });\n        } else {\n            match = false;\n        }\n        return match;\n    }\n}\n\n    \n\n    \n        {{activePanel}}\n\n  \n    {{param.header}}\n    -\n    {{param.headerAddition}}\n  \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{activePanel}}      {{param.header}}    -    {{param.headerAddition}}          '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListSelectorParameter.html":{"url":"interfaces/ListSelectorParameter.html","title":"interface - ListSelectorParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListSelectorParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/selector/src/lib/list-selector/list-selector.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        filterList\n                                \n                                \n                                        header\n                                \n                                \n                                            Optional\n                                        headerAddition\n                                \n                                \n                                            Optional\n                                        isDisabled\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filterList\n                                    \n                                \n                                \n                                    \n                                        filterList:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                    \n                                \n                                \n                                    \n                                        header:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerAddition\n                                    \n                                \n                                \n                                    \n                                        headerAddition:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDisabled\n                                    \n                                \n                                \n                                    \n                                        isDisabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FilteredProvider } from '@helgoland/core';\n\nexport interface ListSelectorParameter {\n    header: string;\n    type: string;\n    isDisabled?: boolean;\n    headerAddition?: string;\n    filterList?: any;\n}\n\n@Injectable()\nexport class ListSelectorService {\n    public cache: Map = new Map();\n    public providerList: FilteredProvider[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListSelectorService.html":{"url":"injectables/ListSelectorService.html","title":"injectable - ListSelectorService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ListSelectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/selector/src/lib/list-selector/list-selector.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cache\n                            \n                            \n                                    Public\n                                providerList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cache:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            providerList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        providerList:     FilteredProvider[]\n\n                    \n                \n                    \n                        \n                            Type :     FilteredProvider[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FilteredProvider } from '@helgoland/core';\n\nexport interface ListSelectorParameter {\n    header: string;\n    type: string;\n    isDisabled?: boolean;\n    headerAddition?: string;\n    filterList?: any;\n}\n\n@Injectable()\nexport class ListSelectorService {\n    public cache: Map = new Map();\n    public providerList: FilteredProvider[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalHttpCache.html":{"url":"injectables/LocalHttpCache.html","title":"injectable - LocalHttpCache","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LocalHttpCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/caching/src/lib/local-http-cache.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/local-http-cache.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpResponse\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            put\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        put(req: HttpRequest, expirationTime: number | Date, resp: HttpResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/local-http-cache.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        expirationTime\n                                                        \n                                                                    number | Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resp\n                                                        \n                                                                    HttpResponse\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cache:     Cache\n\n                    \n                \n                    \n                        \n                            Type :     Cache\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/local-http-cache.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { HttpCache } from './model';\n\ninterface CachedItem {\n    expirationTime: number;\n    response: HttpResponse;\n}\n\ninterface Cache {\n    [id: string]: CachedItem;\n}\n\n@Injectable()\nexport class LocalHttpCache extends HttpCache {\n\n    private cache: Cache = {};\n\n    public get(req: HttpRequest): HttpResponse {\n        if (this.cache[req.urlWithParams]) {\n            const expirationTime = this.cache[req.urlWithParams].expirationTime;\n            const currentTime = new Date().getTime();\n            if (expirationTime >= currentTime) {\n                return this.cache[req.urlWithParams].response;\n            } else {\n                delete this.cache[req.urlWithParams];\n            }\n        }\n        return null;\n    }\n\n    public put(req: HttpRequest, expirationTime: number | Date, resp: HttpResponse) {\n        let time;\n        if (expirationTime instanceof Date) {\n            time = expirationTime.getTime();\n        } else {\n            time = new Date().getTime() + expirationTime;\n        }\n        this.cache[req.urlWithParams] = {\n            expirationTime: time,\n            response: resp\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalOngoingHttpCache.html":{"url":"injectables/LocalOngoingHttpCache.html","title":"injectable - LocalOngoingHttpCache","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LocalOngoingHttpCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/caching/src/lib/local-ongoing-http-cache.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                has\n                            \n                            \n                                    Public\n                                observe\n                            \n                            \n                                    Public\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clear(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/local-ongoing-http-cache.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            has\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        has(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/local-ongoing-http-cache.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            observe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        observe(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/local-ongoing-http-cache.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(req: HttpRequest, request: Observable>)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/local-ongoing-http-cache.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        request\n                                                        \n                                                                    Observable>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cache:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/local-ongoing-http-cache.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpEvent, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class LocalOngoingHttpCache {\n\n    private cache: { [key: string]: { request: Observable> } } = {};\n\n    public has(req: HttpRequest): boolean {\n        return this.cache[req.urlWithParams] !== undefined;\n    }\n\n    public set(req: HttpRequest, request: Observable>): void {\n        this.cache[req.urlWithParams] = {\n            request\n        };\n    }\n\n    public observe(req: HttpRequest): Observable> {\n        return this.cache[req.urlWithParams].request;\n    }\n\n    public clear(req: HttpRequest) {\n        delete this.cache[req.urlWithParams];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalSelectorComponent.html":{"url":"classes/LocalSelectorComponent.html","title":"class - LocalSelectorComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/language/locale-selector.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Private\n                                setCurrentLang\n                            \n                            \n                                    Public\n                                setLanguage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                languageList\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/language/locale-selector.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentLang\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentLang:     Language\n\n                    \n                \n                    \n                        \n                            Type :     Language\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/language/locale-selector.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/language/locale-selector.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setCurrentLang\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setCurrentLang()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/language/locale-selector.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLanguage(lang: Language)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/language/locale-selector.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    Language\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        languageList\n                    \n                    \n                            \n                            Type:    Language[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/language/locale-selector.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { Language } from './model/language';\n\nexport abstract class LocalSelectorComponent implements OnChanges {\n\n    @Input()\n    public languageList: Language[];\n\n    public currentLang: Language;\n\n    constructor(\n        protected translate: TranslateService\n    ) { }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.languageList) {\n            this.setCurrentLang();\n        }\n    }\n\n    public setLanguage(lang: Language) {\n        this.translate.use(lang.code);\n        this.setCurrentLang();\n    }\n\n    private setCurrentLang() {\n        this.currentLang = this.languageList.find((e) => e.code === this.translate.currentLang);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorage.html":{"url":"injectables/LocalStorage.html","title":"injectable - LocalStorage","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LocalStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/local-storage/local-storage.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                localStorageEnabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                load\n                            \n                            \n                                    Public\n                                loadArray\n                            \n                            \n                                    Public\n                                loadTextual\n                            \n                            \n                                    Public\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/local-storage/local-storage.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        load(param: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/local-storage/local-storage.service.ts:22\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadArray(param: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/local-storage/local-storage.service.ts:32\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadTextual\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadTextual(param: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/local-storage/local-storage.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        save(param: string, object: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/local-storage/local-storage.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        object\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            localStorageEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        localStorageEnabled:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/local-storage/local-storage.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LocalStorage {\n\n    private localStorageEnabled = false;\n\n    constructor() {\n        if (typeof (Storage) !== 'undefined') {\n            this.localStorageEnabled = true;\n        }\n    }\n\n    public save(param: string, object: any): boolean {\n        if (this.localStorageEnabled) {\n            localStorage.setItem(param, JSON.stringify(object));\n            return true;\n        }\n        return false;\n    }\n\n    public load(param: string): T {\n        if (this.localStorageEnabled) {\n            const result = localStorage.getItem(param);\n            if (result) {\n                return JSON.parse(result);\n            }\n            return null;\n        }\n    }\n\n    public loadArray(param: string): T[] {\n        if (this.localStorageEnabled) {\n            const result = localStorage.getItem(param);\n            if (result) {\n                return JSON.parse(result);\n            }\n            return null;\n        }\n    }\n\n    public loadTextual(param: string): string {\n        if (this.localStorageEnabled) {\n            const result = localStorage.getItem(param);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocateControlComponent.html":{"url":"components/LocateControlComponent.html","title":"component - LocateControlComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocateControlComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/map/src/lib/control/locate/locate.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-locate-control\n            \n\n            \n                styleUrls\n                locate.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./locate.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isToggled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                locateUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(locateService: LocateService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/control/locate/locate.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locateService\n                                                  \n                                                        \n                                                                    LocateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/locate/locate.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            locateUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        locateUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/locate/locate.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isToggled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isToggled:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/locate/locate.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { LocateService } from './locate.service';\n\n@Component({\n    selector: 'n52-locate-control',\n    templateUrl: './locate.component.html',\n    styleUrls: ['./locate.component.scss']\n})\nexport class LocateControlComponent {\n\n    @Input()\n    public mapId: string;\n\n    public isToggled = false;\n\n    constructor(\n        protected locateService: LocateService\n    ) { }\n\n    public locateUser() {\n        this.isToggled = !this.isToggled;\n        if (this.isToggled) {\n            this.locateService.startLocate(this.mapId);\n        } else {\n            this.locateService.stopLocate(this.mapId);\n        }\n    }\n}\n\n    \n\n    \n        \n  \n    locate\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      locate  '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LocateControlComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocateService.html":{"url":"injectables/LocateService.html","title":"injectable - LocateService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LocateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/control/locate/locate.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                removeMarker\n                            \n                            \n                                    Public\n                                startLocate\n                            \n                            \n                                    Public\n                                stopLocate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapCache: MapCache)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/control/locate/locate.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapCache\n                                                  \n                                                        \n                                                                    MapCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            removeMarker\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeMarker(map: L.Map)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/locate/locate.service.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    L.Map\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startLocate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        startLocate(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/locate/locate.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stopLocate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stopLocate(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/locate/locate.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as L from 'leaflet';\n\nimport { MapCache } from '../../base/map-cache.service';\n\nconst LOCATION_FOUND_EVENT = 'locationfound';\nconst LOCATION_ERROR = 'locationerror';\nconst LOCATED_MARKER_ID = 'located';\n\n@Injectable()\nexport class LocateService {\n\n  constructor(\n    protected mapCache: MapCache\n  ) { }\n\n  public startLocate(id: string) {\n    const map = this.mapCache.getMap(id);\n    map.on(LOCATION_FOUND_EVENT, (evt: L.LocationEvent) => {\n      this.removeMarker(map);\n      const marker = L.marker(evt.latlng).addTo(map);\n      marker.options.title = LOCATED_MARKER_ID;\n    });\n    map.on(LOCATION_ERROR, (error) => {\n      console.error(error);\n    });\n    map.locate({\n      watch: true,\n      setView: true,\n      timeout: 30000\n    });\n  }\n\n  public stopLocate(id: string) {\n    const map = this.mapCache.getMap(id);\n    map.stopLocate();\n    map.off(LOCATION_FOUND_EVENT);\n    this.removeMarker(map);\n  }\n\n  private removeMarker(map: L.Map) {\n    map.eachLayer((entry) => {\n      if (entry instanceof L.Marker && entry.options.title === LOCATED_MARKER_ID) {\n        map.removeLayer(entry);\n      }\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocatedProfileDataEntry.html":{"url":"interfaces/LocatedProfileDataEntry.html","title":"interface - LocatedProfileDataEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocatedProfileDataEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/data.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ProfileDataEntry\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        timestamp\n                                \n                                \n                                        value\n                                \n                                \n                                        verticalUnit\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     GeoJSON.GeoJsonObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GeoJSON.GeoJsonObject\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verticalUnit\n                                    \n                                \n                                \n                                    \n                                        verticalUnit:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IDataEntry { }\n\nexport interface Data {\n    values: T[];\n    referenceValues: ReferenceValues;\n}\n\nexport class ReferenceValues {\n    [key: string]: T[];\n}\n\nexport interface TimeValueEntry extends IDataEntry {\n    timestamp: number;\n    value: number;\n}\n\nexport interface LocatedTimeValueEntry extends TimeValueEntry {\n    geometry: GeoJSON.Point;\n}\n\nexport interface ProfileDataEntry extends IDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n}\n\nexport interface LocatedProfileDataEntry extends ProfileDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n    geometry: GeoJSON.GeoJsonObject;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocatedTimeValueEntry.html":{"url":"interfaces/LocatedTimeValueEntry.html","title":"interface - LocatedTimeValueEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocatedTimeValueEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/data.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeValueEntry\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     GeoJSON.Point\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GeoJSON.Point\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IDataEntry { }\n\nexport interface Data {\n    values: T[];\n    referenceValues: ReferenceValues;\n}\n\nexport class ReferenceValues {\n    [key: string]: T[];\n}\n\nexport interface TimeValueEntry extends IDataEntry {\n    timestamp: number;\n    value: number;\n}\n\nexport interface LocatedTimeValueEntry extends TimeValueEntry {\n    geometry: GeoJSON.Point;\n}\n\nexport interface ProfileDataEntry extends IDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n}\n\nexport interface LocatedProfileDataEntry extends ProfileDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n    geometry: GeoJSON.GeoJsonObject;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapCache.html":{"url":"injectables/MapCache.html","title":"injectable - MapCache","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MapCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/map-cache.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mapCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMap\n                            \n                            \n                                    Public\n                                setMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMap(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/map-cache.service.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     L.Map\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setMap(id: string, map: L.Map)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/map-cache.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        map\n                                                        \n                                                                    L.Map\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mapCache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapCache:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/map-cache.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as L from 'leaflet';\n\n@Injectable()\nexport class MapCache {\n\n    private mapCache: Map = new Map();\n\n    public getMap(id: string): L.Map {\n        return this.mapCache.get(id);\n    }\n\n    public setMap(id: string, map: L.Map) {\n        this.mapCache.set(id, map);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinMaxRange.html":{"url":"interfaces/MinMaxRange.html","title":"interface - MinMaxRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinMaxRange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/options.ts\n        \n\n            \n                Description\n            \n            \n                numbered range with a min and a max value\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        max\n                                \n                                \n                                        min\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                    \n                                \n                                \n                                    \n                                        max:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                    \n                                \n                                \n                                    \n                                        min:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export class DatasetOptions {\n\n    /**\n     * internal dataset id\n     *\n     * @type {string}\n     * @memberof DatasetOptions\n     */\n    public internalId: string;\n\n    /**\n     * color of the dataset\n     *\n     * @type {string}\n     * @memberof DatasetOptions\n     */\n    public color: string;\n\n    /**\n     * show or hide in the graph\n     *\n     * @type {boolean}\n     * @memberof DatasetOptions\n     */\n    public visible: boolean = true;\n\n    public loading?: boolean;\n\n    /**\n     * separate y axis of datasets with same unit\n     *\n     * @type {boolean}\n     * @memberof DatasetOptions\n     */\n    public separateYAxis?: boolean = false;\n\n    /**\n     * align graph that zero y axis is visible\n     *\n     * @type {boolean}\n     * @memberof DatasetOptions\n     */\n    public zeroBasedYAxis?: boolean = false;\n\n    /**\n     * marker to request dataset data generalized\n     *\n     * @type {boolean}\n     * @memberof DatasetOptions\n     */\n    public generalize?: boolean = false;\n\n    /**\n     * list of visible reference values\n     *\n     * @type {ReferenceValueOption[]}\n     * @memberof DatasetOptions\n     */\n    public showReferenceValues: ReferenceValueOption[] = [];\n\n    /**\n     * radius of graphpoint\n     *\n     * @type {number}\n     * @memberof DatasetOptions\n     */\n    public pointRadius: number = 0;\n\n    /**\n     * width of graphline\n     *\n     * @type {number}\n     * @memberof DatasetOptions\n     */\n    public lineWidth: number = 1;\n\n    /**\n     * min and max range of y axis\n     *\n     * @type {MinMaxRange}\n     * @memberof DatasetOptions\n     */\n    public yAxisRange?: MinMaxRange;\n\n    constructor(\n        internalId: string,\n        color: string\n    ) {\n        this.internalId = internalId;\n        this.color = color;\n    }\n}\n\nexport class ReferenceValueOption {\n    public id: string;\n    public color: string;\n}\n\n/**\n * numbered range with a min and a max value\n *\n * @export\n * @interface MinMaxRange\n */\nexport interface MinMaxRange {\n    min: number;\n    max: number;\n}\n\nexport class TimedDatasetOptions extends DatasetOptions {\n    public timestamp: number;\n\n    constructor(\n        internalId: string,\n        color: string,\n        timestamp: number\n    ) {\n        super(internalId, color);\n        this.timestamp = timestamp;\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MinMaxRangeComponent.html":{"url":"components/MinMaxRangeComponent.html","title":"component - MinMaxRangeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MinMaxRangeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/modification/src/lib/min-max-range/min-max-range.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-min-max-range\n            \n\n            \n                styleUrls\n                min-max-range.component.css\n            \n\n\n\n            \n                templateUrl\n                ./min-max-range.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rangeMax\n                            \n                            \n                                    Public\n                                rangeMin\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                resetYaxisRange\n                            \n                            \n                                    Public\n                                setYaxisRange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                range\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onRangeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        range\n                    \n                    \n                            \n                            Type:    MinMaxRange\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/min-max-range/min-max-range.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onRangeChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/min-max-range/min-max-range.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/min-max-range/min-max-range.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resetYaxisRange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resetYaxisRange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/min-max-range/min-max-range.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setYaxisRange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setYaxisRange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/min-max-range/min-max-range.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rangeMax\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rangeMax:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/min-max-range/min-max-range.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rangeMin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rangeMin:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/min-max-range/min-max-range.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { MinMaxRange } from '@helgoland/core';\n\n@Component({\n  selector: 'n52-min-max-range',\n  templateUrl: './min-max-range.component.html',\n  styleUrls: ['./min-max-range.component.css']\n})\nexport class MinMaxRangeComponent implements OnChanges {\n\n  public rangeMin: number;\n  public rangeMax: number;\n\n  @Input()\n  public range: MinMaxRange;\n\n  @Output()\n  public onRangeChange: EventEmitter = new EventEmitter();\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (changes.range && this.range) {\n      this.rangeMin = this.range.min;\n      this.rangeMax = this.range.max;\n    }\n  }\n\n  public setYaxisRange() {\n    const min = (this.rangeMin === null || this.rangeMin === undefined) ? 0 : this.rangeMin;\n    const max = (this.rangeMax === null || this.rangeMax === undefined) ? 0 : this.rangeMax;\n    this.onRangeChange.emit({ min, max });\n  }\n\n  public resetYaxisRange() {\n    this.rangeMin = null;\n    this.rangeMax = null;\n    this.onRangeChange.emit();\n  }\n\n}\n\n    \n\n    \n        \n\nreset\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'reset'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MinMaxRangeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultiServiceFilterSelectorComponent.html":{"url":"components/MultiServiceFilterSelectorComponent.html","title":"component - MultiServiceFilterSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MultiServiceFilterSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts\n\n\n    \n        Description\n    \n    \n        Component to select an item out of a list of provider with a given filter combination.\n\n    \n\n    \n        Extends\n    \n    \n            LanguageChangNotifier\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-multi-service-filter-selector\n            \n\n\n\n\n            \n                templateUrl\n                ./multi-service-filter-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Public\n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorOnLoading\n                            \n                            \n                                    Protected\n                                languageChanged\n                            \n                            \n                                    Private\n                                loadItems\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                onSelectItem\n                            \n                            \n                                    Private\n                                setItems\n                            \n                            \n                                    Protected\n                                    \n                                languageChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                endpoint\n                            \n                            \n                                filterList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onItemSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiInterface: DatasetApiInterface, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiInterface\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        endpoint\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filterList\n                    \n                    \n                            \n                            Type:    FilteredProvider[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:25\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onItemSelected\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:28\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorOnLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        errorOnLoading()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:108\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            languageChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        languageChanged()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSelectItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onSelectItem(item: FilteredParameter)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    FilteredParameter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setItems(res: FilteredParameter[], prevfilter: ParameterFilter, url: string, service: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        res\n                                                        \n                                                                    FilteredParameter[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        prevfilter\n                                                        \n                                                                    ParameterFilter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        service\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            languageChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        languageChanged()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LanguageChangNotifier\n\n                                \n                            \n                        \n                            \n                                    Defined in LanguageChangNotifier:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     FilteredParameter[]\n\n                    \n                \n                    \n                        \n                            Type :     FilteredParameter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport {\n    DatasetApiInterface,\n    Filter,\n    FilteredProvider,\n    LanguageChangNotifier,\n    Parameter,\n    ParameterFilter,\n} from '@helgoland/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * Component to select an item out of a list of provider with a given filter combination.\n */\n@Component({\n    selector: 'n52-multi-service-filter-selector',\n    templateUrl: './multi-service-filter-selector.component.html'\n})\nexport class MultiServiceFilterSelectorComponent extends LanguageChangNotifier implements OnChanges {\n\n    @Input()\n    public endpoint: string;\n\n    @Input()\n    public filterList: FilteredProvider[];\n\n    @Output()\n    public onItemSelected: EventEmitter = new EventEmitter();\n\n    public loading = 0;\n    public items: FilteredParameter[];\n\n    constructor(\n        protected apiInterface: DatasetApiInterface,\n        protected translate: TranslateService\n    ) {\n        super(translate);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        this.loadItems();\n    }\n\n    public onSelectItem(item: FilteredParameter): void {\n        this.onItemSelected.emit(item);\n    }\n\n    protected languageChanged(): void {\n        this.loadItems();\n    }\n\n    private loadItems() {\n        this.items = [];\n        this.filterList.forEach((entry) => {\n            this.loading++;\n            const filter = entry.filter || {};\n            filter.service = entry.id;\n            switch (this.endpoint) {\n                case 'offering':\n                    this.apiInterface.getOfferings(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'phenomenon':\n                    this.apiInterface.getPhenomena(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'procedure':\n                    this.apiInterface.getProcedures(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'feature':\n                    this.apiInterface.getFeatures(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'category':\n                    this.apiInterface.getCategories(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'platform':\n                    this.apiInterface.getPlatforms(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'dataset':\n                    this.apiInterface.getDatasets(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                default:\n                    console.error('Wrong endpoint: ' + this.endpoint);\n                    this.loading--;\n            }\n        });\n    }\n\n    private errorOnLoading(): void {\n        this.loading--;\n    }\n\n    private setItems(res: FilteredParameter[], prevfilter: ParameterFilter, url: string, service: string): void {\n        this.loading--;\n        res.forEach((entry) => {\n            const filter: Filter = {\n                filter: prevfilter,\n                itemId: entry.id,\n                url,\n                service\n            };\n            const item = this.items.find((elem) => {\n                if (elem.label === entry.label) { return true; }\n            });\n            if (item) {\n                item.filterList.push(filter);\n            } else {\n                entry.filterList = [filter];\n                this.items.push(entry);\n            }\n        });\n    }\n\n}\n\nexport interface FilteredParameter extends Parameter {\n    filterList?: Filter[];\n}\n\n    \n\n    \n         0\">\n    \n    \n\n\n\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\">            '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MultiServiceFilterSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NominatimGeoSearchService.html":{"url":"injectables/NominatimGeoSearchService.html","title":"injectable - NominatimGeoSearchService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NominatimGeoSearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                serviceUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reverse\n                            \n                            \n                                    Public\n                                searchTerm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reverse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reverse(point: Point, options?: GeoReverseOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        point\n                                                        \n                                                                    Point\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    GeoReverseOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchTerm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        searchTerm(term: string, options?: GeoSearchOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    GeoSearchOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            serviceUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serviceUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://nominatim.openstreetmap.org/'\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts:50\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import 'rxjs/add/operator/map';\n\nimport { HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpService } from '@helgoland/core';\nimport { Point } from 'geojson';\nimport { Observable } from 'rxjs/Observable';\n\nimport { GeoReverseOptions, GeoReverseResult, GeoSearch, GeoSearchOptions, GeoSearchResult } from './geosearch';\n\ninterface NominatimSearchResult {\n    display_name: string;\n    geojson?: GeoJSON.GeoJsonObject;\n    lat: string;\n    lon: string;\n    boundingbox: number[];\n}\n\nexport interface Address {\n    address29: string;\n    house_number: string;\n    road: string;\n    neighbourhood: string;\n    suburb: string;\n    city_district: string;\n    city: string;\n    county: string;\n    state_district: string;\n    state: string;\n    postcode: string;\n    country: string;\n    country_code: string;\n}\n\nexport interface NominatimReverseResult {\n    place_id: string;\n    licence: string;\n    osm_type: string;\n    osm_id: string;\n    lat: string;\n    lon: string;\n    display_name: string;\n    address: Address;\n    boundingbox: string[];\n}\n\n@Injectable()\nexport class NominatimGeoSearchService implements GeoSearch {\n\n    protected serviceUrl = 'https://nominatim.openstreetmap.org/';\n\n    constructor(\n        protected http: HttpService\n    ) { }\n\n    public searchTerm(term: string, options?: GeoSearchOptions): Observable {\n        let params = new HttpParams();\n        params = params.set('limit', '1');\n        params = params.set('polygon_geojson', options.asPointGeometry ? '0' : '1');\n        params = params.set('q', term);\n        params = params.set('format', 'json');\n        if (options && options.countrycodes) { params = params.set('countrycodes', options.countrycodes.join(',')); }\n        return this.http.client().get(\n            this.serviceUrl + 'search',\n            { params }\n        ).map((resArray: NominatimSearchResult[]) => {\n            if (resArray.length === 1) {\n                const result = resArray[0];\n                const name = result.display_name;\n                let bounds: Array;\n                if (result.boundingbox) {\n                    bounds = [\n                        [\n                            result.boundingbox[0],\n                            result.boundingbox[2]\n                        ],\n                        [\n                            result.boundingbox[1],\n                            result.boundingbox[3]\n                        ]\n                    ];\n                } else {\n                    bounds = null;\n                }\n                let geometry;\n                if (result.geojson) {\n                    geometry = result.geojson;\n                } else {\n                    geometry = {\n                        type: 'Point',\n                        coordinates: [parseFloat(result.lon), parseFloat(result.lat)]\n                    };\n                }\n                return {\n                    name,\n                    geometry,\n                    bounds\n                };\n            }\n        });\n    }\n\n    public reverse(point: Point, options?: GeoReverseOptions): Observable {\n        let params = new HttpParams();\n        params = params.set('lat', point.coordinates[0].toString());\n        params = params.set('lon', point.coordinates[1].toString());\n        params = params.set('format', 'json');\n        return this.http.client().get(\n            this.serviceUrl + 'reverse',\n            { params }\n        ).map((res: NominatimReverseResult) => {\n            return {\n                lat: res.lat,\n                lon: res.lon,\n                displayName: res.display_name,\n                address: {\n                    city: res.address.city,\n                    cityDistrict: res.address.city_district,\n                    country: res.address.country,\n                    countryCode: res.address.country_code,\n                    county: res.address.county,\n                    houseNumber: res.address.house_number,\n                    neighbourhood: res.address.neighbourhood,\n                    postcode: res.address.postcode,\n                    road: res.address.road,\n                    state: res.address.state,\n                    stateDistrict: res.address.state_district,\n                    suburb: res.address.suburb\n                },\n                boundingbox: res.boundingbox\n            } as GeoReverseResult;\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NominatimReverseResult.html":{"url":"interfaces/NominatimReverseResult.html","title":"interface - NominatimReverseResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NominatimReverseResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        boundingbox\n                                \n                                \n                                        display_name\n                                \n                                \n                                        lat\n                                \n                                \n                                        licence\n                                \n                                \n                                        lon\n                                \n                                \n                                        osm_id\n                                \n                                \n                                        osm_type\n                                \n                                \n                                        place_id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        boundingbox\n                                    \n                                \n                                \n                                    \n                                        boundingbox:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display_name\n                                    \n                                \n                                \n                                    \n                                        display_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        licence\n                                    \n                                \n                                \n                                    \n                                        licence:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                    \n                                \n                                \n                                    \n                                        lon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        osm_id\n                                    \n                                \n                                \n                                    \n                                        osm_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        osm_type\n                                    \n                                \n                                \n                                    \n                                        osm_type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        place_id\n                                    \n                                \n                                \n                                    \n                                        place_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import 'rxjs/add/operator/map';\n\nimport { HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpService } from '@helgoland/core';\nimport { Point } from 'geojson';\nimport { Observable } from 'rxjs/Observable';\n\nimport { GeoReverseOptions, GeoReverseResult, GeoSearch, GeoSearchOptions, GeoSearchResult } from './geosearch';\n\ninterface NominatimSearchResult {\n    display_name: string;\n    geojson?: GeoJSON.GeoJsonObject;\n    lat: string;\n    lon: string;\n    boundingbox: number[];\n}\n\nexport interface Address {\n    address29: string;\n    house_number: string;\n    road: string;\n    neighbourhood: string;\n    suburb: string;\n    city_district: string;\n    city: string;\n    county: string;\n    state_district: string;\n    state: string;\n    postcode: string;\n    country: string;\n    country_code: string;\n}\n\nexport interface NominatimReverseResult {\n    place_id: string;\n    licence: string;\n    osm_type: string;\n    osm_id: string;\n    lat: string;\n    lon: string;\n    display_name: string;\n    address: Address;\n    boundingbox: string[];\n}\n\n@Injectable()\nexport class NominatimGeoSearchService implements GeoSearch {\n\n    protected serviceUrl = 'https://nominatim.openstreetmap.org/';\n\n    constructor(\n        protected http: HttpService\n    ) { }\n\n    public searchTerm(term: string, options?: GeoSearchOptions): Observable {\n        let params = new HttpParams();\n        params = params.set('limit', '1');\n        params = params.set('polygon_geojson', options.asPointGeometry ? '0' : '1');\n        params = params.set('q', term);\n        params = params.set('format', 'json');\n        if (options && options.countrycodes) { params = params.set('countrycodes', options.countrycodes.join(',')); }\n        return this.http.client().get(\n            this.serviceUrl + 'search',\n            { params }\n        ).map((resArray: NominatimSearchResult[]) => {\n            if (resArray.length === 1) {\n                const result = resArray[0];\n                const name = result.display_name;\n                let bounds: Array;\n                if (result.boundingbox) {\n                    bounds = [\n                        [\n                            result.boundingbox[0],\n                            result.boundingbox[2]\n                        ],\n                        [\n                            result.boundingbox[1],\n                            result.boundingbox[3]\n                        ]\n                    ];\n                } else {\n                    bounds = null;\n                }\n                let geometry;\n                if (result.geojson) {\n                    geometry = result.geojson;\n                } else {\n                    geometry = {\n                        type: 'Point',\n                        coordinates: [parseFloat(result.lon), parseFloat(result.lat)]\n                    };\n                }\n                return {\n                    name,\n                    geometry,\n                    bounds\n                };\n            }\n        });\n    }\n\n    public reverse(point: Point, options?: GeoReverseOptions): Observable {\n        let params = new HttpParams();\n        params = params.set('lat', point.coordinates[0].toString());\n        params = params.set('lon', point.coordinates[1].toString());\n        params = params.set('format', 'json');\n        return this.http.client().get(\n            this.serviceUrl + 'reverse',\n            { params }\n        ).map((res: NominatimReverseResult) => {\n            return {\n                lat: res.lat,\n                lon: res.lon,\n                displayName: res.display_name,\n                address: {\n                    city: res.address.city,\n                    cityDistrict: res.address.city_district,\n                    country: res.address.country,\n                    countryCode: res.address.country_code,\n                    county: res.address.county,\n                    houseNumber: res.address.house_number,\n                    neighbourhood: res.address.neighbourhood,\n                    postcode: res.address.postcode,\n                    road: res.address.road,\n                    state: res.address.state,\n                    stateDistrict: res.address.state_district,\n                    suburb: res.address.suburb\n                },\n                boundingbox: res.boundingbox\n            } as GeoReverseResult;\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NominatimSearchResult.html":{"url":"interfaces/NominatimSearchResult.html","title":"interface - NominatimSearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NominatimSearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        boundingbox\n                                \n                                \n                                        display_name\n                                \n                                \n                                            Optional\n                                        geojson\n                                \n                                \n                                        lat\n                                \n                                \n                                        lon\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        boundingbox\n                                    \n                                \n                                \n                                    \n                                        boundingbox:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display_name\n                                    \n                                \n                                \n                                    \n                                        display_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geojson\n                                    \n                                \n                                \n                                    \n                                        geojson:     GeoJSON.GeoJsonObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GeoJSON.GeoJsonObject\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                    \n                                \n                                \n                                    \n                                        lon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import 'rxjs/add/operator/map';\n\nimport { HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpService } from '@helgoland/core';\nimport { Point } from 'geojson';\nimport { Observable } from 'rxjs/Observable';\n\nimport { GeoReverseOptions, GeoReverseResult, GeoSearch, GeoSearchOptions, GeoSearchResult } from './geosearch';\n\ninterface NominatimSearchResult {\n    display_name: string;\n    geojson?: GeoJSON.GeoJsonObject;\n    lat: string;\n    lon: string;\n    boundingbox: number[];\n}\n\nexport interface Address {\n    address29: string;\n    house_number: string;\n    road: string;\n    neighbourhood: string;\n    suburb: string;\n    city_district: string;\n    city: string;\n    county: string;\n    state_district: string;\n    state: string;\n    postcode: string;\n    country: string;\n    country_code: string;\n}\n\nexport interface NominatimReverseResult {\n    place_id: string;\n    licence: string;\n    osm_type: string;\n    osm_id: string;\n    lat: string;\n    lon: string;\n    display_name: string;\n    address: Address;\n    boundingbox: string[];\n}\n\n@Injectable()\nexport class NominatimGeoSearchService implements GeoSearch {\n\n    protected serviceUrl = 'https://nominatim.openstreetmap.org/';\n\n    constructor(\n        protected http: HttpService\n    ) { }\n\n    public searchTerm(term: string, options?: GeoSearchOptions): Observable {\n        let params = new HttpParams();\n        params = params.set('limit', '1');\n        params = params.set('polygon_geojson', options.asPointGeometry ? '0' : '1');\n        params = params.set('q', term);\n        params = params.set('format', 'json');\n        if (options && options.countrycodes) { params = params.set('countrycodes', options.countrycodes.join(',')); }\n        return this.http.client().get(\n            this.serviceUrl + 'search',\n            { params }\n        ).map((resArray: NominatimSearchResult[]) => {\n            if (resArray.length === 1) {\n                const result = resArray[0];\n                const name = result.display_name;\n                let bounds: Array;\n                if (result.boundingbox) {\n                    bounds = [\n                        [\n                            result.boundingbox[0],\n                            result.boundingbox[2]\n                        ],\n                        [\n                            result.boundingbox[1],\n                            result.boundingbox[3]\n                        ]\n                    ];\n                } else {\n                    bounds = null;\n                }\n                let geometry;\n                if (result.geojson) {\n                    geometry = result.geojson;\n                } else {\n                    geometry = {\n                        type: 'Point',\n                        coordinates: [parseFloat(result.lon), parseFloat(result.lat)]\n                    };\n                }\n                return {\n                    name,\n                    geometry,\n                    bounds\n                };\n            }\n        });\n    }\n\n    public reverse(point: Point, options?: GeoReverseOptions): Observable {\n        let params = new HttpParams();\n        params = params.set('lat', point.coordinates[0].toString());\n        params = params.set('lon', point.coordinates[1].toString());\n        params = params.set('format', 'json');\n        return this.http.client().get(\n            this.serviceUrl + 'reverse',\n            { params }\n        ).map((res: NominatimReverseResult) => {\n            return {\n                lat: res.lat,\n                lon: res.lon,\n                displayName: res.display_name,\n                address: {\n                    city: res.address.city,\n                    cityDistrict: res.address.city_district,\n                    country: res.address.country,\n                    countryCode: res.address.country_code,\n                    county: res.address.county,\n                    houseNumber: res.address.house_number,\n                    neighbourhood: res.address.neighbourhood,\n                    postcode: res.address.postcode,\n                    road: res.address.road,\n                    state: res.address.state,\n                    stateDistrict: res.address.state_district,\n                    suburb: res.address.suburb\n                },\n                boundingbox: res.boundingbox\n            } as GeoReverseResult;\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotifierService.html":{"url":"injectables/NotifierService.html","title":"injectable - NotifierService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NotifierService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/notifier/notifier.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                notifierTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/notifier/notifier.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notify\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        notify(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/notifier/notifier.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            notifierTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifierTimeout:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/notifier/notifier.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nconst ID = 'helgoland-notifier';\nconst TIME_IN_MS = 3000;\n\n@Injectable()\nexport class NotifierService {\n\n  private notifierTimeout: any;\n\n  constructor() {\n    const notifierElement = document.getElementById(ID);\n    if (!notifierElement) {\n      const node = document.createElement('div');\n      node.id = ID;\n      node.className = 'hide';\n      const textNode = document.createTextNode('');\n      node.appendChild(textNode);\n      document.body.appendChild(node);\n    }\n  }\n\n  public notify(text: string) {\n    clearTimeout(this.notifierTimeout);\n    const notifierElement = document.getElementById(ID);\n    notifierElement.innerHTML = text;\n    notifierElement.className = notifierElement.className.replace('hide', 'show');\n    this.notifierTimeout = setTimeout(() => {\n      notifierElement.className = notifierElement.className.replace('show', 'hide');\n    }, TIME_IN_MS);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Offering.html":{"url":"interfaces/Offering.html","title":"interface - Offering","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Offering\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/offering.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\n\nexport interface Offering extends Parameter {\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OnGoingHttpCache.html":{"url":"classes/OnGoingHttpCache.html","title":"class - OnGoingHttpCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OnGoingHttpCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/caching/src/lib/model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                clear\n                            \n                            \n                                    Public\n                                    \n                                has\n                            \n                            \n                                    Public\n                                    \n                                observe\n                            \n                            \n                                    Public\n                                    \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clear(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/model.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            has\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        has(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/model.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            observe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        observe(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/model.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(req: HttpRequest, request: Observable>)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/model.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        request\n                                                        \n                                                                    Observable>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpEvent, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\nexport abstract class HttpCache {\n    /**\n     * Returns a cached response, if any, or null if not present.\n     */\n    public abstract get(req: HttpRequest): HttpResponse | null;\n\n    /**\n     * Adds or updates the response in the cache.\n     */\n    public abstract put(req: HttpRequest, expirationTime: number | Date, resp: HttpResponse): void;\n}\n\nexport abstract class OnGoingHttpCache {\n\n    public abstract has(req: HttpRequest): boolean;\n    public abstract set(req: HttpRequest, request: Observable>): void;\n    public abstract observe(req: HttpRequest): Observable>;\n    public abstract clear(req: HttpRequest): void;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Parameter.html":{"url":"interfaces/Parameter.html","title":"interface - Parameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Parameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/parameter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Identifiable\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Identifiable } from './identifiable';\n\nexport interface Parameter extends Identifiable {\n    id: string;\n    label: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterConstellation.html":{"url":"classes/ParameterConstellation.html","title":"class - ParameterConstellation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterConstellation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                category\n                            \n                            \n                                    Public\n                                feature\n                            \n                            \n                                    Public\n                                offering\n                            \n                            \n                                    Public\n                                phenomenon\n                            \n                            \n                                    Public\n                                procedure\n                            \n                            \n                                    Public\n                                service\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            category\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        category:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            feature\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        feature:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offering\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        offering:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            phenomenon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        phenomenon:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            procedure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        procedure:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParameterFilter.html":{"url":"interfaces/ParameterFilter.html","title":"interface - ParameterFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParameterFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/http-requests.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        expanded\n                                \n                                \n                                            Optional\n                                        lang\n                                \n                                \n                                            Optional\n                                        phenomenon\n                                \n                                \n                                            Optional\n                                        platformTypes\n                                \n                                \n                                            Optional\n                                        service\n                                \n                                \n                                            Optional\n                                        valueTypes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/model/internal/http-requests.ts:7\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                    \n                                \n                                \n                                    \n                                        expanded:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                    \n                                \n                                \n                                    \n                                        lang:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phenomenon\n                                    \n                                \n                                \n                                    \n                                        phenomenon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformTypes\n                                    \n                                \n                                \n                                    \n                                        platformTypes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service\n                                    \n                                \n                                \n                                    \n                                        service:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueTypes\n                                    \n                                \n                                \n                                    \n                                        valueTypes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ParameterFilter {\n    service?: string;\n    phenomenon?: string;\n    valueTypes?: string;\n    platformTypes?: string;\n    expanded?: boolean;\n    lang?: string;\n    [key: string]: any;\n}\n\nexport interface DataParameterFilter extends ParameterFilter {\n    format?: string;\n    timespan?: string;\n    generalize?: boolean;\n}\n\nexport interface HttpRequestOptions {\n    forceUpdate?: boolean;\n    basicAuthToken?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParsedTimespanPreset.html":{"url":"interfaces/ParsedTimespanPreset.html","title":"interface - ParsedTimespanPreset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParsedTimespanPreset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/settings/settings.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        seperatorAfterThisItem\n                                \n                                \n                                        timespan\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seperatorAfterThisItem\n                                    \n                                \n                                \n                                    \n                                        seperatorAfterThisItem:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timespan\n                                    \n                                \n                                \n                                    \n                                        timespan:     Timespan\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timespan\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timespan } from './../internal/timeInterval';\n\nexport interface Settings {\n    datasetApis?: DatasetApi[];\n    providerBlackList?: BlacklistedService[];\n    solveLabels?: boolean;\n    proxyUrl?: string;\n    timespanPresets?: TimespanPreset[];\n    colorList?: string[];\n    languages?: [{ label: string, code: string }];\n    refreshDataInterval?: number;\n}\n\nexport interface DatasetApi {\n    name: string;\n    url: string;\n}\n\nexport interface BlacklistedService {\n    serviceId: string;\n    apiUrl: string;\n}\n\nexport interface TimespanPreset {\n    name: string;\n    label: string;\n    timespan: TimespanMomentTemplate;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface ParsedTimespanPreset {\n    name: string;\n    label: string;\n    timespan: Timespan;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface TimespanMomentTemplate {\n    to: string;\n    from: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PermalinkInMailComponent.html":{"url":"components/PermalinkInMailComponent.html","title":"component - PermalinkInMailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PermalinkInMailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/permalink/src/lib/permalink-in-mail/permalink-in-mail.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-permalink-in-mail\n            \n\n\n\n\n            \n                templateUrl\n                ./permalink-in-mail.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                openInMail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTriggered\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/permalink-in-mail/permalink-in-mail.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTriggered\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/permalink-in-mail/permalink-in-mail.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openInMail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        openInMail()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/permalink-in-mail/permalink-in-mail.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'n52-permalink-in-mail',\n  templateUrl: './permalink-in-mail.component.html'\n})\nexport class PermalinkInMailComponent {\n\n  @Input()\n  public url: string;\n\n  @Output()\n  public onTriggered: EventEmitter = new EventEmitter();\n\n  public openInMail() {\n    window.location.href = 'mailto:?body=' + encodeURIComponent(this.url);\n    this.onTriggered.emit();\n  }\n\n}\n\n    \n\n    \n        open in mail\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'open in mail'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PermalinkInMailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PermalinkNewWindowComponent.html":{"url":"components/PermalinkNewWindowComponent.html","title":"component - PermalinkNewWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PermalinkNewWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/permalink/src/lib/permalink-new-window/permalink-new-window.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-permalink-new-window\n            \n\n\n\n\n            \n                templateUrl\n                ./permalink-new-window.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                openInNewWindow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTriggered\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/permalink-new-window/permalink-new-window.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTriggered\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/permalink-new-window/permalink-new-window.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openInNewWindow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        openInNewWindow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/permalink-new-window/permalink-new-window.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'n52-permalink-new-window',\n  templateUrl: './permalink-new-window.component.html'\n})\nexport class PermalinkNewWindowComponent {\n\n  @Input()\n  public url: string;\n\n  @Output()\n  public onTriggered: EventEmitter = new EventEmitter();\n\n  public openInNewWindow() {\n    window.open(this.url, '_blank');\n    this.onTriggered.emit();\n  }\n\n}\n\n    \n\n    \n        open in new window\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'open in new window'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PermalinkNewWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PermalinkService.html":{"url":"classes/PermalinkService.html","title":"class - PermalinkService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PermalinkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/permalink/src/lib/services/permalink.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createPermalink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createBaseUrl\n                            \n                            \n                                    Protected\n                                    \n                                generatePermalink\n                            \n                            \n                                    Public\n                                    \n                                validatePeramlink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createPermalink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createPermalink:     \n\n                    \n                \n                    \n                        \n                            Default value : () => {\n    return this.generatePermalink();\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/services/permalink.service.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createBaseUrl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/services/permalink.service.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            generatePermalink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generatePermalink()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/services/permalink.service.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            validatePeramlink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        validatePeramlink()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/services/permalink.service.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     T\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class PermalinkService {\n\n  public createPermalink = () => {\n    return this.generatePermalink();\n  }\n\n  public abstract validatePeramlink(): T;\n\n  protected abstract generatePermalink(): string;\n\n  protected createBaseUrl() {\n    const url = window.location.href;\n    if (url.indexOf('?') !== -1) {\n      return url.substring(0, url.indexOf('?'));\n    } else {\n      return url;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PermalinkToClipboardComponent.html":{"url":"components/PermalinkToClipboardComponent.html","title":"component - PermalinkToClipboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PermalinkToClipboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/permalink/src/lib/permalink-to-clipboard/permalink-to-clipboard.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-permalink-to-clipboard\n            \n\n\n\n\n            \n                templateUrl\n                ./permalink-to-clipboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTriggered\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/permalink-to-clipboard/permalink-to-clipboard.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTriggered\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/permalink-to-clipboard/permalink-to-clipboard.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'n52-permalink-to-clipboard',\n  templateUrl: './permalink-to-clipboard.component.html'\n})\nexport class PermalinkToClipboardComponent {\n\n  @Input()\n  public url: string;\n\n  @Output()\n  public onTriggered: EventEmitter = new EventEmitter();\n\n}\n\n    \n\n    \n        copy to clipboard\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'copy to clipboard'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PermalinkToClipboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Phenomenon.html":{"url":"interfaces/Phenomenon.html","title":"interface - Phenomenon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Phenomenon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/phenomenon.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\n\nexport interface Phenomenon extends Parameter {\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Platform.html":{"url":"interfaces/Platform.html","title":"interface - Platform","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Platform\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/platform.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        datasets\n                                \n                                \n                                        geometry\n                                \n                                \n                                        platformType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datasets\n                                    \n                                \n                                \n                                    \n                                        datasets:     IDataset[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IDataset[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     GeoJSON.Point\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GeoJSON.Point\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformType\n                                    \n                                \n                                \n                                    \n                                        platformType:     PlatformTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlatformTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDataset } from './dataset';\nimport { PlatformTypes } from './enums';\nimport { Parameter } from './parameter';\n\nexport interface Platform extends Parameter {\n    platformType: PlatformTypes;\n    datasets: IDataset[];\n    geometry: GeoJSON.Point;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlatformMapSelectorComponent.html":{"url":"components/PlatformMapSelectorComponent.html","title":"component - PlatformMapSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlatformMapSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/map/src/lib/selector/platform-map-selector/platform-map-selector.component.ts\n\n\n\n    \n        Extends\n    \n    \n            MapSelectorComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-platform-map-selector\n            \n\n            \n                styleUrls\n                .map-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ../map-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                markerFeatureGroup\n                            \n                            \n                                    Public\n                                isContentLoading\n                            \n                            \n                                    Public\n                                noResultsFound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                drawGeometries\n                            \n                            \n                                    Protected\n                                    \n                                drawGeometries\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                zoomToMarkerBounds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cluster\n                            \n                            \n                                avoidZoomToSelection\n                            \n                            \n                                filter\n                            \n                            \n                                serviceUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onContentLoading\n                            \n                            \n                                onSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiInterface: DatasetApiInterface, mapCache: MapCache, cd: ChangeDetectorRef, differs: KeyValueDiffers)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/selector/platform-map-selector/platform-map-selector.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiInterface\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapCache\n                                                  \n                                                        \n                                                                    MapCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        differs\n                                                  \n                                                        \n                                                                    KeyValueDiffers\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cluster\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/platform-map-selector/platform-map-selector.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        avoidZoomToSelection\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                    \n                            \n                            Type:    ParameterFilter\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serviceUrl\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onContentLoading\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onSelected\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            drawGeometries\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        drawGeometries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/platform-map-selector/platform-map-selector.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            drawGeometries\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        drawGeometries()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:82\n                            \n                        \n\n\n                \n                    \n                            Draws the geometries\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            zoomToMarkerBounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        zoomToMarkerBounds(bounds: L.LatLngBoundsExpression)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:91\n                            \n                        \n\n\n                \n                    \n                            Zooms to the given bounds\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        bounds\n                                                        \n                                                                    L.LatLngBoundsExpression\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                where to zoom\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            markerFeatureGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markerFeatureGroup:     L.FeatureGroup\n\n                    \n                \n                    \n                        \n                            Type :     L.FeatureGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/platform-map-selector/platform-map-selector.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isContentLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isContentLoading:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noResultsFound\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noResultsFound:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import 'leaflet.markercluster';\n\nimport { AfterViewInit, ChangeDetectorRef, Component, Input, KeyValueDiffers, OnChanges } from '@angular/core';\nimport { DatasetApiInterface, HasLoadableContent, Mixin, Platform } from '@helgoland/core';\nimport * as L from 'leaflet';\n\nimport { MapCache } from '../../base/map-cache.service';\nimport { MapSelectorComponent } from '../map-selector.component';\n\n@Component({\n    selector: 'n52-platform-map-selector',\n    templateUrl: '../map-selector.component.html',\n    styleUrls: ['../map-selector.component.scss']\n})\n@Mixin([HasLoadableContent])\nexport class PlatformMapSelectorComponent extends MapSelectorComponent implements OnChanges, AfterViewInit {\n\n    @Input()\n    public cluster: boolean;\n\n    private markerFeatureGroup: L.FeatureGroup;\n\n    constructor(\n        protected apiInterface: DatasetApiInterface,\n        protected mapCache: MapCache,\n        protected cd: ChangeDetectorRef,\n        protected differs: KeyValueDiffers\n    ) {\n        super(mapCache, differs, cd);\n    }\n\n    protected drawGeometries() {\n        this.noResultsFound = false;\n        this.isContentLoading(true);\n        if (this.markerFeatureGroup) { this.map.removeLayer(this.markerFeatureGroup); }\n        this.apiInterface.getPlatforms(this.serviceUrl, this.filter)\n            .subscribe((res) => {\n                if (this.cluster) {\n                    this.markerFeatureGroup = L.markerClusterGroup({ animate: true });\n                } else {\n                    this.markerFeatureGroup = L.featureGroup();\n                }\n                if (res instanceof Array && res.length > 0) {\n                    res.forEach((entry) => {\n                        const marker = L.marker([entry.geometry.coordinates[1], entry.geometry.coordinates[0]]);\n                        marker.on('click', () => {\n                            this.onSelected.emit(entry);\n                        });\n                        this.markerFeatureGroup.addLayer(marker);\n                    });\n                    this.markerFeatureGroup.addTo(this.map);\n                    this.zoomToMarkerBounds(this.markerFeatureGroup.getBounds());\n                } else {\n                    this.noResultsFound = true;\n                }\n                this.map.invalidateSize();\n                this.isContentLoading(false);\n            });\n    }\n}\n\n    \n\n    \n        \n  \n  \n    No results found\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        No results found  '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlatformMapSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlatformParameter.html":{"url":"interfaces/PlatformParameter.html","title":"interface - PlatformParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlatformParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        platformType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        platformType\n                                    \n                                \n                                \n                                    \n                                        platformType:     PlatformTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlatformTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Plot.html":{"url":"interfaces/Plot.html","title":"interface - Plot","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Plot\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/flot/src/lib/model/plot.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getData\n                                \n                                \n                                    setSelection\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/model/plot.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     DataSeries[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelection(range: any, show: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/model/plot.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        range\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        show\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { DataSeries } from './dataSeries';\n\nexport interface Plot extends jquery.flot.plot {\n    setSelection(range: any, show: boolean): void;\n    getData(): DataSeries[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlotOptions.html":{"url":"interfaces/PlotOptions.html","title":"interface - PlotOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlotOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/flot/src/lib/model/plotOptions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        annotation\n                                \n                                \n                                            Optional\n                                        crosshair\n                                \n                                \n                                            Optional\n                                        generalizeAllways\n                                \n                                \n                                            Optional\n                                        pan\n                                \n                                \n                                            Optional\n                                        selection\n                                \n                                \n                                            Optional\n                                        showReferenceValues\n                                \n                                \n                                            Optional\n                                        touch\n                                \n                                \n                                            Optional\n                                        xaxis\n                                \n                                \n                                            Optional\n                                        yaxes\n                                \n                                \n                                            Optional\n                                        yaxis\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        annotation\n                                    \n                                \n                                \n                                    \n                                        annotation:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crosshair\n                                    \n                                \n                                \n                                    \n                                        crosshair:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        generalizeAllways\n                                    \n                                \n                                \n                                    \n                                        generalizeAllways:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pan\n                                    \n                                \n                                \n                                    \n                                        pan:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selection\n                                    \n                                \n                                \n                                    \n                                        selection:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showReferenceValues\n                                    \n                                \n                                \n                                    \n                                        showReferenceValues:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touch\n                                    \n                                \n                                \n                                    \n                                        touch:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xaxis\n                                    \n                                \n                                \n                                    \n                                        xaxis:     AxesOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AxesOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yaxes\n                                    \n                                \n                                \n                                    \n                                        yaxes:     AxesOptions[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AxesOptions[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yaxis\n                                    \n                                \n                                \n                                    \n                                        yaxis:     AxesOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AxesOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AxesOptions } from './axesOptions';\n\nexport interface PlotOptions extends jquery.flot.plotOptions {\n    showReferenceValues?: boolean;\n    generalizeAllways?: boolean;\n    yaxes?: AxesOptions[];\n    xaxis?: AxesOptions;\n    yaxis?: AxesOptions;\n    // selectedTimespan?: Timespan;\n    selection?: {\n        mode?: string;\n        color?: string;\n        shape?: string;\n        minSize?: 30;\n        range?: {\n            from: number;\n            to: number;\n        }\n    };\n    annotation?: string;\n    touch?: {\n        pan?: string;\n        scale?: string;\n        delayTouchEnded?: number;\n    };\n    crosshair?: {\n        mode?: string\n    };\n    pan?: {\n        frameRate: number,\n        interactive: boolean\n    };\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PredefinedTimespanSelectorComponent.html":{"url":"components/PredefinedTimespanSelectorComponent.html","title":"component - PredefinedTimespanSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PredefinedTimespanSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-predefined-timespan-selector\n            \n\n            \n                styleUrls\n                predefined-timespan-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./predefined-timespan-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                parsedTimespanPresets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isSafeMomentExpression\n                            \n                            \n                                    Public\n                                isSafeTimespanPreset\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                parseMomentExpression\n                            \n                            \n                                    Public\n                                timespanChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                timespan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTimespanChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(settingSrvc: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settingSrvc\n                                                  \n                                                        \n                                                                    SettingsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        timespan\n                    \n                    \n                            \n                            Type:    Timespan\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTimespanChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isSafeMomentExpression\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isSafeMomentExpression(expression: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expression\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isSafeTimespanPreset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isSafeTimespanPreset(preset: TimespanPreset)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        preset\n                                                        \n                                                                    TimespanPreset\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parseMomentExpression\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseMomentExpression(expression: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expression\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Date\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timespanChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        timespanChanged(preset: TimespanPreset)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        preset\n                                                        \n                                                                    TimespanPreset\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parsedTimespanPresets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parsedTimespanPresets:     ParsedTimespanPreset[]\n\n                    \n                \n                    \n                        \n                            Type :     ParsedTimespanPreset[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ParsedTimespanPreset, Settings, SettingsService, Timespan, TimespanPreset } from '@helgoland/core';\n\n@Component({\n  selector: 'n52-predefined-timespan-selector',\n  templateUrl: './predefined-timespan-selector.component.html',\n  styleUrls: ['./predefined-timespan-selector.component.scss']\n})\n\nexport class PredefinedTimespanSelectorComponent implements OnInit {\n\n  @Input()\n  public timespan: Timespan;\n\n  @Output()\n  public onTimespanChange: EventEmitter = new EventEmitter();\n\n  public parsedTimespanPresets: ParsedTimespanPreset[];\n\n  constructor(\n    protected settingSrvc: SettingsService\n  ) { }\n\n  public ngOnInit() {\n    const timespanPresets = this.settingSrvc.getSettings().timespanPresets;\n    if (timespanPresets) {\n      this.parsedTimespanPresets = timespanPresets\n        .filter((e) => this.isSafeTimespanPreset(e))\n        .map((e) => ({\n          name: e.name,\n          label: e.label,\n          timespan: {\n            from: this.parseMomentExpression(e.timespan.from).getTime(),\n            to: this.parseMomentExpression(e.timespan.to).getTime()\n          },\n          seperatorAfterThisItem: e.seperatorAfterThisItem\n        }));\n    }\n  }\n\n  public isSafeMomentExpression(expression: string): boolean {\n    // tslint:disable:max-line-length\n    // regex checks whether code to be eval'ed adhers to syntax given in https://momentjs.com/docs/#/manipulating/\n    // explanation:               Start with \"moment()\"   Possible functions: add(number, string) and subtract(number, string)                            Further possible functions: startOf(string) and endOf(string)                           Further possible functions: year(number), ..., milliseconds(number).                         functions can be chained infinitely, or not at all\n    // further explanation:       This is a MUST.         The strings have to be out of the options described in the docs (shortcuts permitted)           Again, the strings have to be out of a strict set.                                      These set the corresponding part of the Moment object to the number given.                   |  (i.e. \"moment()\" is the minimal case matched)\n    // even further explanation:                          The number doesn't HAVE to be reasonable (e.g. month=20 is ok), but that's no security issue.   The quotes can incorrectly start with ' and then end with \" (or vice versa), but that's no security problem either.                                                                  v v optional semicolon at the end\n    const safeMomentExpression = new RegExp(/^moment\\(\\)(\\.(((add|subtract)\\(\\d+, ?['\"](years|y|quarters|Q|months|M|weeks|w|days|d|hours|h|minutes|m|seconds|s|milliseconds|ms)['\"]\\))|((startOf|endOf)\\(['\"](year|month|quarter|week|isoWeek|day|date|hour|minute|second)['\"]\\))|((year|month|date|hours|minutes|seconds|milliseconds)\\(\\d+\\))))*;?$/);\n    // brackets level in case you get lost:          * *1  234            4 *          4                                                                                      4     *3 34             4 *    4                                                           4     *3 34                                                  4 *    *321\n    // * = this bracket is an escaped bracket and therefore not counted\n\n    // test expression against regex above\n    return safeMomentExpression.test(expression);\n  }\n\n  public isSafeTimespanPreset(preset: TimespanPreset): boolean {\n    // test both inputs against the regex\n    const isSafe = this.isSafeMomentExpression(preset.timespan.from) && this.isSafeMomentExpression(preset.timespan.to);\n\n    if (isSafe) {\n      return true;\n    } else {\n      console.log('Timespan preset \"' + preset.name + '\" has invalid moment() expression!');\n      return false;\n    }\n  }\n\n  public parseMomentExpression(expression: string): Date {\n    // just to be sure not to eval() something nasty\n    if (this.isSafeMomentExpression(expression)) {\n      // if satisfied, eval the inputs -> the ._d property contains the corresponding Date objects from which the Timespan can be constructed\n      // tslint:disable-next-line:no-eval\n      return eval(expression)._d;\n    } else {\n      return null;\n    }\n  }\n\n  public timespanChanged(preset: TimespanPreset) {\n    // construct new Timespan\n    this.timespan = new Timespan(parseInt(preset.timespan.from, 10), parseInt(preset.timespan.to, 10));\n    // publicise new timespan\n    this.onTimespanChange.emit(this.timespan);\n  }\n}\n\n    \n\n    \n        \n  \n    {{item.label}}\n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{item.label}}    '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PredefinedTimespanSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PresenterHighlight.html":{"url":"interfaces/PresenterHighlight.html","title":"interface - PresenterHighlight","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PresenterHighlight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/presenting/presenter-highlight.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dataIndex\n                                \n                                \n                                        internalId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dataIndex\n                                    \n                                \n                                \n                                    \n                                        dataIndex:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        internalId\n                                    \n                                \n                                \n                                    \n                                        internalId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PresenterHighlight {\n    internalId: string;\n    dataIndex: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PresenterMessage.html":{"url":"interfaces/PresenterMessage.html","title":"interface - PresenterMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PresenterMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/presenting/presenter-message.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     PresenterMessageType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PresenterMessageType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PresenterMessageType } from './presenter-message-type';\n\nexport interface PresenterMessage {\n    type: PresenterMessageType;\n    message: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Procedure.html":{"url":"interfaces/Procedure.html","title":"interface - Procedure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Procedure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/procedure.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\n\nexport interface Procedure extends Parameter {\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileDataEntry.html":{"url":"interfaces/ProfileDataEntry.html","title":"interface - ProfileDataEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProfileDataEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/data.ts\n        \n\n\n            \n                Extends\n            \n            \n                    IDataEntry\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        timestamp\n                                \n                                \n                                        value\n                                \n                                \n                                        verticalUnit\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verticalUnit\n                                    \n                                \n                                \n                                    \n                                        verticalUnit:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IDataEntry { }\n\nexport interface Data {\n    values: T[];\n    referenceValues: ReferenceValues;\n}\n\nexport class ReferenceValues {\n    [key: string]: T[];\n}\n\nexport interface TimeValueEntry extends IDataEntry {\n    timestamp: number;\n    value: number;\n}\n\nexport interface LocatedTimeValueEntry extends TimeValueEntry {\n    geometry: GeoJSON.Point;\n}\n\nexport interface ProfileDataEntry extends IDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n}\n\nexport interface LocatedProfileDataEntry extends ProfileDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n    geometry: GeoJSON.GeoJsonObject;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileEntryComponent.html":{"url":"components/ProfileEntryComponent.html","title":"component - ProfileEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ListEntryComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-profile-entry\n            \n\n            \n                styleUrls\n                profile-entry.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile-entry.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dataset\n                            \n                            \n                                    Public\n                                editableOptions\n                            \n                            \n                                    Public\n                                tempColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editDatasetOptions\n                            \n                            \n                                    Public\n                                isMobile\n                            \n                            \n                                    Protected\n                                loadDataset\n                            \n                            \n                                    Public\n                                openInCombiView\n                            \n                            \n                                    Public\n                                removeDatasetOptions\n                            \n                            \n                                    Public\n                                showGeometry\n                            \n                            \n                                    Public\n                                toggleVisibility\n                            \n                            \n                                    Protected\n                                    \n                                loadDataset\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                removeDataset\n                            \n                            \n                                    Public\n                                toggleSelection\n                            \n                            \n                                    Public\n                                toggleUomSelection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                datasetOptions\n                            \n                            \n                                datasetId\n                            \n                            \n                                highlight\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteDatasetOptions\n                            \n                            \n                                onEditOptions\n                            \n                            \n                                onOpenInCombiView\n                            \n                            \n                                onShowGeometry\n                            \n                            \n                                onUpdateOptions\n                            \n                            \n                                onDeleteDataset\n                            \n                            \n                                onSelectDataset\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: DatasetApiInterface, internalIdHandler: InternalIdHandler)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        internalIdHandler\n                                                  \n                                                        \n                                                                    InternalIdHandler\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        datasetOptions\n                    \n                    \n                            \n                            Type:    TimedDatasetOptions[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        datasetId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:7\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        highlight\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onDeleteDatasetOptions\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onEditOptions\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onOpenInCombiView\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onShowGeometry\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onUpdateOptions\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onDeleteDataset\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onSelectDataset\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editDatasetOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        editDatasetOptions(options: TimedDatasetOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    TimedDatasetOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isMobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isMobile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            loadDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadDataset(id: string, url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openInCombiView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        openInCombiView(option: TimedDatasetOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        option\n                                                        \n                                                                    TimedDatasetOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeDatasetOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeDatasetOptions(options: TimedDatasetOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    TimedDatasetOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showGeometry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showGeometry(option: TimedDatasetOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        option\n                                                        \n                                                                    TimedDatasetOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleVisibility\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleVisibility(options: TimedDatasetOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    TimedDatasetOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            loadDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadDataset(id: string, url: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeDataset()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleSelection()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleUomSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleUomSelection(id: , selected: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        selected\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataset:     Dataset\n\n                    \n                \n                    \n                        \n                            Type :     Dataset\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editableOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editableOptions:     TimedDatasetOptions\n\n                    \n                \n                    \n                        \n                            Type :     TimedDatasetOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempColor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n    DatasetApiInterface,\n    Dataset,\n    InternalIdHandler,\n    LocatedProfileDataEntry,\n    PlatformTypes,\n    TimedDatasetOptions,\n    Timespan,\n} from '@helgoland/core';\n\nimport { ListEntryComponent } from '../list-entry.component';\n\n@Component({\n    selector: 'n52-profile-entry',\n    templateUrl: './profile-entry.component.html',\n    styleUrls: ['./profile-entry.component.scss']\n})\nexport class ProfileEntryComponent extends ListEntryComponent {\n\n    @Input()\n    public datasetOptions: TimedDatasetOptions[];\n\n    @Output()\n    public onUpdateOptions: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onDeleteDatasetOptions: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onEditOptions: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onOpenInCombiView: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onShowGeometry: EventEmitter = new EventEmitter();\n\n    public dataset: Dataset;\n\n    public editableOptions: TimedDatasetOptions;\n    public tempColor: string;\n\n    constructor(\n        protected api: DatasetApiInterface,\n        protected internalIdHandler: InternalIdHandler\n    ) {\n        super(internalIdHandler);\n    }\n\n    public removeDatasetOptions(options: TimedDatasetOptions) {\n        this.onDeleteDatasetOptions.emit(options);\n    }\n\n    public editDatasetOptions(options: TimedDatasetOptions) {\n        this.onEditOptions.emit(options);\n    }\n\n    public toggleVisibility(options: TimedDatasetOptions) {\n        options.visible = !options.visible;\n        this.onUpdateOptions.emit(this.datasetOptions);\n    }\n\n    public isMobile() {\n        if (this.dataset) {\n            return this.dataset.platformType === PlatformTypes.mobileInsitu;\n        }\n        return false;\n    }\n\n    public openInCombiView(option: TimedDatasetOptions) {\n        this.onOpenInCombiView.emit(option);\n    }\n\n    public showGeometry(option: TimedDatasetOptions) {\n        const internalId = this.internalIdHandler.resolveInternalId(this.datasetId);\n        if (this.isMobile()) {\n            const timespan = new Timespan(option.timestamp);\n            this.api.getData(internalId.id, internalId.url, timespan).subscribe((result) => {\n                if (result.values.length === 1) {\n                    this.onShowGeometry.emit(result.values[0].geometry);\n                }\n            });\n        } else {\n            this.api.getPlatform(this.dataset.parameters.platform.id, internalId.url).subscribe((platform) => {\n                this.onShowGeometry.emit(platform.geometry);\n            });\n        }\n    }\n\n    protected loadDataset(id: string, url: string) {\n        this.api.getDataset(id, url).subscribe((dataset) => {\n            this.dataset = dataset;\n        });\n    }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      [\n        ]\n    \n    \n      \n    \n    \n      \n    \n  \n  \n    \n      {{item.timestamp | date: 'short'}}\n      \n      \n      \n      \n    \n    \n      \n      {{'profiles.legend.go-to-combi-view' | translate}}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                [        ]                                              {{item.timestamp | date: \\'short\\'}}                                            {{\\'profiles.legend.go-to-combi-view\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileTrajectoryMapSelectorComponent.html":{"url":"components/ProfileTrajectoryMapSelectorComponent.html","title":"component - ProfileTrajectoryMapSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileTrajectoryMapSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts\n\n\n\n    \n        Extends\n    \n    \n            MapSelectorComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-profile-trajectory-map-selector\n            \n\n            \n                styleUrls\n                .map-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ../map-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                            \n                                    Private\n                                dataset\n                            \n                            \n                                    Private\n                                defaultStyle\n                            \n                            \n                                    Private\n                                highlightStyle\n                            \n                            \n                                    Private\n                                layer\n                            \n                            \n                                    Public\n                                isContentLoading\n                            \n                            \n                                    Public\n                                noResultsFound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearMap\n                            \n                            \n                                    Private\n                                createGeoJson\n                            \n                            \n                                    Protected\n                                drawGeometries\n                            \n                            \n                                    Private\n                                initLayer\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                    \n                                drawGeometries\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                zoomToMarkerBounds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedTimespan\n                            \n                            \n                                avoidZoomToSelection\n                            \n                            \n                                filter\n                            \n                            \n                                serviceUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTimeListDetermined\n                            \n                            \n                                onContentLoading\n                            \n                            \n                                onSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiInterface: DatasetApiInterface, mapCache: MapCache, differs: KeyValueDiffers, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiInterface\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapCache\n                                                  \n                                                        \n                                                                    MapCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        differs\n                                                  \n                                                        \n                                                                    KeyValueDiffers\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedTimespan\n                    \n                    \n                            \n                            Type:    Timespan\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        avoidZoomToSelection\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                    \n                            \n                            Type:    ParameterFilter\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serviceUrl\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTimeListDetermined\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onContentLoading\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onSelected\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            clearMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearMap()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:116\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createGeoJson\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createGeoJson(profileDataEntry: LocatedProfileDataEntry, dataset: IDataset)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileDataEntry\n                                                        \n                                                                    LocatedProfileDataEntry\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        dataset\n                                                        \n                                                                    IDataset\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     L.GeoJSON\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            drawGeometries\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        drawGeometries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initLayer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initLayer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            drawGeometries\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        drawGeometries()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:82\n                            \n                        \n\n\n                \n                    \n                            Draws the geometries\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            zoomToMarkerBounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        zoomToMarkerBounds(bounds: L.LatLngBoundsExpression)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:91\n                            \n                        \n\n\n                \n                    \n                            Zooms to the given bounds\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        bounds\n                                                        \n                                                                    L.LatLngBoundsExpression\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                where to zoom\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     LocatedProfileDataEntry[]\n\n                    \n                \n                    \n                        \n                            Type :     LocatedProfileDataEntry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataset:     IDataset\n\n                    \n                \n                    \n                        \n                            Type :     IDataset\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defaultStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultStyle:     L.PathOptions\n\n                    \n                \n                    \n                        \n                            Type :     L.PathOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        color: 'red',\n        weight: 5,\n        opacity: 0.65\n    }\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            highlightStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        highlightStyle:     L.PathOptions\n\n                    \n                \n                    \n                        \n                            Type :     L.PathOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        color: 'blue',\n        weight: 7,\n        opacity: 1\n    }\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            layer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layer:     L.FeatureGroup\n\n                    \n                \n                    \n                        \n                            Type :     L.FeatureGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isContentLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isContentLoading:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noResultsFound\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noResultsFound:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import 'leaflet.markercluster';\n\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    KeyValueDiffers,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    DatasetApiInterface,\n    HasLoadableContent,\n    IDataset,\n    LocatedProfileDataEntry,\n    Mixin,\n    Timespan,\n} from '@helgoland/core';\nimport * as L from 'leaflet';\n\nimport { MapCache } from '../../base/map-cache.service';\nimport { MapSelectorComponent } from '../map-selector.component';\nimport { TrajectoryResult } from '../model/trajectory-result';\n\n@Component({\n    selector: 'n52-profile-trajectory-map-selector',\n    templateUrl: '../map-selector.component.html',\n    styleUrls: ['../map-selector.component.scss']\n})\n@Mixin([HasLoadableContent])\nexport class ProfileTrajectoryMapSelectorComponent\n    extends MapSelectorComponent\n    implements OnChanges, AfterViewInit {\n\n    @Input()\n    public selectedTimespan: Timespan;\n\n    @Output()\n    public onTimeListDetermined: EventEmitter = new EventEmitter();\n\n    private layer: L.FeatureGroup;\n    private data: LocatedProfileDataEntry[];\n    private dataset: IDataset;\n\n    private defaultStyle: L.PathOptions = {\n        color: 'red',\n        weight: 5,\n        opacity: 0.65\n    };\n\n    private highlightStyle: L.PathOptions = {\n        color: 'blue',\n        weight: 7,\n        opacity: 1\n    };\n\n    constructor(\n        protected apiInterface: DatasetApiInterface,\n        protected mapCache: MapCache,\n        protected differs: KeyValueDiffers,\n        protected cd: ChangeDetectorRef\n    ) {\n        super(mapCache, differs, cd);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        super.ngOnChanges(changes);\n        if (changes.selectedTimespan && this.selectedTimespan) {\n            this.clearMap();\n            this.initLayer();\n            this.data.forEach((entry) => {\n                if (this.selectedTimespan.from  {\n            datasets.forEach((dataset) => {\n                this.dataset = dataset;\n                const timespan = new Timespan(dataset.firstValue.timestamp, dataset.lastValue.timestamp);\n                this.apiInterface.getData(dataset.id, this.serviceUrl, timespan)\n                    .subscribe((data) => {\n                        if (data.values instanceof Array) {\n                            this.initLayer();\n                            this.data = [];\n                            const timelist: number[] = [];\n                            data.values.forEach((entry) => {\n                                this.data.push(entry);\n                                const geojson = this.createGeoJson(entry, dataset);\n                                timelist.push(entry.timestamp);\n                                this.layer.addLayer(geojson);\n                            });\n                            this.onTimeListDetermined.emit(timelist);\n                            this.layer.addTo(this.map);\n                            this.zoomToMarkerBounds(this.layer.getBounds());\n                        }\n                        this.isContentLoading(false);\n                    });\n            });\n        });\n    }\n\n    private initLayer() {\n        this.layer = L.markerClusterGroup({ animate: false });\n    }\n\n    private clearMap() {\n        if (this.layer) {\n            this.map.removeLayer(this.layer);\n        }\n    }\n\n    private createGeoJson(profileDataEntry: LocatedProfileDataEntry, dataset: IDataset): L.GeoJSON {\n        const geojson = new L.GeoJSON(profileDataEntry.geometry);\n        geojson.setStyle(this.defaultStyle);\n        geojson.on('click', () => {\n            this.onSelected.emit({\n                dataset,\n                data: profileDataEntry\n            });\n        });\n        geojson.on('mouseover', () => {\n            geojson.setStyle(this.highlightStyle);\n            geojson.bringToFront();\n        });\n        geojson.on('mouseout', () => {\n            geojson.setStyle(this.defaultStyle);\n        });\n        return geojson;\n    }\n}\n\n    \n\n    \n        \n  \n  \n    No results found\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        No results found  '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileTrajectoryMapSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Provider.html":{"url":"interfaces/Provider.html","title":"interface - Provider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Provider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ParameterFilter } from './../internal/http-requests';\n\nexport interface Provider {\n    id: string;\n    url: string;\n}\n\nexport interface FilteredProvider extends Provider {\n    filter: ParameterFilter;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawData.html":{"url":"interfaces/RawData.html","title":"interface - RawData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RawData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/plotly/src/lib/plotly-profile-graph/plotly-profile-graph.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        datas\n                                \n                                \n                                        dataset\n                                \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datas\n                                    \n                                \n                                \n                                    \n                                        datas:     ProfileDataEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProfileDataEntry[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataset\n                                    \n                                \n                                \n                                    \n                                        dataset:     IDataset\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IDataset\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     TimedDatasetOptions[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TimedDatasetOptions[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, Component, ElementRef, EventEmitter, IterableDiffers, Output, ViewChild } from '@angular/core';\nimport {\n    DatasetApiInterface,\n    DatasetPresenterComponent,\n    PresenterHighlight,\n    IDataset,\n    InternalIdHandler,\n    ProfileDataEntry,\n    Time,\n    TimedDatasetOptions,\n    Timespan,\n} from '@helgoland/core';\nimport * as d3 from 'd3';\n\nimport * as Plotly from 'plotly.js';\n\ninterface RawData {\n    dataset: IDataset;\n    datas: ProfileDataEntry[];\n    options: TimedDatasetOptions[];\n}\n\ninterface ExtendedScatterData extends Partial {\n    timestamp: number;\n    id: string;\n}\n\nconst LINE_WIDTH_SELECTED = 5;\nconst LINE_WIDTH = 2;\nconst MARKER_SIZE_SELECTED = 10;\nconst MARKER_SIZE = 6;\n\n@Component({\n    selector: 'n52-plotly-profile-graph',\n    templateUrl: './plotly-profile-graph.component.html',\n    styleUrls: ['./plotly-profile-graph.component.scss']\n})\nexport class PlotlyProfileGraphComponent\n    extends DatasetPresenterComponent\n    implements AfterViewInit {\n\n    @Output()\n    public onHighlight: EventEmitter = new EventEmitter();\n\n    @ViewChild('plotly')\n    public plotlyElem: ElementRef;\n\n    private plotlyArea: any;\n    private preparedData: ExtendedScatterData[] = [];\n    private rawData: Map = new Map();\n    private counterXAxis = 0;\n    private counterYAxis = 0;\n\n    private layout: Layout = {\n        autosize: true,\n        showlegend: false,\n        dragmode: 'pan',\n        margin: {\n            l: 40,\n            r: 10,\n            b: 40,\n            t: 10\n            // pad: 100\n        },\n        hovermode: 'closest'\n    };\n\n    private settings: Partial = {\n        displayModeBar: false,\n        modeBarButtonsToRemove: [\n            'sendDataToCloud',\n            'hoverCompareCartesian'\n        ],\n        displaylogo: false,\n        showTips: false,\n        scrollZoom: true\n    };\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc);\n    }\n\n    public ngAfterViewInit(): void {\n        this.plotlyArea = this.plotlyElem.nativeElement;\n        this.drawChart();\n    }\n\n    public reloadData(): void {\n        console.log('reload data at ' + new Date());\n    }\n\n    // tslint:disable-next-line:no-empty\n    protected timeIntervalChanges(): void { }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getDataset(id, url).subscribe((dataset) => {\n            const options = this.datasetOptions.get(dataset.internalId);\n            options.forEach((option) => {\n                if (option.timestamp) {\n                    const timespan = new Timespan(option.timestamp);\n                    this.api.getData(id, url, timespan).subscribe((data) => {\n                        if (data.values.length === 1) {\n                            if (this.rawData.has(dataset.internalId)) {\n                                this.rawData.get(dataset.internalId).datas.push(data.values[0]);\n                                this.rawData.get(dataset.internalId).options.push(option);\n                            } else {\n                                this.rawData.set(dataset.internalId, {\n                                    dataset,\n                                    datas: [data.values[0]],\n                                    options: [option]\n                                });\n                            }\n                        }\n                        this.drawChart();\n                    });\n                }\n            });\n        });\n    }\n\n    protected removeDataset(internalId: string): void {\n        this.rawData.delete(internalId);\n        this.drawChart();\n    }\n\n    protected setSelectedId(internalId: string): void {\n        this.drawChart();\n    }\n\n    protected removeSelectedId(internalId: string): void {\n        this.drawChart();\n    }\n\n    // tslint:disable-next-line:no-empty\n    protected graphOptionsChanged(options: any): void { }\n\n    protected datasetOptionsChanged(internalId: string, options: TimedDatasetOptions[], firstChange: boolean): void {\n        if (!firstChange) {\n            // remove unused options\n            const removedIdx = this.rawData.get(internalId).options.findIndex((option) => {\n                const idx = options.findIndex((e) => e.timestamp === option.timestamp);\n                if (idx === -1) {\n                    return true;\n                }\n            });\n            if (removedIdx > -1) {\n                this.rawData.get(internalId).options.splice(removedIdx, 1);\n                this.rawData.get(internalId).datas.splice(removedIdx, 1);\n            }\n            this.drawChart();\n        }\n    }\n\n    protected onResize(): void {\n        this.redrawChart();\n    }\n\n    private processData() {\n        this.clearLayout();\n        this.clearData();\n        this.rawData.forEach((dataEntry) => {\n            dataEntry.options.forEach((option, key) => {\n                if (option.visible) {\n                    const x = new Array();\n                    const y = new Array();\n                    const selected = this.selectedDatasetIds.indexOf(dataEntry.dataset.internalId) >= 0;\n                    dataEntry.datas[key].value.forEach((entry) => {\n                        x.push(entry.value);\n                        y.push(entry.vertical);\n                    });\n                    const prepared: ExtendedScatterData = {\n                        x,\n                        y,\n                        type: 'scatter',\n                        name: '',\n                        timestamp: option.timestamp,\n                        id: dataEntry.dataset.internalId,\n                        yaxis: this.createYAxis(dataEntry.dataset, dataEntry.datas[key]),\n                        xaxis: this.createXAxis(dataEntry.dataset, dataEntry.datas[key]),\n                        // hovertext: dataEntry.label,\n                        line: {\n                            color: option.color,\n                            width: selected ? LINE_WIDTH_SELECTED : LINE_WIDTH\n                        },\n                        marker: {\n                            size: selected ? MARKER_SIZE_SELECTED : MARKER_SIZE\n                        }\n                    };\n                    this.preparedData.push(prepared);\n                }\n            });\n        });\n\n        this.updateAxis();\n    }\n\n    private createXAxis(dataset: IDataset, data: ProfileDataEntry): string {\n        let axis;\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis') && this.layout[key].title === dataset.uom) {\n                axis = this.layout[key];\n            }\n        }\n        const range = d3.extent(data.value, (d) => d.value);\n        if (!axis) {\n            this.counterXAxis = this.counterXAxis + 1;\n            axis = this.layout['xaxis' + this.counterXAxis] = {\n                id: 'x' + (this.counterXAxis > 1 ? this.counterXAxis : ''),\n                anchor: 'free',\n                title: dataset.uom,\n                zeroline: true,\n                hoverformat: '.2f',\n                showline: false,\n                range: [range[0], range[1]],\n                overlaying: '',\n                // rangemode: 'tozero',\n                fixedrange: false\n            };\n            if (this.counterXAxis !== 1) {\n                axis.overlaying = 'x';\n            }\n        } else {\n            axis.range = d3.extent([range[0], range[1], axis.range[0], axis.range[1]]);\n        }\n        return axis.id;\n    }\n\n    private createYAxis(dataset: IDataset, data: ProfileDataEntry): string {\n        let axis;\n        // find axis\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) &&\n                key.startsWith('yaxis') &&\n                this.layout[key].title === data.verticalUnit) {\n                axis = this.layout[key];\n            }\n        }\n        if (!axis) {\n            // add axis\n            this.counterYAxis = this.counterYAxis + 1;\n            axis = this.layout[('yaxis' + this.counterYAxis)] = {\n                id: 'y' + (this.counterYAxis > 1 ? this.counterYAxis : ''),\n                // zeroline: true,\n                anchor: 'free',\n                hoverformat: '.2r',\n                side: 'left',\n                autorange: 'reversed',\n                showline: false,\n                overlaying: '',\n                title: data.verticalUnit,\n                fixedrange: false\n            };\n            if (this.counterYAxis !== 1) {\n                axis.overlaying = 'y';\n            }\n        }\n        return axis.id;\n    }\n\n    private updateAxis() {\n        if (this.counterYAxis > 1) {\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                    this.layout[key].domain = [(0.1 * this.counterYAxis) - 0.1, 1];\n                }\n            }\n            let yaxisCount = 0;\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('yaxis')) {\n                    this.layout[key].position = 0.1 * yaxisCount;\n                    yaxisCount += 1;\n                }\n            }\n        }\n        if (this.counterXAxis > 1) {\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('yaxis')) {\n                    this.layout[key].domain = [(0.06 * this.counterXAxis) - 0.06, 1];\n                }\n            }\n            let xaxisCount = 0;\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                    this.layout[key].position = 0.06 * xaxisCount;\n                    xaxisCount += 1;\n                }\n            }\n        }\n        // add offset to xaxis ranges\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                const range = this.layout[key].range;\n                const rangeOffset = (range[1] - range[0]) * 0.05;\n                this.layout[key].range = [range[0] - rangeOffset, range[1] + rangeOffset];\n            }\n        }\n    }\n\n    private drawChart() {\n        if (this.plotlyArea && this.rawData.size > 0) {\n            this.processData();\n            Plotly.newPlot(this.plotlyArea, this.preparedData, this.layout, this.settings);\n            this.plotlyArea.on('plotly_hover', (entry: any) => {\n                if (entry.points.length === 1) {\n                    this.onHighlight.emit({\n                        internalId: entry.points[0].data.id,\n                        dataIndex: entry.points[0].pointNumber\n                    });\n                }\n            });\n        }\n    }\n\n    private clearLayout() {\n        // todo remove yaxis\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && (key.startsWith('yaxis') || key.startsWith('xaxis'))) {\n                delete this.layout[key];\n            }\n        }\n        // reset counter\n        this.counterYAxis = 0;\n        this.counterXAxis = 0;\n    }\n\n    private clearData() {\n        this.preparedData = [];\n    }\n\n    private redrawChart() {\n        if (this.plotlyArea) {\n            Plotly.relayout(this.plotlyArea, {});\n        }\n    }\n}\n\ninterface ScatterData extends Partial {\n    id: string;\n    timestamp: number;\n}\n\ninterface Layout extends Partial {\n    [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReferenceValue.html":{"url":"classes/ReferenceValue.html","title":"class - ReferenceValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReferenceValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                color\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                lastValue\n                            \n                            \n                                    Public\n                                referenceValueId\n                            \n                            \n                                    Public\n                                    Optional\n                                visible\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            color\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        color:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastValue:     FirstLastValue\n\n                    \n                \n                    \n                        \n                            Type :     FirstLastValue\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            referenceValueId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        referenceValueId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReferenceValueColorCache.html":{"url":"injectables/ReferenceValueColorCache.html","title":"injectable - ReferenceValueColorCache","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ReferenceValueColorCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/depiction/src/lib/datasetlist/timeseries-entry/timeseries-entry.component.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Component,\n    EventEmitter,\n    Injectable,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    DatasetApiInterface,\n    ColorService,\n    Dataset,\n    DatasetOptions,\n    FirstLastValue,\n    IDataset,\n    IdCache,\n    InternalIdHandler,\n    ReferenceValue,\n    Time,\n    TimeInterval,\n    Timeseries,\n} from '@helgoland/core';\n\nimport { ListEntryComponent } from '../list-entry.component';\n\n@Injectable()\nexport class ReferenceValueColorCache extends IdCache { }\n\n@Component({\n    selector: 'n52-timeseries-entry',\n    templateUrl: './timeseries-entry.component.html',\n    styleUrls: ['./timeseries-entry.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TimeseriesEntryComponent extends ListEntryComponent implements OnChanges {\n\n    @Input()\n    public datasetOptions: DatasetOptions;\n\n    @Input()\n    public timeInterval: TimeInterval;\n\n    @Input()\n    public changedSelectedDatasets: string;\n\n    @Output()\n    public onUpdateOptions: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onEditOptions: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onSelectDate: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onShowGeometry: EventEmitter = new EventEmitter();\n\n    public platformLabel: string;\n    public phenomenonLabel: string;\n    public procedureLabel: string;\n    public categoryLabel: string;\n    public uom: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public informationVisible = false;\n    public tempColor: string;\n    public hasData = true;\n    public referenceValues: ReferenceValue[];\n\n    public dataset: IDataset;\n\n    constructor(\n        protected api: DatasetApiInterface,\n        protected timeSrvc: Time,\n        protected internalIdHandler: InternalIdHandler,\n        protected color: ColorService,\n        protected refValCache: ReferenceValueColorCache\n    ) {\n        super(internalIdHandler);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.changedSelectedDatasets) {\n            if (changes.changedSelectedDatasets.firstChange !== true) {\n                changes.changedSelectedDatasets.currentValue.forEach((obj) => {\n                    this.toggleUomSelection(obj.id, obj.change);\n                });\n            }\n        }\n\n        if (changes.timeInterval) {\n            this.checkDataInTimespan();\n        }\n    }\n\n    public toggleInformation() {\n        this.informationVisible = !this.informationVisible;\n    }\n\n    public jumpToFirstTimeStamp() {\n        this.onSelectDate.emit(new Date(this.dataset.firstValue.timestamp));\n    }\n\n    public jumpToLastTimeStamp() {\n        this.onSelectDate.emit(new Date(this.dataset.lastValue.timestamp));\n    }\n\n    public toggleVisibility() {\n        this.datasetOptions.visible = !this.datasetOptions.visible;\n        this.onUpdateOptions.emit(this.datasetOptions);\n    }\n\n    public toggleReferenceValue(refValue: ReferenceValue) {\n        const idx = this.datasetOptions.showReferenceValues.findIndex((entry) => entry.id === refValue.referenceValueId);\n        const refValId = this.createRefValId(refValue.referenceValueId);\n        if (idx > -1) {\n            refValue.visible = false;\n            this.datasetOptions.showReferenceValues.splice(idx, 1);\n        } else {\n            refValue.visible = true;\n            this.datasetOptions.showReferenceValues.push({ id: refValue.referenceValueId, color: refValue.color });\n        }\n        this.refValCache.get(refValId).visible = refValue.visible;\n        this.onUpdateOptions.emit(this.datasetOptions);\n    }\n\n    public editDatasetOptions() {\n        this.onEditOptions.emit(this.datasetOptions);\n    }\n\n    public showGeometry() {\n        if (this.dataset instanceof Timeseries) {\n            this.onShowGeometry.emit(this.dataset.station.geometry);\n        }\n        if (this.dataset instanceof Dataset) {\n            this.api.getPlatform(this.dataset.parameters.platform.id, this.dataset.url).subscribe((platform) => {\n                this.onShowGeometry.emit(platform.geometry);\n            });\n        }\n    }\n\n    protected loadDataset(id: string, url: string) {\n        this.api.getSingleTimeseries(id, url).subscribe((timeseries) => {\n            this.dataset = timeseries;\n            this.setParameters();\n        }, (error) => {\n            this.api.getDataset(id, url).subscribe((dataset) => {\n                this.dataset = dataset;\n                this.setParameters();\n            });\n        });\n    }\n\n    private setParameters() {\n        if (this.dataset instanceof Dataset) {\n            this.platformLabel = this.dataset.parameters.platform.label;\n        } else if (this.dataset instanceof Timeseries) {\n            this.platformLabel = this.dataset.station.properties.label;\n        }\n        this.phenomenonLabel = this.dataset.parameters.phenomenon.label;\n        this.procedureLabel = this.dataset.parameters.procedure.label;\n        this.categoryLabel = this.dataset.parameters.category.label;\n        this.firstValue = this.dataset.firstValue;\n        this.lastValue = this.dataset.lastValue;\n        this.uom = this.dataset.uom;\n        if (this.dataset.referenceValues) {\n            this.dataset.referenceValues.forEach((e) => {\n                const refValId = this.createRefValId(e.referenceValueId);\n                const refValOption = this.datasetOptions.showReferenceValues.find((o) => o.id === e.referenceValueId);\n                if (refValOption) {\n                    this.refValCache.set(refValId, {\n                        color: refValOption.color,\n                        visible: true\n                    });\n                }\n                if (!this.refValCache.has(refValId)) {\n                    this.refValCache.set(refValId, {\n                        color: this.color.getColor(),\n                        visible: false\n                    });\n                }\n                e.color = this.refValCache.get(refValId).color;\n                e.visible = this.refValCache.get(refValId).visible;\n            });\n        }\n        this.checkDataInTimespan();\n    }\n\n    private createRefValId(refId: string) {\n        return this.dataset.url + refId;\n    }\n\n    private checkDataInTimespan() {\n        if (this.timeInterval && this.dataset) {\n            this.hasData = this.timeSrvc.overlaps(\n                this.timeInterval,\n                this.dataset.firstValue.timestamp,\n                this.dataset.lastValue.timestamp\n            );\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReferenceValueOption.html":{"url":"classes/ReferenceValueOption.html","title":"class - ReferenceValueOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReferenceValueOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                color\n                            \n                            \n                                    Public\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            color\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        color:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:102\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:101\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DatasetOptions {\n\n    /**\n     * internal dataset id\n     *\n     * @type {string}\n     * @memberof DatasetOptions\n     */\n    public internalId: string;\n\n    /**\n     * color of the dataset\n     *\n     * @type {string}\n     * @memberof DatasetOptions\n     */\n    public color: string;\n\n    /**\n     * show or hide in the graph\n     *\n     * @type {boolean}\n     * @memberof DatasetOptions\n     */\n    public visible: boolean = true;\n\n    public loading?: boolean;\n\n    /**\n     * separate y axis of datasets with same unit\n     *\n     * @type {boolean}\n     * @memberof DatasetOptions\n     */\n    public separateYAxis?: boolean = false;\n\n    /**\n     * align graph that zero y axis is visible\n     *\n     * @type {boolean}\n     * @memberof DatasetOptions\n     */\n    public zeroBasedYAxis?: boolean = false;\n\n    /**\n     * marker to request dataset data generalized\n     *\n     * @type {boolean}\n     * @memberof DatasetOptions\n     */\n    public generalize?: boolean = false;\n\n    /**\n     * list of visible reference values\n     *\n     * @type {ReferenceValueOption[]}\n     * @memberof DatasetOptions\n     */\n    public showReferenceValues: ReferenceValueOption[] = [];\n\n    /**\n     * radius of graphpoint\n     *\n     * @type {number}\n     * @memberof DatasetOptions\n     */\n    public pointRadius: number = 0;\n\n    /**\n     * width of graphline\n     *\n     * @type {number}\n     * @memberof DatasetOptions\n     */\n    public lineWidth: number = 1;\n\n    /**\n     * min and max range of y axis\n     *\n     * @type {MinMaxRange}\n     * @memberof DatasetOptions\n     */\n    public yAxisRange?: MinMaxRange;\n\n    constructor(\n        internalId: string,\n        color: string\n    ) {\n        this.internalId = internalId;\n        this.color = color;\n    }\n}\n\nexport class ReferenceValueOption {\n    public id: string;\n    public color: string;\n}\n\n/**\n * numbered range with a min and a max value\n *\n * @export\n * @interface MinMaxRange\n */\nexport interface MinMaxRange {\n    min: number;\n    max: number;\n}\n\nexport class TimedDatasetOptions extends DatasetOptions {\n    public timestamp: number;\n\n    constructor(\n        internalId: string,\n        color: string,\n        timestamp: number\n    ) {\n        super(internalId, color);\n        this.timestamp = timestamp;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReferenceValues.html":{"url":"classes/ReferenceValues.html","title":"class - ReferenceValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReferenceValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/data.ts\n        \n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    T[]\n\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/model/dataset-api/data.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export interface IDataEntry { }\n\nexport interface Data {\n    values: T[];\n    referenceValues: ReferenceValues;\n}\n\nexport class ReferenceValues {\n    [key: string]: T[];\n}\n\nexport interface TimeValueEntry extends IDataEntry {\n    timestamp: number;\n    value: number;\n}\n\nexport interface LocatedTimeValueEntry extends TimeValueEntry {\n    geometry: GeoJSON.Point;\n}\n\nexport interface ProfileDataEntry extends IDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n}\n\nexport interface LocatedProfileDataEntry extends ProfileDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n    geometry: GeoJSON.GeoJsonObject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RefreshButtonComponent.html":{"url":"components/RefreshButtonComponent.html","title":"component - RefreshButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RefreshButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-refresh-button\n            \n\n\n\n\n            \n                templateUrl\n                ./refresh-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                interval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                evaluteRefreshing\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                refresh\n                            \n                            \n                                    Private\n                                startRefreshInterval\n                            \n                            \n                                    Private\n                                stopRefreshInterval\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                refreshInterval\n                            \n                            \n                                toggled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                refreshing\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                    SettingsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        refreshInterval\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggled\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        refreshing\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            evaluteRefreshing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        evaluteRefreshing()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refresh\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        refresh()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            startRefreshInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        startRefreshInterval()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopRefreshInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stopRefreshInterval()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            interval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        interval:     NodeJS.Timer\n\n                    \n                \n                    \n                        \n                            Type :     NodeJS.Timer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { Settings, SettingsService } from '@helgoland/core';\n\n@Component({\n  selector: 'n52-refresh-button',\n  templateUrl: './refresh-button.component.html'\n})\nexport class RefreshButtonComponent implements OnChanges, OnInit {\n\n  @Input()\n  public refreshInterval: number;\n\n  @Input()\n  public toggled: boolean;\n\n  @Output()\n  public refreshing: EventEmitter = new EventEmitter();\n\n  private interval: NodeJS.Timer;\n\n  constructor(\n    protected settings: SettingsService\n  ) {\n    if (!this.refreshInterval) {\n      this.refreshInterval = this.settings.getSettings().refreshDataInterval\n        ? this.settings.getSettings().refreshDataInterval : 60;\n    }\n  }\n\n  public ngOnInit(): void {\n    this.evaluteRefreshing();\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.toggled) {\n      this.evaluteRefreshing();\n    }\n  }\n\n  public toggle() {\n    this.toggled = !this.toggled;\n    if (this.toggled) { this.refresh(); }\n    this.evaluteRefreshing();\n  }\n\n  private evaluteRefreshing() {\n    if (this.toggled) {\n      this.startRefreshInterval();\n    } else {\n      this.stopRefreshInterval();\n    }\n  }\n\n  private startRefreshInterval() {\n    this.interval = setInterval(() => this.refresh(), this.refreshInterval * 1000);\n  }\n\n  private stopRefreshInterval() {\n    clearInterval(this.interval);\n  }\n\n  private refresh() {\n    this.refreshing.emit(true);\n  }\n\n}\n\n    \n\n    \n        \n    \n    active\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        active'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RefreshButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResizableComponent.html":{"url":"classes/ResizableComponent.html","title":"class - ResizableComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResizableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/ResizableComponent.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            onResize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onResize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/ResizableComponent.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:resize\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nwindow:resize(event: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/ResizableComponent.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HostListener } from '@angular/core';\n\nexport abstract class ResizableComponent {\n\n    @HostListener('window:resize', ['$event'])\n    public onWindowResize(event: Event) {\n        this.onResize();\n    }\n\n    protected abstract onResize(): void;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScatterData.html":{"url":"interfaces/ScatterData.html","title":"interface - ScatterData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ScatterData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/plotly/src/lib/plotly-profile-graph/plotly-profile-graph.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Partial\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        timestamp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, Component, ElementRef, EventEmitter, IterableDiffers, Output, ViewChild } from '@angular/core';\nimport {\n    DatasetApiInterface,\n    DatasetPresenterComponent,\n    PresenterHighlight,\n    IDataset,\n    InternalIdHandler,\n    ProfileDataEntry,\n    Time,\n    TimedDatasetOptions,\n    Timespan,\n} from '@helgoland/core';\nimport * as d3 from 'd3';\n\nimport * as Plotly from 'plotly.js';\n\ninterface RawData {\n    dataset: IDataset;\n    datas: ProfileDataEntry[];\n    options: TimedDatasetOptions[];\n}\n\ninterface ExtendedScatterData extends Partial {\n    timestamp: number;\n    id: string;\n}\n\nconst LINE_WIDTH_SELECTED = 5;\nconst LINE_WIDTH = 2;\nconst MARKER_SIZE_SELECTED = 10;\nconst MARKER_SIZE = 6;\n\n@Component({\n    selector: 'n52-plotly-profile-graph',\n    templateUrl: './plotly-profile-graph.component.html',\n    styleUrls: ['./plotly-profile-graph.component.scss']\n})\nexport class PlotlyProfileGraphComponent\n    extends DatasetPresenterComponent\n    implements AfterViewInit {\n\n    @Output()\n    public onHighlight: EventEmitter = new EventEmitter();\n\n    @ViewChild('plotly')\n    public plotlyElem: ElementRef;\n\n    private plotlyArea: any;\n    private preparedData: ExtendedScatterData[] = [];\n    private rawData: Map = new Map();\n    private counterXAxis = 0;\n    private counterYAxis = 0;\n\n    private layout: Layout = {\n        autosize: true,\n        showlegend: false,\n        dragmode: 'pan',\n        margin: {\n            l: 40,\n            r: 10,\n            b: 40,\n            t: 10\n            // pad: 100\n        },\n        hovermode: 'closest'\n    };\n\n    private settings: Partial = {\n        displayModeBar: false,\n        modeBarButtonsToRemove: [\n            'sendDataToCloud',\n            'hoverCompareCartesian'\n        ],\n        displaylogo: false,\n        showTips: false,\n        scrollZoom: true\n    };\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc);\n    }\n\n    public ngAfterViewInit(): void {\n        this.plotlyArea = this.plotlyElem.nativeElement;\n        this.drawChart();\n    }\n\n    public reloadData(): void {\n        console.log('reload data at ' + new Date());\n    }\n\n    // tslint:disable-next-line:no-empty\n    protected timeIntervalChanges(): void { }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getDataset(id, url).subscribe((dataset) => {\n            const options = this.datasetOptions.get(dataset.internalId);\n            options.forEach((option) => {\n                if (option.timestamp) {\n                    const timespan = new Timespan(option.timestamp);\n                    this.api.getData(id, url, timespan).subscribe((data) => {\n                        if (data.values.length === 1) {\n                            if (this.rawData.has(dataset.internalId)) {\n                                this.rawData.get(dataset.internalId).datas.push(data.values[0]);\n                                this.rawData.get(dataset.internalId).options.push(option);\n                            } else {\n                                this.rawData.set(dataset.internalId, {\n                                    dataset,\n                                    datas: [data.values[0]],\n                                    options: [option]\n                                });\n                            }\n                        }\n                        this.drawChart();\n                    });\n                }\n            });\n        });\n    }\n\n    protected removeDataset(internalId: string): void {\n        this.rawData.delete(internalId);\n        this.drawChart();\n    }\n\n    protected setSelectedId(internalId: string): void {\n        this.drawChart();\n    }\n\n    protected removeSelectedId(internalId: string): void {\n        this.drawChart();\n    }\n\n    // tslint:disable-next-line:no-empty\n    protected graphOptionsChanged(options: any): void { }\n\n    protected datasetOptionsChanged(internalId: string, options: TimedDatasetOptions[], firstChange: boolean): void {\n        if (!firstChange) {\n            // remove unused options\n            const removedIdx = this.rawData.get(internalId).options.findIndex((option) => {\n                const idx = options.findIndex((e) => e.timestamp === option.timestamp);\n                if (idx === -1) {\n                    return true;\n                }\n            });\n            if (removedIdx > -1) {\n                this.rawData.get(internalId).options.splice(removedIdx, 1);\n                this.rawData.get(internalId).datas.splice(removedIdx, 1);\n            }\n            this.drawChart();\n        }\n    }\n\n    protected onResize(): void {\n        this.redrawChart();\n    }\n\n    private processData() {\n        this.clearLayout();\n        this.clearData();\n        this.rawData.forEach((dataEntry) => {\n            dataEntry.options.forEach((option, key) => {\n                if (option.visible) {\n                    const x = new Array();\n                    const y = new Array();\n                    const selected = this.selectedDatasetIds.indexOf(dataEntry.dataset.internalId) >= 0;\n                    dataEntry.datas[key].value.forEach((entry) => {\n                        x.push(entry.value);\n                        y.push(entry.vertical);\n                    });\n                    const prepared: ExtendedScatterData = {\n                        x,\n                        y,\n                        type: 'scatter',\n                        name: '',\n                        timestamp: option.timestamp,\n                        id: dataEntry.dataset.internalId,\n                        yaxis: this.createYAxis(dataEntry.dataset, dataEntry.datas[key]),\n                        xaxis: this.createXAxis(dataEntry.dataset, dataEntry.datas[key]),\n                        // hovertext: dataEntry.label,\n                        line: {\n                            color: option.color,\n                            width: selected ? LINE_WIDTH_SELECTED : LINE_WIDTH\n                        },\n                        marker: {\n                            size: selected ? MARKER_SIZE_SELECTED : MARKER_SIZE\n                        }\n                    };\n                    this.preparedData.push(prepared);\n                }\n            });\n        });\n\n        this.updateAxis();\n    }\n\n    private createXAxis(dataset: IDataset, data: ProfileDataEntry): string {\n        let axis;\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis') && this.layout[key].title === dataset.uom) {\n                axis = this.layout[key];\n            }\n        }\n        const range = d3.extent(data.value, (d) => d.value);\n        if (!axis) {\n            this.counterXAxis = this.counterXAxis + 1;\n            axis = this.layout['xaxis' + this.counterXAxis] = {\n                id: 'x' + (this.counterXAxis > 1 ? this.counterXAxis : ''),\n                anchor: 'free',\n                title: dataset.uom,\n                zeroline: true,\n                hoverformat: '.2f',\n                showline: false,\n                range: [range[0], range[1]],\n                overlaying: '',\n                // rangemode: 'tozero',\n                fixedrange: false\n            };\n            if (this.counterXAxis !== 1) {\n                axis.overlaying = 'x';\n            }\n        } else {\n            axis.range = d3.extent([range[0], range[1], axis.range[0], axis.range[1]]);\n        }\n        return axis.id;\n    }\n\n    private createYAxis(dataset: IDataset, data: ProfileDataEntry): string {\n        let axis;\n        // find axis\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) &&\n                key.startsWith('yaxis') &&\n                this.layout[key].title === data.verticalUnit) {\n                axis = this.layout[key];\n            }\n        }\n        if (!axis) {\n            // add axis\n            this.counterYAxis = this.counterYAxis + 1;\n            axis = this.layout[('yaxis' + this.counterYAxis)] = {\n                id: 'y' + (this.counterYAxis > 1 ? this.counterYAxis : ''),\n                // zeroline: true,\n                anchor: 'free',\n                hoverformat: '.2r',\n                side: 'left',\n                autorange: 'reversed',\n                showline: false,\n                overlaying: '',\n                title: data.verticalUnit,\n                fixedrange: false\n            };\n            if (this.counterYAxis !== 1) {\n                axis.overlaying = 'y';\n            }\n        }\n        return axis.id;\n    }\n\n    private updateAxis() {\n        if (this.counterYAxis > 1) {\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                    this.layout[key].domain = [(0.1 * this.counterYAxis) - 0.1, 1];\n                }\n            }\n            let yaxisCount = 0;\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('yaxis')) {\n                    this.layout[key].position = 0.1 * yaxisCount;\n                    yaxisCount += 1;\n                }\n            }\n        }\n        if (this.counterXAxis > 1) {\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('yaxis')) {\n                    this.layout[key].domain = [(0.06 * this.counterXAxis) - 0.06, 1];\n                }\n            }\n            let xaxisCount = 0;\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                    this.layout[key].position = 0.06 * xaxisCount;\n                    xaxisCount += 1;\n                }\n            }\n        }\n        // add offset to xaxis ranges\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                const range = this.layout[key].range;\n                const rangeOffset = (range[1] - range[0]) * 0.05;\n                this.layout[key].range = [range[0] - rangeOffset, range[1] + rangeOffset];\n            }\n        }\n    }\n\n    private drawChart() {\n        if (this.plotlyArea && this.rawData.size > 0) {\n            this.processData();\n            Plotly.newPlot(this.plotlyArea, this.preparedData, this.layout, this.settings);\n            this.plotlyArea.on('plotly_hover', (entry: any) => {\n                if (entry.points.length === 1) {\n                    this.onHighlight.emit({\n                        internalId: entry.points[0].data.id,\n                        dataIndex: entry.points[0].pointNumber\n                    });\n                }\n            });\n        }\n    }\n\n    private clearLayout() {\n        // todo remove yaxis\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && (key.startsWith('yaxis') || key.startsWith('xaxis'))) {\n                delete this.layout[key];\n            }\n        }\n        // reset counter\n        this.counterYAxis = 0;\n        this.counterXAxis = 0;\n    }\n\n    private clearData() {\n        this.preparedData = [];\n    }\n\n    private redrawChart() {\n        if (this.plotlyArea) {\n            Plotly.relayout(this.plotlyArea, {});\n        }\n    }\n}\n\ninterface ScatterData extends Partial {\n    id: string;\n    timestamp: number;\n}\n\ninterface Layout extends Partial {\n    [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SeriesOptions.html":{"url":"interfaces/SeriesOptions.html","title":"interface - SeriesOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SeriesOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/flot/src/lib/model/dataSeries.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        selected\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SeriesOptions extends jquery.flot.seriesOptions {\n    selected?: boolean;\n}\n\nexport interface DataSeries extends jquery.flot.dataSeries, SeriesOptions {\n    internalId: string;\n    data: any[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Service.html":{"url":"interfaces/Service.html","title":"interface - Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        apiUrl\n                                \n                                \n                                        extras\n                                \n                                \n                                        href\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        quantities\n                                \n                                \n                                            Optional\n                                        supportedmimetypes\n                                \n                                \n                                            Optional\n                                        supportsfirstlatest\n                                \n                                \n                                        type\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiUrl\n                                    \n                                \n                                \n                                    \n                                        apiUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extras\n                                    \n                                \n                                \n                                    \n                                        extras:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                    \n                                \n                                \n                                    \n                                        href:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantities\n                                    \n                                \n                                \n                                    \n                                        quantities:     ServiceQuantities\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ServiceQuantities\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        supportedmimetypes\n                                    \n                                \n                                \n                                    \n                                        supportedmimetypes:     SupportedMimeTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SupportedMimeTypes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        supportsfirstlatest\n                                    \n                                \n                                \n                                    \n                                        supportsfirstlatest:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Parameter } from './parameter';\n\nexport interface Service extends Parameter {\n    id: string;\n    href: string;\n    label: string;\n    version: string;\n    extras: string[];\n    type: string;\n    quantities?: ServiceQuantities;\n    supportsfirstlatest?: boolean;\n    supportedmimetypes?: SupportedMimeTypes;\n    // for internal use:\n    apiUrl: string;\n}\n\nexport interface SupportedMimeTypes {}\n\nexport interface ServiceQuantities {\n    categories?: number;\n    features?: number;\n    offerings?: number;\n    phenomena?: number;\n    procedures?: number;\n    stations?: number;\n    timeseries?: number;\n    platforms?: number;\n    datasets?: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServiceFilterSelectorComponent.html":{"url":"components/ServiceFilterSelectorComponent.html","title":"component - ServiceFilterSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServiceFilterSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts\n\n\n    \n        Description\n    \n    \n        Component to select an item out of a list of provider with a given filter combination.\n\n    \n\n    \n        Extends\n    \n    \n            LanguageChangNotifier\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-service-filter-selector\n            \n\n\n\n\n            \n                templateUrl\n                ./service-filter-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Public\n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorOnLoading\n                            \n                            \n                                    Protected\n                                languageChanged\n                            \n                            \n                                    Private\n                                loadItems\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                onSelectItem\n                            \n                            \n                                    Private\n                                setItems\n                            \n                            \n                                    Protected\n                                    \n                                languageChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                endpoint\n                            \n                            \n                                filter\n                            \n                            \n                                selectionId\n                            \n                            \n                                serviceUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onItemSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, apiInterface: DatasetApiInterface)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiInterface\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        endpoint\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                    \n                            \n                            Type:    ParameterFilter\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectionId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serviceUrl\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onItemSelected\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorOnLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        errorOnLoading()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            languageChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        languageChanged()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSelectItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onSelectItem(item: Parameter)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Parameter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setItems(res: Parameter[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        res\n                                                        \n                                                                    Parameter[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            languageChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        languageChanged()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LanguageChangNotifier\n\n                                \n                            \n                        \n                            \n                                    Defined in LanguageChangNotifier:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     Parameter[]\n\n                    \n                \n                    \n                        \n                            Type :     Parameter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { DatasetApiInterface, LanguageChangNotifier, Parameter, ParameterFilter } from '@helgoland/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * Component to select an item out of a list of provider with a given filter combination.\n */\n@Component({\n    selector: 'n52-service-filter-selector',\n    templateUrl: './service-filter-selector.component.html'\n})\nexport class ServiceFilterSelectorComponent extends LanguageChangNotifier implements OnChanges {\n\n    @Input()\n    public endpoint: string;\n\n    @Input()\n    public serviceUrl: string;\n\n    @Input()\n    public filter: ParameterFilter;\n\n    @Input()\n    public selectionId: string;\n\n    @Output()\n    public onItemSelected: EventEmitter = new EventEmitter();\n\n    public loading: boolean;\n    public items: Parameter[];\n\n    constructor(\n        protected translate: TranslateService,\n        protected apiInterface: DatasetApiInterface\n    ) {\n        super(translate);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.endpoint) {\n            this.loadItems();\n        }\n    }\n\n    public onSelectItem(item: Parameter): void {\n        this.onItemSelected.emit(item);\n    }\n\n    protected languageChanged() {\n        this.loadItems();\n    }\n\n    private loadItems() {\n        this.loading = true;\n        switch (this.endpoint) {\n            case 'offering':\n                this.apiInterface.getOfferings(this.serviceUrl, this.filter)\n                    .subscribe((res) => this.setItems(res), (error) => this.errorOnLoading);\n                break;\n            case 'phenomenon':\n                this.apiInterface.getPhenomena(this.serviceUrl, this.filter)\n                    .subscribe((res) => this.setItems(res), (error) => this.errorOnLoading);\n                break;\n            case 'procedure':\n                this.apiInterface.getProcedures(this.serviceUrl, this.filter)\n                    .subscribe((res) => this.setItems(res), (error) => this.errorOnLoading);\n                break;\n            case 'category':\n                this.apiInterface.getCategories(this.serviceUrl, this.filter)\n                    .subscribe((res) => this.setItems(res), (error) => this.errorOnLoading);\n                break;\n            case 'feature':\n                this.apiInterface.getFeatures(this.serviceUrl, this.filter)\n                    .subscribe((res) => this.setItems(res), (error) => this.errorOnLoading);\n                break;\n            default:\n                console.error('Wrong endpoint: ' + this.endpoint);\n        }\n    }\n\n    private errorOnLoading(): void {\n        this.loading = false;\n    }\n\n    private setItems(res: Parameter[]): void {\n        if (res instanceof Array) {\n            this.items = res;\n        } else {\n            this.items = [];\n        }\n        this.loading = false;\n    }\n}\n\n    \n\n    \n        \n    loading...\n\n\n    no results found\n\n\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    loading...    no results found    '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ServiceFilterSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceQuantities.html":{"url":"interfaces/ServiceQuantities.html","title":"interface - ServiceQuantities","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ServiceQuantities\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        categories\n                                \n                                \n                                            Optional\n                                        datasets\n                                \n                                \n                                            Optional\n                                        features\n                                \n                                \n                                            Optional\n                                        offerings\n                                \n                                \n                                            Optional\n                                        phenomena\n                                \n                                \n                                            Optional\n                                        platforms\n                                \n                                \n                                            Optional\n                                        procedures\n                                \n                                \n                                            Optional\n                                        stations\n                                \n                                \n                                            Optional\n                                        timeseries\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        datasets\n                                    \n                                \n                                \n                                    \n                                        datasets:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offerings\n                                    \n                                \n                                \n                                    \n                                        offerings:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phenomena\n                                    \n                                \n                                \n                                    \n                                        phenomena:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platforms\n                                    \n                                \n                                \n                                    \n                                        platforms:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        procedures\n                                    \n                                \n                                \n                                    \n                                        procedures:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stations\n                                    \n                                \n                                \n                                    \n                                        stations:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeseries\n                                    \n                                \n                                \n                                    \n                                        timeseries:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Parameter } from './parameter';\n\nexport interface Service extends Parameter {\n    id: string;\n    href: string;\n    label: string;\n    version: string;\n    extras: string[];\n    type: string;\n    quantities?: ServiceQuantities;\n    supportsfirstlatest?: boolean;\n    supportedmimetypes?: SupportedMimeTypes;\n    // for internal use:\n    apiUrl: string;\n}\n\nexport interface SupportedMimeTypes {}\n\nexport interface ServiceQuantities {\n    categories?: number;\n    features?: number;\n    offerings?: number;\n    phenomena?: number;\n    procedures?: number;\n    stations?: number;\n    timeseries?: number;\n    platforms?: number;\n    datasets?: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServiceSelectorComponent.html":{"url":"components/ServiceSelectorComponent.html","title":"component - ServiceSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServiceSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts\n\n\n    \n        Description\n    \n    \n        Component to select an item out of a list of provider with a given filter combination.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-service-selector\n            \n\n            \n                styleUrls\n                service-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./service-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadingCount\n                            \n                            \n                                    Public\n                                services\n                            \n                            \n                                    Public\n                                unResolvableServices\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isSelected\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                selectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                datasetApiList\n                            \n                            \n                                filter\n                            \n                            \n                                providerBlacklist\n                            \n                            \n                                selectedService\n                            \n                            \n                                showUnresolvableServices\n                            \n                            \n                                supportStations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onServiceSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceSelectorService: ServiceSelectorService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceSelectorService\n                                                  \n                                                        \n                                                                    ServiceSelectorService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        datasetApiList\n                    \n                    \n                            \n                            Type:    DatasetApi[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                    \n                            \n                            Type:    ParameterFilter\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        providerBlacklist\n                    \n                    \n                            \n                            Type:    BlacklistedService[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedService\n                    \n                    \n                            \n                            Type:    Service\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showUnresolvableServices\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        supportStations\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onServiceSelected\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:35\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isSelected(service: Service)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                        \n                                                                    Service\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectService(service: Service)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                        \n                                                                    Service\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadingCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            services\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        services:     Service[]\n\n                    \n                \n                    \n                        \n                            Type :     Service[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unResolvableServices\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unResolvableServices:     DatasetApi[]\n\n                    \n                \n                    \n                        \n                            Type :     DatasetApi[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { BlacklistedService, DatasetApi, ParameterFilter, Service } from '@helgoland/core';\n\nimport { ServiceSelectorService } from './service-selector.service';\n\n/**\n * Component to select an item out of a list of provider with a given filter combination.\n */\n@Component({\n    selector: 'n52-service-selector',\n    templateUrl: './service-selector.component.html',\n    styleUrls: ['./service-selector.component.scss']\n})\nexport class ServiceSelectorComponent implements OnInit {\n\n    @Input()\n    public datasetApiList: DatasetApi[];\n\n    @Input()\n    public providerBlacklist: BlacklistedService[];\n\n    @Input()\n    public supportStations: boolean;\n\n    @Input()\n    public selectedService: Service;\n\n    @Input()\n    public filter: ParameterFilter;\n\n    @Input()\n    public showUnresolvableServices: boolean;\n\n    @Output()\n    public onServiceSelected: EventEmitter = new EventEmitter();\n\n    public services: Service[];\n    public unResolvableServices: DatasetApi[];\n    public loadingCount = 0;\n\n    constructor(\n        protected serviceSelectorService: ServiceSelectorService\n    ) { }\n\n    public ngOnInit() {\n        if (!this.filter) { this.filter = {}; }\n        if (!this.providerBlacklist) { this.providerBlacklist = []; }\n        if (this.datasetApiList) {\n            this.loadingCount = this.datasetApiList.length;\n            this.services = [];\n            this.unResolvableServices = [];\n            this.datasetApiList.forEach((api) => {\n                this.serviceSelectorService.fetchServicesOfAPI(api.url, this.providerBlacklist, this.filter)\n                    .subscribe(\n                        (res) => {\n                            this.loadingCount--;\n                            if (res && res instanceof Array) {\n                                res.forEach((entry) => {\n                                    if (entry.quantities.platforms > 0\n                                        || this.supportStations && entry.quantities.stations > 0) {\n                                        this.services.push(entry);\n                                    }\n                                });\n                            }\n                            this.services.sort((a, b) => {\n                                if (a.label  b.label) { return 1; }\n                                return 0;\n                            });\n                        },\n                        (error) => {\n                            if (this.showUnresolvableServices) { this.unResolvableServices.push(api); }\n                            this.loadingCount--;\n                        });\n            });\n        }\n    }\n\n    public isSelected(service: Service) {\n        if (!this.selectedService) { return false; }\n        return this.selectedService.id === service.id && this.selectedService.apiUrl === service.apiUrl;\n    }\n\n    public selectService(service: Service) {\n        this.onServiceSelected.emit(service);\n    }\n}\n\n    \n\n    \n         0\">\n  Requesting {{loadingCount}} providers...\n\n\n  \n    {{service.label}}\n    {{service.type}}, {{service.version}}\n    \n    {{'service-selector.service-url' | translate}}: {{service.apiUrl}}\n    \n      {{'service-selector.stations' | translate}}: {{service.quantities.stations}}\n      {{'service-selector.platforms' | translate}}: {{service.quantities.platforms}}\n      {{'service-selector.timeseries' | translate}}: {{service.quantities.timeseries}}\n      {{'service-selector.datasets' | translate}}: {{service.quantities.datasets}}\n      {{'service-selector.phenomena' | translate}}: {{service.quantities.phenomena}}\n    \n  \n  \n    {{item.name}} is currently not reachable\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\">  Requesting {{loadingCount}} providers...      {{service.label}}    {{service.type}}, {{service.version}}        {{\\'service-selector.service-url\\' | translate}}: {{service.apiUrl}}          {{\\'service-selector.stations\\' | translate}}: {{service.quantities.stations}}      {{\\'service-selector.platforms\\' | translate}}: {{service.quantities.platforms}}      {{\\'service-selector.timeseries\\' | translate}}: {{service.quantities.timeseries}}      {{\\'service-selector.datasets\\' | translate}}: {{service.quantities.datasets}}      {{\\'service-selector.phenomena\\' | translate}}: {{service.quantities.phenomena}}            {{item.name}} is currently not reachable  '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ServiceSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServiceSelectorService.html":{"url":"injectables/ServiceSelectorService.html","title":"injectable - ServiceSelectorService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ServiceSelectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/selector/src/lib/service-selector/service-selector.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fetchServicesOfAPI\n                            \n                            \n                                    Private\n                                isServiceBlacklisted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiInterface: DatasetApiInterface)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiInterface\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fetchServicesOfAPI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fetchServicesOfAPI(url: string, blacklist: BlacklistedService[], filter: ParameterFilter)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        blacklist\n                                                        \n                                                                    BlacklistedService[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filter\n                                                        \n                                                                    ParameterFilter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isServiceBlacklisted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isServiceBlacklisted(serviceID: string, url: string, blacklist: BlacklistedService[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        blacklist\n                                                        \n                                                                    BlacklistedService[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DatasetApiInterface } from '@helgoland/core';\nimport { Service } from '@helgoland/core';\nimport { BlacklistedService } from '@helgoland/core';\nimport { ParameterFilter } from '@helgoland/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\n@Injectable()\nexport class ServiceSelectorService {\n\n    constructor(\n        protected apiInterface: DatasetApiInterface\n    ) { }\n\n    public fetchServicesOfAPI(\n        url: string,\n        blacklist: BlacklistedService[],\n        filter: ParameterFilter\n    ): Observable {\n        return new Observable((observer: Observer) => {\n            this.apiInterface.getServices(url, filter)\n                .subscribe(\n                    (services) => {\n                        if (services && services instanceof Array) {\n                            const usableServices = services.map((service) => {\n                                if (!this.isServiceBlacklisted(service.id, url, blacklist)) {\n                                    return service;\n                                }\n                            });\n                            observer.next(usableServices);\n                            observer.complete();\n                        }\n                    },\n                    (error) => {\n                        observer.error(error);\n                        observer.complete();\n                    });\n        });\n    }\n\n    private isServiceBlacklisted(serviceID: string, url: string, blacklist: BlacklistedService[]): boolean {\n        let isBlacklisted = false;\n        blacklist.forEach((entry) => {\n            if (entry.serviceId === serviceID && entry.apiUrl === url) {\n                isBlacklisted = true;\n            }\n        });\n        return isBlacklisted;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Settings.html":{"url":"interfaces/Settings.html","title":"interface - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/settings/settings.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        colorList\n                                \n                                \n                                            Optional\n                                        datasetApis\n                                \n                                \n                                            Optional\n                                        languages\n                                \n                                \n                                            Optional\n                                        providerBlackList\n                                \n                                \n                                            Optional\n                                        proxyUrl\n                                \n                                \n                                            Optional\n                                        refreshDataInterval\n                                \n                                \n                                            Optional\n                                        solveLabels\n                                \n                                \n                                            Optional\n                                        timespanPresets\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colorList\n                                    \n                                \n                                \n                                    \n                                        colorList:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        datasetApis\n                                    \n                                \n                                \n                                    \n                                        datasetApis:     DatasetApi[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DatasetApi[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        languages\n                                    \n                                \n                                \n                                    \n                                        languages:     [literal type]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [literal type]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providerBlackList\n                                    \n                                \n                                \n                                    \n                                        providerBlackList:     BlacklistedService[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BlacklistedService[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        proxyUrl\n                                    \n                                \n                                \n                                    \n                                        proxyUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshDataInterval\n                                    \n                                \n                                \n                                    \n                                        refreshDataInterval:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        solveLabels\n                                    \n                                \n                                \n                                    \n                                        solveLabels:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timespanPresets\n                                    \n                                \n                                \n                                    \n                                        timespanPresets:     TimespanPreset[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TimespanPreset[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timespan } from './../internal/timeInterval';\n\nexport interface Settings {\n    datasetApis?: DatasetApi[];\n    providerBlackList?: BlacklistedService[];\n    solveLabels?: boolean;\n    proxyUrl?: string;\n    timespanPresets?: TimespanPreset[];\n    colorList?: string[];\n    languages?: [{ label: string, code: string }];\n    refreshDataInterval?: number;\n}\n\nexport interface DatasetApi {\n    name: string;\n    url: string;\n}\n\nexport interface BlacklistedService {\n    serviceId: string;\n    apiUrl: string;\n}\n\nexport interface TimespanPreset {\n    name: string;\n    label: string;\n    timespan: TimespanMomentTemplate;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface ParsedTimespanPreset {\n    name: string;\n    label: string;\n    timespan: Timespan;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface TimespanMomentTemplate {\n    to: string;\n    from: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SettingsService.html":{"url":"classes/SettingsService.html","title":"class - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/settings/settings.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getSettings\n                            \n                            \n                                    Protected\n                                setSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/settings/settings.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            settings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        settings:     T\n\n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/settings/settings.service.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getSettings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSettings()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/settings/settings.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     T\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setSettings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setSettings(settings: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/settings/settings.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Settings } from '../model/settings/settings';\n\nexport abstract class SettingsService {\n\n    private settings: T;\n\n    constructor() {\n        // Default empty settings\n        this.settings = {} as T;\n    }\n\n    public getSettings() {\n        return this.settings;\n    }\n\n    protected setSettings(settings: T) {\n        this.settings = settings;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SingleFavorite.html":{"url":"interfaces/SingleFavorite.html","title":"interface - SingleFavorite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SingleFavorite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/favorite/src/lib/service/favorite.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Favorite\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        favorite\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        favorite\n                                    \n                                \n                                \n                                    \n                                        favorite:     IDataset\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IDataset\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IDataset, LocalStorage } from '@helgoland/core';\n\nconst CACHE_PARAM_FAVORITES_SINGLE = 'SingleFavorites';\nconst CACHE_PARAM_FAVORITES_GROUP = 'GroupFavorites';\n\n@Injectable()\nexport class FavoriteService {\n\n  private singleFavs: Map;\n  private groupFavs: Map;\n  private groupCounter = 0;\n\n  constructor(\n    protected localStorage: LocalStorage\n  ) {\n    this.loadFavorites();\n  }\n\n  public addFavorite(dataset: IDataset, label?: string): boolean {\n    if (!this.singleFavs.has(dataset.internalId)) {\n      this.singleFavs.set(dataset.internalId, {\n        id: dataset.internalId,\n        label: label ? label : dataset.label,\n        favorite: dataset\n      });\n      this.saveFavorites();\n      return true;\n    }\n    return false;\n  }\n\n  public hasFavorite(dataset: IDataset): boolean {\n    return this.singleFavs.has(dataset.internalId);\n  }\n\n  public getFavorites(): SingleFavorite[] {\n    return Array.from(this.singleFavs.values());\n  }\n\n  public removeFavorite(favoriteId: string): boolean {\n    if (this.singleFavs.has(favoriteId)) {\n      this.singleFavs.delete(favoriteId);\n      this.saveFavorites();\n      return true;\n    }\n    if (this.groupFavs.has(favoriteId)) {\n      this.groupFavs.delete(favoriteId);\n      this.saveFavorites();\n      return true;\n    }\n    return false;\n  }\n\n  public addFavoriteGroup(datasets: IDataset[], label?: string): boolean {\n    const id = 'Group' + this.groupCounter++;\n    this.groupFavs.set(id, {\n      id,\n      label: label ? label : id,\n      favorites: datasets\n    });\n    this.saveFavorites();\n    return true;\n  }\n\n  public getFavoriteGroups(): GroupFavorite[] {\n    return Array.from(this.groupFavs.values());\n  }\n\n  public removeAllFavorites(): boolean {\n    this.singleFavs.clear();\n    this.groupFavs.clear();\n    this.saveFavorites();\n    return true;\n  }\n\n  public changeLabel(favorite: Favorite, label: string) {\n    favorite.label = label;\n    if (isSingleFavorite(favorite)) { this.singleFavs.set(favorite.id, favorite); }\n    if (isGroupFavorite(favorite)) { this.groupFavs.set(favorite.id, favorite); }\n    this.saveFavorites();\n  }\n\n  private saveFavorites(): void {\n    this.localStorage.save(CACHE_PARAM_FAVORITES_SINGLE, this.getFavorites());\n    this.localStorage.save(CACHE_PARAM_FAVORITES_GROUP, this.getFavoriteGroups());\n  }\n\n  private loadFavorites(): void {\n    this.singleFavs = new Map();\n    this.groupFavs = new Map();\n    const loadedSingleFavs = this.localStorage.loadArray(CACHE_PARAM_FAVORITES_SINGLE);\n    if (loadedSingleFavs) {\n      loadedSingleFavs.forEach((entry) => this.singleFavs.set(entry.id, entry));\n    }\n    const loadedGroupFavs = this.localStorage.loadArray(CACHE_PARAM_FAVORITES_GROUP);\n    if (loadedGroupFavs) {\n      loadedGroupFavs.forEach((entry) => this.groupFavs.set(entry.id, entry));\n    }\n  }\n}\n\nexport interface Favorite {\n  id: string;\n  label: string;\n}\n\nexport interface SingleFavorite extends Favorite {\n  favorite: IDataset;\n}\n\nfunction isSingleFavorite(object: any): object is SingleFavorite {\n  return 'favorite' in object;\n}\n\nexport interface GroupFavorite extends Favorite {\n  favorites: IDataset[];\n}\n\nfunction isGroupFavorite(object: any): object is GroupFavorite {\n  return 'favorites' in object;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SplittedDataDatasetApiInterface.html":{"url":"injectables/SplittedDataDatasetApiInterface.html","title":"injectable - SplittedDataDatasetApiInterface","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SplittedDataDatasetApiInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/splitted-data-api-interface.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getTsData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpservice: HttpService, internalDatasetId: InternalIdHandler, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/dataset-api/splitted-data-api-interface.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpservice\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        internalDatasetId\n                                                  \n                                                        \n                                                                    InternalIdHandler\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTsData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTsData(id: string, apiUrl: string, timespan: Timespan, params: DataParameterFilter, options: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/splitted-data-api-interface.service.ts:25\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    DataParameterFilter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport moment from 'moment';\nimport { forkJoin, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Data } from '../model/dataset-api/data';\nimport { DataParameterFilter, HttpRequestOptions } from '../model/internal/http-requests';\nimport { Timespan } from '../model/internal/timeInterval';\nimport { DatasetImplApiInterface } from './dataset-impl-api-interface.service';\nimport { HttpService } from './http.service';\nimport { InternalIdHandler } from './internal-id-handler.service';\n\n@Injectable()\nexport class SplittedDataDatasetApiInterface extends DatasetImplApiInterface {\n\n    constructor(\n        protected httpservice: HttpService,\n        protected internalDatasetId: InternalIdHandler,\n        protected translate: TranslateService\n    ) {\n        super(httpservice, internalDatasetId, translate);\n    }\n\n    public getTsData(\n        id: string,\n        apiUrl: string,\n        timespan: Timespan,\n        params: DataParameterFilter = {},\n        options: HttpRequestOptions\n    ): Observable> {\n        const maxTimeExtent = moment.duration(1, 'year').asMilliseconds();\n        if ((timespan.to - timespan.from) > maxTimeExtent) {\n            const requests: Array>> = [];\n            let start = moment(timespan.from).startOf('year');\n            let end = moment(timespan.from).endOf('year');\n            while (start.isBefore(moment(timespan.to))) {\n                const chunkSpan = new Timespan(start.unix() * 1000, end.unix() * 1000);\n                requests.push(super.getTsData(id, apiUrl, chunkSpan, params, options));\n                start = end.add(1, 'millisecond');\n                end = moment(start).endOf('year');\n            }\n            return forkJoin(requests).pipe(map((entry) => {\n                return entry.reduce((previous, current) => {\n                    const next: Data = {\n                        referenceValues: {},\n                        values: previous.values.concat(current.values)\n                    };\n                    for (const key in previous.referenceValues) {\n                        if (previous.referenceValues.hasOwnProperty(key)) {\n                            next.referenceValues[key] = previous.referenceValues[key].concat(current.referenceValues[key]);\n                        }\n                    }\n                    return next;\n                });\n            }));\n        } else {\n            return super.getTsData(id, apiUrl, timespan, params, options);\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Station.html":{"url":"classes/Station.html","title":"class - Station","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Station\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/station.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                geometry\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geometry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geometry:     GeoJSON.GeometryObject\n\n                    \n                \n                    \n                        \n                            Type :     GeoJSON.GeometryObject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/station.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/station.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            properties\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        properties:     StationProperties\n\n                    \n                \n                    \n                        \n                            Type :     StationProperties\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/station.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ParameterConstellation, Timeseries } from './dataset';\nimport { Parameter } from './parameter';\n\nexport class Station {\n    public id: string;\n    public geometry: GeoJSON.GeometryObject;\n    public properties: StationProperties;\n}\n\nexport interface StationProperties extends Parameter {\n    timeseries: TimeseriesCollection | Timeseries;\n}\n\nexport class TimeseriesCollection {\n    [key: string]: ParameterConstellation;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StationProperties.html":{"url":"interfaces/StationProperties.html","title":"interface - StationProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StationProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/station.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        timeseries\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        timeseries\n                                    \n                                \n                                \n                                    \n                                        timeseries:     TimeseriesCollection | Timeseries\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TimeseriesCollection | Timeseries\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ParameterConstellation, Timeseries } from './dataset';\nimport { Parameter } from './parameter';\n\nexport class Station {\n    public id: string;\n    public geometry: GeoJSON.GeometryObject;\n    public properties: StationProperties;\n}\n\nexport interface StationProperties extends Parameter {\n    timeseries: TimeseriesCollection | Timeseries;\n}\n\nexport class TimeseriesCollection {\n    [key: string]: ParameterConstellation;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatusCheckService.html":{"url":"injectables/StatusCheckService.html","title":"injectable - StatusCheckService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StatusCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/status-check/status-check.service.ts\n        \n\n            \n                Description\n            \n            \n                This class checks URLs if they are reachable by a simple get request. If they gets anything back, everything is ok, otherwise\nthe corresponding method gives back the URLs which are not reachable.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                urls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addUrl\n                            \n                            \n                                    Public\n                                checkAll\n                            \n                            \n                                    Public\n                                checkUrl\n                            \n                            \n                                    Public\n                                checkUrls\n                            \n                            \n                                    Private\n                                doCheck\n                            \n                            \n                                    Private\n                                doCheckUrl\n                            \n                            \n                                    Public\n                                removeUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/status-check/status-check.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/status-check/status-check.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Adds the URL to the internal collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            checkAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/status-check/status-check.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Checks all internal registered URLs if they are reachable. Gives back every URL, which was not reachable\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            checkUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/status-check/status-check.service.ts:30\n                            \n                        \n\n\n                \n                    \n                            Checks the given URL.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    Observable with the URL if not reachable.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            checkUrls\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkUrls(urls: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/status-check/status-check.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Checks the given URLs.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        urls\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    Observable of all not reachable URLs.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            doCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doCheck(urls: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/status-check/status-check.service.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        urls\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            doCheckUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doCheckUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/status-check/status-check.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/status-check/status-check.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Removes the URL of the internal collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urls\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        urls:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/status-check/status-check.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { forkJoin, Observable, Observer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * This class checks URLs if they are reachable by a simple get request. If they gets anything back, everything is ok, otherwise\n * the corresponding method gives back the URLs which are not reachable.\n */\n@Injectable()\nexport class StatusCheckService {\n\n  private urls: string[] = [];\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  /**\n   * Checks all internal registered URLs if they are reachable. Gives back every URL, which was not reachable\n   */\n  public checkAll(): Observable {\n    return this.doCheck(this.urls);\n  }\n\n  /**\n   * Checks the given URL.\n   * @returns Observable with the URL if not reachable.\n   */\n  public checkUrl(url: string): Observable {\n    return this.doCheckUrl(url);\n  }\n\n  /**\n   * Checks the given URLs.\n   * @returns Observable of all not reachable URLs.\n   */\n  public checkUrls(urls: string[]): Observable {\n    return this.doCheck(urls);\n  }\n\n  /**\n   * Adds the URL to the internal collection.\n   */\n  public addUrl(url: string) {\n    const index = this.urls.indexOf(url);\n    if (index === -1) { this.urls.push(url); }\n  }\n\n  /**\n   * Removes the URL of the internal collection.\n   */\n  public removeUrl(url: string) {\n    const index = this.urls.indexOf(url);\n    if (index > -1) { this.urls.splice(index, 1); }\n  }\n\n  private doCheckUrl(url: string): Observable {\n    return new Observable((observer: Observer) => {\n      this.httpClient.get(url).subscribe(\n        (res) => {\n          observer.next(null);\n          observer.complete();\n        },\n        (error) => {\n          observer.next(url);\n          observer.complete();\n        }\n      );\n    });\n  }\n\n  private doCheck(urls: string[]): Observable {\n    const requests: Array> = [];\n    urls.forEach((url) => requests.push(this.doCheckUrl(url)));\n    return forkJoin(requests).pipe(\n      map((checkedUrls) => {\n        return checkedUrls.filter((entry) => {\n          if (entry) {\n            return entry;\n          }\n        });\n      })\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StatusInterval.html":{"url":"interfaces/StatusInterval.html","title":"interface - StatusInterval","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StatusInterval\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        color\n                                \n                                \n                                        lower\n                                \n                                \n                                        name\n                                \n                                \n                                        upper\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lower\n                                    \n                                \n                                \n                                    \n                                        lower:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        upper\n                                    \n                                \n                                \n                                    \n                                        upper:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatusIntervalResolverService.html":{"url":"injectables/StatusIntervalResolverService.html","title":"injectable - StatusIntervalResolverService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StatusIntervalResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/helper/status-interval-resolver.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMatchingInterval\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/dataset-api/helper/status-interval-resolver.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getMatchingInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMatchingInterval(value: number, statusIntervals: StatusInterval[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/helper/status-interval-resolver.service.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        statusIntervals\n                                                        \n                                                                    StatusInterval[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     StatusInterval\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StatusInterval } from '../../model/dataset-api/dataset';\n\n@Injectable()\nexport class StatusIntervalResolverService {\n\n  constructor() { }\n\n  public getMatchingInterval(value: number, statusIntervals: StatusInterval[]): StatusInterval {\n    if (value && statusIntervals) {\n      return statusIntervals.find((interval) => {\n        const upper = interval.upper ? parseFloat(interval.upper) : Number.MAX_VALUE;\n        const lower = interval.lower ? parseFloat(interval.lower) : Number.MIN_VALUE;\n        if (lower \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StringTogglerComponent.html":{"url":"components/StringTogglerComponent.html","title":"component - StringTogglerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StringTogglerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/control/src/lib/string-toggler/string-toggler.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-string-toggler\n            \n\n\n\n\n            \n                templateUrl\n                ./string-toggler.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isToggled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                option\n                            \n                            \n                                tooltip\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onToggled\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/string-toggler/string-toggler.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        option\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/string-toggler/string-toggler.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/string-toggler/string-toggler.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/string-toggler/string-toggler.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onToggled\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/string-toggler/string-toggler.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/string-toggler/string-toggler.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/string-toggler/string-toggler.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isToggled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isToggled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/string-toggler/string-toggler.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, Output, SimpleChanges, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'n52-string-toggler',\n    templateUrl: './string-toggler.component.html'\n})\nexport class StringTogglerComponent implements OnChanges {\n\n    @Input()\n    public value: string;\n\n    @Input()\n    public option: string;\n\n    @Input()\n    public icon: string;\n\n    @Input()\n    public tooltip: string;\n\n    @Output()\n    public onToggled: EventEmitter = new EventEmitter();\n\n    public isToggled: boolean;\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.value) {\n            this.isToggled = this.option === this.value;\n        }\n    }\n\n    public toggle() {\n        this.onToggled.emit(this.option);\n    }\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StringTogglerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SupportedMimeTypes.html":{"url":"interfaces/SupportedMimeTypes.html","title":"interface - SupportedMimeTypes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SupportedMimeTypes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/service.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\n\nexport interface Service extends Parameter {\n    id: string;\n    href: string;\n    label: string;\n    version: string;\n    extras: string[];\n    type: string;\n    quantities?: ServiceQuantities;\n    supportsfirstlatest?: boolean;\n    supportedmimetypes?: SupportedMimeTypes;\n    // for internal use:\n    apiUrl: string;\n}\n\nexport interface SupportedMimeTypes {}\n\nexport interface ServiceQuantities {\n    categories?: number;\n    features?: number;\n    offerings?: number;\n    phenomena?: number;\n    procedures?: number;\n    stations?: number;\n    timeseries?: number;\n    platforms?: number;\n    datasets?: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Time.html":{"url":"injectables/Time.html","title":"injectable - Time","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  Time\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/time/time.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                centerTimespan\n                            \n                            \n                                    Public\n                                createTimespanOfInterval\n                            \n                            \n                                    Public\n                                getBufferedTimespan\n                            \n                            \n                                    Private\n                                getDuration\n                            \n                            \n                                    Public\n                                initTimespan\n                            \n                            \n                                    Public\n                                loadTimespan\n                            \n                            \n                                    Public\n                                overlaps\n                            \n                            \n                                    Public\n                                saveTimespan\n                            \n                            \n                                    Public\n                                stepBack\n                            \n                            \n                                    Public\n                                stepForward\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/time/time.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorage\n                                                  \n                                                        \n                                                                    LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            centerTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        centerTimespan(timespan: Timespan, date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Timespan\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createTimespanOfInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createTimespanOfInterval(timeInterval: TimeInterval)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeInterval\n                                                        \n                                                                    TimeInterval\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Timespan\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getBufferedTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBufferedTimespan(timespan: Timespan, factor: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        factor\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Timespan\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getDuration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDuration(timespan: Timespan)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     moment.Duration\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initTimespan()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Timespan\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadTimespan(param: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Timespan\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            overlaps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        overlaps(timeInterval: TimeInterval, from: number, to: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeInterval\n                                                        \n                                                                    TimeInterval\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        from\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        to\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            saveTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveTimespan(param: string, timespan: Timespan)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stepBack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stepBack(timespan: Timespan)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Timespan\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stepForward\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stepForward(timespan: Timespan)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Timespan\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { plainToClass } from 'class-transformer';\nimport moment from 'moment';\n\nimport { LocalStorage } from '../local-storage/local-storage.service';\nimport { BufferedTime, TimeInterval, Timespan } from '../model/internal/timeInterval';\n\n@Injectable()\nexport class Time {\n\n    constructor(\n        protected localStorage: LocalStorage\n    ) { }\n\n    public centerTimespan(timespan: Timespan, date: Date): Timespan {\n        const halfduration = this.getDuration(timespan).asMilliseconds() / 2;\n        const from = moment(date).subtract(halfduration).unix() * 1000;\n        const to = moment(date).add(halfduration).unix() * 1000;\n        return new Timespan(from, to);\n    }\n\n    public stepBack(timespan: Timespan): Timespan {\n        const duration = this.getDuration(timespan);\n        const from = moment(timespan.from).subtract(duration).unix() * 1000;\n        const to = moment(timespan.to).subtract(duration).unix() * 1000;\n        return new Timespan(from, to);\n    }\n\n    public stepForward(timespan: Timespan): Timespan {\n        const duration = this.getDuration(timespan);\n        const from = moment(timespan.from).add(duration).unix() * 1000;\n        const to = moment(timespan.to).add(duration).unix() * 1000;\n        return new Timespan(from, to);\n    }\n\n    public overlaps(timeInterval: TimeInterval, from: number, to: number): boolean {\n        const timespan = this.createTimespanOfInterval(timeInterval);\n        if (timespan.from = from) {\n            return true;\n        }\n        return false;\n    }\n\n    public createTimespanOfInterval(timeInterval: TimeInterval): Timespan {\n        if (timeInterval instanceof Timespan) {\n            return timeInterval;\n        } else if (timeInterval instanceof BufferedTime) {\n            const duration = moment.duration(timeInterval.bufferInterval / 2);\n            const from = moment(timeInterval.timestamp).subtract(duration).unix() * 1000;\n            const to = moment(timeInterval.timestamp).add(duration).unix() * 1000;\n            return new Timespan(from, to);\n        } else {\n            console.error('Wrong time interval!');\n        }\n    }\n\n    public getBufferedTimespan(timespan: Timespan, factor: number): Timespan {\n        const durationMillis = this.getDuration(timespan).asMilliseconds();\n        const from = moment(timespan.from).subtract(durationMillis * factor).unix() * 1000;\n        const to = moment(timespan.to).add(durationMillis * factor).unix() * 1000;\n        return new Timespan(from, to);\n    }\n\n    public saveTimespan(param: string, timespan: Timespan) {\n        this.localStorage.save(param, timespan);\n    }\n\n    public loadTimespan(param: string): Timespan {\n        const json = this.localStorage.load(param);\n        if (json) {\n            return plainToClass(Timespan, json);\n        }\n        return null;\n    }\n\n    public initTimespan(): Timespan {\n        const now = new Date();\n        const start = moment(now).startOf('day').unix() * 1000;\n        const end = moment(now).endOf('day').unix() * 1000;\n        return new Timespan(start, end);\n    }\n\n    private getDuration(timespan: Timespan): moment.Duration {\n        const from = moment(timespan.from);\n        const to = moment(timespan.to);\n        return moment.duration(to.diff(from));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeInterval.html":{"url":"classes/TimeInterval.html","title":"class - TimeInterval","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeInterval\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/timeInterval.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class TimeInterval {\n\n}\n\nexport class Timespan extends TimeInterval {\n\n    public from: number;\n\n    public to: number;\n\n    constructor(\n        from: number,\n        to?: number\n    ) {\n        super();\n        this.from = from;\n        if (to) {\n            this.to = to;\n        } else {\n            this.to = from;\n        }\n    }\n\n}\n\nexport class BufferedTime extends TimeInterval {\n    public timestamp: Date;\n    public bufferInterval: number;\n\n    constructor(\n        timestamp: Date,\n        bufferInterval: number\n    ) {\n        super();\n        this.timestamp = timestamp;\n        this.bufferInterval = bufferInterval;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeListSelectorComponent.html":{"url":"components/TimeListSelectorComponent.html","title":"component - TimeListSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeListSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/time/src/lib/time-list-selector/time-list-selector.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-time-list-selector\n            \n\n\n\n\n            \n                templateUrl\n                ./time-list-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                selectTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                timeList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTimeSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        timeList\n                    \n                    \n                            \n                            Type:    number[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/time-list-selector/time-list-selector.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTimeSelected\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/time-list-selector/time-list-selector.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectTime(timestamp: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/time-list-selector/time-list-selector.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timestamp\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'n52-time-list-selector',\n  templateUrl: './time-list-selector.component.html'\n})\nexport class TimeListSelectorComponent {\n\n  @Input()\n  public timeList: number[];\n\n  @Output()\n  public onTimeSelected: EventEmitter = new EventEmitter();\n\n  public selectTime(timestamp: number) {\n    this.onTimeSelected.emit(timestamp);\n  }\n\n}\n\n    \n\n    \n        \n  {{time | date: 'medium'}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{time | date: \\'medium\\'}}'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimeListSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeRangeSliderCache.html":{"url":"injectables/TimeRangeSliderCache.html","title":"injectable - TimeRangeSliderCache","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TimeRangeSliderCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/time-range-slider/src/lib/time-range-slider.service.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IdCache, Timespan } from '@helgoland/core';\n\n@Injectable()\nexport class TimeRangeSliderCache extends IdCache { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeRangeSliderComponent.html":{"url":"components/TimeRangeSliderComponent.html","title":"component - TimeRangeSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeRangeSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-time-range-slider\n            \n\n            \n                styleUrls\n                time-range-slider.component.scss,.../../../../node_modules/bootstrap-slider/dist/css/bootstrap-slider.min.css\n            \n\n\n\n            \n                templateUrl\n                ./time-range-slider.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                end\n                            \n                            \n                                    Public\n                                selectionEnd\n                            \n                            \n                                    Public\n                                selectionStart\n                            \n                            \n                                    Public\n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                timeList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTimespanSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: TimeRangeSliderCache)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                    TimeRangeSliderCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                    \n                        \n                            Default value: ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        timeList\n                    \n                    \n                            \n                            Type:    number[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts:25\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTimespanSelected\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts:28\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            end\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        end:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectionEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectionEnd:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectionStart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectionStart:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        start:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import 'bootstrap-slider';\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { Timespan } from '@helgoland/core';\n\nimport { TimeRangeSliderCache } from './time-range-slider.service';\n\nimport jquery from 'jquery';\n\n@Component({\n  selector: 'n52-time-range-slider',\n  templateUrl: './time-range-slider.component.html',\n  styleUrls: [\n    './time-range-slider.component.scss',\n    '../../../../../node_modules/bootstrap-slider/dist/css/bootstrap-slider.min.css'\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TimeRangeSliderComponent implements OnChanges {\n\n  @Input()\n  public id = '';\n\n  @Input()\n  public timeList: number[];\n\n  @Output()\n  public onTimespanSelected: EventEmitter = new EventEmitter();\n\n  public start: number;\n  public selectionStart: number;\n  public end: number;\n  public selectionEnd: number;\n\n  constructor(\n    protected cache: TimeRangeSliderCache\n  ) { }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.timeList && this.timeList) {\n      let min; let max;\n      this.start = min = this.timeList[0];\n      this.end = max = this.timeList[this.timeList.length - 1];\n      if (this.id && this.cache.has(this.id)) {\n        this.selectionStart = this.cache.get(this.id).from;\n        this.selectionEnd = this.cache.get(this.id).to;\n      } else {\n        this.selectionStart = this.start;\n        this.selectionEnd = this.end;\n      }\n      jquery('#slider').slider({\n        tooltip: 'hide',\n        min,\n        max,\n        value: [this.selectionStart, this.selectionEnd]\n      }).on('slideStop', (event: any) => {\n        const timespan: Timespan = new Timespan(event.value[0], event.value[1]);\n        this.cache.set(this.id, timespan);\n        this.onTimespanSelected.emit(timespan);\n      }).on('slide', (event: any) => {\n        this.selectionStart = event.value[0];\n        this.selectionEnd = event.value[1];\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{start | date : 'short'}}\n    \n    \n      \n    \n    \n      {{end | date : 'short'}}\n    \n  \n  \n    {{selectionStart | date : 'short'}}\n     - \n    {{selectionEnd | date : 'short'}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{start | date : \\'short\\'}}                            {{end | date : \\'short\\'}}            {{selectionStart | date : \\'short\\'}}     -     {{selectionEnd | date : \\'short\\'}}  '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimeRangeSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeValueEntry.html":{"url":"interfaces/TimeValueEntry.html","title":"interface - TimeValueEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeValueEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/data.ts\n        \n\n\n            \n                Extends\n            \n            \n                    IDataEntry\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        timestamp\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IDataEntry { }\n\nexport interface Data {\n    values: T[];\n    referenceValues: ReferenceValues;\n}\n\nexport class ReferenceValues {\n    [key: string]: T[];\n}\n\nexport interface TimeValueEntry extends IDataEntry {\n    timestamp: number;\n    value: number;\n}\n\nexport interface LocatedTimeValueEntry extends TimeValueEntry {\n    geometry: GeoJSON.Point;\n}\n\nexport interface ProfileDataEntry extends IDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n}\n\nexport interface LocatedProfileDataEntry extends ProfileDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n    geometry: GeoJSON.GeoJsonObject;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimedDatasetOptions.html":{"url":"classes/TimedDatasetOptions.html","title":"class - TimedDatasetOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimedDatasetOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/options.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DatasetOptions\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                timestamp\n                            \n                            \n                                    Public\n                                color\n                            \n                            \n                                    Public\n                                    Optional\n                                generalize\n                            \n                            \n                                    Public\n                                internalId\n                            \n                            \n                                    Public\n                                lineWidth\n                            \n                            \n                                    Public\n                                    Optional\n                                loading\n                            \n                            \n                                    Public\n                                pointRadius\n                            \n                            \n                                    Public\n                                    Optional\n                                separateYAxis\n                            \n                            \n                                    Public\n                                showReferenceValues\n                            \n                            \n                                    Public\n                                visible\n                            \n                            \n                                    Public\n                                    Optional\n                                yAxisRange\n                            \n                            \n                                    Public\n                                    Optional\n                                zeroBasedYAxis\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(internalId: string, color: string, timestamp: number)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/model/internal/options.ts:117\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        color\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        timestamp\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timestamp:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            color\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        color:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:23\n                            \n                        \n\n                \n                    \n                        color of the dataset\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            generalize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        generalize:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:57\n                            \n                        \n\n                \n                    \n                        marker to request dataset data generalized\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            internalId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        internalId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:15\n                            \n                        \n\n                \n                    \n                        internal dataset id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lineWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lineWidth:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:81\n                            \n                        \n\n                \n                    \n                        width of graphline\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pointRadius\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pointRadius:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:73\n                            \n                        \n\n                \n                    \n                        radius of graphpoint\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            separateYAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        separateYAxis:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:41\n                            \n                        \n\n                \n                    \n                        separate y axis of datasets with same unit\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showReferenceValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showReferenceValues:     ReferenceValueOption[]\n\n                    \n                \n                    \n                        \n                            Type :     ReferenceValueOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:65\n                            \n                        \n\n                \n                    \n                        list of visible reference values\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:31\n                            \n                        \n\n                \n                    \n                        show or hide in the graph\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            yAxisRange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        yAxisRange:     MinMaxRange\n\n                    \n                \n                    \n                        \n                            Type :     MinMaxRange\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:89\n                            \n                        \n\n                \n                    \n                        min and max range of y axis\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            zeroBasedYAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zeroBasedYAxis:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:49\n                            \n                        \n\n                \n                    \n                        align graph that zero y axis is visible\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DatasetOptions {\n\n    /**\n     * internal dataset id\n     *\n     * @type {string}\n     * @memberof DatasetOptions\n     */\n    public internalId: string;\n\n    /**\n     * color of the dataset\n     *\n     * @type {string}\n     * @memberof DatasetOptions\n     */\n    public color: string;\n\n    /**\n     * show or hide in the graph\n     *\n     * @type {boolean}\n     * @memberof DatasetOptions\n     */\n    public visible: boolean = true;\n\n    public loading?: boolean;\n\n    /**\n     * separate y axis of datasets with same unit\n     *\n     * @type {boolean}\n     * @memberof DatasetOptions\n     */\n    public separateYAxis?: boolean = false;\n\n    /**\n     * align graph that zero y axis is visible\n     *\n     * @type {boolean}\n     * @memberof DatasetOptions\n     */\n    public zeroBasedYAxis?: boolean = false;\n\n    /**\n     * marker to request dataset data generalized\n     *\n     * @type {boolean}\n     * @memberof DatasetOptions\n     */\n    public generalize?: boolean = false;\n\n    /**\n     * list of visible reference values\n     *\n     * @type {ReferenceValueOption[]}\n     * @memberof DatasetOptions\n     */\n    public showReferenceValues: ReferenceValueOption[] = [];\n\n    /**\n     * radius of graphpoint\n     *\n     * @type {number}\n     * @memberof DatasetOptions\n     */\n    public pointRadius: number = 0;\n\n    /**\n     * width of graphline\n     *\n     * @type {number}\n     * @memberof DatasetOptions\n     */\n    public lineWidth: number = 1;\n\n    /**\n     * min and max range of y axis\n     *\n     * @type {MinMaxRange}\n     * @memberof DatasetOptions\n     */\n    public yAxisRange?: MinMaxRange;\n\n    constructor(\n        internalId: string,\n        color: string\n    ) {\n        this.internalId = internalId;\n        this.color = color;\n    }\n}\n\nexport class ReferenceValueOption {\n    public id: string;\n    public color: string;\n}\n\n/**\n * numbered range with a min and a max value\n *\n * @export\n * @interface MinMaxRange\n */\nexport interface MinMaxRange {\n    min: number;\n    max: number;\n}\n\nexport class TimedDatasetOptions extends DatasetOptions {\n    public timestamp: number;\n\n    constructor(\n        internalId: string,\n        color: string,\n        timestamp: number\n    ) {\n        super(internalId, color);\n        this.timestamp = timestamp;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Timeseries.html":{"url":"classes/Timeseries.html","title":"class - Timeseries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Timeseries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IDataset\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                firstValue\n                            \n                            \n                                    Public\n                                hasData\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                internalId\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                lastValue\n                            \n                            \n                                    Public\n                                parameters\n                            \n                            \n                                    Public\n                                referenceValues\n                            \n                            \n                                    Public\n                                station\n                            \n                            \n                                    Public\n                                    Optional\n                                statusIntervals\n                            \n                            \n                                    Public\n                                uom\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstValue:     FirstLastValue\n\n                    \n                \n                    \n                        \n                            Type :     FirstLastValue\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasData:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            internalId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        internalId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastValue:     FirstLastValue\n\n                    \n                \n                    \n                        \n                            Type :     FirstLastValue\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parameters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parameters:     ParameterConstellation\n\n                    \n                \n                    \n                        \n                            Type :     ParameterConstellation\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            referenceValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        referenceValues:     ReferenceValue[]\n\n                    \n                \n                    \n                        \n                            Type :     ReferenceValue[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            station\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        station:     Station\n\n                    \n                \n                    \n                        \n                            Type :     Station\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            statusIntervals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statusIntervals:     StatusInterval[]\n\n                    \n                \n                    \n                        \n                            Type :     StatusInterval[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uom:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeseriesCollection.html":{"url":"classes/TimeseriesCollection.html","title":"class - TimeseriesCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeseriesCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/station.ts\n        \n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ParameterConstellation\n\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/model/dataset-api/station.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        import { ParameterConstellation, Timeseries } from './dataset';\nimport { Parameter } from './parameter';\n\nexport class Station {\n    public id: string;\n    public geometry: GeoJSON.GeometryObject;\n    public properties: StationProperties;\n}\n\nexport interface StationProperties extends Parameter {\n    timeseries: TimeseriesCollection | Timeseries;\n}\n\nexport class TimeseriesCollection {\n    [key: string]: ParameterConstellation;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeseriesExtras.html":{"url":"interfaces/TimeseriesExtras.html","title":"interface - TimeseriesExtras","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeseriesExtras\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        license\n                                \n                                \n                                            Optional\n                                        statusIntervals\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        license\n                                    \n                                \n                                \n                                    \n                                        license:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusIntervals\n                                    \n                                \n                                \n                                    \n                                        statusIntervals:     StatusInterval[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StatusInterval[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Timespan.html":{"url":"classes/Timespan.html","title":"class - Timespan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Timespan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/timeInterval.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeInterval\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                from\n                            \n                            \n                                    Public\n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(from: number, to?: number)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/model/internal/timeInterval.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        from\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        to\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            from\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        from:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/timeInterval.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            to\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        to:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/timeInterval.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class TimeInterval {\n\n}\n\nexport class Timespan extends TimeInterval {\n\n    public from: number;\n\n    public to: number;\n\n    constructor(\n        from: number,\n        to?: number\n    ) {\n        super();\n        this.from = from;\n        if (to) {\n            this.to = to;\n        } else {\n            this.to = from;\n        }\n    }\n\n}\n\nexport class BufferedTime extends TimeInterval {\n    public timestamp: Date;\n    public bufferInterval: number;\n\n    constructor(\n        timestamp: Date,\n        bufferInterval: number\n    ) {\n        super();\n        this.timestamp = timestamp;\n        this.bufferInterval = bufferInterval;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimespanButtonComponent.html":{"url":"components/TimespanButtonComponent.html","title":"component - TimespanButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimespanButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/time/src/lib/timespan-button/timespan-button.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-timespan-button\n            \n\n\n\n\n            \n                templateUrl\n                ./timespan-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                predefined\n                            \n                            \n                                timespanFunc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTimespanSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(predefinedSrvc: DefinedTimespanService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/time/src/lib/timespan-button/timespan-button.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        predefinedSrvc\n                                                  \n                                                        \n                                                                    DefinedTimespanService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-button/timespan-button.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        predefined\n                    \n                    \n                            \n                            Type:    string | DefinedTimespan\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-button/timespan-button.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        timespanFunc\n                    \n                    \n                            \n                            Type:    function\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-button/timespan-button.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTimespanSelected\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-button/timespan-button.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clicked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clicked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-button/timespan-button.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DefinedTimespan, DefinedTimespanService, Timespan } from '@helgoland/core';\n\n@Component({\n  selector: 'n52-timespan-button',\n  templateUrl: './timespan-button.component.html'\n})\nexport class TimespanButtonComponent {\n\n  @Input()\n  public predefined: string | DefinedTimespan;\n\n  @Input()\n  public label: string;\n\n  @Input()\n  public timespanFunc: () => Timespan;\n\n  @Output()\n  public onTimespanSelected: EventEmitter = new EventEmitter();\n\n  constructor(\n    protected predefinedSrvc: DefinedTimespanService\n  ) { }\n\n  public clicked() {\n    if (this.predefined) {\n      this.onTimespanSelected.emit(this.predefinedSrvc.getInterval(this.predefined as DefinedTimespan));\n      return;\n    }\n    if (this.timespanFunc) {\n      this.onTimespanSelected.emit(this.timespanFunc());\n      return;\n    }\n    this.onTimespanSelected.emit();\n  }\n\n}\n\n    \n\n    \n        \n  {{label}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimespanButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimespanMomentTemplate.html":{"url":"interfaces/TimespanMomentTemplate.html","title":"interface - TimespanMomentTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimespanMomentTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/settings/settings.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        from\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timespan } from './../internal/timeInterval';\n\nexport interface Settings {\n    datasetApis?: DatasetApi[];\n    providerBlackList?: BlacklistedService[];\n    solveLabels?: boolean;\n    proxyUrl?: string;\n    timespanPresets?: TimespanPreset[];\n    colorList?: string[];\n    languages?: [{ label: string, code: string }];\n    refreshDataInterval?: number;\n}\n\nexport interface DatasetApi {\n    name: string;\n    url: string;\n}\n\nexport interface BlacklistedService {\n    serviceId: string;\n    apiUrl: string;\n}\n\nexport interface TimespanPreset {\n    name: string;\n    label: string;\n    timespan: TimespanMomentTemplate;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface ParsedTimespanPreset {\n    name: string;\n    label: string;\n    timespan: Timespan;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface TimespanMomentTemplate {\n    to: string;\n    from: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimespanPreset.html":{"url":"interfaces/TimespanPreset.html","title":"interface - TimespanPreset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimespanPreset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/settings/settings.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        seperatorAfterThisItem\n                                \n                                \n                                        timespan\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seperatorAfterThisItem\n                                    \n                                \n                                \n                                    \n                                        seperatorAfterThisItem:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timespan\n                                    \n                                \n                                \n                                    \n                                        timespan:     TimespanMomentTemplate\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TimespanMomentTemplate\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timespan } from './../internal/timeInterval';\n\nexport interface Settings {\n    datasetApis?: DatasetApi[];\n    providerBlackList?: BlacklistedService[];\n    solveLabels?: boolean;\n    proxyUrl?: string;\n    timespanPresets?: TimespanPreset[];\n    colorList?: string[];\n    languages?: [{ label: string, code: string }];\n    refreshDataInterval?: number;\n}\n\nexport interface DatasetApi {\n    name: string;\n    url: string;\n}\n\nexport interface BlacklistedService {\n    serviceId: string;\n    apiUrl: string;\n}\n\nexport interface TimespanPreset {\n    name: string;\n    label: string;\n    timespan: TimespanMomentTemplate;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface ParsedTimespanPreset {\n    name: string;\n    label: string;\n    timespan: Timespan;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface TimespanMomentTemplate {\n    to: string;\n    from: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimespanShiftSelectorComponent.html":{"url":"components/TimespanShiftSelectorComponent.html","title":"component - TimespanShiftSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimespanShiftSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/time/src/lib/timespan-shift-selector/timespan-shift-selector.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-timespan-shift-selector\n            \n\n\n\n\n            \n                templateUrl\n                ./timespan-shift-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                back\n                            \n                            \n                                    Public\n                                forward\n                            \n                            \n                                    Public\n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                timespan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onOpenTimeSettings\n                            \n                            \n                                onTimespanChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(timeSrvc: Time)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/time/src/lib/timespan-shift-selector/timespan-shift-selector.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeSrvc\n                                                  \n                                                        \n                                                                    Time\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        timespan\n                    \n                    \n                            \n                            Type:    Timespan\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-shift-selector/timespan-shift-selector.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onOpenTimeSettings\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-shift-selector/timespan-shift-selector.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onTimespanChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-shift-selector/timespan-shift-selector.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            back\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        back()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-shift-selector/timespan-shift-selector.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forward\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forward()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-shift-selector/timespan-shift-selector.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        open()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-shift-selector/timespan-shift-selector.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Time, Timespan } from '@helgoland/core';\n\n@Component({\n  selector: 'n52-timespan-shift-selector',\n  templateUrl: './timespan-shift-selector.component.html'\n})\nexport class TimespanShiftSelectorComponent {\n\n  @Input()\n  public timespan: Timespan;\n\n  @Output()\n  public onTimespanChange: EventEmitter = new EventEmitter();\n\n  @Output()\n  public onOpenTimeSettings: EventEmitter = new EventEmitter();\n\n  constructor(\n    protected timeSrvc: Time\n  ) { }\n\n  public back() {\n    this.onTimespanChange.emit(this.timeSrvc.stepBack(this.timespan));\n  }\n\n  public forward() {\n    this.onTimespanChange.emit(this.timeSrvc.stepForward(this.timespan));\n  }\n\n  public open() {\n    this.onOpenTimeSettings.emit();\n  }\n}\n\n    \n\n    \n        \n   &lt; \n  \n    {{timespan.from | date : 'medium'}} &nbsp;&ndash;&nbsp; {{timespan.to | date : 'medium'}}\n  \n   &gt; \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         {{timespan.from | date : \\'medium\\'}}  –  {{timespan.to | date : \\'medium\\'}}     > '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimespanShiftSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrajectoryEntryComponent.html":{"url":"components/TrajectoryEntryComponent.html","title":"component - TrajectoryEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TrajectoryEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ListEntryComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-trajectory-entry\n            \n\n\n\n\n            \n                templateUrl\n                ./trajectory-entry.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dataset\n                            \n                            \n                                    Public\n                                tempColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editDatasetOptions\n                            \n                            \n                                    Protected\n                                loadDataset\n                            \n                            \n                                    Public\n                                toggleVisibility\n                            \n                            \n                                    Protected\n                                    \n                                loadDataset\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                removeDataset\n                            \n                            \n                                    Public\n                                toggleSelection\n                            \n                            \n                                    Public\n                                toggleUomSelection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                datasetOptions\n                            \n                            \n                                datasetId\n                            \n                            \n                                highlight\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onEditOptions\n                            \n                            \n                                onUpdateOptions\n                            \n                            \n                                onDeleteDataset\n                            \n                            \n                                onSelectDataset\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: DatasetApiInterface, internalIdHandler: InternalIdHandler)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        internalIdHandler\n                                                  \n                                                        \n                                                                    InternalIdHandler\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        datasetOptions\n                    \n                    \n                            \n                            Type:    DatasetOptions\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        datasetId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:7\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        highlight\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onEditOptions\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onUpdateOptions\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onDeleteDataset\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onSelectDataset\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editDatasetOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        editDatasetOptions(options: DatasetOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    DatasetOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            loadDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadDataset(id: string, url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleVisibility\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleVisibility()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            loadDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadDataset(id: string, url: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeDataset()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleSelection()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleUomSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleUomSelection(id: , selected: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        selected\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataset:     Dataset\n\n                    \n                \n                    \n                        \n                            Type :     Dataset\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempColor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DatasetApiInterface, Dataset, DatasetOptions, InternalIdHandler } from '@helgoland/core';\n\nimport { ListEntryComponent } from '../list-entry.component';\n\n@Component({\n    selector: 'n52-trajectory-entry',\n    templateUrl: './trajectory-entry.component.html'\n})\nexport class TrajectoryEntryComponent extends ListEntryComponent {\n\n    @Input()\n    public datasetOptions: DatasetOptions;\n\n    @Output()\n    public onUpdateOptions: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onEditOptions: EventEmitter = new EventEmitter();\n\n    public dataset: Dataset;\n\n    public tempColor: string;\n\n    constructor(\n        protected api: DatasetApiInterface,\n        protected internalIdHandler: InternalIdHandler\n    ) {\n        super(internalIdHandler);\n    }\n\n    public toggleVisibility() {\n        this.datasetOptions.visible = !this.datasetOptions.visible;\n        this.onUpdateOptions.emit(this.datasetOptions);\n    }\n\n    public editDatasetOptions(options: DatasetOptions) {\n        this.onEditOptions.emit(options);\n    }\n\n    protected loadDataset(id: string, url: string): void {\n        this.api.getDataset(id, url).subscribe((dataset) => this.dataset = dataset);\n    }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  {{dataset?.parameters.phenomenon.label}}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{dataset?.parameters.phenomenon.label}}  '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrajectoryEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrajectoryResult.html":{"url":"interfaces/TrajectoryResult.html","title":"interface - TrajectoryResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrajectoryResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/selector/model/trajectory-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        dataset\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     LocatedProfileDataEntry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LocatedProfileDataEntry\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataset\n                                    \n                                \n                                \n                                    \n                                        dataset:     IDataset\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IDataset\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDataset, LocatedProfileDataEntry } from '@helgoland/core';\n\nexport interface TrajectoryResult {\n    dataset: IDataset;\n    data: LocatedProfileDataEntry;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UriParameterCoder.html":{"url":"classes/UriParameterCoder.html","title":"class - UriParameterCoder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UriParameterCoder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/api-interface.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        HttpParameterCodec\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                decodeKey\n                            \n                            \n                                    Public\n                                decodeValue\n                            \n                            \n                                    Public\n                                encodeKey\n                            \n                            \n                                    Public\n                                encodeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            decodeKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decodeKey(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/api-interface.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            decodeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decodeValue(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/api-interface.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            encodeKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        encodeKey(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/api-interface.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            encodeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        encodeValue(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/api-interface.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpParameterCodec, HttpParams } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\n\nimport { ApiInterface } from '../abstract-services/api-interface';\nimport { Category } from '../model/dataset-api/category';\nimport { Data } from '../model/dataset-api/data';\nimport { Dataset, Timeseries, TimeseriesExtras } from '../model/dataset-api/dataset';\nimport { Feature } from '../model/dataset-api/feature';\nimport { Offering } from '../model/dataset-api/offering';\nimport { Phenomenon } from '../model/dataset-api/phenomenon';\nimport { Platform } from '../model/dataset-api/platform';\nimport { Procedure } from '../model/dataset-api/procedure';\nimport { Service } from '../model/dataset-api/service';\nimport { Station } from '../model/dataset-api/station';\nimport { DataParameterFilter, HttpRequestOptions, ParameterFilter } from '../model/internal/http-requests';\nimport { Timespan } from '../model/internal/timeInterval';\nimport { HttpService, HttpServiceMetadata } from './http.service';\nimport { DatasetApiV2 } from './interfaces/api-v2.interface';\n\nexport class UriParameterCoder implements HttpParameterCodec {\n\n    public encodeKey(key: string): string {\n        return encodeURIComponent(key);\n    }\n\n    public encodeValue(value: string): string {\n        return encodeURIComponent(value);\n    }\n\n    public decodeKey(key: string): string {\n        return key;\n    }\n\n    public decodeValue(value: string): string {\n        return value;\n    }\n}\n\nexport abstract class DatasetApiInterface extends ApiInterface implements DatasetApiV2 {\n\n    constructor(\n        protected httpService: HttpService,\n        protected translate: TranslateService\n    ) { super(); }\n\n    public abstract getPlatforms(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getPlatform(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getDatasets(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getDataset(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getData(\n        id: string, apiUrl: string, timespan: Timespan, params?: DataParameterFilter, options?: HttpRequestOptions\n    ): Observable>;\n    public abstract getServices(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getService(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getStations(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getStation(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getTimeseries(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getSingleTimeseries(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getTimeseriesExtras(id: string, apiUrl: string): Observable;\n    public abstract getTsData(\n        id: string, apiUrl: string, timespan: Timespan, params?: DataParameterFilter, options?: HttpRequestOptions\n    ): Observable>;\n    public abstract getCategories(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getCategory(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getPhenomena(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getPhenomenon(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getOfferings(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getOffering(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getFeatures(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getFeature(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getProcedures(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getProcedure(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n\n    protected requestApi(url: string, params: ParameterFilter = {}, options: HttpServiceMetadata = {}): Observable {\n        return this.httpService.client(options).get(url, { params: this.prepareParams(params) });\n    }\n\n    protected prepareParams(params: ParameterFilter): HttpParams {\n        if (this.translate && this.translate.currentLang) {\n            params.locale = this.translate.currentLang;\n        }\n        let httpParams = new HttpParams({\n            encoder: new UriParameterCoder()\n        });\n        Object.getOwnPropertyNames(params)\n            .forEach((key) => httpParams = httpParams.set(key, params[key]));\n        return httpParams;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/YScale.html":{"url":"interfaces/YScale.html","title":"interface - YScale","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  YScale\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/d3/src/lib/d3-timeseries-graph/d3-timeseries-graph.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        buffer\n                                \n                                \n                                        yScale\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buffer\n                                    \n                                \n                                \n                                    \n                                        buffer:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yScale\n                                    \n                                \n                                \n                                    \n                                        yScale:     d3.ScaleLinear\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     d3.ScaleLinear\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    IterableDiffers,\n    Output,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    ColorService,\n    Data,\n    DatasetApiInterface,\n    DatasetOptions,\n    DatasetPresenterComponent,\n    IDataset,\n    InternalIdHandler,\n    MinMaxRange,\n    Time,\n    Timeseries,\n    Timespan,\n} from '@helgoland/core';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { D3PlotOptions } from '../model/d3-plot-options';\n\ninterface DataEntry {\n    yDiagCoord?: number;\n    timestamp?: number;\n    xDiagMin?: number;\n    xDiagMax?: number;\n    yDiagMin?: number;\n    yDiagMax?: number;\n    xDiagCoord?: number;\n}\n\ninterface HighlightDataset {\n    id: string;\n    change: boolean;\n}\n\ninterface YScale {\n    buffer: number;\n    yScale: d3.ScaleLinear;\n}\n\ninterface YRanges {\n    uom: string;\n    range: MinMaxRange;\n    zeroBased: boolean;\n    ids: string[];\n    first?: boolean;\n    yScale?: d3.ScaleLinear;\n    offset?: number;\n}\n\ninterface InternalDataEntry {\n    internalId: string;\n    color: string;\n    data: [number, number][];\n    points: {\n        fillColor: string\n    };\n    lines: {\n        lineWidth: number;\n        pointRadius: number;\n    };\n    bars: {\n        lineWidth: number;\n    };\n    axisOptions: {\n        uom: string;\n        label: string;\n        zeroBased: boolean;\n        yAxisRange: MinMaxRange;\n    };\n    visible: boolean;\n}\n\ninterface DataYRange {\n    uom: string;\n    range?: MinMaxRange;\n    id: string;\n    zeroBasedYAxis: boolean;\n}\n\ninterface DataConst extends IDataset {\n    data?: Data;\n}\n\n@Component({\n    selector: 'n52-d3-timeseries-graph',\n    templateUrl: './d3-timeseries-graph.component.html',\n    styleUrls: ['./d3-timeseries-graph.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class D3TimeseriesGraphComponent\n    extends DatasetPresenterComponent\n    implements AfterViewInit {\n\n    @Input()\n    // difference to timespan/timeInterval --> if brush, then this is the timespan of the main-diagram\n    public mainTimeInterval: Timespan;\n\n    @Output()\n    public onSelectId: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onContentLoading: EventEmitter = new EventEmitter();\n\n    @ViewChild('d3timeseries')\n    public d3Elem: ElementRef;\n\n    // set zoom limit --> can be adapted to needs\n    private config = {\n        time: {\n            zoomLimit: 10800000  // 3 hour ((3 * 3600) * 1000) limitation\n        }\n    };\n\n    private preparedData = Array(); // : DataSeries[]\n    private mousedownBrush: boolean;\n    private rawSvg: any; // d3.Selection;\n    private graph: any;\n    private graphBody: any;\n    private dragRect: any;\n    private dragRectG: any;\n    private xAxisRange: Timespan; // x domain range\n    private xAxisRangeOrigin: any; // x domain range\n    private xAxisRangePan: [number, number]; // x domain range\n    private yRangesEachUom: YRanges[]; // y array of objects containing ranges for each uom\n    private dataYranges: DataYRange[]; // y array of objects containing ranges of all datasets\n    private ypos: any; // y array of objects containing ranges of all datasets\n    private idxOfPos = 0;\n\n    private height: number;\n    private width: number;\n    private margin = {\n        top: 10,\n        right: 10,\n        bottom: 40,\n        left: 40\n    };\n    private maxLabelwidth = 0;\n    private xScaleBase: d3.ScaleLinear; // calculate diagram coord of x value\n    private yScaleBase: d3.ScaleLinear; // calculate diagram coord of y value\n    private background: any;\n    private focusG: any;\n    private highlightFocus: any;\n    private focuslabelTime: any;\n    private bufferSum: number;\n    private labelTimestamp: number[];\n\n    private dragging: boolean;\n    private dragStart: [number, number];\n    private dragCurrent: [number, number];\n\n    private draggingMove: boolean;\n    private dragMoveStart: [number, number];\n    private dragMoveRange: [number, number];\n\n    private addLineWidth = 2; // value added to linewidth\n\n    // default plot options\n    private plotOptions: D3PlotOptions = {\n        showReferenceValues: false,\n        generalizeAllways: true,\n        togglePanZoom: true,\n        hoverable: true,\n        grid: true,\n        yaxis: true,\n        overview: false\n    };\n\n    private datasetMap: Map = new Map();\n\n    private loadingCounter = 0;\n    private currentTimeId: string;\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time,\n        private colorService: ColorService\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc);\n    }\n\n    public ngAfterViewInit(): void {\n        this.currentTimeId = this.uuidv4();\n\n        this.rawSvg = d3.select(this.d3Elem.nativeElement)\n            .append('svg')\n            .attr('width', '100%')\n            .attr('height', '100%');\n\n        this.graph = this.rawSvg\n            .append('g')\n            .attr('transform', 'translate(' + (this.margin.left + this.maxLabelwidth) + ',' + this.margin.top + ')');\n\n        this.mousedownBrush = false;\n        this.dataYranges = [];\n        this.xAxisRangeOrigin = [];\n    }\n\n    public reloadData(): void {\n        // not implemented yet\n    }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getSingleTimeseries(id, url).subscribe(\n            (timeseries) => this.loadAddedDataset(timeseries),\n            (error) => {\n                this.api.getDataset(id, url).subscribe(\n                    (dataset) => this.loadAddedDataset(dataset),\n                );\n            }\n        );\n    }\n    protected removeDataset(internalId: string): void {\n        this.dataYranges = [];\n        this.xAxisRangeOrigin = [];\n        this.datasetMap.delete(internalId);\n        let spliceIdx = this.preparedData.findIndex((entry) => entry.internalId === internalId);\n        if (spliceIdx >= 0) {\n            this.preparedData.splice(spliceIdx, 1);\n            if (this.preparedData.length  {\n                    this.processData(entry);\n                });\n            }\n        }\n    }\n    protected setSelectedId(internalId: string): void {\n        const tsData = this.preparedData.find((e) => e.internalId === internalId);\n        if (!tsData.selected || tsData.selected === undefined) {\n            tsData.selected = true;\n            tsData.lines.lineWidth += this.addLineWidth;\n            tsData.lines.pointRadius += this.addLineWidth;\n            tsData.bars.lineWidth += this.addLineWidth;\n        }\n        this.plotGraph();\n    }\n    protected removeSelectedId(internalId: string): void {\n        const tsData = this.preparedData.find((e) => e.internalId === internalId);\n        if (tsData.selected || tsData.selected === undefined) {\n            tsData.selected = false;\n            tsData.lines.lineWidth -= this.addLineWidth;\n            tsData.lines.pointRadius -= this.addLineWidth;\n            tsData.bars.lineWidth -= this.addLineWidth;\n        }\n        this.plotGraph();\n    }\n    protected graphOptionsChanged(options: D3PlotOptions): void {\n\n        Object.assign(this.plotOptions, options);\n        if (this.rawSvg && this.yRangesEachUom) {\n            this.plotGraph();\n        }\n    }\n    protected datasetOptionsChanged(internalId: string, options: DatasetOptions, firstChange: boolean) {\n        if (!firstChange && this.datasetMap.has(internalId)) {\n            this.loadDataset(this.datasetMap.get(internalId));\n        }\n    }\n    protected timeIntervalChanges(): void {\n        this.datasetMap.forEach((dataset) => {\n            this.loadDataset(dataset);\n        });\n    }\n    protected onResize(): void {\n        this.plotGraph();\n    }\n\n    private changeTime(from: number, to: number) {\n        if (to - from (dataset.id, dataset.url, buffer,\n                {\n                    format: 'flot',\n                    expanded: this.plotOptions.showReferenceValues === true,\n                    generalize: this.plotOptions.generalizeAllways || datasetOptions.generalize\n                }\n            ).subscribe(\n                (result) => {\n                    this.datasetMap.get(dataset.internalId).data = result;\n                    this.prepareTsData(dataset).subscribe(() => {\n                    });\n                },\n                (error) => this.onError(error),\n                () => {\n                    this.onCompleteLoadingData();\n                }\n            );\n        }\n    }\n\n    private onCompleteLoadingData() {\n        this.loadingCounter--;\n        if (this.loadingCounter === 0) { this.isContentLoadingD3(false); }\n    }\n\n    /**\n     * Function to prepare each dataset for the graph and adding it to an array of datasets.\n     * @param dataset {IDataset} Object of the whole dataset\n     */\n    private prepareTsData(dataset: IDataset): Observable { // , data: Data\n        return Observable.create((observer: Observer) => {\n            const datasetIdx = this.preparedData.findIndex((e) => e.internalId === dataset.internalId);\n            const styles = this.datasetOptions.get(dataset.internalId);\n            const data = this.datasetMap.get(dataset.internalId).data;\n\n            // TODO: change uom for testing\n            // if (this.preparedData.length > 0) {\n            //     dataset.uom = 'mc';\n            // }\n\n            // generate random color, if color is not defined\n            if (styles.color === undefined) {\n                styles.color = this.colorService.getColor();\n            }\n\n\n            // end of check for datasets\n            const dataEntry: InternalDataEntry = {\n                internalId: dataset.internalId,\n                color: styles.color,\n                data: styles.visible ? data.values : [],\n                points: {\n                    fillColor: styles.color\n                },\n                lines: {\n                    lineWidth: styles.lineWidth,\n                    pointRadius: styles.pointRadius\n                },\n                bars: {\n                    lineWidth: styles.lineWidth\n                },\n                axisOptions: {\n                    uom: dataset.uom,\n                    label: dataset.label,\n                    zeroBased: styles.zeroBasedYAxis,\n                    yAxisRange: styles.yAxisRange\n                },\n                visible: styles.visible\n            };\n            // alternative linewWidth = this.plotOptions.selected.includes(dataset.uom)\n            if (this.selectedDatasetIds.indexOf(dataset.internalId) >= 0) {\n                dataEntry.lines.lineWidth += this.addLineWidth;\n                dataEntry.lines.pointRadius += this.addLineWidth;\n                dataEntry.bars.lineWidth += this.addLineWidth;\n            }\n\n            if (datasetIdx >= 0) {\n                this.preparedData[datasetIdx] = dataEntry;\n            } else {\n                this.preparedData.push(dataEntry);\n            }\n            this.addReferenceValueData(dataset.internalId, styles, data, dataset.uom);\n            this.processData(dataEntry);\n            this.plotGraph();\n        });\n    }\n\n    /**\n     * Function to add referencevaluedata to the dataset (e.g. mean).\n     * @param internalId {String} String with the id of a dataset\n     * @param styles {DatasetOptions} Object containing information for dataset styling\n     * @param data {Data} Array of Arrays containing the measurement-data of the dataset\n     * @param uomO {String} String with the uom of a dataset\n     */\n    private addReferenceValueData(internalId: string, styles: DatasetOptions, data: Data, uomO: string) {\n        this.preparedData = this.preparedData.filter((entry) => {\n            return !entry.internalId.startsWith('ref' + internalId);\n        });\n        if (this.plotOptions.showReferenceValues) {\n            styles.showReferenceValues.forEach((refValue) => {\n                const refDataEntry = {\n                    internalId: 'ref' + internalId + refValue.id,\n                    color: refValue.color,\n                    data: data.referenceValues[refValue.id],\n                    points: {\n                        fillColor: refValue.color\n                    },\n                    lines: {\n                        lineWidth: 1\n                    },\n                    axisOptions: {\n                        uom: uomO\n                    }\n                };\n                this.preparedData.push(refDataEntry);\n            });\n        }\n    }\n\n    /**\n     * Function that processes the data to calculate y axis range of each dataset.\n     * @param dataEntry {DataEntry} Object containing dataset related data.\n     * @param internalId {String} String with the ID of a dataset.\n     */\n    private processData(dataEntry: InternalDataEntry) {\n        let calculatedRange: MinMaxRange;\n        let predefinedRange = dataEntry.axisOptions.yAxisRange;\n\n        // get min and max value of data\n        const dataExtent = d3.extent(dataEntry.data, (datum, index, array) => {\n            return datum[1]; // datum[0] = timestamp -- datum[1] = value\n        });\n\n        // let outOfrange = false;\n        let setDataExtent = false;\n\n        // calculate out of predefined range\n        if (predefinedRange && !this.graphOptions.overview) {\n            if (predefinedRange.min > predefinedRange.max) {\n                calculatedRange = { min: predefinedRange.max, max: predefinedRange.min };\n            } else {\n                calculatedRange = predefinedRange;\n            }\n            if (predefinedRange.min > dataExtent[1] || predefinedRange.max = 0) {\n                calculatedRange.min = 0;\n            }\n        }\n\n        const newDatasetIdx = this.preparedData.findIndex((e) => e.internalId === dataEntry.internalId);\n\n        // set range, uom and id for each dataset\n        if (dataEntry.visible) {\n            this.dataYranges[newDatasetIdx] = {\n                uom: dataEntry.axisOptions.uom,\n                id: dataEntry.internalId,\n                zeroBasedYAxis: dataEntry.axisOptions.zeroBased\n            };\n            if (isFinite(calculatedRange.min) && isFinite(calculatedRange.max)) {\n                this.dataYranges[newDatasetIdx].range = calculatedRange;\n            }\n        } else {\n            this.dataYranges[newDatasetIdx] = null;\n        }\n\n        // set range and array of IDs for each uom to generate y-axis later on\n        this.yRangesEachUom = [];\n        this.dataYranges.forEach((obj) => {\n            if (obj !== null) {\n                let idx = this.yRangesEachUom.findIndex((e) => e.uom === obj.uom);\n                let yrangeObj: YRanges = {\n                    uom: obj.uom,\n                    range: obj.range,\n                    ids: [obj.id],\n                    zeroBased: obj.zeroBasedYAxis\n                };\n\n                if (idx >= 0) {\n                    if (this.yRangesEachUom[idx].range) {\n                        if (obj.range) {\n                            if (this.yRangesEachUom[idx].range.min > obj.range.min && !isNaN(obj.range.min)) {\n                                this.yRangesEachUom[idx].range.min = obj.range.min;\n                            }\n                            if (this.yRangesEachUom[idx].range.max  {\n            entry.first = (this.yScaleBase === null);\n            entry.offset = this.bufferSum;\n\n            let yAxisResult = this.drawYaxis(entry);\n            if (this.yScaleBase === null) {\n                this.yScaleBase = yAxisResult.yScale;\n            } else {\n                this.bufferSum = yAxisResult.buffer;\n            }\n            entry.yScale = yAxisResult.yScale;\n        });\n\n        if (!this.yScaleBase) {\n            return;\n        }\n\n        // draw x and y axis\n        this.drawXaxis(this.bufferSum);\n        this.preparedData.forEach((entry) => {\n            this.drawGraphLine(entry);\n        });\n\n        // #####################################################\n        // create background rect\n        if (!this.plotOptions.overview) {\n            // execute when it is not an overview diagram\n            this.background = this.graph.append('svg:rect')\n                .attr('width', this.width - this.bufferSum)\n                .attr('height', this.height)\n                .attr('fill', 'none')\n                .attr('stroke', 'none')\n                .attr('pointer-events', 'all')\n                .attr('transform', 'translate(' + this.bufferSum + ', 0)');\n\n            // mouse events hovering\n            if (this.plotOptions.hoverable) {\n                this.background\n                    .on('mousemove.focus', this.mousemoveHandler)\n                    .on('mouseout.focus', this.mouseoutHandler);\n\n                // line inside graph\n                this.focusG = this.graph.append('g');\n                this.highlightFocus = this.focusG.append('svg:line')\n                    .attr('class', 'mouse-focus-line')\n                    .attr('x2', '0')\n                    .attr('y2', '0')\n                    .attr('x1', '0')\n                    .attr('y1', '0')\n                    .style('stroke', 'black')\n                    .style('stroke-width', '1px');\n\n                this.preparedData.forEach((entry) => {\n                    // label inside graph\n                    entry.focusLabelRect = this.focusG.append('svg:rect')\n                        .attr('class', 'mouse-focus-label')\n                        .style('fill', 'white')\n                        .style('stroke', 'none')\n                        .style('pointer-events', 'none');\n                    entry.focusLabel = this.focusG.append('svg:text')\n                        .attr('class', 'mouse-focus-label')\n                        .style('pointer-events', 'none')\n                        .style('fill', entry.color)\n                        .style('font-weight', 'lighter');\n\n                    this.focuslabelTime = this.focusG.append('svg:text')\n                        .style('pointer-events', 'none')\n                        .attr('class', 'mouse-focus-time');\n                });\n            }\n\n            if (this.plotOptions.togglePanZoom === false) {\n                this.background\n                    .call(d3.zoom()\n                        .on('start', this.zoomStartHandler)\n                        .on('zoom', this.zoomHandler)\n                        .on('end', this.zoomEndHandler)\n                    );\n            } else {\n                this.background\n                    .call(d3.drag()\n                        .on('start', this.panStartHandler)\n                        .on('drag', this.panMoveHandler)\n                        .on('end', this.panEndHandler));\n            }\n        } else {\n            // execute when it is overview diagram\n            let interval = this.getXDomainByTimestamp();\n            let overviewTimespanInterval = [interval[0], interval[1]];\n\n            // create brush\n            let brush = d3.brushX()\n                .extent([[0, 0], [this.width, this.height]])\n                .on('end', () => {\n                    // on mouseclick change time after brush was moved\n                    if (this.mousedownBrush) {\n                        let timeByCoord = this.getTimestampByCoord(d3.event.selection[0], d3.event.selection[1]);\n                        this.changeTime(timeByCoord[0], timeByCoord[1]);\n                    }\n                    this.mousedownBrush = false;\n                });\n\n            // add brush to svg\n            this.background = this.graph.append('g')\n                .attr('width', this.width)\n                .attr('height', this.height)\n                .attr('pointer-events', 'all')\n                .attr('class', 'brush')\n                .call(brush)\n                .call(brush.move, overviewTimespanInterval);\n\n            /**\n             * add event to selection to prevent unnecessary re-rendering of brush\n             * add style of brush selection here\n             * e.g. 'fill' for color,\n             * 'stroke' for borderline-color,\n             * 'stroke-dasharray' for customizing borderline-style\n             */\n            this.background.selectAll('.selection')\n                .attr('stroke', 'none')\n                .on('mousedown', () => {\n                    this.mousedownBrush = true;\n                });\n\n            // do not allow clear selection\n            this.background.selectAll('.overlay')\n                .remove();\n\n            // add event to resizing handle to allow change time on resize\n            this.background.selectAll('.handle')\n                .style('fill', 'red')\n                .style('opacity', 0.3)\n                .attr('stroke', 'none')\n                .on('mousedown', () => {\n                    this.mousedownBrush = true;\n                });\n        }\n    }\n\n    /**\n     * Function that calculates and returns the x diagram coordinate for the brush range\n     * for the overview diagram by the selected time interval of the main diagram.\n     * Calculate to get brush extent when main diagram time interval changes.\n     */\n    private getXDomainByTimestamp() {\n        /**\n         * calculate range of brush with timestamp and not diagram coordinates\n         * formula:\n         * brush_min =\n         * (overview_width / (overview_max - overview_min)) * (brush_min - overview_min)\n         * brus_max =\n         * (overview_width / (overview_max - overview_min)) * (brush_max - overview_min)\n         */\n\n        let minOverviewTimeInterval = this.timespan.from;\n        let maxOverviewTimeInterval = this.timespan.to;\n        let minDiagramTimestamp = this.mainTimeInterval.from;\n        let maxDiagramTimestamp = this.mainTimeInterval.to;\n        let diagramWidth = this.width;\n\n        let diffOverviewTimeInterval = maxOverviewTimeInterval - minOverviewTimeInterval;\n        let divOverviewTimeWidth = diagramWidth / diffOverviewTimeInterval;\n        let minCalcBrush = divOverviewTimeWidth * (minDiagramTimestamp - minOverviewTimeInterval);\n        let maxCalcBrush = divOverviewTimeWidth * (maxDiagramTimestamp - minOverviewTimeInterval);\n\n        return [minCalcBrush, maxCalcBrush];\n    }\n\n    /**\n     * Function that calculates and returns the timestamp for the main diagram calculated\n     * by the selected coordinate of the brush range.\n     * @param minCalcBrush {Number} Number with the minimum coordinate of the selected brush range.\n     * @param maxCalcBrush {Number} Number with the maximum coordinate of the selected brush range.\n     */\n    private getTimestampByCoord(minCalcBrush, maxCalcBrush) {\n        /**\n         * calculate range of brush with timestamp and not diagram coordinates\n         * formula:\n         * minDiagramTimestamp =\n         * ((minCalcBrush / overview_width) * (overview_max - overview_min)) + overview_min\n         * maxDiagramTimestamp =\n         * ((maxCalcBrush / overview_width) * (overview_max - overview_min)) + overview_min\n         */\n\n        let minOverviewTimeInterval = this.timespan.from;\n        let maxOverviewTimeInterval = this.timespan.to;\n        let diagramWidth = this.width;\n\n        let diffOverviewTimeInterval = maxOverviewTimeInterval - minOverviewTimeInterval;\n        let minDiagramTimestamp = ((minCalcBrush / diagramWidth) * diffOverviewTimeInterval) + minOverviewTimeInterval;\n        let maxDiagramTimestamp = ((maxCalcBrush / diagramWidth) * diffOverviewTimeInterval) + minOverviewTimeInterval;\n\n        return [minDiagramTimestamp, maxDiagramTimestamp];\n    }\n\n    /**\n     * Function that returns the tickvalues for the x axis related to the timestep.\n     * @param time {String} String with the information how the time should be visualized in the x axis.\n     * @param range {Array} Array containing the minimum and maximum range.\n     * @param span {Number} Number with the ticksize for the axis generation.\n     */\n    private timeTickValues(time: String, range: any, span: number) {\n        if (time === 'minly') {\n            return d3.timeMinutes(range, new Date(this.xAxisRange.to), span);\n        }\n        if (time === 'hourly') {\n            return d3.timeHours(range, new Date(this.xAxisRange.to), span);\n        }\n        if (time === 'daily') {\n            return d3.timeDay.range(range, new Date(this.xAxisRange.to), span);\n        }\n    }\n\n    /**\n     * Function that draws the x axis to the svg element.\n     * @param bufferXrange {Number} Number with the distance between left edge and the beginning of the graph.\n     */\n    private drawXaxis(bufferXrange: number) {\n        // range for x axis scale\n        this.xScaleBase = d3.scaleLinear()\n            .domain([this.xAxisRange.from, this.xAxisRange.to])\n            .range([bufferXrange, this.width]);\n\n        // calculate range for about 7 ticks on x axis\n        let calcTicks = (((this.xAxisRange.to - this.xAxisRange.from) / 1000) / 7);\n        let hourly = Math.ceil(calcTicks / 3600);\n        let daily = Math.ceil(calcTicks / (3600 * 48));\n\n        if ((calcTicks / 3600)  11) {\n            timeFormatString = '%d %b %H:%M';\n        }\n\n        if (hourly > 47) {\n            timeFormatString = '%d %B';\n            tickSize = (Math.max(1, Math.round(hourly / 12))) * 12;\n        }\n\n        // calculate minimum range dependent on tickSize for UTC // 7200000 (e.g. tickSize = 4 --> every 4 hours)\n        let minRange = this.xAxisRange.from + ((3600000 * tickSize) - (this.xAxisRange.from % (3600000 * tickSize)));\n        // minimum range for UTC+2\n        let minRangeGer = minRange + 3600000 * (tickSize / 2);\n        if ((minRange - 3600000 * (tickSize / 2)) >= this.xAxisRange.from) {\n            minRangeGer = minRange - 3600000 * (tickSize / 2);\n        }\n\n        // calculate tickvalues dependent on tickSize for UTC+2\n        let xAxisGen;\n        if (tickSize >= 1) {\n            xAxisGen = d3.axisBottom(this.xScaleBase)\n                .tickValues(this.timeTickValues(timeString, minRangeGer, tickSize))\n                .tickFormat((d) => {\n                    return d3.timeFormat(timeFormatString)(new Date(d.valueOf()));\n                });\n        } else {\n            timeString = 'minly';\n            xAxisGen = d3.axisBottom(this.xScaleBase)\n                .tickValues(this.timeTickValues(timeString, minRangeGer, 30))\n                .tickFormat((d) => {\n                    return d3.timeFormat(timeFormatString)(new Date(d.valueOf()));\n                });\n        }\n\n        // draw x axis\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(xAxisGen)\n            .selectAll('text')\n            .style('text-anchor', 'middle');\n\n        if (this.plotOptions.grid) {\n            // draw the x grid lines\n            this.graph.append('svg:g')\n                .attr('class', 'grid')\n                .attr('transform', 'translate(0,' + this.height + ')')\n                .call(xAxisGen\n                    .tickSize(-this.height)\n                    .tickFormat(() => '')\n                );\n        }\n\n        // draw upper axis as border\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .call(d3.axisTop(this.xScaleBase).ticks(0).tickSize(0));\n\n        // text label for the x axis\n        this.graph.append('text')\n            .attr('x', (this.width + bufferXrange) / 2)\n            .attr('y', this.height + this.margin.bottom - 5)\n            .style('text-anchor', 'middle')\n            .text('time');\n    }\n\n    /**\n     * Function to draw the y axis for each dataset.\n     * Each uom has its own axis.\n     * @param entry {DataEntry} Object containing a dataset.\n     */\n    private drawYaxis(entry): YScale {\n        let showAxis = (this.plotOptions.yaxis === undefined ? true : this.plotOptions.yaxis);\n        const range = this.getyAxisRange(entry.uom);\n\n        let yMin = range.min;\n        let yMax = range.max;\n\n        // range for y axis scale\n        const rangeOffset = (yMax - yMin) * 0.10;\n        const yScale = d3.scaleLinear()\n            .domain([yMin - rangeOffset, yMax + rangeOffset])\n            .range([this.height, 0]);\n\n        let yAxisGen = d3.axisLeft(yScale).ticks(5);\n        let buffer = 0;\n\n        // only if yAxis should not be visible\n        if (!showAxis) {\n            yAxisGen\n                .tickFormat(() => '')\n                .tickSize(0);\n        }\n\n        // draw y axis\n        const axis = this.graph.append('svg:g')\n            .attr('class', 'y axis')\n            .call(yAxisGen);\n\n        // only if yAxis should be visible\n        if (showAxis) {\n            // draw y axis label\n            const text = this.graph.append('text')\n                .attr('transform', 'rotate(-90)')\n                .attr('dy', '1em')\n                .style('text-anchor', 'middle')\n                .style('fill', 'black')\n                .text(entry.uom);\n\n            const axisWidth = axis.node().getBBox().width + 5 + this.getDimensions(text.node()).h;\n            // if yAxis should not be visible, buffer will be set to 0\n            buffer = (showAxis ? entry.offset + (axisWidth  {\n                    d3.select(k[0])\n                        .attr('fill', 'grey')\n                        .attr('opacity', 0.4);\n                })\n                .on('mouseout', (d, i, k) => {\n                    d3.select(k[0])\n                        .attr('fill', 'white')\n                        .attr('opacity', 0);\n                })\n                .on('mouseup', () => {\n                    this.highlightLine(entry.ids, entry.uom);\n                });\n\n            if (!entry.first) {\n                axisDiv\n                    .attr('x', entry.offset)\n                    .attr('y', 0);\n            } else {\n                axisDiv\n                    .attr('x', 0 - this.margin.left - this.maxLabelwidth)\n                    .attr('y', 0);\n            }\n\n        }\n\n        // draw the y grid lines\n        if (this.datasetIds.length === 1) {\n            this.graph.append('svg:g')\n                .attr('class', 'grid')\n                .call(d3.axisLeft(yScale)\n                    .ticks(5)\n                    .tickSize(-this.width)\n                    .tickFormat(() => '')\n                );\n        }\n\n        return {\n            buffer,\n            yScale\n        };\n    }\n\n    /**\n     * Function to set selected Ids that should be highlighted.\n     * @param ids {Array} Array of Strings containing the Ids.\n     * @param uom {String} String with the uom for the selected Ids\n     */\n    private highlightLine(ids, uom) {\n        let changeFalse: HighlightDataset[] = [];\n        let changeTrue: HighlightDataset[] = [];\n        ids.forEach((ID) => {\n            if (this.selectedDatasetIds.indexOf(ID) >= 0) {\n                changeFalse.push({ id: ID, change: false });\n            }\n            changeTrue.push({ id: ID, change: true });\n        });\n\n        let changeAll = true;\n        if (ids.length === changeFalse.length) {\n            this.changeSelectedIds(changeFalse, true);\n        } else {\n            this.changeSelectedIds(changeTrue, false);\n        }\n    }\n\n    /**\n     * Function that changes state of selected Ids.\n     */\n    private changeSelectedIds(toHighlightDataset: HighlightDataset[], change: boolean) {\n        if (change) {\n            toHighlightDataset.forEach((obj) => {\n                this.removeSelectedId(obj.id);\n                this.selectedDatasetIds.splice(this.selectedDatasetIds.findIndex((entry) => entry === obj.id), 1);\n            });\n        } else {\n            toHighlightDataset.forEach((obj) => {\n                if (this.selectedDatasetIds.indexOf(obj.id)  {\n            if (obj.uom === entry.axisOptions.uom) {\n                return true;\n            } // uom does exist in this.yRangesEachUom\n        });\n\n        if (entry.data.length > 0) {\n            let xScaleBase = this.xScaleBase;\n            if (getYaxisRange !== undefined) {\n                let yScaleBase = getYaxisRange.yScale;\n\n                // #####################################################\n                // create body to clip graph\n                // unique ID generated through the current time (current time when initialized)\n                let querySelectorClip = 'clip' + this.currentTimeId;\n\n                this.graph\n                    .append('svg:clipPath')\n                    .attr('id', querySelectorClip)\n                    .append('svg:rect')\n                    .attr('x', this.bufferSum)\n                    .attr('y', 0)\n                    .attr('width', this.width - this.bufferSum)\n                    .attr('height', this.height);\n\n                // draw grah line\n                this.graphBody = this.graph\n                    .append('g')\n                    .attr('clip-path', 'url(#' + querySelectorClip + ')');\n\n                // create graph line\n                let line = d3.line()\n                    .x((d) => {\n                        d.timestamp = d[0];\n                        const xDiagCoord = xScaleBase(d[0]);\n                        if (xDiagCoord !== NaN) {\n                            d.xDiagCoord = xDiagCoord;\n                            return xDiagCoord;\n                        }\n                    })\n                    .y((d) => {\n                        const yDiagCoord = yScaleBase(d[1]);\n                        if (yDiagCoord !== NaN) {\n                            d.yDiagCoord = yDiagCoord;\n                            return yDiagCoord;\n                        }\n                    })\n                    .curve(d3.curveLinear);\n\n                this.graphBody\n                    .append('svg:path')\n                    .datum(entry.data)\n                    .attr('class', 'line')\n                    .attr('fill', 'none')\n                    .attr('stroke', entry.color)\n                    .attr('stroke-width', entry.lines.lineWidth)\n                    .attr('d', line);\n\n                this.graphBody.selectAll('.dot')\n                    .data(entry.data.filter((d) => d))\n                    .enter().append('circle')\n                    .attr('class', 'dot')\n                    .attr('stroke', entry.color)\n                    .attr('fill', entry.color)\n                    .attr('cx', line.x())\n                    .attr('cy', line.y())\n                    .attr('r', entry.lines.pointRadius);\n            }\n        }\n    }\n\n    /**\n     * Function that shows labeling via mousmove.\n     */\n    private mousemoveHandler = () => {\n        const coords = d3.mouse(this.background.node());\n        this.ypos = [];\n        this.idxOfPos = 0;\n        this.labelTimestamp = [];\n        this.preparedData.forEach((entry, entryIdx) => {\n            const idx = this.getItemForX(coords[0] + this.bufferSum, entry.data);\n            this.showDiagramIndicator(entry, idx, coords[0], entryIdx);\n        });\n        // focus do not overlap each other\n        if (this.ypos !== undefined) {\n            let firstLabel = [];\n            // only push one of the pairs of objects (rectangle and label)\n            this.ypos.forEach((e, i) => {\n                if (i % 2 === 0) {\n                    firstLabel.push(e);\n                }\n            });\n            let yPos = firstLabel.sort((a, b) => a.y - b.y);\n            yPos.forEach((p, i) => {\n                if (i > 0) {\n                    let last = yPos[i - 1].y;\n                    yPos[i].off = Math.max(0, (last + 30) - yPos[i].y);\n                    yPos[i].y += yPos[i].off;\n                }\n            });\n            yPos.sort((a, b) => a.idx - b.idx);\n\n            let c1 = 0;\n            let c2 = 0;\n\n            // d3.selectAll('.mouse-focus-label')\n            d3.selectAll('.focus-visibility')\n                .attr('transform', (d, i) => {\n                    // pairs of 2 objects (rectangle (equal) and label (odd))\n                    if (i > 0) {\n                        c1 = (i - 1) % 2;\n                    }\n                    c2 += c1;\n                    if (yPos[c2] && yPos[c2].off) {\n                        return 'translate(0,' + (5 + yPos[c2].off) + ')';\n                    }\n                });\n        }\n    }\n\n    /**\n     * Function that hides the labeling inside the graph.\n     */\n    private mouseoutHandler = () => {\n        this.hideDiagramIndicator();\n    }\n\n    /**\n     * Function starting the drag handling for the diagram.\n     */\n    private panStartHandler = () => {\n        this.draggingMove = false;\n        this.dragMoveStart = d3.event.x;\n        this.dragMoveRange = [this.xAxisRange.from, this.xAxisRange.to];\n    }\n\n    /**\n     * Function that controlls the panning (dragging) of the graph.\n     */\n    private panMoveHandler = () => {\n        this.draggingMove = true;\n        if (this.dragMoveStart && this.draggingMove) {\n            let diff = -(d3.event.x - d3.event.subject.x);\n            let amountTimestamp = this.dragMoveRange[1] - this.dragMoveRange[0];\n            let ratioTimestampDiagCoord = amountTimestamp / this.width;\n            let newTimeMin = this.dragMoveRange[0] + (ratioTimestampDiagCoord * diff);\n            let newTimeMax = this.dragMoveRange[1] + (ratioTimestampDiagCoord * diff);\n\n            this.xAxisRangePan = [newTimeMin, newTimeMax];\n            this.timespan = { from: this.xAxisRangePan[0], to: this.xAxisRangePan[1] };\n            this.plotGraph();\n        }\n    }\n\n    /**\n     * Function that ends the dragging control.\n     */\n    private panEndHandler = () => {\n        this.changeTime(this.xAxisRangePan[0], this.xAxisRangePan[1]);\n        this.plotGraph();\n        this.dragMoveStart = null;\n        this.draggingMove = false;\n    }\n\n    /**\n     * Function that starts the zoom handling.\n     */\n    private zoomStartHandler = () => {\n        this.dragging = false;\n        this.dragStart = d3.mouse(this.background.node());\n        this.xAxisRangeOrigin.push([this.xAxisRange.from, this.xAxisRange.to]);\n    }\n\n    /**\n     * Function that draws a rectangle when zoom is started and the mouse is moving.\n     */\n    private zoomHandler = () => {\n        this.dragging = true;\n        this.drawDragRectangle();\n    }\n\n    /**\n     * Function that ends the zoom handling and calculates the via zoom selected time interval.\n     */\n    private zoomEndHandler = () => {\n        if (!this.dragStart || !this.dragging) {\n            if (this.xAxisRangeOrigin[0]) {\n                // back to origin range (from - to)\n                this.changeTime(this.xAxisRangeOrigin[0][0], this.xAxisRangeOrigin[0][1]);\n                this.xAxisRangeOrigin = [];\n                this.plotGraph();\n            }\n        } else {\n            let xDomainRange;\n            if (this.dragStart[0]  {\n            domMinArr.push(entry.data.find((elem, index, array) => {\n                if (elem.xDiagCoord) {\n                    if (elem.xDiagCoord >= start) {\n                        return array[index];\n                    }\n                }\n            }));\n            domMaxArr.push(entry.data.find((elem, index, array) => {\n                if (elem.xDiagCoord >= end) {\n                    return array[index];\n                }\n            }));\n        });\n\n        for (let i = 0; i  {\n            return d[0];\n        }).left;\n        return bisectDate(data, index);\n    }\n\n    /**\n     * Function that disables the labeling.\n     */\n    private hideDiagramIndicator() {\n        this.focusG.style('visibility', 'hidden');\n        d3.selectAll('.focus-visibility')\n            .attr('visibility', 'hidden');\n    }\n\n    /**\n     * Function that enables the lableing of each dataset entry.\n     * @param entry {DataEntry} Object containing the dataset.\n     * @param idx {Number} Number with the position of the dataset entry in the data array.\n     * @param xCoordMouse {Number} Number of the x coordinate of the mouse.\n     * @param entryIdx {Number} Number of the index of the entry.\n     */\n    private showDiagramIndicator = (entry, idx: number, xCoordMouse: number, entryIdx: number) => {\n        const item = entry.data[idx];\n        if (item !== undefined) {\n            // create line where mouse is\n            this.focusG.style('visibility', 'visible');\n            // show label if data available for time\n            this.chVisLabel(entry, true);\n\n            let onLeftSide = false;\n            if ((this.background.node().getBBox().width + this.bufferSum) / 2 > item.xDiagCoord) { onLeftSide = true; }\n\n            let labelBuffer = ((this.timespan.from / (this.timespan.to - this.timespan.from)) * 0.0001)\n                * ((this.timespan.from / (this.timespan.to - this.timespan.from)) * 0.0001);\n\n            labelBuffer = Math.max(4, labelBuffer);\n\n            this.showLabelValues(entry, item, onLeftSide);\n            this.showTimeIndicatorLabel(item, onLeftSide, entryIdx);\n\n            if ((xCoordMouse) > (item.xDiagCoord + labelBuffer) || (xCoordMouse) = xCoordMouse) {\n                    this.showLabelValues(entry, entry.data[idx - 1], onLeftSide);\n                    this.showTimeIndicatorLabel(item, onLeftSide, entryIdx);\n\n                    this.chVisLabel(entry, true);\n                }\n            }\n        } else {\n            // hide label if no data available for time\n            this.chVisLabel(entry, false);\n        }\n    }\n\n    /**\n     * Function to change visibility of label and white rectangle inside graph (next to mouse-cursor line).\n     * @param entry {DataEntry} Object containing the dataset.\n     * @param visible {Boolean} Boolean giving information about visibility of a label.\n     */\n    private chVisLabel(entry, visible: boolean) {\n        if (visible) {\n            entry.focusLabel\n                .attr('visibility', 'visible')\n                .attr('class', 'focus-visibility');\n            entry.focusLabelRect\n                .attr('visibility', 'visible')\n                .attr('class', 'focus-visibility');\n        } else {\n            entry.focusLabel\n                .attr('visibility', 'hidden');\n            entry.focusLabelRect\n                .attr('visibility', 'hidden');\n        }\n    }\n\n    /**\n     * Function to show the labeling inside the graph.\n     * @param entry {DataEntry} Object containg the dataset.\n     * @param item {DataEntry} Object of the entry in the dataset.\n     * @param onLeftSide {Boolean} Boolean giving information if the mouse is on left side of the diagram.\n     */\n    private showLabelValues(entry, item: DataEntry, onLeftSide: boolean) {\n        let id = 1;\n        if (entry.focusLabel) {\n            entry.focusLabel.text(item[id] + (entry.axisOptions.uom ? entry.axisOptions.uom : ''));\n            const entryX = onLeftSide ?\n                item.xDiagCoord + 4 : item.xDiagCoord - this.getDimensions(entry.focusLabel.node()).w + 4;\n            entry.focusLabel\n                .attr('x', entryX)\n                .attr('y', item.yDiagCoord);\n            entry.focusLabelRect\n                .attr('x', entryX)\n                .attr('y', item.yDiagCoord - this.getDimensions(entry.focusLabel.node()).h + 3)\n                .attr('width', this.getDimensions(entry.focusLabel.node()).w)\n                .attr('height', this.getDimensions(entry.focusLabel.node()).h);\n            this.ypos.push({ idx: this.idxOfPos++, y: item.yDiagCoord, off: 0 });\n        }\n    }\n\n    /**\n     * Function to show the time labeling inside the graph.\n     * @param item {DataEntry} Object of the entry in the dataset.\n     * @param onLeftSide {Boolean} Boolean giving information if the mouse is on left side of the diagram.\n     * @param entryIdx {Number} Number of the index of the entry.\n     */\n    private showTimeIndicatorLabel(item: DataEntry, onLeftSide: boolean, entryIdx: number) {\n        // timestamp is the time where the mouse-cursor is\n        this.labelTimestamp[entryIdx] = item.timestamp;\n        let min = d3.min(this.labelTimestamp);\n        let idxOfMin = this.labelTimestamp.findIndex((elem) => elem === min);\n        let right = item.xDiagCoord + 2;\n        let left = item.xDiagCoord - this.getDimensions(this.focuslabelTime.node()).w - 2;\n        this.focuslabelTime.text(moment(this.labelTimestamp[idxOfMin]).format('DD.MM.YY HH:mm'));\n        this.focuslabelTime\n            .attr('x', onLeftSide ? right : left)\n            .attr('y', 13);\n        if (item.timestamp === min) {\n            this.highlightFocus\n                .attr('x1', item.xDiagCoord)\n                .attr('y1', 0)\n                .attr('x2', item.xDiagCoord)\n                .attr('y2', this.height)\n                .classed('hidden', false);\n        }\n    }\n\n    /**\n     * Function that returns the boundings of a html element.\n     * @param el {Object} Object of the html element.\n     */\n    private getDimensions(el: any): { w: number, h: number } {\n        let w = 0;\n        let h = 0;\n        if (el) {\n            const dimensions = el.getBBox();\n            w = dimensions.width;\n            h = dimensions.height;\n        } else {\n            console.log('error: getDimensions() ' + el + ' not found.');\n        }\n        return {\n            w,\n            h\n        };\n    }\n\n    /**\n     * Function to generate uuid for a diagram\n     */\n    private uuidv4(): string {\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + this.s4();\n    }\n\n    /**\n     * Function to generate components of the uuid for a diagram\n     */\n    private s4(): string {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n\n    /**\n     * Function that logs the error in the console.\n     * @param error {Object} Object with the error.\n     */\n    private onError(error: any) {\n        console.error(error);\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ZoomControlComponent.html":{"url":"components/ZoomControlComponent.html","title":"component - ZoomControlComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ZoomControlComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/map/src/lib/control/zoom/zoom.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-zoom-control\n            \n\n\n\n\n            \n                templateUrl\n                ./zoom.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                zoomIn\n                            \n                            \n                                    Public\n                                zoomOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mapCache: MapCache)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/control/zoom/zoom.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapCache\n                                                  \n                                                        \n                                                                    MapCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/zoom/zoom.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zoomIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        zoomIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/zoom/zoom.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zoomOut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        zoomOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/zoom/zoom.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { MapCache } from '../../base/map-cache.service';\n\n@Component({\n  selector: 'n52-zoom-control',\n  templateUrl: './zoom.component.html'\n})\nexport class ZoomControlComponent {\n\n  @Input()\n  public mapId: string;\n\n  constructor(\n    protected mapCache: MapCache\n  ) { }\n\n  public zoomIn() {\n    this.mapCache.getMap(this.mapId).zoomIn();\n  }\n\n  public zoomOut() {\n    this.mapCache.getMap(this.mapId).zoomOut();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ZoomControlComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.9\n        \n            @angular/cdk : ^6.3.3\n        \n            @angular/common : ^6.0.9\n        \n            @angular/compiler : ^6.0.9\n        \n            @angular/core : ^6.0.9\n        \n            @angular/forms : ^6.0.9\n        \n            @angular/http : ^6.0.9\n        \n            @angular/material : ^6.3.3\n        \n            @angular/platform-browser : ^6.0.9\n        \n            @angular/platform-browser-dynamic : ^6.0.9\n        \n            @angular/router : ^6.0.9\n        \n            @compodoc/compodoc : ^1.1.3\n        \n            @ngx-translate/core : ^10.0.2\n        \n            @ngx-translate/http-loader : ^3.0.1\n        \n            @types/bootstrap-slider : ^9.9.0\n        \n            @types/d3 : ^5.0.0\n        \n            @types/flot : 0.0.31\n        \n            @types/geojson : ^7946.0.3\n        \n            @types/jquery : ^3.3.2\n        \n            @types/leaflet : ^1.2.7\n        \n            @types/leaflet.markercluster : ^1.0.3\n        \n            @types/moment : ^2.13.0\n        \n            @types/plotly.js : ^1.38.1\n        \n            Flot : github:flot/flot\n        \n            bootstrap-slider : ^9.9.0\n        \n            class-transformer : ^0.1.9\n        \n            core-js : ^2.5.4\n        \n            d3 : ^4.13.0\n        \n            font-awesome : ^4.7.0\n        \n            geojson : ^0.5.0\n        \n            gh-pages : ^1.2.0\n        \n            jquery : ^3.3.1\n        \n            jsonfile : ^4.0.0\n        \n            leaflet : ^1.3.1\n        \n            leaflet.markercluster : ^1.3.0\n        \n            moment : ^2.22.2\n        \n            ngx-clipboard : ^9.1.3\n        \n            ngx-color-picker : ^5.3.1\n        \n            plotly.js : ^1.38.3\n        \n            rxjs : ^6.2.2\n        \n            rxjs-compat : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            D3AxisType   (projects/.../d3-axis-type.ts)\n                        \n                        \n                            DatasetApiVersion   (projects/.../api-mapping.service.ts)\n                        \n                        \n                            DatasetTypes   (projects/.../enums.ts)\n                        \n                        \n                            DefinedTimespan   (projects/.../defined-timespan.service.ts)\n                        \n                        \n                            PlatformTypes   (projects/.../enums.ts)\n                        \n                        \n                            PresenterMessageType   (projects/.../presenter-message-type.ts)\n                        \n                        \n                            ValueTypes   (projects/.../enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/helgoland/d3/src/lib/model/d3-axis-type.ts\n    \n        \n            \n                \n                    \n                        \n                        D3AxisType\n                    \n                \n                        \n                            \n                                 Distance\n                            \n                        \n                        \n                            \n                                 Time\n                            \n                        \n                        \n                            \n                                 Ticks\n                            \n                        \n            \n        \n\n    projects/helgoland/core/src/lib/dataset-api/api-mapping.service.ts\n    \n        \n            \n                \n                    \n                        \n                        DatasetApiVersion\n                    \n                \n                        \n                            \n                                 V1\n                            \n                        \n                        \n                            \n                                 V2\n                            \n                        \n            \n        \n\n    projects/helgoland/core/src/lib/model/dataset-api/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        DatasetTypes\n                    \n                \n                        \n                            \n                                 measurement\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PlatformTypes\n                    \n                \n                        \n                            \n                                 stationary\n                            \n                        \n                        \n                            \n                                Value: stationary\n                            \n                        \n                        \n                            \n                                 mobile\n                            \n                        \n                        \n                            \n                                Value: mobile\n                            \n                        \n                        \n                            \n                                 mobileInsitu\n                            \n                        \n                        \n                            \n                                Value: mobile_insitu\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ValueTypes\n                    \n                \n                        \n                            \n                                 quantity\n                            \n                        \n                        \n                            \n                                Value: quantity\n                            \n                        \n                        \n                            \n                                 quantityProfile\n                            \n                        \n                        \n                            \n                                Value: quantity-profile\n                            \n                        \n            \n        \n\n    projects/helgoland/core/src/lib/time/defined-timespan.service.ts\n    \n        \n            \n                \n                    \n                        \n                        DefinedTimespan\n                    \n                \n                        \n                            \n                                 LASTHOUR\n                            \n                        \n                        \n                            \n                                Value: last_hour\n                            \n                        \n                        \n                            \n                                 TODAY\n                            \n                        \n                        \n                            \n                                Value: today\n                            \n                        \n                        \n                            \n                                 YESTERDAY\n                            \n                        \n                        \n                            \n                                Value: yesterday\n                            \n                        \n                        \n                            \n                                 TODAY_YESTERDAY\n                            \n                        \n                        \n                            \n                                Value: today_yesterday\n                            \n                        \n                        \n                            \n                                 CURRENT_WEEK\n                            \n                        \n                        \n                            \n                                Value: current_week\n                            \n                        \n                        \n                            \n                                 LAST_WEEK\n                            \n                        \n                        \n                            \n                                Value: last_week\n                            \n                        \n                        \n                            \n                                 CURRENT_MONTH\n                            \n                        \n                        \n                            \n                                Value: current_month\n                            \n                        \n                        \n                            \n                                 LAST_MONTH\n                            \n                        \n                        \n                            \n                                Value: last_month\n                            \n                        \n                        \n                            \n                                 CURRENT_YEAR\n                            \n                        \n                        \n                            \n                                Value: current_year\n                            \n                        \n                        \n                            \n                                 LAST_YEAR\n                            \n                        \n                        \n                            \n                                Value: last_year\n                            \n                        \n            \n        \n\n    projects/helgoland/core/src/lib/presenting/presenter-message-type.ts\n    \n        \n            \n                \n                    \n                        \n                        PresenterMessageType\n                    \n                \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            isGroupFavorite   (projects/.../favorite.service.ts)\n                        \n                        \n                            isSingleFavorite   (projects/.../favorite.service.ts)\n                        \n                        \n                            Mixin   (projects/.../Mixin.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/helgoland/favorite/src/lib/service/favorite.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isGroupFavorite\n                            \n                            \n                        \n                    \n                \n                \n                    \nisGroupFavorite(object: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSingleFavorite\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSingleFavorite(object: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/helgoland/core/src/lib/model/mixins/Mixin.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Mixin\n                            \n                            \n                        \n                    \n                \n                \n                    \nMixin(baseCtors: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        baseCtors\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nhelgoland-toolbox\n\ntools for a sensor observation service based client\n\n\n\nThis project contains Angular based Modules, Components, Injectables to build a sensor observation service based client. \nGetting Started\nDependencies\nNode/NPM\nInstall latest Node and NPM following the instructions. Make sure you have Node version ≥ 7.0 and NPM ≥ 4.\n\nbrew install node for Mac.\n\nInstalling\n\nfork this repository.\nclone your fork to your local environment.\nnpm install to install required dependencies.\n\nBuild the libraries\n\nnpm run build:libs for building the library once\n\nOther commands\nLint the complete code\n\nng lint for performing static code analysis.\n\nGenerate documentation\n\nnpm run compodoc for generating documentation locally\nnpm run gh-pages for generating documentation and uploading it to GitHub Pages\n\nBump library version\n\nnpm version *** to increase library version. More on bumping.\n\n\nPublish library to NPM\n\nyarn lib:publish to publish your library sources on npmjs.com. Once the library is published it will be available for usage in npm packages.\n\n\nUsing demo applications\n\njust start the demo with ng serve and the demo is published \n\n At the moment of publishing this project there is a [bug](https://github.com/angular/angular-cli/issues/3854) exists when using `yarn link` in combination with Angular CLI. The issue is caused by having `node_modules` folder inside linked library. There is a [workaround](https://github.com/angular/angular-cli/issues/3854#issuecomment-274344771) has been provided that suggests to add a `paths` property with all Angular dependencies to the `tsconfig.json` file of the Angular CLI project like it is shown below:\n\n```\n{\n  \"compilerOptions\": {\n    \"paths\": { \"@angular/*\": [\"../node_modules/@angular/*\"] }\n  }\n}\n``` -->\nSupported series API versions mapping\n\n\n\nhelgoland-toolbox version\nseries rest API version\n\n\n\n\nv0.0.1-alpha.53\nv1.10.2\n\n\n\nTroubleshooting while using this library\n\nadd allowSyntheticDefaultImports: true to your tsconfig.json to avoid error messages like ... has no default export\ndon't forget to add styles of nested dependencies\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nApache License\nVersion 2.0, January 2004http://www.apache.org/licenses/>\nTerms and Conditions for use, reproduction, and distribution\n1. Definitions\n“License” shall mean the terms and conditions for use, reproduction, and\ndistribution as defined by Sections 1 through 9 of this document.\n“Licensor” shall mean the copyright owner or entity authorized by the copyright\nowner that is granting the License.\n“Legal Entity” shall mean the union of the acting entity and all other entities\nthat control, are controlled by, or are under common control with that entity.\nFor the purposes of this definition, “control” means (i) the power, direct or\nindirect, to cause the direction or management of such entity, whether by\ncontract or otherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n“You” (or “Your”) shall mean an individual or Legal Entity exercising\npermissions granted by this License.\n“Source” form shall mean the preferred form for making modifications, including\nbut not limited to software source code, documentation source, and configuration\nfiles.\n“Object” form shall mean any form resulting from mechanical transformation or\ntranslation of a Source form, including but not limited to compiled object code,\ngenerated documentation, and conversions to other media types.\n“Work” shall mean the work of authorship, whether in Source or Object form, made\navailable under the License, as indicated by a copyright notice that is included\nin or attached to the work (an example is provided in the Appendix below).\n“Derivative Works” shall mean any work, whether in Source or Object form, that\nis based on (or derived from) the Work and for which the editorial revisions,\nannotations, elaborations, or other modifications represent, as a whole, an\noriginal work of authorship. For the purposes of this License, Derivative Works\nshall not include works that remain separable from, or merely link (or bind by\nname) to the interfaces of, the Work and Derivative Works thereof.\n“Contribution” shall mean any work of authorship, including the original version\nof the Work and any modifications or additions to that Work or Derivative Works\nthereof, that is intentionally submitted to Licensor for inclusion in the Work\nby the copyright owner or by an individual or Legal Entity authorized to submit\non behalf of the copyright owner. For the purposes of this definition,\n“submitted” means any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems, and\nissue tracking systems that are managed by, or on behalf of, the Licensor for\nthe purpose of discussing and improving the Work, but excluding communication\nthat is conspicuously marked or otherwise designated in writing by the copyright\nowner as “Not a Contribution.”\n“Contributor” shall mean Licensor and any individual or Legal Entity on behalf\nof whom a Contribution has been received by Licensor and subsequently\nincorporated within the Work.\n2. Grant of Copyright License\nSubject to the terms and conditions of this License, each Contributor hereby\ngrants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,\nirrevocable copyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the Work and such\nDerivative Works in Source or Object form.\n3. Grant of Patent License\nSubject to the terms and conditions of this License, each Contributor hereby\ngrants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,\nirrevocable (except as stated in this section) patent license to make, have\nmade, use, offer to sell, sell, import, and otherwise transfer the Work, where\nsuch license applies only to those patent claims licensable by such Contributor\nthat are necessarily infringed by their Contribution(s) alone or by combination\nof their Contribution(s) with the Work to which such Contribution(s) was\nsubmitted. If You institute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work or a\nContribution incorporated within the Work constitutes direct or contributory\npatent infringement, then any patent licenses granted to You under this License\nfor that Work shall terminate as of the date such litigation is filed.\n4. Redistribution\nYou may reproduce and distribute copies of the Work or Derivative Works thereof\nin any medium, with or without modifications, and in Source or Object form,\nprovided that You meet the following conditions:\n\n(a) You must give any other recipients of the Work or Derivative Works a copy of\nthis License; and\n(b) You must cause any modified files to carry prominent notices stating that You\nchanged the files; and\n(c) You must retain, in the Source form of any Derivative Works that You distribute,\nall copyright, patent, trademark, and attribution notices from the Source form\nof the Work, excluding those notices that do not pertain to any part of the\nDerivative Works; and\n(d) If the Work includes a “NOTICE” text file as part of its distribution, then any\nDerivative Works that You distribute must include a readable copy of the\nattribution notices contained within such NOTICE file, excluding those notices\nthat do not pertain to any part of the Derivative Works, in at least one of the\nfollowing places: within a NOTICE text file distributed as part of the\nDerivative Works; within the Source form or documentation, if provided along\nwith the Derivative Works; or, within a display generated by the Derivative\nWorks, if and wherever such third-party notices normally appear. The contents of\nthe NOTICE file are for informational purposes only and do not modify the\nLicense. You may add Your own attribution notices within Derivative Works that\nYou distribute, alongside or as an addendum to the NOTICE text from the Work,\nprovided that such additional attribution notices cannot be construed as\nmodifying the License.\n\nYou may add Your own copyright statement to Your modifications and may provide\nadditional or different license terms and conditions for use, reproduction, or\ndistribution of Your modifications, or for any such Derivative Works as a whole,\nprovided Your use, reproduction, and distribution of the Work otherwise complies\nwith the conditions stated in this License.\n5. Submission of Contributions\nUnless You explicitly state otherwise, any Contribution intentionally submitted\nfor inclusion in the Work by You to the Licensor shall be under the terms and\nconditions of this License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify the terms of\nany separate license agreement you may have executed with Licensor regarding\nsuch Contributions.\n6. Trademarks\nThis License does not grant permission to use the trade names, trademarks,\nservice marks, or product names of the Licensor, except as required for\nreasonable and customary use in describing the origin of the Work and\nreproducing the content of the NOTICE file.\n7. Disclaimer of Warranty\nUnless required by applicable law or agreed to in writing, Licensor provides the\nWork (and each Contributor provides its Contributions) on an “AS IS” BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,\nincluding, without limitation, any warranties or conditions of TITLE,\nNON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are\nsolely responsible for determining the appropriateness of using or\nredistributing the Work and assume any risks associated with Your exercise of\npermissions under this License.\n8. Limitation of Liability\nIn no event and under no legal theory, whether in tort (including negligence),\ncontract, or otherwise, unless required by applicable law (such as deliberate\nand grossly negligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special, incidental,\nor consequential damages of any character arising as a result of this License or\nout of the use or inability to use the Work (including but not limited to\ndamages for loss of goodwill, work stoppage, computer failure or malfunction, or\nany and all other commercial damages or losses), even if such Contributor has\nbeen advised of the possibility of such damages.\n9. Accepting Warranty or Additional Liability\nWhile redistributing the Work or Derivative Works thereof, You may choose to\noffer, and charge a fee for, acceptance of support, warranty, indemnity, or\nother liability obligations and/or rights consistent with this License. However,\nin accepting such obligations, You may act only on Your own behalf and on Your\nsole responsibility, not on behalf of any other Contributor, and only if You\nagree to indemnify, defend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason of your\naccepting any such warranty or additional liability.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        EventingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandCachingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandControlModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandCoreModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandD3Module\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandDatasetTableModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandDatasetlistModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandFavoriteModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandFlotModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandLabelMapperModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandMapControlModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandMapModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandMapSelectorModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandMapViewModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandModificationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandPermalinkModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandPlotlyModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandSelectorModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandTimeModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandTimeRangeSliderModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandControlModule\n\n\n\ncluster_HelgolandControlModule_declarations\n\n\n\ncluster_HelgolandControlModule_exports\n\n\n\ncluster_HelgolandCoreModule\n\n\n\ncluster_HelgolandCoreModule_declarations\n\n\n\ncluster_HelgolandCoreModule_exports\n\n\n\ncluster_HelgolandCoreModule_providers\n\n\n\ncluster_HelgolandD3Module\n\n\n\ncluster_HelgolandD3Module_declarations\n\n\n\ncluster_HelgolandD3Module_exports\n\n\n\ncluster_HelgolandDatasetTableModule\n\n\n\ncluster_HelgolandDatasetTableModule_declarations\n\n\n\ncluster_HelgolandDatasetTableModule_exports\n\n\n\ncluster_HelgolandDatasetlistModule\n\n\n\ncluster_HelgolandDatasetlistModule_imports\n\n\n\ncluster_HelgolandDatasetlistModule_providers\n\n\n\ncluster_HelgolandFavoriteModule\n\n\n\ncluster_HelgolandFavoriteModule_providers\n\n\n\ncluster_HelgolandFlotModule\n\n\n\ncluster_HelgolandFlotModule_declarations\n\n\n\ncluster_HelgolandFlotModule_exports\n\n\n\ncluster_HelgolandLabelMapperModule\n\n\n\ncluster_HelgolandLabelMapperModule_declarations\n\n\n\ncluster_HelgolandLabelMapperModule_exports\n\n\n\ncluster_HelgolandLabelMapperModule_providers\n\n\n\ncluster_HelgolandMapControlModule\n\n\n\ncluster_HelgolandMapControlModule_imports\n\n\n\ncluster_HelgolandMapControlModule_providers\n\n\n\ncluster_HelgolandMapModule\n\n\n\ncluster_HelgolandMapModule_providers\n\n\n\ncluster_HelgolandMapSelectorModule\n\n\n\ncluster_HelgolandMapViewModule\n\n\n\ncluster_HelgolandMapViewModule_declarations\n\n\n\ncluster_HelgolandMapViewModule_exports\n\n\n\ncluster_HelgolandModificationModule\n\n\n\ncluster_HelgolandModificationModule_declarations\n\n\n\ncluster_HelgolandModificationModule_exports\n\n\n\ncluster_HelgolandPermalinkModule\n\n\n\ncluster_HelgolandPlotlyModule\n\n\n\ncluster_HelgolandPlotlyModule_declarations\n\n\n\ncluster_HelgolandPlotlyModule_exports\n\n\n\ncluster_HelgolandSelectorModule\n\n\n\ncluster_HelgolandSelectorModule_declarations\n\n\n\ncluster_HelgolandSelectorModule_exports\n\n\n\ncluster_HelgolandSelectorModule_providers\n\n\n\ncluster_HelgolandTimeModule\n\n\n\ncluster_HelgolandTimeRangeSliderModule\n\n\n\ncluster_HelgolandTimeRangeSliderModule_declarations\n\n\n\ncluster_HelgolandTimeRangeSliderModule_exports\n\n\n\ncluster_HelgolandTimeRangeSliderModule_providers\n\n\n\n\nBoolTogglerComponent\n\nBoolTogglerComponent\n\n\n\nHelgolandControlModule\n\nHelgolandControlModule\n\nHelgolandControlModule -->\n\nBoolTogglerComponent->HelgolandControlModule\n\n\n\n\n\nHelgolandDatasetlistModule\n\nHelgolandDatasetlistModule\n\nHelgolandDatasetlistModule -->\n\nBoolTogglerComponent->HelgolandDatasetlistModule\n\n\n\n\n\nHelgolandFavoriteModule\n\nHelgolandFavoriteModule\n\nHelgolandFavoriteModule -->\n\nBoolTogglerComponent->HelgolandFavoriteModule\n\n\n\n\n\nHelgolandMapControlModule\n\nHelgolandMapControlModule\n\nHelgolandMapControlModule -->\n\nBoolTogglerComponent->HelgolandMapControlModule\n\n\n\n\n\nHelgolandMapModule\n\nHelgolandMapModule\n\nHelgolandMapModule -->\n\nBoolTogglerComponent->HelgolandMapModule\n\n\n\n\n\nHelgolandMapSelectorModule\n\nHelgolandMapSelectorModule\n\nHelgolandMapSelectorModule -->\n\nBoolTogglerComponent->HelgolandMapSelectorModule\n\n\n\n\n\nHelgolandPermalinkModule\n\nHelgolandPermalinkModule\n\nHelgolandPermalinkModule -->\n\nBoolTogglerComponent->HelgolandPermalinkModule\n\n\n\n\n\nHelgolandTimeModule\n\nHelgolandTimeModule\n\nHelgolandTimeModule -->\n\nBoolTogglerComponent->HelgolandTimeModule\n\n\n\n\n\nRefreshButtonComponent\n\nRefreshButtonComponent\n\nHelgolandControlModule -->\n\nRefreshButtonComponent->HelgolandControlModule\n\n\n\nHelgolandDatasetlistModule -->\n\nRefreshButtonComponent->HelgolandDatasetlistModule\n\n\n\nHelgolandFavoriteModule -->\n\nRefreshButtonComponent->HelgolandFavoriteModule\n\n\n\nHelgolandMapControlModule -->\n\nRefreshButtonComponent->HelgolandMapControlModule\n\n\n\nHelgolandMapModule -->\n\nRefreshButtonComponent->HelgolandMapModule\n\n\n\nHelgolandMapSelectorModule -->\n\nRefreshButtonComponent->HelgolandMapSelectorModule\n\n\n\nHelgolandPermalinkModule -->\n\nRefreshButtonComponent->HelgolandPermalinkModule\n\n\n\nHelgolandTimeModule -->\n\nRefreshButtonComponent->HelgolandTimeModule\n\n\n\n\n\nStringTogglerComponent\n\nStringTogglerComponent\n\nHelgolandControlModule -->\n\nStringTogglerComponent->HelgolandControlModule\n\n\n\nHelgolandDatasetlistModule -->\n\nStringTogglerComponent->HelgolandDatasetlistModule\n\n\n\nHelgolandFavoriteModule -->\n\nStringTogglerComponent->HelgolandFavoriteModule\n\n\n\nHelgolandMapControlModule -->\n\nStringTogglerComponent->HelgolandMapControlModule\n\n\n\nHelgolandMapModule -->\n\nStringTogglerComponent->HelgolandMapModule\n\n\n\nHelgolandMapSelectorModule -->\n\nStringTogglerComponent->HelgolandMapSelectorModule\n\n\n\nHelgolandPermalinkModule -->\n\nStringTogglerComponent->HelgolandPermalinkModule\n\n\n\nHelgolandTimeModule -->\n\nStringTogglerComponent->HelgolandTimeModule\n\n\n\n\n\nBoolTogglerComponent \n\nBoolTogglerComponent \n\nBoolTogglerComponent  -->\n\nHelgolandControlModule->BoolTogglerComponent \n\n\n\n\n\nRefreshButtonComponent \n\nRefreshButtonComponent \n\nRefreshButtonComponent  -->\n\nHelgolandControlModule->RefreshButtonComponent \n\n\n\n\n\nStringTogglerComponent \n\nStringTogglerComponent \n\nStringTogglerComponent  -->\n\nHelgolandControlModule->StringTogglerComponent \n\n\n\n\n\nDateProxyPipe\n\nDateProxyPipe\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandCoreModule -->\n\nDateProxyPipe->HelgolandCoreModule\n\n\n\n\n\nDateProxyPipe \n\nDateProxyPipe \n\nDateProxyPipe  -->\n\nHelgolandCoreModule->DateProxyPipe \n\n\n\n\n\nHelgolandD3Module\n\nHelgolandD3Module\n\nHelgolandD3Module -->\n\nHelgolandCoreModule->HelgolandD3Module\n\n\n\n\n\nHelgolandDatasetTableModule\n\nHelgolandDatasetTableModule\n\nHelgolandDatasetTableModule -->\n\nHelgolandCoreModule->HelgolandDatasetTableModule\n\n\n\nHelgolandDatasetlistModule -->\n\nHelgolandCoreModule->HelgolandDatasetlistModule\n\n\n\nHelgolandMapControlModule -->\n\nHelgolandCoreModule->HelgolandMapControlModule\n\n\n\nHelgolandMapSelectorModule -->\n\nHelgolandCoreModule->HelgolandMapSelectorModule\n\n\n\n\n\nHelgolandModificationModule\n\nHelgolandModificationModule\n\nHelgolandModificationModule -->\n\nHelgolandCoreModule->HelgolandModificationModule\n\n\n\n\n\nHelgolandPlotlyModule\n\nHelgolandPlotlyModule\n\nHelgolandPlotlyModule -->\n\nHelgolandCoreModule->HelgolandPlotlyModule\n\n\n\n\n\nHelgolandSelectorModule\n\nHelgolandSelectorModule\n\nHelgolandSelectorModule -->\n\nHelgolandCoreModule->HelgolandSelectorModule\n\n\n\nHelgolandTimeModule -->\n\nHelgolandCoreModule->HelgolandTimeModule\n\n\n\n\n\nColorService\n\nColorService\n\nHelgolandCoreModule -->\n\nColorService->HelgolandCoreModule\n\n\n\n\n\nDatasetApiMapping\n\nDatasetApiMapping\n\nHelgolandCoreModule -->\n\nDatasetApiMapping->HelgolandCoreModule\n\n\n\n\n\nDefinedTimespanService\n\nDefinedTimespanService\n\nHelgolandCoreModule -->\n\nDefinedTimespanService->HelgolandCoreModule\n\n\n\n\n\nInternalIdHandler\n\nInternalIdHandler\n\nHelgolandCoreModule -->\n\nInternalIdHandler->HelgolandCoreModule\n\n\n\n\n\nLocalStorage\n\nLocalStorage\n\nHelgolandCoreModule -->\n\nLocalStorage->HelgolandCoreModule\n\n\n\n\n\nNotifierService\n\nNotifierService\n\nHelgolandCoreModule -->\n\nNotifierService->HelgolandCoreModule\n\n\n\n\n\nStatusIntervalResolverService\n\nStatusIntervalResolverService\n\nHelgolandCoreModule -->\n\nStatusIntervalResolverService->HelgolandCoreModule\n\n\n\n\n\nTime\n\nTime\n\nHelgolandCoreModule -->\n\nTime->HelgolandCoreModule\n\n\n\n\n\nD3OverviewTimeseriesGraphComponent\n\nD3OverviewTimeseriesGraphComponent\n\nHelgolandD3Module -->\n\nD3OverviewTimeseriesGraphComponent->HelgolandD3Module\n\n\n\n\n\nD3TimeseriesGraphComponent\n\nD3TimeseriesGraphComponent\n\nHelgolandD3Module -->\n\nD3TimeseriesGraphComponent->HelgolandD3Module\n\n\n\n\n\nD3TrajectoryGraphComponent\n\nD3TrajectoryGraphComponent\n\nHelgolandD3Module -->\n\nD3TrajectoryGraphComponent->HelgolandD3Module\n\n\n\n\n\nD3OverviewTimeseriesGraphComponent \n\nD3OverviewTimeseriesGraphComponent \n\nD3OverviewTimeseriesGraphComponent  -->\n\nHelgolandD3Module->D3OverviewTimeseriesGraphComponent \n\n\n\n\n\nD3TimeseriesGraphComponent \n\nD3TimeseriesGraphComponent \n\nD3TimeseriesGraphComponent  -->\n\nHelgolandD3Module->D3TimeseriesGraphComponent \n\n\n\n\n\nD3TrajectoryGraphComponent \n\nD3TrajectoryGraphComponent \n\nD3TrajectoryGraphComponent  -->\n\nHelgolandD3Module->D3TrajectoryGraphComponent \n\n\n\n\n\nDatasetTableComponent\n\nDatasetTableComponent\n\nHelgolandDatasetTableModule -->\n\nDatasetTableComponent->HelgolandDatasetTableModule\n\n\n\n\n\nDatasetTableComponent \n\nDatasetTableComponent \n\nDatasetTableComponent  -->\n\nHelgolandDatasetTableModule->DatasetTableComponent \n\n\n\nBoolTogglerComponent  -->\n\nHelgolandDatasetlistModule->BoolTogglerComponent \n\n\n\nRefreshButtonComponent  -->\n\nHelgolandDatasetlistModule->RefreshButtonComponent \n\n\n\nStringTogglerComponent  -->\n\nHelgolandDatasetlistModule->StringTogglerComponent \n\n\n\n\n\nHelgolandLabelMapperModule\n\nHelgolandLabelMapperModule\n\nHelgolandDatasetlistModule -->\n\nHelgolandLabelMapperModule->HelgolandDatasetlistModule\n\n\n\n\n\nHelgolandFlotModule\n\nHelgolandFlotModule\n\nHelgolandFlotModule -->\n\nHelgolandLabelMapperModule->HelgolandFlotModule\n\n\n\n\n\nLabelMapperComponent \n\nLabelMapperComponent \n\nLabelMapperComponent  -->\n\nHelgolandLabelMapperModule->LabelMapperComponent \n\n\n\nHelgolandSelectorModule -->\n\nHelgolandLabelMapperModule->HelgolandSelectorModule\n\n\n\n\n\nReferenceValueColorCache\n\nReferenceValueColorCache\n\nHelgolandDatasetlistModule -->\n\nReferenceValueColorCache->HelgolandDatasetlistModule\n\n\n\nBoolTogglerComponent  -->\n\nHelgolandFavoriteModule->BoolTogglerComponent \n\n\n\nRefreshButtonComponent  -->\n\nHelgolandFavoriteModule->RefreshButtonComponent \n\n\n\nStringTogglerComponent  -->\n\nHelgolandFavoriteModule->StringTogglerComponent \n\n\n\n\n\nFavoriteService\n\nFavoriteService\n\nHelgolandFavoriteModule -->\n\nFavoriteService->HelgolandFavoriteModule\n\n\n\n\n\nJsonFavoriteExporterService\n\nJsonFavoriteExporterService\n\nHelgolandFavoriteModule -->\n\nJsonFavoriteExporterService->HelgolandFavoriteModule\n\n\n\n\n\nFlotOverviewTimeseriesGraphComponent\n\nFlotOverviewTimeseriesGraphComponent\n\nHelgolandFlotModule -->\n\nFlotOverviewTimeseriesGraphComponent->HelgolandFlotModule\n\n\n\n\n\nFlotTimeseriesGraphComponent\n\nFlotTimeseriesGraphComponent\n\nHelgolandFlotModule -->\n\nFlotTimeseriesGraphComponent->HelgolandFlotModule\n\n\n\n\n\nFlotOverviewTimeseriesGraphComponent \n\nFlotOverviewTimeseriesGraphComponent \n\nFlotOverviewTimeseriesGraphComponent  -->\n\nHelgolandFlotModule->FlotOverviewTimeseriesGraphComponent \n\n\n\n\n\nFlotTimeseriesGraphComponent \n\nFlotTimeseriesGraphComponent \n\nFlotTimeseriesGraphComponent  -->\n\nHelgolandFlotModule->FlotTimeseriesGraphComponent \n\n\n\n\n\nLabelMapperComponent\n\nLabelMapperComponent\n\nHelgolandLabelMapperModule -->\n\nLabelMapperComponent->HelgolandLabelMapperModule\n\n\n\n\n\nLabelMapperService\n\nLabelMapperService\n\nHelgolandLabelMapperModule -->\n\nLabelMapperService->HelgolandLabelMapperModule\n\n\n\nBoolTogglerComponent  -->\n\nHelgolandMapControlModule->BoolTogglerComponent \n\n\n\nRefreshButtonComponent  -->\n\nHelgolandMapControlModule->RefreshButtonComponent \n\n\n\nStringTogglerComponent  -->\n\nHelgolandMapControlModule->StringTogglerComponent \n\n\n\nBoolTogglerComponent  -->\n\nHelgolandMapModule->BoolTogglerComponent \n\n\n\nRefreshButtonComponent  -->\n\nHelgolandMapModule->RefreshButtonComponent \n\n\n\nStringTogglerComponent  -->\n\nHelgolandMapModule->StringTogglerComponent \n\n\n\nHelgolandMapControlModule -->\n\nHelgolandMapModule->HelgolandMapControlModule\n\n\n\nHelgolandMapSelectorModule -->\n\nHelgolandMapModule->HelgolandMapSelectorModule\n\n\n\n\n\nHelgolandMapViewModule\n\nHelgolandMapViewModule\n\nHelgolandMapViewModule -->\n\nHelgolandMapModule->HelgolandMapViewModule\n\n\n\n\n\nLocateService\n\nLocateService\n\nHelgolandMapControlModule -->\n\nLocateService->HelgolandMapControlModule\n\n\n\n\n\nMapCache\n\nMapCache\n\nHelgolandMapModule -->\n\nMapCache->HelgolandMapModule\n\n\n\nBoolTogglerComponent  -->\n\nHelgolandMapSelectorModule->BoolTogglerComponent \n\n\n\nRefreshButtonComponent  -->\n\nHelgolandMapSelectorModule->RefreshButtonComponent \n\n\n\nStringTogglerComponent  -->\n\nHelgolandMapSelectorModule->StringTogglerComponent \n\n\n\n\n\nGeometryMapViewerComponent\n\nGeometryMapViewerComponent\n\nHelgolandMapViewModule -->\n\nGeometryMapViewerComponent->HelgolandMapViewModule\n\n\n\n\n\nGeometryMapViewerComponent \n\nGeometryMapViewerComponent \n\nGeometryMapViewerComponent  -->\n\nHelgolandMapViewModule->GeometryMapViewerComponent \n\n\n\n\n\nAxesOptionsComponent\n\nAxesOptionsComponent\n\nHelgolandModificationModule -->\n\nAxesOptionsComponent->HelgolandModificationModule\n\n\n\n\n\nColorSelectorComponent\n\nColorSelectorComponent\n\nHelgolandModificationModule -->\n\nColorSelectorComponent->HelgolandModificationModule\n\n\n\n\n\nDragOptionsComponent\n\nDragOptionsComponent\n\nHelgolandModificationModule -->\n\nDragOptionsComponent->HelgolandModificationModule\n\n\n\n\n\nMinMaxRangeComponent\n\nMinMaxRangeComponent\n\nHelgolandModificationModule -->\n\nMinMaxRangeComponent->HelgolandModificationModule\n\n\n\n\n\nAxesOptionsComponent \n\nAxesOptionsComponent \n\nAxesOptionsComponent  -->\n\nHelgolandModificationModule->AxesOptionsComponent \n\n\n\n\n\nColorSelectorComponent \n\nColorSelectorComponent \n\nColorSelectorComponent  -->\n\nHelgolandModificationModule->ColorSelectorComponent \n\n\n\n\n\nDragOptionsComponent \n\nDragOptionsComponent \n\nDragOptionsComponent  -->\n\nHelgolandModificationModule->DragOptionsComponent \n\n\n\n\n\nMinMaxRangeComponent \n\nMinMaxRangeComponent \n\nMinMaxRangeComponent  -->\n\nHelgolandModificationModule->MinMaxRangeComponent \n\n\n\nBoolTogglerComponent  -->\n\nHelgolandPermalinkModule->BoolTogglerComponent \n\n\n\nRefreshButtonComponent  -->\n\nHelgolandPermalinkModule->RefreshButtonComponent \n\n\n\nStringTogglerComponent  -->\n\nHelgolandPermalinkModule->StringTogglerComponent \n\n\n\n\n\nPlotlyProfileGraphComponent\n\nPlotlyProfileGraphComponent\n\nHelgolandPlotlyModule -->\n\nPlotlyProfileGraphComponent->HelgolandPlotlyModule\n\n\n\n\n\nPlotlyProfileGraphComponent \n\nPlotlyProfileGraphComponent \n\nPlotlyProfileGraphComponent  -->\n\nHelgolandPlotlyModule->PlotlyProfileGraphComponent \n\n\n\n\n\nDatasetByStationSelectorComponent\n\nDatasetByStationSelectorComponent\n\nHelgolandSelectorModule -->\n\nDatasetByStationSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nListSelectorComponent\n\nListSelectorComponent\n\nHelgolandSelectorModule -->\n\nListSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nMultiServiceFilterSelectorComponent\n\nMultiServiceFilterSelectorComponent\n\nHelgolandSelectorModule -->\n\nMultiServiceFilterSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nServiceFilterSelectorComponent\n\nServiceFilterSelectorComponent\n\nHelgolandSelectorModule -->\n\nServiceFilterSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nServiceSelectorComponent\n\nServiceSelectorComponent\n\nHelgolandSelectorModule -->\n\nServiceSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nDatasetByStationSelectorComponent \n\nDatasetByStationSelectorComponent \n\nDatasetByStationSelectorComponent  -->\n\nHelgolandSelectorModule->DatasetByStationSelectorComponent \n\n\n\n\n\nListSelectorComponent \n\nListSelectorComponent \n\nListSelectorComponent  -->\n\nHelgolandSelectorModule->ListSelectorComponent \n\n\n\n\n\nMultiServiceFilterSelectorComponent \n\nMultiServiceFilterSelectorComponent \n\nMultiServiceFilterSelectorComponent  -->\n\nHelgolandSelectorModule->MultiServiceFilterSelectorComponent \n\n\n\n\n\nServiceFilterSelectorComponent \n\nServiceFilterSelectorComponent \n\nServiceFilterSelectorComponent  -->\n\nHelgolandSelectorModule->ServiceFilterSelectorComponent \n\n\n\n\n\nServiceSelectorComponent \n\nServiceSelectorComponent \n\nServiceSelectorComponent  -->\n\nHelgolandSelectorModule->ServiceSelectorComponent \n\n\n\n\n\nListSelectorService\n\nListSelectorService\n\nHelgolandSelectorModule -->\n\nListSelectorService->HelgolandSelectorModule\n\n\n\n\n\nServiceSelectorService\n\nServiceSelectorService\n\nHelgolandSelectorModule -->\n\nServiceSelectorService->HelgolandSelectorModule\n\n\n\nBoolTogglerComponent  -->\n\nHelgolandTimeModule->BoolTogglerComponent \n\n\n\nRefreshButtonComponent  -->\n\nHelgolandTimeModule->RefreshButtonComponent \n\n\n\nStringTogglerComponent  -->\n\nHelgolandTimeModule->StringTogglerComponent \n\n\n\n\n\nTimeRangeSliderComponent\n\nTimeRangeSliderComponent\n\n\n\nHelgolandTimeRangeSliderModule\n\nHelgolandTimeRangeSliderModule\n\nHelgolandTimeRangeSliderModule -->\n\nTimeRangeSliderComponent->HelgolandTimeRangeSliderModule\n\n\n\n\n\nTimeRangeSliderComponent \n\nTimeRangeSliderComponent \n\nTimeRangeSliderComponent  -->\n\nHelgolandTimeRangeSliderModule->TimeRangeSliderComponent \n\n\n\n\n\nTimeRangeSliderCache\n\nTimeRangeSliderCache\n\nHelgolandTimeRangeSliderModule -->\n\nTimeRangeSliderCache->HelgolandTimeRangeSliderModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            20 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        40 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        27 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        38 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        92 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            $   (projects/.../flot-timeseries-graph.component.ts)\n                        \n                        \n                            $   (projects/.../label-mapper.service.ts)\n                        \n                        \n                            CACHE_PARAM_FAVORITES_GROUP   (projects/.../favorite.service.ts)\n                        \n                        \n                            CACHE_PARAM_FAVORITES_SINGLE   (projects/.../favorite.service.ts)\n                        \n                        \n                            COMPONENTS   (projects/.../favorite.module.ts)\n                        \n                        \n                            COMPONENTS   (projects/.../permalink.module.ts)\n                        \n                        \n                            COMPONENTS   (projects/.../time.module.ts)\n                        \n                        \n                            COMPONENTS   (projects/.../control.module.ts)\n                        \n                        \n                            COMPONENTS   (projects/.../module.ts)\n                        \n                        \n                            COMPONENTS   (projects/.../module.ts)\n                        \n                        \n                            COMPONENTS   (projects/.../module.ts)\n                        \n                        \n                            COMPONENTS   (projects/.../map.module.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            DEFAULT_BASE_LAYER_ATTRIBUTION   (projects/.../cached-map-component.ts)\n                        \n                        \n                            DEFAULT_BASE_LAYER_NAME   (projects/.../cached-map-component.ts)\n                        \n                        \n                            DEFAULT_BASE_LAYER_URL   (projects/.../cached-map-component.ts)\n                        \n                        \n                            equal   (projects/.../dataset-presenter.component.ts)\n                        \n                        \n                            HTTP_SERVICE_INTERCEPTORS   (projects/.../http.service.ts)\n                        \n                        \n                            ID   (projects/.../notifier.service.ts)\n                        \n                        \n                            INTERNAL_ID_SEPERATOR   (projects/.../internal-id-handler.service.ts)\n                        \n                        \n                            LINE_WIDTH   (projects/.../plotly-profile-graph.component.ts)\n                        \n                        \n                            LINE_WIDTH_SELECTED   (projects/.../plotly-profile-graph.component.ts)\n                        \n                        \n                            LOCATED_MARKER_ID   (projects/.../locate.service.ts)\n                        \n                        \n                            LOCATION_ERROR   (projects/.../locate.service.ts)\n                        \n                        \n                            LOCATION_FOUND_EVENT   (projects/.../locate.service.ts)\n                        \n                        \n                            MARKER_SIZE   (projects/.../plotly-profile-graph.component.ts)\n                        \n                        \n                            MARKER_SIZE_SELECTED   (projects/.../plotly-profile-graph.component.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            TIME_IN_MS   (projects/.../notifier.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/helgoland/flot/src/lib/flot-timeseries-graph/flot-timeseries-graph.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        $:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/depiction/src/lib/label-mapper/label-mapper.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        $:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/favorite/src/lib/service/favorite.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CACHE_PARAM_FAVORITES_GROUP\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CACHE_PARAM_FAVORITES_GROUP:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'GroupFavorites'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CACHE_PARAM_FAVORITES_SINGLE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CACHE_PARAM_FAVORITES_SINGLE:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SingleFavorites'\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/favorite/src/lib/favorite.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  FavoriteTogglerComponent\n]\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/permalink/src/lib/permalink.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  PermalinkInMailComponent,\n  PermalinkNewWindowComponent,\n  PermalinkToClipboardComponent\n]\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/time/src/lib/time.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  PredefinedTimespanSelectorComponent,\n  TimeListSelectorComponent,\n  TimespanShiftSelectorComponent,\n  TimespanButtonComponent\n]\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/control/src/lib/control.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  BoolTogglerComponent,\n  StringTogglerComponent,\n  RefreshButtonComponent\n]\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/depiction/src/lib/datasetlist/module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  TimeseriesEntryComponent,\n  ProfileEntryComponent,\n  TrajectoryEntryComponent\n]\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/map/src/lib/selector/module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    PlatformMapSelectorComponent,\n    StationMapSelectorComponent,\n    ProfileTrajectoryMapSelectorComponent\n]\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/map/src/lib/control/module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  LocateControlComponent,\n  ZoomControlComponent,\n  GeosearchControlComponent,\n  ExtentControlComponent\n]\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/map/src/lib/base/map.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n]\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/map/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/core/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/favorite/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/time/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/flot/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/d3/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/time-range-slider/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/control/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/modification/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/depiction/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/permalink/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/caching/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/plotly/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/eventing/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/selector/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/auth/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/map/src/lib/base/cached-map-component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_BASE_LAYER_ATTRIBUTION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_BASE_LAYER_ATTRIBUTION:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '&copy; OpenStreetMap contributors'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_BASE_LAYER_NAME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_BASE_LAYER_NAME:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'BaseLayer'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_BASE_LAYER_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_BASE_LAYER_URL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            equal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        equal:     \n\n                    \n                \n                    \n                        \n                            Default value : require('deep-equal')\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/core/src/lib/dataset-api/http.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HTTP_SERVICE_INTERCEPTORS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HTTP_SERVICE_INTERCEPTORS:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('HTTP_SERVICE_INTERCEPTORS')\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/core/src/lib/notifier/notifier.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'helgoland-notifier'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TIME_IN_MS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TIME_IN_MS:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 3000\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/core/src/lib/dataset-api/internal-id-handler.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            INTERNAL_ID_SEPERATOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        INTERNAL_ID_SEPERATOR:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '__'\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/plotly/src/lib/plotly-profile-graph/plotly-profile-graph.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LINE_WIDTH\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LINE_WIDTH:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LINE_WIDTH_SELECTED\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LINE_WIDTH_SELECTED:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MARKER_SIZE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MARKER_SIZE:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 6\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MARKER_SIZE_SELECTED\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MARKER_SIZE_SELECTED:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/map/src/lib/control/locate/locate.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LOCATED_MARKER_ID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOCATED_MARKER_ID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'located'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOCATION_ERROR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOCATION_ERROR:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'locationerror'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOCATION_FOUND_EVENT\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOCATION_FOUND_EVENT:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'locationfound'\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/introduction.html":{"url":"additional-documentation/introduction.html","title":"additional-page - Introduction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction\n\ntools for a sensor observation service based client\n\nThis project contains Angular based Modules, Components, Injectables to build a sensor observation service based client. It is divided in different Modules to support specific needs. Currently the toolbox comprise the following modules:\n\ncore - Dataset-Api communication and response model, important services (local storage), important interfaces\ncaching - http request caching for completed and running requests\ncontrol - some ui controls (e.g. toggle button)\ndepiction - components to show data or metadata (e.g. dataset data table, timeseries entry, label-mapper)\nfavorite - components and services to handle datasets in favorites\nmap - components to display leaflet maps for view or selection, and also some map controls (geo-search, locate, zoom)\nmodification - dataset modification (color or other graph represent points)\npermalink - components to generate permalinks and service to resolve them\nselector - components for dataset selection (list, filter, service)\ntime - components to manipulate/select timeperiods or timestamps\nflot - timeseries graph presentation with Flot\nplotly - profile graph presentation with plotly.js\nd3 - timeseries and trajectory graph presentation with D3.js\n\nDataset handling\nInternal dataset id generation\nFor a better handling of datasets of different APIs, there exists an internal strategy to create dataset ids out of the url of an API and the API specific dataset ID.\nThe generation and resolving of this internal ID is handled in the InternalIdHandler\n\nExample: For a dataset with the id 123 of the service api https://www.sample.de/api/v1/ the internal id looks like https://www.sample.de/api/v1/__123\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/how-tos.html":{"url":"additional-documentation/how-tos.html","title":"additional-page - How Tos","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow Tos\nTo get in touch with the helgoland-toolbox, here you will find a list of how tos:\n\nIntegrate a D3 timeseries component\nIntegrate a table component\nExtend a timeseries entry component\n\nPreparing a how to app with angular-cli\nStarting from the very beginning in setting up the ng-app, angular-cli needs to be installed with npm. If you already have a running project skip this step and start with one of the how-tos.\nFollowing the instructions of the angular quickstart guide a new ng-app will be created with its folder-structure.\nOpen a terminal and change the working directory to the supposed location, where you want to create your ng-app with an integrated D3 timeseries component. In this tutorial the new ng-app will be named helgoland-how-to.\n\n\n\n\nCommand\n\n\n\n\nInstall angular-cli\nnpm install -g @angular/cli\n\n\nCreate ng-app\nng new helgoland-how-to\n\n\nChange into app-folder\ncd helgoland-how-to\n\n\nStart app\nng serve\n\n\n\nSuggestions for error handling\n\nCannot find module '@angular-devkit/core' click here\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{"url":"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html","title":"additional-page - Integrate a D3 timeseries component","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow to Integrate a D3 timeseries component\nIn this tutorial a stepwise instruction will be given on how to integrate a D3 timeseries component into an angular app (ng-app).\nFirst initialize an app as described in the prepare section here or integrate this component in an existing project.\nStep 1: import helgoland dependencies\nTo start working with the helgoland D3 component a few dependencies are needed: helgoland-d3 and helgoland-core are necessary to provide the D3 timeseries component, in detail, to visualize the diagram containing the dataset graphs and to get accesss via the dataset API. For translations ngx-translate is used and the ngx-translate-http-loader will load the translations.\n\n\n\nInstall dependencies\n\n\n\n\nnpm i @helgoland/core\n\n\nnpm i @helgoland/d3\n\n\nnpm i @ngx-translate/http-loader\n\n\n\nImport dependencies to your ng-app by adding the following javascript code to src/app/app.module.ts:\n// Add dependencies for helgoland components.\nimport { HelgolandD3Module } from '@helgoland/d3';\nimport { DatasetApiInterface, SplittedDataDatasetApiInterface } from '@helgoland/core';\n\n// Add dependencies for translations.\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';Another step is to add the dependencies correctly to the @NgModule. As imports we will define the TranslateModule and the HelgolandD3Module and as providers we need to take the DatasetApiInterface with the SplittedDataDatasetApiInterface as useClass. To use the translation functions we will add a function called HttpLoaderFactory which is to be exported.\nYou can compare your src/app/app.module.ts file with the following code below:\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    HelgolandD3Module\n  ],\n  providers: [\n    {\n      provide: DatasetApiInterface,\n      useClass: SplittedDataDatasetApiInterface\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}Suggestions for error handling\n\nCannot find namespace 'GeoJSON' see below\n\nBy manually adapting the configuration in src/tsconfig.app.js this issue should be solved. But to let the changes be accepted, the app has to be restarted (by executing ng serve). Add to the types-array the type geojson which then should look like this:\n{\n  \"extends\": \"../tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"../out-tsc/app\",\n    \"baseUrl\": \"./\",\n    \"module\": \"es2015\",\n    \"types\": [\"geojson\"]\n  },\n  \"exclude\": [\n    \"test.ts\",\n    \"**/*.spec.ts\"\n  ]\n}Step 2: add code\nNow we will integrate the directive of the D3 timeseries component. Implement the directive of the graph by adding the following code to src/app/app.component.html. All fields in the n52-d3-timeseries-graph-directive are required to provide options, datasets and other information.\nEvery other code that was generated by the app creation is not necessary to run the D3 timeseries component. This can be deleted or kept for further coding.\n\n  \n\nOptional the style can be adapted by adding a css style modification to the directive. For example the following code will change the size:  \n\nThis code is implemented in the helgoland-toolbox github repository and can be viewed here.\nImplement the functionality of the n52-d3-timeseries-graph-directive by adding the following code to the class AppComponent in src/app/app.component.ts:\n\nAttention: If you would like to have pre-selected colors for your graph, you can change and add the color as string in the array of the variable colors. If you do not provide any color-entries in the array or not enough color-entries with this array, all missing colors will be randomly generated in the D3 timeseries component, because each graph needs an own color-entry.\n\n// These variables define the links for accessing the datasets and in which colors they are styled.\npublic datasetIdsMultiple = ['http://www.fluggs.de/sos2/api/v1/__63', 'http://www.fluggs.de/sos2/api/v1/__72'];\npublic colors = ['#123456', '#FF0000'];\n\n// The timespan will be set to the last 28 hours which is calculated in milliseconds (milliseconds*1000 = 100000000).\npublic timespan = new Timespan(new Date().getTime() - 100000000, new Date().getTime());\n\n// These are the plotting options. The boolen of 'togglePanZoom' is set to 'true' to pan the graph.\npublic diagramOptionsD3: D3PlotOptions = {\n    togglePanZoom: true,\n    showReferenceValues: false,\n    generalizeAllways: true\n};\n\n// 'selectedIds' determines the graphs that are visualized with a larger stroke-width. This can be set by clicking on the y-axis.\npublic selectedIds: string[] = [];\npublic datasetOptionsMultiple: Map = new Map();\n\nconstructor() {\n    this.datasetIdsMultiple.forEach((entry, i) => {\n        this.datasetOptionsMultiple.set(entry, new DatasetOptions(entry, this.colors[i]));\n    });\n}\n\n// This function changes the timespan of the graph which is needed for panning (and zooming).\npublic timespanChanged(timespan: Timespan) {\n    this.timespan = timespan;\n}This code is implemented in the helgoland-toolbox github repository and can be viewed here.\nA very important step should not be missedTo use the functionality of the functions in the src/app/app.component.ts we need to add the dependencies to use for example Timespan and D3PlotOptions. This is done by using the following imports:\nimport { DatasetOptions, Timespan } from '@helgoland/core';\nimport { D3PlotOptions } from '@helgoland/d3';Step 3: start working\nNow, that we have added all dependencies and the code to access the functionality of the D3 timeseries component you can start working on your app. If you did not run the app while following this tutorial you should now see the timeseries graph by starting your app with ng serve.\nAdditional Options\nAdd initial min, max value for y axis\nIt is possible to emit a min and max value for the y-axis with the DatasetOptions for each dataset. With these values, the y-axis will only show the selected y-range. Some restrictions are:\n\nIf there is no data provided in the selected timerange and y-axis min/max values, the default min and max range will be used.\nIf the y-axis min and max values are equal, the default min and max range will be used.\n\nZero-based y axis\nIt is possible to set a boolean in the DatasetOptions (zeroBasedYAxis) to show the y axis with minimum as 0, if the data in the selected timerange is above 0, or maximum 0, if the data in the selected timerange is below 0.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/how-tos/integrate-a-table-component.html":{"url":"additional-documentation/how-tos/integrate-a-table-component.html","title":"additional-page - Integrate a table component","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow to integrate a table component\nIn this tutorial a stepwise instruction will be given on how to integrate a table component into an angular app (ng-app).\nA quite similar code is integrated in the helgoland-toolbox github repository and can be viewed here.\nFirst initialize an app as described in the prepare section here or integrate this component in an existing project.\nStep 1: import helgoland dependencies\nTo start working with the table component a few dependencies are needed: helgoland-depiction and helgoland-core are necessary to provide the table component. For translations ngx-translate is used and the ngx-translate-http-loader will load the translations.\n\n\n\nInstall dependencies\n\n\n\n\nnpm i @helgoland/core\n\n\nnpm i @helgoland/depiction\n\n\nnpm i @ngx-translate/http-loader\n\n\n\nImport dependencies to your ng-app by adding the following javascript code to src/app/app.module.ts:\n// Add dependencies for helgoland components.\nimport { HelgolandDatasetTableModule } from '@helgoland/depiction/dataset-table';\nimport { DatasetApiInterface, SplittedDataDatasetApiInterface } from '@helgoland/core';\n\n// Add dependencies for translations.\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';Another step is to add the dependencies correctly to the @NgModule. As imports we will define the TranslateModule and the HelgolandDatasetTableModule and as providers we need to take the DatasetApiInterface with the SplittedDataDatasetApiInterface as useClass. To use the translation functions we will add a function called HttpLoaderFactory which is to be exported.\nYou can compare your src/app/app.module.ts file with the following code below:\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    HelgolandDatasetTableModule\n  ],\n  providers: [\n    {\n      provide: DatasetApiInterface,\n      useClass: SplittedDataDatasetApiInterface\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}Suggestions for error handling\n\nCannot find namespace 'GeoJSON' see below\n\nBy manually adapting the configuration in src/tsconfig.app.js this issue should be solved. But to let the changes be accepted, the app has to be restarted (by executing ng serve). Add to the types-array the type geojson which then should look like this:\n{\n  \"extends\": \"../tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"../out-tsc/app\",\n    \"baseUrl\": \"./\",\n    \"module\": \"es2015\",\n    \"types\": [\"geojson\"]\n  },\n  \"exclude\": [\n    \"test.ts\",\n    \"**/*.spec.ts\"\n  ]\n}Step 2: add code\nNow we will integrate the directive of the table component. Implement the directive of the table by replacing all of src/app/app.component.html with the following code. All fields in the n52-dataset-table-directive are required to provide options, datasets and other information.\nImplement the parameter for the n52-dataset-table-directive by adding the following code to the class AppComponent in src/app/app.component.ts:\n// defines the dataset by internal id structure\npublic datasetIds = [\n  'http://sensorweb.demo.52north.org/sensorwebtestbed/api/v1/__95',\n  'http://sensorweb.demo.52north.org/sensorwebtestbed/api/v1/__96',\n  'http://geo.irceline.be/sos/api/v1/__6941',\n  'http://sensorweb.demo.52north.org/sensorwebtestbed/api/v1/__97'\n];\n\n// defines the timeframe for which data should be fetched\npublic timespan = new Timespan(\n  new Date('2017-10-24T01:49:59.000Z').getTime(),\n  new Date('2017-10-25T01:49:59.000Z').getTime()\n);\n\n// defines the datasetOptions, where the color can be set\npublic datasetOptions: Map = new Map();\n\nconstructor() {\n  let i = 0;\n  // sets the color to the datasetOptions\n  const colors = ['firebrick', 'yellow', 'darkgreen', 'lightblue'];\n  this.datasetIds.forEach((entry) => {\n    this.datasetOptions.set(entry, new DatasetOptions(entry, colors[i++]));\n  });\n}This code is implemented in the helgoland-toolbox github repository and can be viewed here.\nA very important step should not be missedTo use the functionality of the functions in the src/app/app.component.ts we need to add the dependencies to use for example DatasetOptions and Timespan. This is done by using the following imports:\nimport { DatasetOptions, Timespan } from '@helgoland/core';Suggestions for error handling\n\nerror TS2307: Cannot find module '@helgoland/depiction/dataset-table'. Please upgrade the typescript dependency to a least 2.6.0 by npm i typescript@~2.6\n\nStep 3: start working\nNow, that we have added all dependencies and the code to access the functionality of the table component you can start working on your app. If you did not run the app while following this tutorial you should now see the dataset table by starting your app with ng serve.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{"url":"additional-documentation/how-tos/extend-a-timeseries-entry-component.html","title":"additional-page - Extend a timeseries entry component","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow to extend a timeseries entry component\nThis tutorial gives a stepwise instruction on how extend a timeseries entry component with a new html-template. This tutorial can be used as a follow up of Integrate a D3 timeseries component.\nStep 1: Preparation to add new components\n\nadd scss support\n\nadjust in .angular-cli.json the parameter defaults.styleExt from css to scss\n\n\nrestucture of the view to have two other divs beside the diagram\n\nchange app.component.html to ```html\n\n    \n\n\n    \n        \n    \n    \n        \n    \n\n```\nrename app.component.css to app.component.scss and adjust it to```scss\n:host {\n    .diagram {\n        height: 500px;\n        flex: 1;\n    }\n    .bottom {\n        display: flex;\n        flex-direction: row;\n        .left,\n        .right {\n            width: 50%;\n        }\n    }\n}\n```\nadjust the import of the styles in app.component.ts to app.component.scss\n\n\n\nStep 2: Add existing timeseries entry component to app\n\ninstall @helgoland/depiction add HelgolandDatasetlistModule to import\ndo a```bash\nnpm i @helgoland/depiction\n```\nadd HelgolandDatasetlistModule in app.modul.ts to the import list therefor you need to import it:```typescript\nimport { HelgolandDatasetlistModule } from '@helgoland/depiction';\n```\nplease check if you use at least typescript v2.6 or greater, otherwise install it with: ```bash\nnpm i typescript@~2.6\n```\n\n\nadd SettingsService to provider\ncreate an Injectable ExtendedSettingsService which will extend a SettingsService in your project and add the missing imports (SettingsService, Settings of @helgoland/core and Injectable of @angular/core)```typescript\n@Injectable()\nexport class ExtendedSettingsService extends SettingsService {\n    constructor() {\n        super();\n        this.setSettings({\n        // TODO add settings here or load it from somewhere else...\n        });\n    }\n}\n```\nadd this ExtendedSettingsService in the list of the providers ```typescript\n{\n    provide: SettingsService,\n    useClass: ExtendedSettingsService\n}\n```\n\n\nadd n52-timeseries-entry to app.component.html (integrate this in the previous created div with the class left)  Common timeseries entries\n  \n      \n  \nadd selectDataset-method to AppComponent class (handles the selection of a dataset triggered inside the timeseries-entry-component)  public selectDataset(selected: boolean, id: string) {\n      if (selected) {\n          this.selectedIds.push(id);\n      } else {\n          this.selectedIds.splice(this.selectedIds.findIndex((entry) => entry === id), 1);\n      }\n  }\nadd isSelected-method to AppComponent class (informs the timeseries-entry-component, if the dataset is selected)\n  public isSelected(id: string) {\n      return this.selectedIds.indexOf(id) > -1;\n  }\nwith a ng serve you should see now the diagram and the listed timeseries entries, by clicking an entry you can highligh it in the diagram\n\n\nStep 3: Extend timeseries entry with new template\n\nadd angular-material in version 5 (see also the here)\ninstall```bash\nnpm i @angular/cdk@^5.0.0 @angular/material@^5.0.0\n```\nadjust app.module.ts with MatCardModule and MatButtonModule in the import list and import them from @angular/material\nadd a style sheet to styles.scss```css\n@import \"~@angular/material/prebuilt-themes/indigo-pink.css\";\n```\n\n\ncreate new component ExtendedTimeseriesEntryComponent - this will generate a component with a basic template an style sheet. The component is also added to the app.module.ts to the declarations list  ng generate component extended-timeseries\nadjust extended-timeseries.component.html to ```html\n\n    \n        \n            \n            {{phenomenonLabel}} - {{uom}}\n            {{platformLabel}}\n        \n        \n            Highlight\n        \n    \n\n```\nadjust extended-timeseries.component.tsexport class ExtendedTimeseriesComponent extends TimeseriesEntryComponent {\n    public changeColor() {\n        this.datasetOptions.color = this.color.getColor();\n        this.onUpdateOptions.emit(this.datasetOptions);\n    }\n}\n\n\n\nStep 4: Add new timeseries entry component to app\n\nadd new component app-extended-timeseries to app.component.html (integrate this in the previous created div with the class right)  Extended timeseries entries\n  \n      \n      \n  \nadd updateOptions-method to AppComponent class (this method is bound with the app-extended-timeseries component and reacts on dataset option changes)  public updateOptions(option: DatasetOptions, id: string) {\n      this.datasetOptionsMultiple.set(id, option);\n  }\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
