var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/Address.html",[0,0.081,1,3.073]],["body/interfaces/Address.html",[0,0.128,1,5.112,2,0.053,3,0.048,4,0.04,5,3.406,6,0.194,7,0.618,8,6.189,9,5.281,10,6.189,11,5.281,12,6.189,13,5.281,14,6.189,15,5.281,16,5.281,17,5.281,18,4.686,19,6.189,20,5.281,21,0.706,22,0.473,23,0.005,24,0.42,25,3.406,26,5.135,27,1.844,28,1.421,29,0.586,30,3.579,31,1.061,32,4.062,33,3.308,34,2.915,35,2.114,36,3.798,37,3.798,38,2.379,39,3.684,40,2.58,41,4.612,42,4.864,43,2.261,44,4.578,45,4.578,46,4.578,47,0.772,48,0.059,49,4.612,50,3.406,51,3.406,52,3.406,53,3.406,54,0.079,55,3.229,56,1.259,57,1.439,58,2.956,59,3.406,60,0.844,61,2.375,62,0.581,63,2.748,64,0.874,65,4.695,66,1.16,67,3.406,68,2.602,69,3.406,70,3.406,71,1.587,72,3.406,73,3.082,74,4.864,75,4.402,76,3.406,77,3.406,78,3.406,79,1.201,80,4.864,81,4.612,82,3.229,83,3.406,84,3.406,85,1.368,86,0.003,87,3.406,88,0.849,89,3.406,90,4.11,91,1.75,92,3.406,93,3.406,94,3.406,95,3.406,96,3.406,97,1.844,98,2.227,99,4.864,100,2.956,101,3.406,102,3.406,103,2.748,104,3.406,105,3.406,106,3.406,107,3.406,108,2.748,109,3.406,110,3.406,111,3.406,112,2.748,113,3.406,114,3.406,115,2.748,116,3.406,117,3.406,118,2.748,119,3.406,120,3.406,121,2.748,122,3.406,123,3.406,124,3.406,125,3.406,126,3.406,127,2.748,128,3.406,129,3.406,130,3.406,131,0.003]],["title/classes/ApiInterface.html",[54,0.092,132,2.817]],["body/classes/ApiInterface.html",[2,0.08,3,0.073,4,0.06,6,0.293,21,0.689,22,0.394,23,0.005,24,0.385,48,0.054,54,0.149,57,2.27,64,0.988,79,1.42,86,0.004,88,1.119,131,0.004,132,4.592,133,8.049,134,8.049,135,5.931,136,1.693,137,7.389,138,7.389,139,7.389,140,2.198,141,1.181,142,6.611,143,1.245,144,7.389,145,6.934,146,2.063,147,6.611,148,4.639,149,4.02,150,4.719,151,4.468,152,3.005,153,4.153,154,4.301,155,5.483,156,4.301,157,6.611,158,8.972,159,6.611,160,6.611]],["title/interfaces/AxesOptions.html",[0,0.081,161,4.191]],["body/interfaces/AxesOptions.html",[0,0.134,2,0.082,3,0.075,4,0.062,6,0.3,7,0.827,21,0.698,22,0.486,23,0.005,47,1.6,48,0.055,64,1.262,86,0.004,131,0.004,161,6.928,162,6.763,163,9.467,164,9.467,165,3.662,166,1.946,167,9.467,168,9.467,169,9.467,170,4.577,171,1.683,172,1.077,173,6.763]],["title/components/AxesOptionsComponent.html",[174,0.805,175,1.833]],["body/components/AxesOptionsComponent.html",[2,0.058,3,0.054,4,0.044,6,0.215,21,0.323,22,0.232,23,0.005,24,0.226,29,0.65,38,1.582,48,0.039,54,0.088,62,0.773,64,0.806,66,1.247,79,0.733,86,0.003,88,0.912,98,1.358,131,0.003,136,1.38,140,1.752,141,0.963,166,0.996,174,1.391,175,3.017,176,1.629,177,1.844,178,1.844,179,7.703,180,6.911,181,4.348,182,1.495,183,3.317,184,3.225,185,3.27,186,2.13,187,6.023,188,8.316,189,2.715,190,7.703,191,1.629,192,2.715,193,4.348,194,4.348,195,1.088,196,1.56,197,4.846,198,1.395,199,2.398,200,2.435,201,2.398,202,3.114,203,1.844,204,2.555,205,1.56,206,1.815,207,2.931,208,1.758,209,1.19,210,3.763,211,1.758,212,2.248,213,2.257,214,2.091,215,3.438,216,1.704,217,1.731,218,2.669,219,1.731,220,1.312,221,1.881,222,1.786,223,1.844,224,1.758,225,1.679,226,1.758,227,1.704,228,2.931,229,1.758,230,1.629,231,1.758,232,2.326,233,1.786,234,1.786,235,1.94,236,1.844,237,1.758,238,1.758,239,1.844,240,1.758,241,2.257,242,1.758,243,1.731,244,1.758,245,1.606,246,1.606,247,1.844,248,1.731,249,1.758,250,1.993,251,2.257,252,1.758,253,2.839,254,1.844,255,1.758,256,1.844,257,1.758,258,1.844,259,1.758,260,1.376,261,1.679,262,1.679,263,2.552,264,1.758,265,1.731,266,1.758,267,2.931,268,1.758,269,1.56,270,1.815,271,2.555,272,1.758,273,1.758,274,1.786,275,1.56,276,1.758,277,1.856,278,1.758,279,1.474,280,1.844,281,1.731,282,1.758,283,1.758,284,1.815,285,1.758,286,1.758,287,1.304,288,1.704,289,1.844]],["title/injectables/BasicAuthService.html",[28,1.149,290,4.533]],["body/injectables/BasicAuthService.html",[2,0.069,3,0.064,4,0.052,6,0.255,7,0.746,21,0.683,22,0.403,23,0.005,24,0.417,27,2.426,28,1.912,29,0.771,34,3.362,48,0.047,54,0.104,60,1.454,61,4.093,62,0.945,64,0.904,66,1.068,79,1.485,85,1.65,86,0.004,88,1.024,97,3.178,131,0.004,136,1.549,141,1.362,143,1.139,171,1.28,195,1.693,235,1.342,290,6.761,291,9.68,292,5.753,293,2.465,294,6.946,295,7.537,296,8.919,297,8.919,298,8.919,299,4.771,300,5.111,301,7.537,302,7.537,303,8.919,304,2.355,305,5.753,306,5.753,307,5.753,308,5.753,309,5.753,310,6.761,311,3.614,312,4.771,313,8.002,314,5.161,315,5.753,316,5.869,317,5.161,318,5.753,319,4.248,320,5.753,321,8.919]],["title/interfaces/BlacklistedService.html",[0,0.081,322,3.175]],["body/interfaces/BlacklistedService.html",[0,0.161,2,0.081,3,0.075,4,0.061,6,0.299,7,0.826,21,0.703,22,0.4,23,0.005,24,0.315,47,1.192,48,0.08,86,0.004,88,1.231,131,0.004,140,2.152,148,4.892,166,1.861,171,1.539,304,1.891,322,5.69,323,4.757,324,6.395,325,4.757,326,2.899,327,5.893,328,4.563,329,4.757,330,4.757,331,5.893,332,4.563,333,4.105,334,3.264,335,4.757,336,5.64,337,5.64,338,4.393]],["title/components/BoolTogglerComponent.html",[174,0.805,205,1.626]],["body/components/BoolTogglerComponent.html",[2,0.056,3,0.051,4,0.042,6,0.205,21,0.571,22,0.39,23,0.005,24,0.216,29,0.62,38,1.509,48,0.038,54,0.084,62,0.85,66,1.207,79,0.699,86,0.003,88,0.883,98,1.295,131,0.003,136,1.335,140,1.708,141,1.231,166,0.95,171,1.104,174,1.367,175,1.677,176,1.554,177,1.759,178,1.759,182,1.426,183,3.309,184,3.217,185,1.731,186,2.061,189,2.66,191,1.554,192,2.66,195,1.038,196,2.865,198,1.331,199,2.32,200,2.357,201,2.32,202,3.051,203,1.759,204,2.472,205,2.622,206,3.214,207,2.858,208,1.677,209,1.136,210,3.733,211,1.677,212,2.192,213,2.184,214,2.055,215,3.387,216,1.626,217,1.651,218,2.602,219,1.651,220,1.269,221,1.82,222,1.704,223,1.759,224,1.677,225,1.601,226,1.677,227,1.626,228,2.858,229,1.677,230,1.554,231,1.677,232,2.25,233,1.704,234,1.704,235,1.901,236,1.759,237,1.677,238,1.677,239,1.759,240,1.677,241,2.184,242,1.677,243,1.651,244,1.677,245,1.532,246,1.532,247,1.759,248,1.651,249,1.677,250,1.943,251,2.184,252,1.677,253,2.768,254,1.759,255,1.677,256,1.759,257,1.677,258,1.759,259,1.677,260,1.313,261,1.601,262,1.601,263,2.488,264,1.677,265,1.651,266,1.677,267,2.858,268,1.677,269,1.488,270,1.731,271,2.472,272,1.677,273,1.677,274,1.704,275,1.488,276,1.677,277,1.796,278,1.677,279,1.406,280,1.759,281,1.651,282,1.677,283,1.677,284,1.731,285,1.677,286,1.677,287,1.244,288,1.626,289,1.759,339,8.902,340,7.986,341,3.834,342,5.388,343,5.388,344,5.741,345,6.738,346,6.229,347,1.753,348,6.738,349,4.147,350,4.147,351,4.147,352,4.147,353,4.623,354,4.623]],["title/classes/BufferedTime.html",[54,0.092,355,3.731]],["body/classes/BufferedTime.html",[2,0.081,3,0.074,4,0.061,6,0.296,7,0.821,22,0.432,23,0.005,47,1.813,48,0.073,54,0.171,60,1.739,62,0.941,64,0.802,86,0.004,88,0.908,131,0.004,140,1.519,141,1.293,143,1.01,152,3.037,172,1.436,355,6.121,356,5.54,357,5.922,358,8.393,359,3.367,360,6.68,361,4.091,362,8.29,363,6.68,364,5.208,365,5.54,366,6.876,367,4.515,368,5.54]],["title/interfaces/Cache.html",[0,0.081,369,2.613]],["body/interfaces/Cache.html",[0,0.143,2,0.078,3,0.072,4,0.059,6,0.288,21,0.542,23,0.005,24,0.416,27,2.74,28,1.853,29,0.871,47,1.438,48,0.053,54,0.118,61,4.425,62,0.758,66,1.513,79,1.232,85,1.784,86,0.004,97,2.74,131,0.004,141,0.932,146,1.739,172,1.035,277,2.58,293,1.796,361,3.375,369,4.826,370,6.346,371,4.798,372,6.933,373,6.498,374,5.25,375,6.578,376,5.302,377,4.579,378,6.254,379,5.302,380,4.798,381,4.798,382,6.933,383,5.389,384,6.758,385,6.346,386,5.389,387,3.951,388,4.798,389,6.016,390,3.723,391,5.389]],["title/interfaces/CachedItem.html",[0,0.081,372,3.935]],["body/interfaces/CachedItem.html",[0,0.142,2,0.077,3,0.071,4,0.058,6,0.284,7,0.799,21,0.426,22,0.387,23,0.005,24,0.413,27,2.698,28,1.836,29,0.858,47,1.639,48,0.052,54,0.116,61,3.476,62,0.75,66,1.499,79,1.22,85,1.767,86,0.004,97,2.698,131,0.004,146,1.366,172,1.019,277,2.566,293,1.769,361,3.343,369,4.571,370,4.984,371,4.725,372,6.884,374,5.214,375,6.886,376,5.251,377,4.51,378,6.41,379,6.227,380,4.725,381,4.725,382,6.884,383,5.308,384,6.694,385,6.285,386,5.308,387,3.892,388,4.725,389,5.959,390,3.667,391,5.308]],["title/classes/CachedMapComponent.html",[54,0.092,392,4.533]],["body/classes/CachedMapComponent.html",[2,0.035,3,0.032,4,0.026,6,0.128,7,0.453,21,0.429,22,0.464,23,0.005,24,0.301,29,0.388,48,0.023,54,0.083,56,1.316,57,2.222,60,0.882,62,0.886,64,0.938,68,1.033,71,2.057,79,1.378,85,1.537,86,0.002,88,1.015,97,1.219,131,0.002,136,0.94,141,1.429,143,1.129,146,0.976,149,1.758,152,1.314,166,0.594,174,0.728,195,2.09,196,2.807,235,2.415,293,2.785,347,1.067,387,2.78,392,4.102,393,8.969,394,2.594,395,2.685,396,4.704,397,5.672,398,3.833,399,6.446,400,6.446,401,6.446,402,6.446,403,6.446,404,6.446,405,6.446,406,7.022,407,4.572,408,4.572,409,6.446,410,6.446,411,5.783,412,2.364,413,6.446,414,4.05,415,4.572,416,4.572,417,6.446,418,6.446,419,5.672,420,5.672,421,5.672,422,4.187,423,5.672,424,5.672,425,5.672,426,2.135,427,4.403,428,3.69,429,7.233,430,4.572,431,2.891,432,2.891,433,2.891,434,5.672,435,2.891,436,4.187,437,2.891,438,2.62,439,7.466,440,1.451,441,2.891,442,2.891,443,5.672,444,2.891,445,4.572,446,7.848,447,2.891,448,4.572,449,2.891,450,2.891,451,2.891,452,2.891,453,2.164,454,2.989,455,2.891,456,3.072,457,2.891,458,2.891,459,4.572,460,2.891,461,4.572,462,2.891,463,2.891,464,2.891,465,2.891,466,3.561,467,2.891,468,4.572,469,2.891,470,2.891,471,4.572,472,2.891,473,2.891,474,4.572,475,2.891,476,1.758,477,1.531,478,1.881,479,4.102,480,2.594,481,2.594,482,2.594,483,4.102,484,2.252,485,2.594,486,2.398,487,1.57,488,1.881,489,2.037,490,1.758,491,2.891,492,2.135,493,4.572,494,3.792,495,4.572,496,4.572,497,4.572,498,5.088,499,1.758,500,2.891,501,7.466,502,2.891,503,4.572,504,2.891,505,4.572,506,2.891,507,4.572,508,2.891,509,4.572,510,2.891,511,5.672,512,2.891,513,2.891,514,2.891,515,2.891,516,5.672,517,4.572,518,0.855,519,2.891,520,2.891,521,4.572,522,4.572,523,2.891,524,2.039,525,2.891,526,2.891,527,2.891,528,2.891,529,2.891,530,2.891,531,1.398,532,6.5,533,2.252,534,2.252,535,2.252,536,2.252,537,2.252,538,2.891,539,4.572,540,4.572,541,4.572,542,4.572,543,2.891,544,2.891,545,1.314,546,0.972,547,2.398,548,2.891,549,2.594,550,2.891,551,4.572,552,2.891,553,2.891,554,4.572,555,2.891,556,2.891,557,2.891,558,2.891,559,2.891,560,2.891,561,2.891,562,4.572,563,2.891,564,2.891]],["title/injectables/CachingInterceptor.html",[28,1.149,565,4.191]],["body/injectables/CachingInterceptor.html",[2,0.066,3,0.061,4,0.05,6,0.243,22,0.35,23,0.005,24,0.46,27,2.314,28,1.868,29,0.736,31,1.331,34,3.647,35,3.532,48,0.045,54,0.099,56,1.58,57,1.683,60,1.409,62,0.764,64,0.877,66,1.019,79,1.417,85,1.599,86,0.003,88,0.993,131,0.003,136,1.688,141,1.048,143,1.104,154,4.753,182,2.812,319,4.052,369,4.948,374,5.164,375,5.148,376,5.697,377,3.867,379,5.343,390,3.144,565,6.059,566,8.212,567,5.488,568,7.367,569,4.923,570,8.212,571,6.464,572,5.488,573,4.052,574,5.917,575,4.233,576,6.17,577,5.488,578,4.59,579,5.488,580,5.488,581,4.274,582,5.148,583,5.488,584,5.488,585,4.923,586,5.488,587,5.083,588,4.923,589,3.867,590,5.488,591,5.488,592,8.212,593,5.488,594,3.448,595,4.274,596,5.159,597,7.306,598,5.488,599,3.867,600,5.488,601,4.551,602,4.052,603,5.488,604,5.488,605,5.488,606,5.488,607,5.488,608,5.488,609,5.488,610,5.488,611,5.488,612,6.554,613,5.488,614,5.488,615,4.442,616,5.488,617,5.488,618,5.488,619,5.488,620,5.148,621,2.495,622,4.923,623,5.488]],["title/interfaces/Category.html",[0,0.081,624,2.443]],["body/interfaces/Category.html",[0,0.148,2,0.096,3,0.088,4,0.072,23,0.005,24,0.37,48,0.064,86,0.004,131,0.004,143,1.509,172,1.464,624,4.442,625,3.018,626,7.931]],["title/interfaces/CollectionMetadata.html",[0,0.081,627,3.288]],["body/interfaces/CollectionMetadata.html",[0,0.161,2,0.077,3,0.071,4,0.058,6,0.284,7,0.8,21,0.661,22,0.424,23,0.005,47,1.847,48,0.081,62,0.751,86,0.004,131,0.004,146,2.202,166,1.818,172,1.409,176,2.155,182,2.492,334,3.099,347,1.496,359,2.155,627,6.044,628,4.333,629,4.92,630,4.397,631,6.278,632,3.898,633,4.913,634,4.333,635,4.333,636,3.781,637,4.333,638,3.26,639,4.333,640,4.333,641,4.333,642,4.333,643,4.333,644,4.333,645,3.898,646,4.913,647,4.333,648,5.257,649,4.333,650,3.898]],["title/components/ColorSelectorComponent.html",[174,0.805,208,1.833]],["body/components/ColorSelectorComponent.html",[2,0.058,3,0.053,4,0.044,6,0.213,21,0.579,22,0.367,23,0.005,24,0.224,29,0.644,38,1.568,48,0.039,54,0.087,62,0.713,66,1.239,86,0.003,88,0.907,98,1.346,131,0.003,140,1.744,141,1.099,166,0.987,174,1.386,175,1.742,176,1.615,177,1.828,178,1.828,182,1.481,183,3.32,184,3.224,185,1.799,186,2.117,189,2.705,191,1.615,192,2.705,196,2.801,198,1.383,199,2.383,200,2.421,201,2.383,202,3.102,203,1.828,204,2.539,205,1.546,206,1.799,207,2.918,208,3.005,209,2.315,210,3.758,211,1.742,212,2.237,213,2.243,214,2.084,215,3.429,216,1.689,217,1.716,218,2.656,219,1.716,220,1.304,221,1.869,222,1.77,223,1.828,224,1.742,225,1.664,226,1.742,227,1.689,228,2.918,229,1.742,230,1.615,231,1.742,232,2.312,233,1.77,234,1.77,235,1.933,236,1.828,237,1.742,238,1.742,239,1.828,240,1.742,241,2.243,242,1.742,243,1.716,244,1.742,245,1.591,246,1.591,247,1.828,248,1.716,249,1.742,250,1.984,251,2.243,252,1.742,253,2.825,254,1.828,255,1.742,256,1.828,257,1.742,258,1.828,259,1.742,260,1.364,261,1.664,262,1.664,263,2.54,264,1.742,265,1.716,266,1.742,267,2.918,268,1.742,269,1.546,270,1.799,271,2.539,272,1.742,273,1.742,274,1.77,275,1.546,276,1.742,277,1.844,278,1.742,279,1.461,280,1.828,281,1.716,282,1.742,283,1.742,284,1.799,285,1.742,286,1.742,287,1.293,288,1.689,289,1.828,332,5.182,651,8.285,652,7.432,653,2.678,654,3.72,655,7.667,656,4.309,657,3.984,658,3.984]],["title/injectables/ColorService.html",[28,1.149,659,3.288]],["body/injectables/ColorService.html",[2,0.089,3,0.081,4,0.067,6,0.326,21,0.648,23,0.005,24,0.343,28,2.138,29,0.985,48,0.06,54,0.133,62,0.874,71,2.666,79,1.421,85,1.609,86,0.004,131,0.004,136,1.806,141,1.26,209,1.805,293,2.598,659,5.717,660,7.35,661,9.74,662,9.74,663,7.35,664,7.35,665,7.35,666,7.35,667,7.35]],["title/interfaces/D3GraphOptions.html",[0,0.081,668,3.935]],["body/interfaces/D3GraphOptions.html",[0,0.144,2,0.092,3,0.084,4,0.069,6,0.338,7,0.888,22,0.457,23,0.005,24,0.356,48,0.062,86,0.004,131,0.004,171,1.621,212,2.222,668,6.988,669,5.929,670,4.033,671,6.315,672,8.171,673,6.943,674,7.673,675,4.363]],["title/components/D3OverviewTimeseriesGraphComponent.html",[174,0.805,211,1.833]],["body/components/D3OverviewTimeseriesGraphComponent.html",[2,0.037,3,0.034,4,0.028,6,0.137,7,0.476,21,0.394,22,0.447,23,0.005,24,0.276,29,0.414,31,0.748,38,1.007,47,0.849,48,0.025,54,0.056,56,1.385,57,1.108,60,0.928,62,0.934,64,0.869,66,1.241,68,1.102,79,1.095,85,0.676,86,0.002,88,1.043,98,0.864,131,0.002,136,0.989,140,2.204,141,1.373,143,1.01,166,0.634,171,1.135,174,1.154,175,1.119,176,1.037,177,1.174,178,1.174,182,0.952,183,3.222,184,3.132,185,1.155,186,1.526,189,2.506,191,1.989,192,2.844,195,1.8,196,2.668,198,0.888,199,1.719,200,1.745,201,1.719,202,2.501,203,1.174,204,1.831,205,0.993,206,1.155,207,2.251,208,1.119,209,0.758,210,3.43,211,2.423,212,2.486,213,3.484,214,2.486,215,2.92,216,1.085,217,1.102,218,2.049,219,1.102,220,0.94,221,1.348,222,1.137,223,1.174,224,1.119,225,1.069,226,1.119,227,1.085,228,2.251,229,1.119,230,1.037,231,1.119,232,1.667,233,1.137,234,1.137,235,1.791,236,1.174,237,1.119,238,1.119,239,1.174,240,1.119,241,1.618,242,1.119,243,1.102,244,1.119,245,1.022,246,1.022,247,1.174,248,1.102,249,1.119,250,1.53,251,1.618,252,1.119,253,2.18,254,1.174,255,1.119,256,1.174,257,1.119,258,1.174,259,1.119,260,0.876,261,1.069,262,1.069,263,1.96,264,1.119,265,1.102,266,1.119,267,2.251,268,1.119,269,0.993,270,1.155,271,1.831,272,1.119,273,1.119,274,1.137,275,0.993,276,1.119,277,2.121,278,1.119,279,0.938,280,1.174,281,1.102,282,1.119,283,1.119,284,1.155,285,1.119,286,1.119,287,0.83,288,1.085,289,1.174,293,2.121,347,0.72,357,4.821,395,2.8,412,2.488,440,0.979,453,2.278,454,3.098,456,1.35,518,1.423,531,2.326,546,1.989,670,2.549,676,6.79,677,6.512,678,1.768,679,3.297,680,3.998,681,2.187,682,2.838,683,2.838,684,5.993,685,4.708,686,5.993,687,5.993,688,3.724,689,4.812,690,4.317,691,3.849,692,3.162,693,4.906,694,5.306,695,3.716,696,5.306,697,4.367,698,2.559,699,4.367,700,5.203,701,4.812,702,2.613,703,3.085,704,3.085,705,3.998,706,3.085,707,3.085,708,3.085,709,2.768,710,3.085,711,3.085,712,3.085,713,3.085,714,3.085,715,4.812,716,3.085,717,2.377,718,4.317,719,3.085,720,2.768,721,2.768,722,3.085,723,2.278,724,2.174,725,2.008,726,2.403,727,3.747,728,2.403,729,5.306,730,4.317,731,4.317,732,2.768,733,2.403,734,2.768,735,3.085,736,2.559,737,1.938,738,2.768,739,2.768]],["title/interfaces/D3PlotOptions.html",[0,0.081,705,3.415]],["body/interfaces/D3PlotOptions.html",[0,0.135,2,0.082,3,0.076,4,0.062,6,0.303,7,0.833,22,0.482,23,0.005,48,0.056,64,1.26,86,0.004,131,0.004,171,1.804,174,1.089,212,1.994,213,3.195,669,5.323,671,5.669,705,5.683,725,5.471,740,4.157,741,6.696,742,6.696,743,7.4,744,5.779,745,6.696,746,5.97]],["title/classes/D3SelectionRange.html",[54,0.092,747,3.935]],["body/classes/D3SelectionRange.html",[2,0.092,3,0.084,4,0.069,6,0.338,7,0.89,22,0.43,23,0.005,47,1.799,48,0.062,54,0.163,62,0.947,86,0.004,131,0.004,141,1.288,669,7.436,747,6.996,748,4.026,749,7.629,750,7.629,751,7.629]],["title/interfaces/Data.html",[0,0.081,638,1.862]],["body/interfaces/Data.html",[0,0.162,2,0.083,3,0.076,4,0.063,6,0.305,7,0.836,21,0.608,22,0.405,23,0.005,43,3.56,47,1.682,48,0.082,54,0.125,86,0.004,91,3.379,98,2.366,131,0.004,172,1.517,347,2.352,359,3.072,524,3.07,625,2.62,638,3.113,752,4.653,753,4.627,754,4.509,755,5.945,756,5.496,757,4.187,758,4.48,759,4.709,760,5.709,761,4.061]],["title/interfaces/DataConst.html",[0,0.081,762,3.935]],["body/interfaces/DataConst.html",[0,0.076,2,0.011,3,0.011,4,0.009,6,0.194,7,0.173,18,0.529,21,0.551,22,0.045,23,0.005,24,0.204,29,0.127,31,0.23,32,1.353,34,1.205,35,0.845,47,1.614,48,0.008,54,0.017,56,0.503,57,1.342,60,0.183,62,0.369,64,0.477,65,3.911,66,0.738,68,1.687,71,3.104,79,1.189,85,1.619,86,0.001,90,0.491,91,2.638,97,1.486,100,2.953,131,0.001,140,0.685,141,0.136,146,1.529,150,1.001,153,0.597,154,0.618,156,1.96,165,2.061,166,1.446,170,3.264,171,1.217,172,0.387,174,0.387,183,0.297,184,0.289,186,0.301,189,0.792,191,1.588,192,1.15,195,1.132,196,0.562,199,0.624,200,0.88,209,1.073,212,1.028,213,1.013,214,1.046,216,0.334,220,1.52,225,1.044,227,0.334,232,0.329,235,0.408,245,1.167,246,0.579,265,0.339,277,1.98,279,2.439,287,0.948,288,0.615,293,2.615,304,0.49,326,1.513,347,0.822,359,1.335,428,0.618,438,3.953,440,0.301,456,2.445,488,2.292,489,2.799,499,2.657,518,1.951,531,3.802,532,0.74,533,0.74,534,0.74,535,0.74,536,0.74,537,0.74,545,3.07,546,2.365,575,0.459,594,0.597,596,0.597,615,0.578,621,1.602,629,0.926,630,0.45,638,2.867,659,1.579,670,3.2,673,0.669,675,4.172,676,0.669,677,0.642,678,0.544,679,0.974,681,0.432,682,0.56,683,0.56,688,0.529,692,1.426,695,0.597,702,0.949,705,1.64,724,0.669,725,1.137,728,0.74,737,0.597,741,0.669,742,2.483,743,1.361,744,0.578,745,0.669,746,1.893,748,2.356,762,1.361,763,1.341,764,1.098,765,1.476,766,0.597,767,0.642,768,0.75,769,1.031,770,0.81,771,2.214,772,4.461,773,2.922,774,0.788,775,0.788,776,0.788,777,0.788,778,2.601,779,2.346,780,2.799,781,2.932,782,2.932,783,2.013,784,2.499,785,2.013,786,2.013,787,3.795,788,2.684,789,1.181,790,1.449,791,2.013,792,1.181,793,2.013,794,1.137,795,0.642,796,0.642,797,0.788,798,5.329,799,2.499,800,4.985,801,0.788,802,0.788,803,0.788,804,0.701,805,0.701,806,0.618,807,0.788,808,0.788,809,0.788,810,1.476,811,1.361,812,2.499,813,1.181,814,0.642,815,0.642,816,0.788,817,0.701,818,0.788,819,0.788,820,0.701,821,0.701,822,0.788,823,4.106,824,2.013,825,0.788,826,0.788,827,0.788,828,3.795,829,3.636,830,3.552,831,1.449,832,0.788,833,0.669,834,1.431,835,0.597,836,0.701,837,0.974,838,1.64,839,0.669,840,1.063,841,2.657,842,0.701,843,1.29,844,4.861,845,1.792,846,1.29,847,1.29,848,0.701,849,0.701,850,0.701,851,0.701,852,0.788,853,0.701,854,0.701,855,0.788,856,0.788,857,0.788,858,0.788,859,2.761,860,1.231,861,0.701,862,0.701,863,0.74,864,0.788,865,0.81,866,1.063,867,0.597,868,1.449,869,0.788,870,1.792,871,0.788,872,0.701,873,2.601,874,1.098,875,2.601,876,1.792,877,1.29,878,2.932,879,0.845,880,1.29,881,1.29,882,0.701,883,2.922,884,1.449,885,2.013,886,0.578,887,0.578,888,0.74,889,1.449,890,0.788,891,0.544,892,0.788,893,0.56,894,0.701,895,1.449,896,0.788,897,0.788,898,0.788,899,1.449,900,0.788,901,0.578,902,1.449,903,1.449,904,2.499,905,3.294,906,1.449,907,4.181,908,1.449,909,1.449,910,3.917,911,0.578,912,0.578,913,0.788,914,2.013,915,0.578,916,1.063,917,0.701,918,0.788,919,0.578,920,0.788,921,0.788,922,0.56,923,0.788,924,0.701,925,0.642,926,0.669,927,0.578,928,1.449,929,2.112,930,0.788,931,0.788,932,0.701,933,1.29,934,0.788,935,0.788,936,0.788,937,0.788,938,1.361,939,0.788,940,0.544,941,0.74,942,0.788,943,0.788,944,1.361,945,1.449,946,1.098,947,3.079,948,0.597,949,0.74,950,1.64,951,0.788,952,0.788,953,2.499,954,0.788,955,1.449,956,0.74,957,1.449,958,0.788,959,0.642,960,0.788,961,0.788,962,0.788,963,0.788,964,0.788,965,0.788,966,0.788,967,0.788,968,0.788,969,0.788,970,0.788,971,0.788,972,0.788,973,1.866,974,0.788,975,1.792,976,0.74,977,2.381,978,0.74,979,2.013,980,0.788,981,0.642,982,0.788,983,0.788,984,0.788,985,0.788,986,0.788,987,0.788,988,1.361,989,0.788,990,0.788,991,0.788,992,1.449,993,0.788,994,2.499,995,2.013,996,0.788,997,0.788,998,0.788,999,0.701,1000,1.449,1001,0.788,1002,0.788,1003,0.788,1004,0.361,1005,2.013,1006,2.013,1007,0.788,1008,0.788,1009,0.788,1010,1.449,1011,0.788,1012,1.449,1013,0.788,1014,0.788,1015,0.788,1016,0.788,1017,0.788,1018,0.788,1019,0.788,1020,0.788,1021,2.577,1022,0.788,1023,0.788,1024,2.013,1025,0.788,1026,1.449,1027,1.449,1028,0.788,1029,0.788,1030,1.449,1031,1.449,1032,0.788,1033,0.788,1034,1.449,1035,2.225,1036,2.013,1037,3.487,1038,0.788,1039,0.788,1040,1.449,1041,0.788,1042,0.788,1043,3.777,1044,0.701,1045,2.013,1046,0.788,1047,0.788,1048,0.788,1049,1.231,1050,2.601,1051,0.701,1052,3.934,1053,3.722,1054,2.601,1055,3.722,1056,2.932,1057,1.29,1058,4.301,1059,0.788,1060,0.701,1061,0.701,1062,0.701,1063,0.701,1064,0.701,1065,1.29,1066,1.29,1067,0.701,1068,4.608,1069,3.487,1070,1.29,1071,1.29,1072,1.29,1073,1.29,1074,1.792,1075,1.29,1076,0.701,1077,2.225,1078,0.701,1079,2.225,1080,1.792,1081,1.792,1082,2.601,1083,1.29,1084,2.499,1085,0.701,1086,0.669,1087,0.701,1088,1.29,1089,0.788,1090,0.788,1091,1.449,1092,0.788,1093,0.788,1094,0.788,1095,2.013,1096,0.788,1097,0.788,1098,0.788,1099,0.788,1100,0.788,1101,0.788,1102,1.96,1103,0.788,1104,1.449,1105,0.788,1106,0.788,1107,0.788,1108,0.788,1109,0.788,1110,1.449,1111,0.788,1112,0.788,1113,0.788,1114,0.788,1115,0.788,1116,1.361,1117,0.788,1118,0.788,1119,0.788,1120,0.788,1121,0.788,1122,0.597,1123,0.788,1124,1.361,1125,1.449,1126,0.788,1127,0.788,1128,0.788,1129,1.449,1130,1.449,1131,0.701,1132,0.788,1133,0.618,1134,1.449,1135,1.726,1136,0.788,1137,0.74,1138,0.788,1139,0.788,1140,0.788,1141,1.449,1142,1.449,1143,2.499,1144,2.499,1145,3.917,1146,0.788,1147,0.788,1148,3.917,1149,3.294,1150,2.499,1151,2.499,1152,2.922,1153,0.788,1154,2.922,1155,0.788,1156,2.922,1157,2.922,1158,2.013,1159,2.922,1160,3.294,1161,2.346,1162,1.361,1163,0.788,1164,1.449,1165,0.788,1166,0.74,1167,2.922,1168,4.608,1169,0.788,1170,1.449,1171,0.788,1172,2.013,1173,2.013,1174,0.788,1175,1.449,1176,0.788,1177,1.449,1178,0.669,1179,0.788,1180,0.788,1181,0.74,1182,0.788,1183,1.361,1184,1.29,1185,0.788,1186,2.499,1187,0.788,1188,1.29,1189,0.669,1190,1.449,1191,2.922,1192,1.449,1193,0.788,1194,0.788,1195,1.449,1196,2.143,1197,1.893,1198,0.788,1199,0.788,1200,0.788,1201,0.788,1202,1.449,1203,0.724,1204,0.788,1205,0.788,1206,2.036,1207,2.499,1208,2.922,1209,1.449,1210,2.499,1211,1.792,1212,1.449,1213,1.449,1214,1.449,1215,1.449,1216,1.29,1217,0.788,1218,1.361,1219,2.601,1220,1.792,1221,1.29,1222,0.788,1223,1.792,1224,1.525,1225,1.792,1226,0.788,1227,1.792,1228,0.491,1229,0.701,1230,0.788,1231,1.137,1232,1.29,1233,3.226,1234,3.226,1235,0.701,1236,1.353,1237,0.788,1238,2.548,1239,0.788,1240,2.499,1241,1.449,1242,0.788,1243,1.449,1244,0.788,1245,2.013,1246,0.788,1247,1.525,1248,0.701,1249,0.788,1250,0.701,1251,1.29,1252,0.788,1253,0.788,1254,0.788,1255,0.701,1256,0.701,1257,0.701,1258,0.701,1259,0.788,1260,1.29,1261,0.701,1262,0.701,1263,1.449,1264,0.788,1265,1.449,1266,0.788,1267,0.788,1268,0.788,1269,0.788,1270,0.788,1271,0.788,1272,1.449,1273,0.74,1274,0.788,1275,0.788,1276,0.642,1277,0.788,1278,0.788,1279,0.788,1280,0.788,1281,0.788,1282,0.788,1283,0.788,1284,0.788,1285,0.788,1286,0.788,1287,0.788,1288,0.788,1289,0.788,1290,1.449,1291,0.788,1292,0.788,1293,0.788,1294,2.013,1295,0.788,1296,0.788,1297,0.788,1298,0.788,1299,1.449,1300,0.788,1301,0.74,1302,1.137,1303,0.701,1304,2.013,1305,0.788,1306,0.788,1307,0.788,1308,0.788,1309,1.449,1310,0.788,1311,0.74,1312,0.701,1313,0.788,1314,0.701,1315,1.449,1316,0.788,1317,1.449,1318,0.701,1319,0.701,1320,0.788,1321,0.788,1322,0.788,1323,0.788,1324,0.788,1325,0.788,1326,0.701,1327,0.788,1328,0.788,1329,0.701,1330,0.701,1331,0.788,1332,0.701,1333,0.788,1334,0.701,1335,0.788,1336,2.036,1337,1.361,1338,0.788,1339,0.701,1340,1.449,1341,1.449,1342,1.449,1343,0.788,1344,3.917,1345,0.701,1346,0.701,1347,0.788,1348,0.788,1349,0.74,1350,0.788,1351,0.788,1352,0.701,1353,1.449,1354,2.499,1355,0.788,1356,0.788,1357,0.788,1358,0.788,1359,0.788,1360,0.788,1361,1.361,1362,0.788,1363,0.788,1364,1.449,1365,0.788,1366,1.449,1367,0.788,1368,0.788,1369,0.788,1370,2.013,1371,1.449,1372,0.788,1373,1.449,1374,0.669,1375,0.788,1376,0.788,1377,1.449,1378,1.29,1379,0.701,1380,0.701,1381,1.68,1382,0.788,1383,2.499,1384,2.013,1385,1.449,1386,0.788,1387,0.597,1388,0.788,1389,2.013,1390,0.788,1391,1.449,1392,1.449,1393,1.449,1394,2.013,1395,1.449,1396,1.449,1397,0.788,1398,0.788,1399,1.449,1400,0.788,1401,0.788,1402,0.788,1403,1.792,1404,1.29,1405,0.788,1406,0.788,1407,0.701,1408,0.788,1409,0.788,1410,0.701,1411,0.74,1412,0.788,1413,0.788,1414,0.788,1415,0.788,1416,0.788,1417,2.013,1418,1.449,1419,0.788,1420,0.788,1421,0.74,1422,0.788,1423,1.29,1424,2.499,1425,2.922,1426,0.788,1427,0.788,1428,0.788,1429,2.922,1430,0.788,1431,2.415,1432,1.449,1433,1.231,1434,2.013,1435,4.301,1436,0.701,1437,3.487,1438,2.499,1439,1.449,1440,0.788,1441,1.449,1442,1.29,1443,1.449,1444,1.71,1445,0.788,1446,0.788,1447,1.181,1448,0.788,1449,0.701,1450,1.792,1451,1.29,1452,2.013,1453,1.29,1454,0.788,1455,0.701,1456,0.788,1457,1.361,1458,0.788,1459,0.788,1460,0.788,1461,0.701,1462,0.701,1463,0.788,1464,0.701,1465,0.701,1466,0.701,1467,1.792,1468,0.701,1469,2.225,1470,2.225,1471,0.701,1472,0.701,1473,0.701,1474,0.701,1475,0.701,1476,0.701,1477,0.597,1478,1.449,1479,0.788,1480,3.917,1481,0.788,1482,0.788,1483,0.788,1484,0.701]],["title/interfaces/DataParameterFilter.html",[0,0.081,1485,3.415]],["body/interfaces/DataParameterFilter.html",[0,0.155,2,0.085,3,0.078,4,0.064,6,0.313,7,0.85,21,0.698,22,0.443,23,0.005,48,0.075,64,1.201,86,0.004,131,0.004,140,2.186,171,1.673,172,1.366,250,1.828,294,5.501,524,3.149,926,6.772,927,4.295,929,4.646,1485,5.799,1486,5.858,1487,5.858,1488,4.668,1489,3.415,1490,5.501,1491,3.652,1492,5.501,1493,4.438,1494,4.774]],["title/interfaces/DataSeries.html",[0,0.081,815,3.415]],["body/interfaces/DataSeries.html",[0,0.153,2,0.092,3,0.084,4,0.069,6,0.338,7,0.888,21,0.635,22,0.43,23,0.005,48,0.073,86,0.004,131,0.004,165,3.811,171,1.293,172,1.429,638,3.631,748,3.21,815,6.065,1495,6.831,1496,7.442,1497,6.831,1498,6.831]],["title/classes/Dataset.html",[54,0.092,220,0.987]],["body/classes/Dataset.html",[0,0.13,2,0.055,3,0.05,4,0.041,6,0.202,7,0.637,21,0.696,22,0.469,23,0.005,24,0.348,47,1.135,48,0.078,54,0.165,56,2.145,62,0.993,64,0.772,86,0.003,88,0.619,131,0.003,141,1.403,143,1.519,146,1.822,165,3.427,166,1.821,170,4.283,171,0.774,172,1.187,209,1.58,214,1.091,220,1.256,221,2.268,250,1.179,260,1.294,304,2.482,347,1.063,359,1.532,518,1.348,545,2.071,624,2.203,625,3.753,753,4.448,763,3.081,1228,2.356,1489,2.203,1491,4.956,1499,2.771,1500,5.484,1501,5.077,1502,5.217,1503,4.923,1504,4.557,1505,5.454,1506,4.557,1507,4.557,1508,4.557,1509,4.557,1510,4.557,1511,5.37,1512,4.557,1513,4.557,1514,4.557,1515,4.557,1516,4.557,1517,4.557,1518,2.54,1519,4.288,1520,2.157,1521,2.203,1522,2.203,1523,2.771,1524,3.793,1525,4.759,1526,2.611,1527,2.611,1528,2.611,1529,2.687]],["title/interfaces/DatasetApi.html",[0,0.081,327,3.288]],["body/interfaces/DatasetApi.html",[0,0.161,2,0.081,3,0.075,4,0.061,6,0.299,7,0.826,21,0.703,22,0.4,23,0.005,24,0.315,47,1.192,48,0.08,86,0.004,88,1.346,131,0.004,140,2.152,148,3.491,166,1.861,171,1.539,304,2.651,322,5.243,323,4.757,324,4.563,325,4.757,326,2.899,327,6.156,328,4.563,329,4.757,330,4.757,331,5.893,332,4.563,333,4.105,334,3.264,335,4.757,336,5.64,337,5.64,338,4.393]],["title/injectables/DatasetApiMapping.html",[28,1.149,1530,3.731]],["body/injectables/DatasetApiMapping.html",[2,0.072,3,0.066,4,0.054,6,0.263,7,0.761,21,0.568,22,0.432,23,0.005,24,0.398,27,2.501,28,1.94,29,0.795,34,3.996,48,0.062,54,0.107,57,1.367,60,1.483,61,4.176,62,0.793,64,1.024,66,1.584,79,1.29,86,0.004,88,1.159,131,0.004,136,1.58,141,1.294,143,1.29,148,3.067,195,1.332,235,2.182,260,1.684,293,2.648,299,4.92,300,5.171,311,3.727,347,1.384,369,4.666,440,1.882,620,4.18,1518,3.307,1530,5.677,1531,5.212,1532,6.903,1533,5.322,1534,7.689,1535,7.689,1536,7.689,1537,7.689,1538,6.345,1539,7.485,1540,5.932,1541,7.689,1542,5.932,1543,5.322,1544,5.322,1545,4.38,1546,5.932,1547,7.689,1548,5.932,1549,5.932,1550,5.322,1551,5.932,1552,4.619,1553,5.322,1554,5.932,1555,5.932]],["title/interfaces/DatasetApiV2.html",[0,0.081,1556,4.191]],["body/interfaces/DatasetApiV2.html",[0,0.112,2,0.062,3,0.057,4,0.047,6,0.228,21,0.697,22,0.441,23,0.005,24,0.44,34,3.995,48,0.042,64,1.241,65,4.934,79,1.348,86,0.003,88,1.212,131,0.003,136,1.437,140,2.14,141,1.279,143,1.391,146,1.963,148,5.228,149,5.971,151,3.474,172,1.113,220,1.004,260,1.46,311,3.229,587,2.866,638,1.894,754,2.433,865,2.384,1485,5.762,1488,5.079,1493,6.412,1531,5.128,1556,5.798,1557,9.199,1558,5.14,1559,7.944,1560,6.589,1561,8.252,1562,8.252,1563,5.14,1564,5.14,1565,5.14,1566,5.14,1567,5.14,1568,5.14,1569,5.14,1570,5.14,1571,5.14,1572,5.14,1573,5.598,1574,4.263,1575,3.795,1576,4.611,1577,4.263,1578,5.14,1579,5.14]],["title/components/DatasetByStationSelectorComponent.html",[174,0.805,219,1.805]],["body/components/DatasetByStationSelectorComponent.html",[2,0.043,3,0.04,4,0.033,6,0.159,7,0.534,21,0.432,22,0.405,23,0.005,24,0.252,29,0.48,31,0.868,38,1.169,47,1.145,48,0.044,54,0.098,56,1.552,57,0.825,60,1.041,62,0.906,64,0.647,66,1.002,71,1.299,79,0.981,85,1.421,86,0.003,88,0.981,98,1.003,131,0.003,132,3.007,136,1.108,140,1.476,141,1.3,143,0.815,146,0.764,166,0.736,171,0.608,172,0.57,174,1.234,175,1.299,176,1.204,177,1.363,178,1.363,182,1.104,183,3.264,184,3.167,185,1.341,186,1.711,189,2.358,191,1.204,192,2.358,195,1.457,196,2.62,198,1.031,199,1.926,200,1.957,201,1.926,202,2.704,203,1.363,204,2.052,205,1.152,206,1.341,207,2.469,208,1.299,209,0.88,210,3.55,211,1.299,212,1.893,213,1.813,214,2.17,215,3.098,216,1.259,217,1.279,218,2.248,219,2.579,220,1.699,221,2.899,222,1.32,223,1.363,224,1.299,225,1.24,226,1.299,227,1.259,228,2.469,229,1.299,230,1.204,231,1.299,232,1.868,233,1.32,234,1.32,235,1.685,236,1.363,237,1.299,238,1.299,239,1.363,240,1.299,241,1.813,242,1.299,243,1.279,244,1.299,245,1.186,246,1.186,247,1.363,248,1.279,249,1.299,250,1.679,251,1.813,252,1.299,253,2.391,254,1.363,255,1.299,256,1.363,257,1.299,258,1.363,259,1.299,260,1.017,261,1.24,262,1.24,263,2.15,264,1.299,265,1.279,266,1.299,267,2.469,268,1.299,269,1.152,270,1.341,271,2.052,272,1.299,273,1.299,274,1.32,275,1.152,276,1.299,277,1.491,278,1.299,279,1.089,280,1.363,281,1.279,282,1.299,283,1.299,284,1.341,285,1.299,286,1.299,287,0.964,288,1.259,289,1.363,293,1.794,304,1.818,344,3.801,347,1.259,361,2.234,398,4.385,414,4.537,440,1.711,518,1.595,621,1.628,653,1.996,654,3.007,658,2.97,681,2.452,717,2.665,748,2.274,768,3.101,1580,8.26,1581,7.636,1582,3.801,1583,5.737,1584,6.479,1585,6.479,1586,5.821,1587,5.053,1588,2.644,1589,4.473,1590,3.213,1591,3.213,1592,3.213,1593,3.213,1594,4.839,1595,7.211,1596,3.581,1597,3.581,1598,2.789,1599,4.839,1600,3.213,1601,4.839,1602,3.213,1603,6.479,1604,3.213,1605,3.213,1606,3.213,1607,2.789,1608,3.213,1609,3.213,1610,3.213,1611,3.213,1612,4.839,1613,4.839,1614,3.213,1615,3.213,1616,3.213,1617,5.394,1618,5.394,1619,5.394,1620,5.394,1621,5.394,1622,5.394,1623,4.473]],["title/interfaces/DatasetConstellation.html",[0,0.081,1624,4.191]],["body/interfaces/DatasetConstellation.html",[0,0.081,2,0.023,3,0.021,4,0.017,6,0.223,7,0.323,21,0.509,22,0.313,23,0.005,24,0.305,29,0.257,31,0.464,47,1.575,48,0.016,54,0.035,56,1.224,57,1.808,60,0.369,62,0.639,64,1.061,66,1.213,68,0.684,71,3.062,79,1.39,85,1.999,86,0.002,91,0.766,97,2.373,131,0.002,146,1.468,150,1.867,166,1.156,170,1.575,171,1.04,172,0.519,174,0.519,183,0.599,184,0.582,186,0.607,189,1.639,191,1.892,192,2.133,195,1.668,196,1.048,209,0.8,212,1.464,217,0.684,218,1.949,220,1.099,225,0.663,227,0.673,235,0.76,277,1.175,279,0.991,293,2.769,304,0.536,361,0.793,395,1.542,440,1.592,453,0.906,454,1.511,518,1.664,545,0.87,546,1.095,594,2.047,630,1.542,638,2.256,668,3.312,670,2.252,672,1.588,673,1.349,674,1.491,675,4.496,676,1.349,677,1.294,678,1.097,679,1.816,681,0.87,682,1.129,683,1.129,688,1.067,692,1.542,702,1.769,724,2.997,727,1.491,737,1.203,742,2.296,747,3.312,748,1.793,757,3.422,763,2.141,764,2.047,765,2.586,766,1.203,767,1.294,768,1.399,769,1.921,770,1.511,772,6.139,778,3.705,780,5.234,781,4.155,782,4.155,787,3.723,795,1.294,796,1.294,804,1.413,810,1.164,817,1.413,820,1.413,821,1.413,823,4.182,828,3.723,833,1.349,834,2.508,835,1.203,836,1.413,837,1.816,838,2.202,839,1.349,840,1.981,841,1.981,842,1.413,843,1.413,845,1.413,846,1.413,847,1.413,848,1.413,849,1.413,850,1.413,851,1.413,853,1.413,854,1.413,859,2.78,862,1.413,865,1.511,866,1.981,867,1.203,870,2.405,872,1.413,873,3.14,874,2.047,875,3.14,876,2.405,877,1.413,878,4.52,879,2.056,880,2.405,881,2.405,882,2.405,886,1.164,887,1.164,891,1.097,893,1.129,894,1.413,901,1.164,911,1.164,912,1.164,915,1.164,916,1.981,917,1.413,919,1.164,922,1.129,925,1.294,929,0.925,933,1.413,948,1.203,999,1.413,1021,3.61,1035,4.155,1037,5.296,1043,4.137,1044,1.413,1050,1.413,1051,1.413,1052,4.155,1053,4.823,1054,3.14,1055,5.078,1056,3.705,1057,1.413,1058,4.155,1060,1.413,1061,1.413,1062,1.413,1063,1.413,1064,1.413,1065,1.413,1066,1.413,1067,1.413,1068,5.296,1069,3.705,1070,2.405,1071,2.405,1072,1.413,1073,2.405,1074,3.14,1075,1.413,1076,1.413,1077,2.405,1078,1.413,1079,3.14,1080,1.413,1081,3.705,1082,3.14,1083,2.405,1085,1.413,1086,1.349,1087,1.413,1088,2.405,1122,1.203,1168,1.413,1178,1.349,1184,1.413,1189,2.296,1196,1.981,1211,1.413,1216,1.413,1219,4.155,1220,2.405,1221,1.413,1223,2.405,1224,2.047,1225,2.405,1227,1.413,1228,0.99,1229,2.405,1231,2.12,1232,2.405,1233,4.155,1234,4.155,1235,2.405,1236,2.371,1238,0.837,1247,2.672,1248,1.413,1250,1.413,1251,1.413,1255,1.413,1256,1.413,1257,1.413,1258,1.413,1260,2.405,1261,1.413,1262,1.413,1312,1.413,1314,1.413,1318,1.413,1319,1.413,1326,1.413,1329,1.413,1330,1.413,1332,1.413,1334,1.413,1339,1.413,1345,1.413,1346,2.405,1379,1.413,1380,1.413,1403,3.705,1404,3.14,1407,1.413,1423,1.413,1431,1.164,1435,5.648,1436,1.413,1437,5.296,1442,1.413,1449,1.413,1450,3.14,1451,2.405,1453,2.405,1455,1.413,1461,1.413,1462,1.413,1464,1.413,1465,1.413,1466,1.413,1467,2.405,1468,1.413,1469,3.14,1470,3.14,1471,1.413,1472,1.413,1473,1.413,1474,1.413,1475,1.413,1476,1.413,1477,1.203,1587,1.491,1607,1.491,1624,2.702,1625,6.507,1626,4.502,1627,4.502,1628,5.86,1629,3.815,1630,1.717,1631,1.717,1632,1.717,1633,1.717,1634,1.717,1635,1.717,1636,1.717,1637,1.717,1638,1.717,1639,1.717,1640,1.717,1641,1.717,1642,1.717,1643,1.717,1644,1.717,1645,1.717,1646,1.717,1647,1.717,1648,5.492,1649,1.717,1650,1.588,1651,1.717,1652,2.702,1653,2.923,1654,5.492,1655,1.717,1656,1.717,1657,3.815,1658,1.717,1659,3.815,1660,1.717,1661,1.717,1662,1.717,1663,1.349,1664,4.502,1665,1.717,1666,1.717,1667,1.203,1668,1.717,1669,1.717,1670,2.923,1671,2.923,1672,1.588,1673,1.717,1674,1.717,1675,1.717,1676,1.717,1677,1.717,1678,1.717,1679,1.717,1680,1.717,1681,2.923,1682,1.588,1683,1.717,1684,1.717,1685,1.717,1686,5.492,1687,1.717,1688,1.717,1689,1.717,1690,1.717,1691,1.717,1692,1.717,1693,2.923,1694,3.815,1695,2.702,1696,1.717,1697,1.717,1698,2.923,1699,1.717,1700,1.717,1701,1.717,1702,1.717,1703,1.717,1704,1.717,1705,1.717,1706,1.717,1707,1.717,1708,3.705,1709,5.86,1710,5.234,1711,1.717,1712,5.048,1713,1.717,1714,3.815,1715,2.923,1716,1.717,1717,1.717,1718,1.717,1719,4.502,1720,1.717,1721,1.717,1722,2.923,1723,1.717,1724,1.717,1725,1.717,1726,1.717,1727,1.717,1728,1.717,1729,1.717,1730,1.717,1731,2.923,1732,1.717,1733,1.717,1734,1.717,1735,3.815,1736,1.717,1737,4.502,1738,1.717,1739,1.717,1740,1.717,1741,2.923,1742,1.717,1743,1.717,1744,2.923,1745,1.717,1746,1.717,1747,1.717,1748,1.717,1749,1.717,1750,1.717,1751,1.717,1752,1.717,1753,1.717,1754,1.717,1755,1.717,1756,1.717,1757,2.923,1758,2.923,1759,1.717,1760,1.717,1761,1.717,1762,1.717,1763,1.717,1764,1.717,1765,1.717,1766,1.717,1767,1.717,1768,1.717,1769,1.717,1770,1.717,1771,1.717,1772,1.717,1773,1.717,1774,1.717,1775,1.717,1776,2.923,1777,2.923,1778,1.717,1779,1.717,1780,1.717,1781,1.717,1782,1.717,1783,1.717,1784,1.717,1785,1.717,1786,1.717,1787,1.717,1788,1.717,1789,1.717,1790,1.717,1791,1.717,1792,1.717,1793,1.717,1794,1.717,1795,2.296,1796,1.349,1797,1.717,1798,1.717,1799,1.717,1800,1.717,1801,1.717,1802,1.717,1803,1.717,1804,1.717,1805,1.717,1806,1.717,1807,1.717,1808,1.717,1809,1.717,1810,1.717,1811,1.717,1812,1.717,1813,1.717,1814,1.717,1815,1.717,1816,3.815,1817,1.717,1818,1.717,1819,1.717,1820,1.717,1821,1.717,1822,1.717]],["title/classes/DatasetOptions.html",[54,0.092,692,2.392]],["body/classes/DatasetOptions.html",[0,0.081,2,0.061,3,0.056,4,0.046,6,0.225,7,0.685,21,0.678,22,0.473,23,0.005,47,1.685,48,0.069,54,0.154,60,1.521,62,0.984,64,1.195,68,2.472,71,2.511,86,0.003,88,0.688,131,0.003,141,1.429,143,0.766,146,1.081,165,3.692,171,1.692,172,0.807,209,2.428,220,0.99,245,1.678,246,1.678,347,2.187,359,2.651,367,3.423,440,2.974,518,2.709,545,3.852,546,2.327,692,3.732,717,4.186,740,3.08,744,5.153,771,5.323,788,5.727,789,5.727,792,5.727,794,5.513,830,3.569,929,4.096,1823,3.944,1824,3.74,1825,6.599,1826,4.544,1827,6.921,1828,5.065,1829,5.065,1830,5.065,1831,5.065,1832,5.065,1833,5.065,1834,5.065,1835,6.256,1836,5.065,1837,5.065,1838,5.065,1839,3.944,1840,3.944,1841,3.08,1842,3.944]],["title/classes/DatasetParameterConstellation.html",[54,0.092,1511,2.98]],["body/classes/DatasetParameterConstellation.html",[0,0.134,2,0.059,3,0.054,4,0.044,6,0.217,7,0.668,21,0.687,22,0.445,23,0.005,24,0.361,47,1.191,48,0.079,54,0.168,56,1.943,62,0.992,86,0.003,88,0.664,131,0.003,141,1.331,143,1.573,146,1.441,165,2.992,166,1.59,170,3.739,171,0.83,172,1.329,209,1.658,214,1.169,220,0.954,221,2.337,250,2.159,260,2.369,304,2.167,347,1.139,359,1.642,518,1.445,545,2.22,624,4.033,625,2.568,753,4.22,763,2.943,1228,2.525,1489,4.033,1491,4.528,1499,2.97,1500,4.562,1501,4.432,1502,4.781,1503,2.97,1505,5.274,1511,4.921,1518,2.722,1519,5.201,1520,3.949,1521,4.033,1522,4.033,1523,2.97,1524,4.921,1525,4.882,1526,2.798,1527,2.798,1528,2.798,1529,2.88,1843,4.884,1844,5.341,1845,4.884,1846,4.884,1847,4.884,1848,4.884,1849,4.884,1850,4.884]],["title/classes/DatasetPresenterComponent.html",[54,0.092,769,2.98]],["body/classes/DatasetPresenterComponent.html",[0,0.052,2,0.039,3,0.036,4,0.029,6,0.142,7,0.491,21,0.663,22,0.475,23,0.005,24,0.403,29,0.43,48,0.026,54,0.09,56,1.427,57,2.345,60,0.957,62,0.923,64,1.118,66,1.37,79,1.376,85,1.707,86,0.002,88,1.171,131,0.002,136,1.019,140,1.91,141,1.442,143,1.303,146,1.058,151,2.168,152,3.918,165,2.853,171,1.159,172,0.79,189,2.654,191,2.293,192,3.01,195,2.221,196,2.703,220,0.969,235,1.819,277,1.885,293,2.383,304,1.698,347,1.414,357,4.899,364,2.015,395,2.87,396,5.028,411,6.119,412,2.564,440,1.573,453,2.347,454,3.163,456,1.403,499,1.95,524,1.43,531,2.397,680,4.097,685,4.807,691,3.944,692,3.229,693,5.028,695,3.809,697,4.476,702,3.292,717,1.585,727,4.721,733,2.498,736,2.66,737,2.015,754,2.87,765,5.605,768,2.929,769,2.925,770,3.163,865,2.811,866,3.686,886,4.148,887,3.015,893,2.925,901,3.015,911,3.015,912,3.015,915,3.015,916,4.741,919,4.148,922,3.575,1374,3.494,1532,2.368,1672,2.66,1844,1.892,1851,9.024,1852,2.877,1853,5.657,1854,6.821,1855,6.821,1856,6.821,1857,6.821,1858,4.449,1859,4.959,1860,4.959,1861,4.959,1862,3.661,1863,4.959,1864,4.959,1865,6.062,1866,5.439,1867,6.062,1868,3.207,1869,4.959,1870,3.207,1871,3.207,1872,3.207,1873,8.398,1874,3.207,1875,3.207,1876,3.207,1877,4.959,1878,3.207,1879,3.207,1880,3.207,1881,3.207,1882,3.207,1883,3.207,1884,3.207,1885,3.207,1886,3.207,1887,3.207,1888,3.207,1889,3.207,1890,3.207,1891,3.207,1892,3.207,1893,3.207,1894,3.207,1895,3.207,1896,3.207,1897,3.207,1898,2.368,1899,2.66,1900,2.877,1901,3.207,1902,3.207,1903,2.877,1904,2.877,1905,2.877,1906,2.66,1907,2.368,1908,2.498,1909,2.877,1910,3.207,1911,4.959,1912,3.207,1913,2.877,1914,4.959,1915,3.207,1916,3.207,1917,3.207,1918,3.207,1919,3.207,1920,4.959,1921,3.207,1922,3.207,1923,3.207,1924,3.207,1925,3.207,1926,3.207,1927,3.207,1928,6.062,1929,3.207,1930,3.207,1931,4.959,1932,3.207,1933,3.207,1934,3.207,1935,3.207,1936,3.207,1937,3.207,1938,3.207,1939,3.207,1940,3.207,1941,3.207]],["title/classes/DatasetService.html",[54,0.092,1942,4.533]],["body/classes/DatasetService.html",[2,0.061,3,0.056,4,0.046,6,0.225,7,0.685,21,0.675,22,0.449,23,0.005,24,0.323,48,0.041,54,0.125,57,2.256,60,1.335,62,0.963,64,1.175,66,1.285,68,2.472,71,2.511,79,1.463,85,1.109,86,0.003,88,1.206,131,0.003,133,8.938,136,1.422,141,1.417,143,1.341,149,3.08,152,3.852,165,3.543,171,1.176,195,2.143,235,2.07,347,1.615,440,2.196,691,5.513,692,4.199,754,4.517,893,4.082,944,5.39,1273,5.39,1858,6.209,1862,5.11,1900,4.544,1942,6.209,1943,5.065,1944,6.921,1945,8.473,1946,8.473,1947,8.473,1948,8.473,1949,6.921,1950,4.201,1951,5.569,1952,6.921,1953,5.065,1954,6.921,1955,5.065,1956,6.921,1957,5.065,1958,5.065,1959,5.065,1960,5.065,1961,5.065,1962,5.065,1963,6.921,1964,5.065,1965,3.569,1966,3.944,1967,4.201,1968,6.921,1969,5.065,1970,8.473,1971,5.065,1972,5.065,1973,5.065,1974,5.065]],["title/interfaces/DatasetTableData.html",[0,0.081,1975,4.533]],["body/interfaces/DatasetTableData.html",[0,0.146,2,0.093,3,0.085,4,0.07,6,0.343,7,0.896,22,0.433,23,0.005,47,1.803,48,0.063,86,0.004,131,0.004,347,2.309,1975,8.117,1976,7.722,1977,5.701,1978,7.722,1979,9.898]],["title/pipes/DateProxyPipe.html",[319,3.731,1980,3.935]],["body/pipes/DateProxyPipe.html",[2,0.081,3,0.075,4,0.061,21,0.602,22,0.323,23,0.005,24,0.423,29,0.903,48,0.055,54,0.122,56,1.94,57,1.552,60,1.3,62,0.775,64,0.809,66,1.548,79,1.368,85,1.475,86,0.004,88,1.23,131,0.004,136,1.385,141,0.966,143,1.019,182,2.078,319,6.981,333,4.098,347,1.945,361,3.452,440,2.138,518,1.993,601,5.589,621,3.064,879,3.258,1302,4.385,1484,4.976,1980,6.491,1981,6.739,1982,5.248,1983,8.336,1984,9.717,1985,6.739,1986,8.336,1987,6.739,1988,3.861,1989,8.336,1990,5.237,1991,3.405,1992,3.569,1993,6.739,1994,6.739,1995,6.739,1996,5.589,1997,6.739,1998,6.739,1999,6.739,2000,6.739,2001,6.046,2002,6.739,2003,6.046,2004,6.739]],["title/injectables/DefinedTimespanService.html",[28,1.149,2005,3.731]],["body/injectables/DefinedTimespanService.html",[2,0.059,3,0.054,4,0.045,6,0.217,7,0.67,22,0.324,23,0.005,24,0.362,28,1.763,29,0.657,48,0.055,54,0.089,60,1.495,62,0.721,64,0.588,66,1.84,79,1.498,85,2.253,86,0.003,88,0.666,131,0.003,136,1.391,140,1.901,141,1.111,143,0.741,150,3.878,151,3.313,235,2.046,293,2.142,347,1.144,440,1.555,813,6.955,1102,5.438,1518,2.733,2005,4.997,2006,7.497,2007,4.398,2008,6.768,2009,6.768,2010,6.768,2011,6.931,2012,4.902,2013,4.902,2014,4.398,2015,4.398,2016,6.071,2017,6.071,2018,6.071,2019,6.071,2020,6.071,2021,6.071,2022,6.071,2023,6.071,2024,6.071,2025,4.902,2026,9.729,2027,4.902,2028,4.902,2029,8.728,2030,4.902,2031,4.902,2032,6.768,2033,4.902,2034,6.768,2035,4.902,2036,4.902,2037,4.902,2038,4.902,2039,4.902,2040,4.902,2041,4.902,2042,4.902,2043,4.902,2044,4.902,2045,4.902,2046,4.902,2047,4.902,2048,4.902,2049,4.902,2050,4.902,2051,4.902,2052,4.902,2053,4.902,2054,4.902,2055,4.902,2056,4.902]],["title/components/DragOptionsComponent.html",[174,0.805,224,1.833]],["body/components/DragOptionsComponent.html",[2,0.059,3,0.054,4,0.044,6,0.215,21,0.323,22,0.232,23,0.005,24,0.227,29,0.651,38,1.584,48,0.039,54,0.088,62,0.774,64,0.806,66,1.248,79,0.734,86,0.003,88,0.913,98,1.359,131,0.003,136,1.381,140,1.753,141,0.964,166,0.997,174,1.392,175,1.76,176,1.631,177,1.847,178,1.847,181,4.353,182,1.496,183,3.318,184,3.226,185,1.817,186,2.132,187,6.028,189,2.717,191,1.631,192,2.717,193,4.353,194,4.353,195,1.09,198,1.397,199,2.4,200,2.438,201,2.4,202,3.116,203,1.847,204,2.557,205,1.562,206,1.817,207,2.933,208,1.76,209,1.192,210,3.764,211,1.76,212,2.249,213,2.259,214,2.092,215,3.439,216,1.707,217,1.733,218,2.67,219,1.733,220,1.313,221,1.883,222,1.788,223,1.847,224,3.018,225,3.027,226,1.76,227,1.707,228,2.933,229,1.76,230,1.631,231,1.76,232,2.328,233,1.788,234,1.788,235,1.941,236,1.847,237,1.76,238,1.76,239,1.847,240,1.76,241,2.259,242,1.76,243,1.733,244,1.76,245,1.608,246,1.608,247,1.847,248,1.733,249,1.76,250,1.994,251,2.259,252,1.76,253,2.841,254,1.847,255,1.76,256,1.847,257,1.76,258,1.847,259,1.76,260,1.378,261,1.681,262,1.681,263,2.554,264,1.76,265,1.733,266,1.76,267,2.933,268,1.76,269,1.562,270,1.817,271,2.557,272,1.76,273,1.76,274,1.788,275,1.562,276,1.76,277,1.857,278,1.76,279,1.476,280,1.847,281,1.733,282,1.76,283,1.76,284,1.817,285,1.76,286,1.76,287,1.306,288,1.707,289,1.847,745,5.863,2057,7.709,2058,6.916,2059,7.709,2060,4.852]],["title/interfaces/DrawOptions.html",[0,0.081,1625,4.191]],["body/interfaces/DrawOptions.html",[0,0.081,2,0.023,3,0.021,4,0.018,6,0.224,7,0.325,21,0.57,22,0.294,23,0.005,24,0.306,29,0.259,31,0.468,47,1.603,48,0.016,54,0.035,56,1.231,57,1.812,60,0.372,62,0.642,64,0.828,66,1.218,68,0.689,71,3.068,79,1.392,85,2.002,86,0.002,91,0.772,97,2.383,131,0.002,146,1.637,150,1.879,166,1.162,170,2.732,171,1.172,172,0.522,174,0.522,183,0.603,184,0.587,186,0.612,189,1.647,191,1.9,192,2.141,195,1.673,196,1.055,209,1.388,212,1.472,217,0.689,218,1.958,220,0.641,225,0.668,227,0.678,235,0.765,277,1.182,279,0.997,293,2.771,304,0.54,361,0.799,395,1.552,440,1.6,453,0.913,454,1.521,518,1.672,545,0.877,546,1.102,594,3.551,630,2.675,638,1.576,668,3.33,670,2.265,672,1.6,673,1.359,674,1.502,675,4.507,676,1.359,677,1.304,678,1.105,679,1.828,681,0.877,682,1.138,683,1.138,688,1.075,692,1.552,702,1.781,724,3.013,727,1.502,737,1.212,742,2.31,747,3.33,748,1.803,757,2.6,763,1.627,764,2.06,765,2.6,766,1.212,767,1.304,768,1.408,769,1.934,770,1.521,772,6.152,778,3.724,780,4.62,781,4.173,782,4.173,787,3.738,795,1.304,796,1.304,804,1.424,810,1.173,817,1.424,820,1.424,821,1.424,823,4.196,828,3.738,833,1.359,834,2.522,835,1.212,836,1.424,837,1.828,838,2.216,839,1.359,840,1.994,841,1.994,842,1.424,843,1.424,845,1.424,846,1.424,847,1.424,848,1.424,849,1.424,850,1.424,851,1.424,853,1.424,854,1.424,859,2.792,862,1.424,865,1.521,866,1.994,867,1.212,870,2.421,872,1.424,873,3.157,874,2.06,875,3.157,876,2.421,877,1.424,878,4.538,879,2.067,880,2.421,881,2.421,882,2.421,886,1.173,887,1.173,891,1.105,893,1.138,894,1.424,901,1.173,911,1.173,912,1.173,915,1.173,916,1.994,917,1.424,919,1.173,922,1.138,925,1.304,929,0.932,933,1.424,948,1.212,999,1.424,1021,3.625,1035,4.173,1037,5.312,1043,4.154,1044,1.424,1050,1.424,1051,1.424,1052,4.173,1053,4.84,1054,3.157,1055,5.095,1056,3.724,1057,1.424,1058,4.173,1060,1.424,1061,1.424,1062,1.424,1063,1.424,1064,1.424,1065,1.424,1066,1.424,1067,1.424,1068,5.312,1069,3.724,1070,2.421,1071,2.421,1072,1.424,1073,2.421,1074,3.157,1075,1.424,1076,1.424,1077,2.421,1078,1.424,1079,3.157,1080,1.424,1081,3.724,1082,3.157,1083,2.421,1085,1.424,1086,1.359,1087,1.424,1088,2.421,1122,1.212,1168,1.424,1178,1.359,1184,1.424,1189,2.31,1196,1.994,1211,1.424,1216,1.424,1219,4.173,1220,2.421,1221,1.424,1223,2.421,1224,2.06,1225,2.421,1227,1.424,1228,0.997,1229,2.421,1231,2.133,1232,2.421,1233,4.173,1234,4.173,1235,2.421,1236,2.384,1238,0.844,1247,2.687,1248,1.424,1250,1.424,1251,1.424,1255,1.424,1256,1.424,1257,1.424,1258,1.424,1260,2.421,1261,1.424,1262,1.424,1312,1.424,1314,1.424,1318,1.424,1319,1.424,1326,1.424,1329,1.424,1330,1.424,1332,1.424,1334,1.424,1339,1.424,1345,1.424,1346,2.421,1379,1.424,1380,1.424,1403,3.724,1404,3.157,1407,1.424,1423,1.424,1431,1.173,1435,5.664,1436,1.424,1437,5.312,1442,1.424,1449,1.424,1450,3.157,1451,2.421,1453,2.421,1455,1.424,1461,1.424,1462,1.424,1464,1.424,1465,1.424,1466,1.424,1467,2.421,1468,1.424,1469,3.157,1470,3.157,1471,1.424,1472,1.424,1473,1.424,1474,1.424,1475,1.424,1476,1.424,1477,1.212,1587,1.502,1607,1.502,1624,1.6,1625,5.723,1626,1.73,1627,1.73,1628,5.071,1629,3.836,1630,1.73,1631,1.73,1632,1.73,1633,1.73,1634,1.73,1635,1.73,1636,1.73,1637,1.73,1638,1.73,1639,1.73,1640,1.73,1641,1.73,1642,1.73,1643,1.73,1644,1.73,1645,1.73,1646,1.73,1647,1.73,1648,5.514,1649,1.73,1650,1.6,1651,1.73,1652,2.719,1653,2.941,1654,5.514,1655,1.73,1656,1.73,1657,3.836,1658,1.73,1659,3.836,1660,1.73,1661,1.73,1662,1.73,1663,1.359,1664,4.525,1665,1.73,1666,1.73,1667,1.212,1668,1.73,1669,1.73,1670,2.941,1671,2.941,1672,1.6,1673,1.73,1674,1.73,1675,1.73,1676,1.73,1677,1.73,1678,1.73,1679,1.73,1680,1.73,1681,2.941,1682,1.6,1683,1.73,1684,1.73,1685,1.73,1686,5.514,1687,1.73,1688,1.73,1689,1.73,1690,1.73,1691,1.73,1692,1.73,1693,2.941,1694,3.836,1695,2.719,1696,1.73,1697,1.73,1698,2.941,1699,1.73,1700,1.73,1701,1.73,1702,1.73,1703,1.73,1704,1.73,1705,1.73,1706,1.73,1707,1.73,1708,3.724,1709,5.882,1710,5.25,1711,1.73,1712,5.071,1713,1.73,1714,3.836,1715,2.941,1716,1.73,1717,1.73,1718,1.73,1719,4.525,1720,1.73,1721,1.73,1722,2.941,1723,1.73,1724,1.73,1725,1.73,1726,1.73,1727,1.73,1728,1.73,1729,1.73,1730,1.73,1731,2.941,1732,1.73,1733,1.73,1734,1.73,1735,3.836,1736,1.73,1737,4.525,1738,1.73,1739,1.73,1740,1.73,1741,2.941,1742,1.73,1743,1.73,1744,2.941,1745,1.73,1746,1.73,1747,1.73,1748,1.73,1749,1.73,1750,1.73,1751,1.73,1752,1.73,1753,1.73,1754,1.73,1755,1.73,1756,1.73,1757,2.941,1758,2.941,1759,1.73,1760,1.73,1761,1.73,1762,1.73,1763,1.73,1764,1.73,1765,1.73,1766,1.73,1767,1.73,1768,1.73,1769,1.73,1770,1.73,1771,1.73,1772,1.73,1773,1.73,1774,1.73,1775,1.73,1776,2.941,1777,2.941,1778,1.73,1779,1.73,1780,1.73,1781,1.73,1782,1.73,1783,1.73,1784,1.73,1785,1.73,1786,1.73,1787,1.73,1788,1.73,1789,1.73,1790,1.73,1791,1.73,1792,1.73,1793,1.73,1794,1.73,1795,2.31,1796,1.359,1797,1.73,1798,1.73,1799,1.73,1800,1.73,1801,1.73,1802,1.73,1803,1.73,1804,1.73,1805,1.73,1806,1.73,1807,1.73,1808,1.73,1809,1.73,1810,1.73,1811,1.73,1812,1.73,1813,1.73,1814,1.73,1815,1.73,1816,3.836,1817,1.73,1818,1.73,1819,1.73,1820,1.73,1821,1.73,1822,1.73]],["title/classes/EventingApiService.html",[54,0.092,2061,4.191]],["body/classes/EventingApiService.html",[2,0.065,3,0.06,4,0.049,6,0.24,21,0.7,22,0.447,23,0.005,24,0.407,31,1.314,34,3.926,48,0.044,54,0.131,57,2.007,62,0.936,64,1.241,65,4.516,79,1.412,86,0.003,88,1.269,131,0.003,132,5.061,136,1.488,137,6.498,138,6.498,139,4.86,140,1.856,141,1.339,143,1.412,144,4.86,145,5.348,146,1.859,148,5.075,149,5.8,152,4.127,172,1.154,311,3.404,633,3.295,645,3.295,646,3.295,650,3.295,1493,6.365,1844,4.272,2061,6.007,2062,8.144,2063,5.418,2064,6.783,2065,7.814,2066,6.498,2067,5.418,2068,6.498,2069,6.138,2070,5.418,2071,6.498,2072,5.418,2073,6.498,2074,6.138,2075,5.418,2076,5.418,2077,5.418,2078,4.86,2079,4.86]],["title/interfaces/EventingEvent.html",[0,0.081,633,3.073]],["body/interfaces/EventingEvent.html",[0,0.159,2,0.072,3,0.066,4,0.055,6,0.266,7,0.767,21,0.666,22,0.483,23,0.005,47,1.821,48,0.079,62,0.872,64,0.929,86,0.004,131,0.004,146,2.244,166,1.974,172,1.443,176,2.016,182,2.388,334,2.899,347,1.399,359,3.047,627,5.58,628,4.053,629,3.176,630,2.839,631,4.053,632,3.647,633,5.215,634,6.125,635,6.125,636,5.345,637,6.125,638,3.541,639,4.053,640,4.053,641,4.053,642,4.053,643,4.053,644,4.053,645,3.647,646,4.709,647,4.053,648,5.038,649,4.053,650,3.647,2080,5.717]],["title/interfaces/EventingEventFilter.html",[0,0.081,2069,3.561]],["body/interfaces/EventingEventFilter.html",[0,0.155,2,0.086,3,0.079,4,0.065,6,0.317,7,0.855,21,0.618,22,0.445,23,0.005,24,0.334,31,1.732,47,1.525,48,0.075,64,1.204,86,0.004,131,0.004,140,2.33,171,1.639,172,1.479,629,3.783,630,3.381,636,5.69,927,4.344,2069,6.087,2074,5.034,2081,5.924,2082,7.123,2083,7.123]],["title/interfaces/EventingEventResults.html",[0,0.081,645,3.073]],["body/interfaces/EventingEventResults.html",[0,0.162,2,0.078,3,0.072,4,0.059,6,0.288,7,0.806,21,0.662,22,0.39,23,0.005,47,1.805,48,0.081,62,0.757,86,0.004,131,0.004,146,2.206,166,1.828,172,1.417,176,2.181,182,2.963,334,3.136,347,1.514,359,2.181,627,6.252,628,4.384,629,3.436,630,3.071,631,4.384,632,3.945,633,5.673,634,4.384,635,4.384,636,3.826,637,4.384,638,3.613,639,4.384,640,4.384,641,4.384,642,4.384,643,4.384,644,4.384,645,4.95,646,4.95,647,4.384,648,5.296,649,4.384,650,3.945]],["title/interfaces/EventingFilter.html",[0,0.081,2082,3.731]],["body/interfaces/EventingFilter.html",[0,0.155,2,0.086,3,0.079,4,0.065,6,0.318,7,0.857,21,0.477,22,0.445,23,0.005,24,0.335,31,1.739,47,1.773,48,0.076,64,1.205,86,0.004,131,0.004,140,2.115,171,1.641,172,1.379,629,5.116,630,4.572,636,4.229,927,5.874,2069,5.053,2074,5.053,2081,5.947,2082,7.132,2083,5.294]],["title/injectables/EventingImplApiInterface.html",[28,1.149,2084,4.533]],["body/injectables/EventingImplApiInterface.html",[2,0.044,3,0.041,4,0.033,6,0.163,21,0.677,22,0.444,23,0.005,24,0.398,26,7.374,27,1.549,28,1.499,29,0.493,30,4.71,31,0.891,34,3.705,48,0.03,54,0.067,57,1.894,60,1.061,62,0.872,64,1.227,65,4.119,66,1.455,79,1.509,85,1.866,86,0.003,88,1.24,97,2.318,131,0.003,136,1.13,140,1.87,141,1.308,143,1.4,146,1.561,148,4.531,172,0.585,191,2.215,293,2.522,304,2.194,310,6.563,311,2.308,313,5.912,316,5.697,347,1.828,364,2.308,440,2.485,499,3.344,524,2.938,629,1.946,630,1.739,633,2.234,636,3.886,645,2.234,646,2.234,650,2.234,754,1.739,865,4.295,927,2.234,1493,6.109,2061,4.56,2062,8.309,2064,5.697,2065,6.563,2066,4.933,2068,4.933,2069,5.155,2071,4.933,2073,4.933,2074,5.155,2078,3.296,2079,3.296,2082,6.292,2083,2.713,2084,4.933,2085,8.309,2086,3.296,2087,5.499,2088,5.499,2089,5.499,2090,5.499,2091,5.499,2092,3.296,2093,3.674,2094,5.499,2095,3.674,2096,5.499,2097,3.674,2098,5.499,2099,3.674,2100,3.674,2101,8.22,2102,3.674,2103,3.674,2104,3.674,2105,5.499,2106,3.674,2107,4.933,2108,3.674,2109,4.56,2110,3.674,2111,7.315,2112,5.499,2113,5.499,2114,3.674,2115,7.315,2116,3.674,2117,3.296,2118,3.296,2119,6.59,2120,3.674,2121,3.674,2122,3.674,2123,4.933,2124,3.296]],["title/modules/EventingModule.html",[2125,1.515,2126,4.191]],["body/modules/EventingModule.html",[2,0.095,3,0.087,4,0.071,23,0.005,24,0.427,29,1.052,48,0.074,54,0.142,86,0.004,131,0.004,2125,2.354,2126,7.576,2127,7.849,2128,4.152,2129,3.37,2130,2.892]],["title/interfaces/EventingSubscription.html",[0,0.081,646,3.073]],["body/interfaces/EventingSubscription.html",[0,0.161,2,0.077,3,0.071,4,0.058,6,0.283,7,0.798,21,0.66,22,0.423,23,0.005,47,1.8,48,0.081,62,0.75,86,0.004,131,0.004,146,2.238,166,1.815,172,1.478,176,3.119,182,2.486,334,3.089,347,1.491,359,2.148,627,5.748,628,4.318,629,3.384,630,3.024,631,4.318,632,3.885,633,4.903,634,4.318,635,4.318,636,3.768,637,4.318,638,3.255,639,4.318,640,4.318,641,4.318,642,4.318,643,4.318,644,4.318,645,3.885,646,5.372,647,6.27,648,6.036,649,6.27,650,3.885]],["title/interfaces/EventingSubscriptionFilter.html",[0,0.081,2074,3.561]],["body/interfaces/EventingSubscriptionFilter.html",[0,0.158,2,0.091,3,0.084,4,0.069,21,0.504,23,0.005,24,0.354,31,1.835,47,1.578,48,0.077,86,0.004,131,0.004,140,2.165,171,1.519,172,1.516,629,4.009,630,3.583,636,4.464,927,4.602,2069,5.333,2074,6.301,2081,6.277,2082,7.26,2083,5.588]],["title/interfaces/EventingSubscriptionResults.html",[0,0.081,650,3.073]],["body/interfaces/EventingSubscriptionResults.html",[0,0.162,2,0.078,3,0.072,4,0.059,6,0.288,7,0.806,21,0.662,22,0.39,23,0.005,47,1.805,48,0.081,62,0.757,86,0.004,131,0.004,146,2.206,166,1.828,172,1.417,176,2.181,182,2.963,334,3.136,347,1.514,359,2.181,627,6.252,628,4.384,629,3.436,630,3.071,631,4.384,632,3.945,633,4.95,634,4.384,635,4.384,636,3.826,637,4.384,638,3.613,639,4.384,640,4.384,641,4.384,642,4.384,643,4.384,644,4.384,645,3.945,646,5.673,647,4.384,648,5.296,649,4.384,650,4.95]],["title/interfaces/EventingTemplate.html",[0,0.081,648,3.288]],["body/interfaces/EventingTemplate.html",[0,0.162,2,0.078,3,0.072,4,0.059,6,0.287,7,0.804,21,0.675,22,0.389,23,0.005,47,1.804,48,0.081,62,0.893,86,0.004,131,0.004,146,2.229,166,2.013,172,1.484,176,2.174,182,2.505,334,3.125,347,1.508,359,2.174,627,5.779,628,4.369,629,3.424,630,3.06,631,4.369,632,3.931,633,4.939,634,4.369,635,4.369,636,3.813,637,4.369,638,3.273,639,4.369,640,4.369,641,4.369,642,4.369,643,4.369,644,4.369,645,3.931,646,4.939,647,4.369,648,5.779,649,4.369,650,3.931]],["title/interfaces/ExtendedScatterData.html",[0,0.081,2131,3.731]],["body/interfaces/ExtendedScatterData.html",[0,0.112,2,0.034,3,0.031,4,0.026,6,0.126,7,0.446,21,0.596,22,0.268,23,0.005,24,0.298,29,0.38,31,0.688,47,1.126,48,0.023,54,0.051,56,0.817,57,2.033,60,0.547,62,0.593,64,0.889,66,1.375,68,3.368,71,2.922,79,0.847,85,2.128,86,0.002,88,0.386,91,1.802,108,1.783,131,0.002,140,1.025,146,1.719,153,1.783,165,1.098,171,0.482,172,1.108,174,0.717,183,0.887,184,0.863,186,0.9,189,1.471,192,1.829,195,1.909,209,0.697,212,1.314,220,0.88,235,1.051,261,0.983,262,2.21,263,2.305,277,1.245,279,1.94,293,2.537,304,1.262,326,1.218,359,2.49,361,1.175,387,1.725,476,1.725,518,2.382,524,3.79,546,2.339,575,2.178,630,1.343,638,2.564,670,1.503,675,4.871,678,1.626,679,2.511,681,1.29,682,1.673,683,1.673,688,1.582,702,2.446,746,2.83,748,2.362,754,1.343,759,3.556,763,2.427,764,2.83,765,3.407,766,1.783,768,1.934,769,2.657,770,2.089,787,1.725,814,1.918,823,3.879,828,3.879,834,1.673,835,1.783,837,3.123,840,2.739,841,1.725,859,1.402,865,2.089,866,2.739,867,1.783,874,1.783,886,1.725,887,1.725,891,1.626,893,1.673,901,1.725,911,1.725,912,1.725,915,1.725,916,2.739,919,1.725,922,1.673,940,1.626,948,1.783,950,3.045,973,2.386,981,3.045,1021,2.657,1133,2.931,1196,1.725,1197,1.783,1224,2.83,1236,1.582,1238,1.241,1247,3.519,1387,1.783,1447,1.918,1583,2,1663,2,1667,1.783,1795,4.495,1796,3.948,1841,3.407,2131,4.71,2132,2.095,2133,2,2134,4.527,2135,2,2136,2,2137,3.326,2138,3.326,2139,3.326,2140,3.326,2141,3.326,2142,2,2143,2.21,2144,2.21,2145,2.21,2146,2.21,2147,2.21,2148,2.21,2149,4.136,2150,2.21,2151,2.21,2152,2.21,2153,2.21,2154,2.21,2155,2.21,2156,2.21,2157,2.21,2158,2.21,2159,2.21,2160,2.21,2161,2.21,2162,2.21,2163,2.21,2164,4.363,2165,2.21,2166,5.767,2167,2.739,2168,2.739,2169,2.739,2170,2.21,2171,4.363,2172,2.095,2173,2.21,2174,2.21,2175,2.21,2176,2.21,2177,2.21,2178,2.21,2179,2.21,2180,2.21,2181,2.21,2182,2.21,2183,3.508,2184,2.21,2185,2.21,2186,2.21,2187,2.21,2188,2.21,2189,2.21,2190,2.21,2191,2.21,2192,2.21,2193,2.21,2194,2.21,2195,2.21,2196,2.21,2197,2.21,2198,2.21,2199,2.21,2200,2.21,2201,2.21,2202,2.21,2203,3.508,2204,3.326,2205,2.21,2206,2.21,2207,2.21,2208,2.21,2209,2,2210,2.095,2211,2.21,2212,2.21,2213,2.21,2214,6.461,2215,6.272,2216,5.418,2217,3.508,2218,4.363,2219,2.21,2220,2.21,2221,6.461,2222,2.21,2223,3.326,2224,3.326,2225,3.508,2226,3.508,2227,2.21,2228,3.508,2229,3.508,2230,2.21,2231,2.21,2232,3.508,2233,3.508,2234,2.21,2235,2.21,2236,2.21,2237,2.21,2238,3.508,2239,2.21,2240,1.918,2241,4.968,2242,3.508,2243,6.461,2244,2.21,2245,2.21,2246,2.21,2247,2.21,2248,3.508,2249,4.363,2250,4.363,2251,3.508,2252,4.363,2253,4.363,2254,3.508,2255,2.21,2256,2.21,2257,2.21,2258,2.21,2259,2.21,2260,2.095,2261,2.21,2262,2.21,2263,2.21,2264,2.21,2265,2.095,2266,2.21,2267,2.21,2268,1.241,2269,2.21,2270,2.21,2271,2.21,2272,2.095]],["title/classes/ExtendedTimeseries.html",[54,0.092,1595,4.191]],["body/classes/ExtendedTimeseries.html",[2,0.057,3,0.053,4,0.043,6,0.211,7,0.656,21,0.65,22,0.472,23,0.005,24,0.309,29,0.637,31,1.152,47,0.838,48,0.054,54,0.138,56,1.367,57,1.094,60,0.916,62,0.979,64,0.794,66,0.882,71,1.723,85,1.669,86,0.004,131,0.003,132,2.648,141,1.424,143,1.152,146,1.76,165,2.948,166,1.566,170,3.684,171,1.295,172,1.054,174,1.054,183,2.071,184,1.444,186,1.507,189,2.162,192,2.488,196,2.653,214,2.406,219,1.696,220,1.489,221,2.83,293,1.313,304,2.31,347,1.108,398,4.475,414,2.984,440,1.507,518,1.958,621,2.159,653,2.648,654,2.648,681,2.159,748,3.655,753,3.941,768,2.843,1501,4.367,1502,4.367,1505,4.596,1519,3.507,1525,4.833,1526,4.367,1580,5.939,1581,5.491,1582,3.347,1583,3.347,1584,4.261,1585,4.261,1586,4.261,1587,3.699,1594,4.261,1595,7.19,1599,5.939,1600,4.261,1601,5.939,1602,4.261,1603,7.396,1604,4.261,1605,4.261,1606,4.261,1607,3.699,1608,4.261,1609,4.261,1610,4.261,1611,4.261,1612,5.939,1613,5.939,1614,4.261,1615,4.261,1616,4.261,1844,5.813,2273,4.75,2274,4.75,2275,4.75,2276,4.75,2277,4.75,2278,4.75,2279,4.75,2280,4.75,2281,4.75,2282,4.75,2283,4.75,2284,4.75,2285,4.75]],["title/components/ExtentControlComponent.html",[174,0.805,226,1.833]],["body/components/ExtentControlComponent.html",[2,0.057,3,0.052,4,0.043,6,0.209,21,0.505,22,0.363,23,0.005,24,0.307,29,0.63,38,1.535,48,0.038,54,0.085,57,1.083,60,1.268,62,0.803,64,0.564,66,0.873,79,0.711,86,0.003,88,1.03,98,1.317,131,0.003,136,1.351,140,1.724,141,1.177,143,0.711,166,0.966,174,1.376,175,1.706,176,1.581,177,1.79,178,1.79,182,1.45,183,3.312,184,3.22,185,1.761,186,2.086,195,1.056,196,2.78,198,1.354,199,2.348,200,2.385,201,2.348,202,3.074,203,1.79,204,2.502,205,1.513,206,1.761,207,2.885,208,1.706,209,1.155,210,3.744,211,1.706,212,2.212,213,2.211,214,2.068,215,3.406,216,1.654,217,1.68,218,2.626,219,1.68,220,1.285,221,1.842,222,1.733,223,1.79,224,1.706,225,1.629,226,2.978,227,3.297,228,2.885,229,1.706,230,1.581,231,1.706,232,2.278,233,1.733,234,1.733,235,1.915,236,1.79,237,1.706,238,1.706,239,1.79,240,1.706,241,2.211,242,1.706,243,1.68,244,1.706,245,1.558,246,1.558,247,1.79,248,1.68,249,1.706,250,1.961,251,2.211,252,1.706,253,2.794,254,1.79,255,1.706,256,1.79,257,1.706,258,1.79,259,1.706,260,1.335,261,1.629,262,1.629,263,2.512,264,1.706,265,1.68,266,1.706,267,2.885,268,1.706,269,1.513,270,1.761,271,2.502,272,1.706,273,1.706,274,1.733,275,1.513,276,1.706,277,1.817,278,1.706,279,1.43,280,1.79,281,1.68,282,1.706,283,1.706,284,1.761,285,1.706,286,1.706,287,2.04,288,2.666,289,1.79,422,5.597,426,3.472,427,5.279,466,5.12,478,3.06,2286,4.703,2287,6.575,2288,8.209,2289,6.575,2290,4.703,2291,4.703,2292,3.314,2293,4.703]],["title/interfaces/Favorite.html",[0,0.081,230,1.699]],["body/interfaces/Favorite.html",[0,0.137,2,0.062,3,0.056,4,0.046,6,0.226,7,0.688,21,0.652,22,0.333,23,0.005,24,0.325,28,1.581,29,0.684,31,1.236,48,0.069,54,0.092,57,1.175,60,0.984,62,0.889,66,1.291,71,1.85,79,1.508,85,1.947,86,0.003,131,0.003,146,2.04,166,2.075,171,1.51,172,1.107,195,1.561,220,1.358,230,3.376,235,1.983,293,2.458,438,4.869,518,2.057,531,3.361,546,2.99,763,3.492,946,3.203,959,3.446,1238,3.041,1951,4.811,2294,3.593,2295,3.765,2296,5.743,2297,3.765,2298,5.988,2299,3.203,2300,3.971,2301,3.971,2302,3.971,2303,3.971,2304,3.971,2305,5.414,2306,3.971,2307,7.146,2308,3.971,2309,3.971,2310,3.971,2311,3.971,2312,3.971,2313,3.971,2314,3.971,2315,3.971,2316,3.971,2317,3.971,2318,3.971,2319,3.971,2320,3.971,2321,3.971,2322,3.971,2323,3.971,2324,3.971,2325,3.971,2326,3.971,2327,3.971,2328,3.971,2329,3.971,2330,3.971,2331,3.971,2332,3.971,2333,3.971,2334,3.971,2335,3.971,2336,3.971,2337,3.971,2338,3.971,2339,5.414,2340,3.971,2341,3.971,2342,3.971,2343,5.414,2344,3.971,2345,3.971,2346,3.971,2347,3.765,2348,3.765]],["title/injectables/FavoriteService.html",[28,1.149,2299,3.175]],["body/injectables/FavoriteService.html",[0,0.112,2,0.049,3,0.045,4,0.037,6,0.18,7,0.586,21,0.649,22,0.44,23,0.005,24,0.277,28,1.589,29,0.544,31,0.985,47,1.045,48,0.062,54,0.074,57,0.936,60,1.142,62,0.949,64,1.023,66,1.1,71,2.148,79,1.534,85,1.788,86,0.003,88,1.158,131,0.003,136,1.217,141,1.398,143,1.288,146,1.743,149,3.601,166,2.042,171,1.587,172,0.943,195,1.834,220,1.595,230,3.301,235,2.104,293,2.714,347,0.948,438,4.4,440,1.289,518,1.752,531,2.863,546,2.745,763,3.644,946,2.552,959,2.745,1238,2.59,1950,3.369,1951,5.183,2294,2.862,2295,2.999,2296,5.518,2297,2.999,2298,5.753,2299,3.72,2300,5.981,2301,5.981,2302,5.981,2303,3.163,2304,4.611,2305,4.611,2306,3.163,2307,6.638,2308,4.611,2309,5.981,2310,3.163,2311,4.611,2312,3.163,2313,3.163,2314,3.163,2315,3.163,2316,4.611,2317,3.163,2318,3.163,2319,3.163,2320,5.981,2321,3.163,2322,5.981,2323,3.163,2324,3.163,2325,4.611,2326,3.163,2327,3.163,2328,3.163,2329,3.163,2330,3.163,2331,5.981,2332,3.163,2333,3.163,2334,3.163,2335,3.163,2336,5.981,2337,3.163,2338,3.163,2339,4.611,2340,3.163,2341,3.163,2342,3.163,2343,4.611,2344,3.163,2345,3.163,2346,3.163,2347,2.999,2348,2.999,2349,5.921,2350,5.921,2351,5.921,2352,5.921,2353,5.921,2354,5.921,2355,4.062,2356,4.062,2357,4.062,2358,4.062,2359,4.062,2360,4.062,2361,4.062,2362,4.062,2363,4.062,2364,4.062,2365,4.062,2366,4.062,2367,4.062]],["title/components/FavoriteTogglerComponent.html",[174,0.805,229,1.833]],["body/components/FavoriteTogglerComponent.html",[2,0.05,3,0.046,4,0.038,6,0.183,7,0.593,21,0.275,22,0.371,23,0.005,24,0.361,29,0.553,31,1.001,38,1.348,48,0.034,54,0.075,56,1.724,57,1.625,60,1.156,62,0.872,64,0.719,66,0.767,79,0.906,86,0.003,88,1.052,98,1.156,131,0.003,136,1.231,140,1.604,141,1.178,143,0.906,166,0.848,171,1.198,174,1.309,175,1.497,176,1.388,177,1.571,178,1.571,182,1.273,183,3.288,184,3.196,185,1.545,186,1.901,195,1.584,196,2.49,198,1.188,199,2.14,200,2.173,201,2.14,202,2.897,203,1.571,204,2.28,205,1.328,206,1.545,207,2.684,208,1.497,209,1.014,210,3.655,211,1.497,212,2.058,213,2.014,214,1.967,215,3.262,216,1.452,217,1.474,218,2.443,219,1.474,220,1.605,221,1.678,222,1.521,223,1.571,224,1.497,225,1.43,226,1.497,227,1.452,228,2.684,229,2.807,230,2.763,231,1.497,232,2.075,233,1.521,234,1.521,235,1.806,236,1.571,237,1.497,238,1.497,239,1.571,240,1.497,241,2.014,242,1.497,243,1.474,244,1.497,245,1.367,246,1.367,247,1.571,248,1.474,249,1.497,250,1.825,251,2.014,252,1.497,253,2.599,254,1.571,255,1.497,256,1.571,257,1.497,258,1.571,259,1.497,260,1.172,261,1.43,262,1.43,263,2.337,264,1.497,265,1.474,266,1.497,267,2.684,268,1.497,269,1.328,270,1.545,271,2.28,272,1.497,273,1.497,274,1.521,275,1.328,276,1.497,277,1.656,278,1.497,279,1.255,280,1.571,281,1.474,282,1.497,283,1.497,284,1.545,285,1.497,286,1.497,287,1.111,288,1.452,289,1.571,341,3.423,342,4.969,343,4.969,344,5.453,395,3.338,412,3.098,453,2.836,454,3.589,456,1.806,518,1.221,546,1.388,763,2.684,879,3.409,1990,4.862,1991,2.085,1992,2.186,2299,4.862,2368,8.571,2369,7.69,2370,7.738,2371,4.128,2372,5.849,2373,5.713,2374,5.991,2375,5.991,2376,4.128,2377,4.128,2378,4.128,2379,3.703,2380,4.128,2381,3.047,2382,7.738,2383,4.128,2384,4.128,2385,4.128,2386,5.991,2387,5.991,2388,5.991,2389,4.128,2390,4.128]],["title/interfaces/Feature.html",[0,0.081,1521,2.443]],["body/interfaces/Feature.html",[0,0.148,2,0.096,3,0.088,4,0.072,23,0.005,24,0.37,48,0.064,86,0.004,131,0.004,143,1.509,172,1.464,625,3.018,1521,4.442,2391,7.931]],["title/classes/Filter.html",[54,0.092,251,1.699]],["body/classes/Filter.html",[2,0.086,3,0.079,4,0.065,6,0.316,7,0.853,21,0.686,22,0.461,23,0.005,24,0.332,48,0.058,54,0.156,62,0.972,86,0.004,131,0.004,141,1.381,250,2.493,251,3.372,304,2.699,587,3.967,1488,4.868,2392,7.117,2393,7.991,2394,7.117,2395,7.117,2396,7.117,2397,7.117,2398,5.902]],["title/interfaces/FilteredParameter.html",[0,0.081,2399,3.935]],["body/interfaces/FilteredParameter.html",[0,0.106,2,0.057,3,0.052,4,0.043,6,0.21,7,0.654,21,0.506,22,0.227,23,0.005,24,0.355,29,0.634,31,1.147,48,0.054,54,0.086,56,1.362,57,1.752,60,0.913,62,0.856,64,0.792,66,0.879,71,1.717,79,0.715,85,1.665,86,0.003,131,0.003,132,2.638,143,1.15,145,4.875,172,1.211,174,1.211,183,2.065,184,1.439,186,1.501,189,2.156,192,2.483,195,1.848,196,2.448,220,0.924,241,1.591,248,1.69,249,2.395,250,2.32,251,3.457,260,1.344,293,2.102,304,1.85,395,3.126,440,1.501,453,2.24,454,3.062,487,2.57,546,1.591,615,5.596,621,4.184,624,2.288,653,2.638,654,2.638,717,2.338,748,1.995,768,2.835,879,2.288,1004,1.801,1431,5.005,1488,3.336,1489,2.288,1520,2.24,1521,2.288,1522,2.288,1552,5.142,1708,3.494,1710,6.485,1990,4.149,1991,2.391,1992,2.506,2130,1.744,2393,3.925,2399,6.742,2400,4.245,2401,3.685,2402,6.392,2403,4.297,2404,4.875,2405,3.198,2406,3.925,2407,3.925,2408,5.477,2409,3.925,2410,3.925,2411,3.685,2412,3.925,2413,3.925,2414,4.245,2415,6.077,2416,3.925,2417,8.422,2418,5.477,2419,4.245,2420,8.256,2421,7.633,2422,8.256,2423,7.633,2424,7.633,2425,4.245,2426,4.245,2427,4.245,2428,4.245,2429,4.245,2430,4.245,2431,3.685,2432,3.925,2433,3.925,2434,5.924,2435,3.685,2436,4.245,2437,4.245,2438,3.925,2439,4.245,2440,4.245,2441,4.245]],["title/interfaces/FilteredProvider.html",[0,0.081,2403,3.288]],["body/interfaces/FilteredProvider.html",[0,0.153,2,0.092,3,0.084,4,0.069,6,0.337,7,0.887,21,0.596,22,0.364,23,0.005,24,0.355,48,0.073,86,0.004,131,0.004,146,1.622,172,1.427,251,3.31,304,2.129,587,4.236,1488,4.974,2130,3.513,2398,6.302,2403,5.832,2442,6.817]],["title/classes/FirstLastValue.html",[54,0.092,1505,2.817]],["body/classes/FirstLastValue.html",[0,0.139,2,0.065,3,0.059,4,0.049,6,0.237,7,0.711,21,0.693,22,0.344,23,0.005,24,0.379,47,1.643,48,0.08,54,0.172,56,2.067,62,0.991,86,0.003,88,0.727,131,0.003,141,1.03,143,1.529,146,1.533,165,3.136,166,1.666,170,3.919,171,0.909,172,1.291,209,1.764,214,1.281,220,1.045,221,2.428,250,1.384,260,1.519,304,2.271,347,2.022,359,2.914,518,1.582,545,2.432,624,2.586,625,3.085,753,4.322,763,3.085,1228,2.766,1489,2.586,1491,4.674,1499,3.253,1500,4.782,1501,4.645,1502,4.965,1503,3.253,1505,5.458,1511,4.782,1518,2.982,1519,4.59,1520,2.532,1521,2.586,1522,2.586,1523,3.253,1524,4.236,1525,5.039,1526,3.065,1527,3.065,1528,3.065,1529,3.155,2443,5.349,2444,5.349]],["title/components/FlotOverviewTimeseriesGraphComponent.html",[174,0.805,231,1.833]],["body/components/FlotOverviewTimeseriesGraphComponent.html",[2,0.039,3,0.036,4,0.03,6,0.145,7,0.498,21,0.408,22,0.443,23,0.005,24,0.235,29,0.438,31,0.792,38,1.067,47,0.888,48,0.027,54,0.059,56,1.448,57,1.159,60,0.971,62,0.922,64,0.736,66,1.279,68,1.167,79,1.041,85,0.715,86,0.002,88,1.011,98,0.915,131,0.002,136,1.034,140,2.079,141,1.366,143,0.927,166,0.672,171,0.555,174,1.185,175,1.185,176,1.099,177,1.244,178,1.244,182,1.008,183,3.236,184,3.146,185,1.224,186,1.596,189,2.565,191,2.062,192,2.89,195,1.764,196,2.719,198,0.941,199,1.797,200,1.825,201,1.797,202,2.579,203,1.244,204,1.914,205,1.052,206,1.224,207,2.334,208,1.185,209,0.803,210,3.478,211,1.185,212,1.79,213,3.479,214,2.486,215,2.989,216,1.149,217,1.167,218,2.125,219,1.167,220,0.983,221,1.409,222,1.204,223,1.244,224,1.185,225,1.132,226,1.185,227,1.149,228,2.334,229,1.185,230,1.099,231,2.499,232,2.927,233,1.204,234,1.204,235,1.833,236,1.244,237,1.185,238,1.185,239,1.244,240,1.185,241,1.691,242,1.185,243,1.167,244,1.185,245,1.083,246,1.083,247,1.244,248,1.167,249,1.185,250,1.587,251,1.691,252,1.185,253,2.26,254,1.244,255,1.185,256,1.244,257,1.185,258,1.244,259,1.185,260,0.928,261,1.132,262,1.132,263,2.032,264,1.185,265,1.167,266,1.185,267,2.334,268,1.185,269,1.052,270,1.224,271,1.914,272,1.185,273,1.185,274,1.204,275,1.052,276,1.185,277,2.172,278,1.185,279,0.994,280,1.244,281,1.167,282,1.185,283,1.185,284,1.224,285,1.185,286,1.185,287,0.88,288,1.149,289,1.244,293,2.172,347,0.763,357,4.936,395,2.903,412,2.601,440,1.037,453,2.381,454,3.195,456,1.43,518,1.488,531,2.432,546,1.099,670,2.665,678,1.872,679,3.419,680,4.146,681,2.287,682,2.967,683,2.967,684,6.18,685,4.854,686,6.18,687,6.18,688,3.84,691,3.991,692,3.261,693,5.087,694,5.503,695,3.854,696,5.503,697,4.529,698,2.71,699,4.529,700,5.365,702,2.732,709,2.932,717,1.614,720,2.932,721,4.513,723,2.413,726,2.545,729,5.503,730,4.513,731,4.513,732,2.932,733,2.545,734,2.932,736,2.71,738,2.932,739,2.932,2445,8.613,2446,7.962,2447,5.031,2448,3.268,2449,3.268,2450,3.268,2451,3.268,2452,3.268,2453,3.268,2454,3.268,2455,3.268,2456,3.268,2457,3.268,2458,3.268,2459,5.031,2460,3.268,2461,3.268,2462,2.545,2463,2.71]],["title/classes/GeoCureGeoJSON.html",[54,0.092,2464,4.191]],["body/classes/GeoCureGeoJSON.html",[0,0.088,2,0.066,3,0.061,4,0.05,6,0.243,7,0.723,21,0.365,22,0.436,23,0.005,24,0.341,27,2.311,33,4.346,47,1.288,48,0.059,54,0.132,60,1.408,62,0.915,64,1.21,65,2.649,79,1.378,85,1.797,86,0.003,88,1.189,90,2.834,131,0.003,136,1.5,141,1.344,143,1.323,149,3.332,172,1.307,191,2.942,195,1.843,235,1.703,293,2.591,300,4.702,304,1.535,364,3.443,436,6.919,477,2.903,546,1.842,2064,6.814,2464,6.053,2465,8.582,2466,4.916,2467,7.299,2468,7.299,2469,7.299,2470,5.48,2471,7.934,2472,7.299,2473,6.548,2474,5.48,2475,5.48,2476,6.548,2477,6.548,2478,7.85,2479,5.48,2480,6.548,2481,5.48,2482,6.548,2483,6.548,2484,4.916,2485,4.916,2486,4.545,2487,4.916,2488,4.916,2489,4.916,2490,6.548,2491,4.916,2492,4.916,2493,4.916,2494,4.916,2495,4.916,2496,6.548,2497,6.548,2498,4.916,2499,4.916,2500,4.916,2501,4.916,2502,4.916,2503,4.916,2504,4.916,2505,4.916,2506,4.916]],["title/interfaces/GeoCureGeoJSONOptions.html",[0,0.081,2471,4.191]],["body/interfaces/GeoCureGeoJSONOptions.html",[0,0.125,2,0.073,3,0.067,4,0.055,6,0.269,7,0.771,21,0.573,22,0.436,23,0.005,24,0.364,27,2.553,33,4.126,47,1.7,48,0.063,54,0.11,60,1.168,62,0.801,64,1.191,65,2.927,79,1.178,85,1.886,86,0.004,131,0.004,172,1.372,191,2.896,293,2.153,300,5.687,304,2.548,364,3.804,436,5.752,477,3.207,546,2.036,2064,4.715,2464,5.021,2465,5.432,2466,5.432,2471,7.543,2473,5.432,2476,5.432,2477,5.432,2478,6.989,2480,5.432,2482,7.728,2483,6.989,2484,8.159,2485,8.159,2486,5.021,2487,5.432,2488,5.432,2489,5.432,2490,6.989,2491,5.432,2492,5.432,2493,5.432,2494,5.432,2495,5.432,2496,6.989,2497,6.989,2498,5.432,2499,5.432,2500,5.432,2501,5.432,2502,5.432,2503,5.432,2504,5.432,2505,5.432,2506,5.432]],["title/interfaces/GeoReverseOptions.html",[0,0.081,36,3.073]],["body/interfaces/GeoReverseOptions.html",[0,0.159,1,4.055,2,0.08,3,0.074,4,0.061,9,4.189,11,4.189,13,4.189,15,4.189,16,4.189,17,4.189,18,3.718,20,4.189,21,0.703,23,0.005,24,0.421,32,4.617,33,3.532,34,3.603,35,3.224,36,5.477,37,4.055,38,2.177,39,4.884,40,3.933,43,3.448,44,4.189,45,4.189,46,4.189,48,0.079,54,0.121,62,0.77,63,4.189,64,0.994,86,0.004,88,0.906,90,3.448,98,1.868,103,4.189,112,4.189,115,4.189,118,5.203,121,4.189,127,4.189,131,0.004,152,4.095,171,1.133,477,3.532,575,3.224,2167,4.055,2168,4.055,2169,4.055,2507,4.924,2508,6.114,2509,4.924]],["title/interfaces/GeoReverseResult.html",[0,0.081,37,3.073]],["body/interfaces/GeoReverseResult.html",[0,0.156,1,5.57,2,0.074,3,0.068,4,0.056,6,0.274,7,0.781,9,3.878,11,3.878,13,3.878,15,3.878,16,3.878,17,3.878,18,3.441,20,3.878,21,0.707,22,0.471,23,0.005,24,0.406,32,4.397,33,3.269,34,3.477,35,2.984,36,4.796,37,4.796,38,2.015,39,4.652,40,3.64,43,3.191,44,5.755,45,5.755,46,5.755,48,0.077,54,0.112,62,0.733,63,3.878,64,1.196,86,0.004,88,0.839,90,3.191,98,1.729,103,3.878,112,5.755,115,3.878,118,4.955,121,3.878,127,3.878,131,0.004,152,3.952,171,1.048,477,3.269,575,2.984,2080,5.823,2167,3.753,2168,3.753,2169,3.753,2507,4.557,2508,5.823,2509,4.557]],["title/classes/GeoSearch.html",[38,1.65,54,0.092]],["body/classes/GeoSearch.html",[0,0.152,1,3.735,2,0.074,3,0.068,4,0.056,6,0.272,9,3.859,11,3.859,13,3.859,15,3.859,16,3.859,17,3.859,18,3.424,20,3.859,21,0.701,22,0.377,23,0.005,24,0.405,32,5.269,33,3.253,34,3.781,35,2.969,36,5.56,37,3.735,38,2.567,39,5.393,40,3.622,43,3.176,44,3.859,45,3.859,46,3.859,48,0.077,54,0.142,62,0.899,63,4.94,64,1.194,73,4.328,79,1.189,86,0.004,88,1.179,90,3.176,98,1.721,103,4.94,108,4.94,112,3.859,115,3.859,118,4.94,121,3.859,127,3.859,131,0.004,136,1.616,141,1.127,143,1.189,149,4.781,152,3.943,171,1.043,477,3.253,575,2.969,2167,3.735,2168,3.735,2169,3.735,2507,4.535,2508,5.805,2509,4.535,2510,6.521,2511,6.142,2512,6.142]],["title/interfaces/GeoSearchOptions.html",[0,0.081,39,2.98]],["body/interfaces/GeoSearchOptions.html",[0,0.157,1,3.911,2,0.078,3,0.071,4,0.059,6,0.285,7,0.802,9,4.041,11,4.041,13,4.041,15,4.041,16,4.041,17,4.041,18,3.586,20,4.041,21,0.704,22,0.388,23,0.005,24,0.414,32,4.514,33,3.407,34,3.545,35,3.109,36,4.924,37,3.911,38,2.1,39,5.226,40,3.794,43,3.326,44,4.041,45,4.041,46,4.041,48,0.078,54,0.117,62,0.753,63,4.041,64,1.174,86,0.004,88,0.874,90,3.326,98,1.802,103,4.041,112,4.041,115,4.041,118,6.022,121,4.041,127,4.041,131,0.004,152,4.028,171,1.505,477,3.407,575,3.109,2167,3.911,2168,3.911,2169,3.911,2507,4.749,2508,5.978,2509,6.866]],["title/interfaces/GeoSearchResult.html",[0,0.081,40,2.98]],["body/interfaces/GeoSearchResult.html",[0,0.157,1,3.879,2,0.077,3,0.071,4,0.058,6,0.283,7,0.797,9,4.007,11,4.007,13,4.007,15,4.007,16,4.007,17,4.007,18,3.556,20,4.007,21,0.703,22,0.423,23,0.005,24,0.412,32,4.49,33,3.378,34,3.531,35,3.083,36,4.898,37,3.879,38,2.083,39,4.75,40,4.75,43,4.564,44,4.007,45,4.007,46,4.007,48,0.078,54,0.116,62,0.749,63,4.007,64,1.112,86,0.004,88,1.26,90,4.794,98,2.597,103,4.007,112,4.007,115,4.007,118,5.06,121,4.007,127,4.007,131,0.004,152,4.013,171,1.084,477,3.378,575,3.083,2167,3.879,2168,3.879,2169,3.879,2507,4.709,2508,6.846,2509,4.709]],["title/components/GeosearchControlComponent.html",[174,0.805,237,1.833]],["body/components/GeosearchControlComponent.html",[2,0.046,3,0.043,4,0.035,6,0.171,7,0.563,21,0.556,22,0.425,23,0.005,24,0.349,29,0.515,38,3.012,39,3.992,40,4.412,48,0.031,54,0.07,57,1.31,60,1.097,62,0.934,64,0.897,66,1.056,79,1.131,86,0.004,88,0.92,98,1.077,131,0.003,136,1.169,140,1.54,141,1.342,143,0.581,166,0.79,171,1.15,174,1.272,175,1.395,176,1.293,177,1.463,178,1.463,182,1.186,183,3.273,184,3.182,185,1.44,186,1.804,189,2.442,191,1.293,192,2.442,195,1.52,196,2.569,198,1.107,199,2.031,200,2.063,201,2.031,202,2.801,203,1.463,204,2.164,205,1.237,206,1.44,207,2.576,208,1.395,209,0.944,210,3.604,211,1.395,212,1.975,213,1.912,214,1.911,215,3.181,216,1.352,217,1.373,218,2.345,219,1.373,220,1.111,221,1.593,222,1.417,223,1.463,224,1.395,225,1.332,226,1.395,227,1.352,228,2.576,229,1.395,230,1.293,231,1.395,232,1.97,233,1.417,234,1.417,235,1.745,236,1.463,237,2.713,238,1.395,239,1.463,240,1.395,241,1.912,242,1.395,243,1.373,244,1.395,245,1.274,246,1.274,247,1.463,248,1.373,249,1.395,250,1.751,251,1.912,252,1.395,253,2.494,254,1.463,255,1.395,256,1.463,257,1.395,258,1.463,259,1.395,260,1.092,261,1.332,262,1.332,263,2.243,264,1.395,265,1.373,266,1.395,267,2.576,268,1.395,269,1.237,270,1.44,271,2.164,272,1.395,273,1.395,274,1.417,275,1.237,276,1.395,277,1.572,278,1.395,279,1.169,280,1.463,281,1.373,282,1.395,283,1.395,284,1.44,285,1.395,286,1.395,287,1.035,288,2.381,289,1.463,293,1.871,422,4.998,426,2.839,427,4.93,476,2.338,477,2.036,478,2.501,498,3.449,518,1.137,546,1.293,621,2.585,717,4.129,823,3.458,2292,2.709,2415,4.199,2510,6.204,2513,3.845,2514,5.687,2515,7.48,2516,7.48,2517,7.48,2518,7.48,2519,6.769,2520,5.687,2521,3.845,2522,3.845,2523,3.845,2524,3.845,2525,3.845,2526,3.845,2527,3.845,2528,6.073,2529,3.845,2530,3.845,2531,3.845,2532,5.687,2533,7.48,2534,3.845,2535,3.845,2536,3.845,2537,3.845,2538,5.687,2539,3.845,2540,3.845,2541,3.845,2542,3.845,2543,3.845,2544,3.845,2545,3.845]],["title/interfaces/GroupFavorite.html",[0,0.081,2298,3.561]],["body/interfaces/GroupFavorite.html",[0,0.137,2,0.062,3,0.057,4,0.047,6,0.228,7,0.692,21,0.612,22,0.246,23,0.005,24,0.326,28,1.589,29,0.688,31,1.245,48,0.069,54,0.093,57,1.183,60,0.99,62,0.89,66,1.297,71,1.862,79,1.509,85,1.951,86,0.003,131,0.003,146,1.902,166,2.036,171,1.514,172,1.264,195,1.568,220,1.365,230,3.431,235,1.988,293,2.464,438,4.882,518,2.066,531,3.376,546,2.997,763,3.643,946,3.225,959,3.469,1238,3.055,1951,4.827,2294,3.617,2295,3.79,2296,5.759,2297,3.79,2298,6.281,2299,3.225,2300,3.998,2301,3.998,2302,3.998,2303,3.998,2304,3.998,2305,5.439,2306,3.998,2307,7.16,2308,3.998,2309,3.998,2310,3.998,2311,3.998,2312,3.998,2313,3.998,2314,3.998,2315,3.998,2316,3.998,2317,3.998,2318,3.998,2319,3.998,2320,3.998,2321,3.998,2322,3.998,2323,3.998,2324,3.998,2325,3.998,2326,3.998,2327,3.998,2328,3.998,2329,3.998,2330,3.998,2331,3.998,2332,3.998,2333,3.998,2334,3.998,2335,3.998,2336,3.998,2337,3.998,2338,3.998,2339,5.439,2340,3.998,2341,3.998,2342,3.998,2343,5.439,2344,3.998,2345,3.998,2346,3.998,2347,3.79,2348,3.79]],["title/classes/HasLoadableContent.html",[54,0.092,680,3.415]],["body/classes/HasLoadableContent.html",[2,0.087,3,0.08,4,0.066,6,0.322,7,0.863,22,0.417,23,0.005,24,0.339,29,0.972,48,0.059,54,0.158,62,0.937,64,0.87,79,1.096,86,0.004,88,0.985,131,0.004,136,1.791,141,1.25,143,1.096,171,1.588,189,2.368,192,3.166,195,1.629,680,5.891,685,6.143,695,6.092,717,3.583,1903,8.385,2546,9.346,2547,7.252,2548,7.252,2549,8.717,2550,7.252,2551,7.252]],["title/modules/HelgolandCachingModule.html",[2125,1.515,2552,4.191]],["body/modules/HelgolandCachingModule.html",[2,0.085,3,0.078,4,0.064,23,0.005,24,0.473,29,0.949,31,1.716,48,0.07,54,0.128,61,4.665,86,0.004,131,0.004,249,2.567,369,4.782,376,5.589,377,4.987,380,6.342,546,2.379,565,7.124,571,6.342,589,4.987,1965,6.053,2125,2.122,2128,3.905,2129,3.039,2130,3.544,2552,7.124,2553,7.077,2554,6.053,2555,7.124,2556,6.349,2557,7.202]],["title/modules/HelgolandControlModule.html",[2125,1.515,2558,3.935]],["body/modules/HelgolandControlModule.html",[2,0.078,3,0.072,4,0.059,21,0.432,23,0.005,24,0.458,29,0.871,48,0.076,54,0.118,85,1.423,86,0.004,131,0.004,174,1.418,198,1.87,205,3.31,206,2.433,269,3.31,270,2.433,275,3.31,287,2.193,340,5.83,1004,2.473,1203,2.691,1988,3.723,2125,2.444,2128,3.704,2129,3.823,2130,3.003,2268,2.843,2558,8.083,2559,2.897,2560,5.83,2561,5.83,2562,5.83,2563,5.83,2564,4.955,2565,7.31,2566,5.83,2567,5.83,2568,5.83]],["title/modules/HelgolandCoreModule.html",[2125,1.515,2569,2.817]],["body/modules/HelgolandCoreModule.html",[2,0.071,3,0.065,4,0.053,23,0.005,24,0.476,27,2.467,29,0.784,48,0.073,54,0.106,86,0.004,131,0.004,146,1.249,198,1.684,220,1.656,277,2.638,287,2.051,659,6.21,770,4.426,1004,2.226,1102,3.806,1203,2.423,1530,7.046,1532,4.319,1898,4.319,1899,4.852,1905,5.248,1951,5.804,1965,4.122,1966,4.556,1967,4.852,1980,7.933,2005,7.046,2125,2.285,2128,3.464,2129,3.639,2130,3.123,2268,2.559,2373,7.046,2559,2.608,2569,5.868,2570,5.248,2571,5.248,2572,5.248,2573,5.248,2574,7.432,2575,5.85,2576,7.619,2577,5.85,2578,5.85,2579,5.248,2580,5.85,2581,5.85,2582,5.85,2583,5.85,2584,5.85]],["title/modules/HelgolandD3Module.html",[2125,1.515,2585,3.731]],["body/modules/HelgolandD3Module.html",[2,0.077,3,0.071,4,0.058,23,0.005,24,0.463,29,0.854,31,1.544,48,0.075,54,0.115,86,0.004,131,0.004,198,1.833,211,3.739,212,2.573,213,2.705,214,2.218,216,3.626,217,3.682,218,2.787,287,2.165,677,5.961,1004,2.423,1203,2.637,2125,2.413,2128,3.657,2129,3.787,2130,2.965,2268,2.786,2559,2.839,2569,5.441,2585,7.698,2586,5.713,2587,5.713,2588,6.368,2589,5.713,2590,6.368,2591,7.315]],["title/modules/HelgolandDatasetTableModule.html",[2125,1.515,2592,3.731]],["body/modules/HelgolandDatasetTableModule.html",[2,0.082,3,0.076,4,0.062,23,0.005,24,0.47,29,0.915,31,1.655,48,0.077,54,0.124,86,0.004,131,0.004,198,1.964,220,1.333,222,3.833,287,2.261,1004,2.597,1203,2.826,1988,3.91,1991,3.447,1992,3.614,2125,2.519,2128,3.819,2129,3.908,2130,3.095,2268,2.985,2559,3.042,2564,5.108,2569,5.535,2592,7.56,2593,6.122,2594,6.122,2595,6.824,2596,6.122,2597,6.824,2598,6.824,2599,6.202,2600,6.824]],["title/modules/HelgolandDatasetlistModule.html",[2125,1.515,2601,3.731]],["body/modules/HelgolandDatasetlistModule.html",[2,0.072,3,0.066,4,0.054,23,0.005,24,0.474,29,0.798,31,1.443,48,0.073,54,0.108,85,1.303,86,0.004,131,0.004,166,1.223,174,1.361,198,1.713,205,3.217,214,1.424,218,2.061,263,1.971,266,2.795,269,3.217,275,3.217,281,2.752,285,2.795,287,2.074,1004,2.264,1203,2.465,1988,3.409,1991,3.006,1992,3.152,2125,2.311,2128,3.502,2129,3.668,2130,3.148,2268,2.603,2559,2.653,2564,4.685,2569,5.345,2599,5.688,2601,7.725,2602,5.338,2603,5.95,2604,5.338,2605,5.95,2606,5.338,2607,6.48,2608,7.466,2609,5.338,2610,4.393,2611,5.95,2612,5.338,2613,6.653,2614,5.338,2615,5.338,2616,6,2617,4.393]],["title/modules/HelgolandFavoriteModule.html",[2125,1.515,2618,3.935]],["body/modules/HelgolandFavoriteModule.html",[2,0.077,3,0.07,4,0.058,23,0.005,24,0.455,29,0.851,48,0.075,54,0.115,85,1.39,86,0.004,131,0.004,174,1.403,198,1.827,205,3.255,229,2.912,230,2.699,269,3.255,275,3.255,287,2.161,1004,2.415,1203,2.629,1988,3.636,2125,2.408,2128,3.65,2129,3.781,2130,3.245,2268,2.776,2299,6.126,2369,5.694,2379,5.694,2559,2.83,2564,4.882,2565,5.694,2618,8.16,2619,5.694,2620,6.347,2621,6.347,2622,5.694,2623,7.594,2624,5.694,2625,6.347,2626,6.347]],["title/modules/HelgolandFlotModule.html",[2125,1.515,2627,3.935]],["body/modules/HelgolandFlotModule.html",[2,0.08,3,0.074,4,0.06,23,0.005,24,0.461,29,0.891,48,0.076,54,0.12,86,0.004,131,0.004,198,1.913,213,2.778,214,2.252,231,3.761,232,2.863,233,3.82,287,2.224,1004,2.529,1203,2.752,2125,2.478,2128,3.757,2129,3.862,2130,3.045,2268,2.907,2446,6.853,2559,2.963,2591,6.853,2607,6.667,2627,8.073,2628,5.962,2629,5.962,2630,6.645,2631,5.962,2632,6.645,2633,5.175]],["title/modules/HelgolandLabelMapperModule.html",[2125,1.515,2607,3.415]],["body/modules/HelgolandLabelMapperModule.html",[2,0.083,3,0.076,4,0.063,23,0.005,24,0.457,29,0.923,48,0.077,54,0.125,86,0.004,131,0.004,166,1.736,198,1.982,238,3.778,287,2.273,1004,2.62,1203,2.852,1988,3.945,2125,2.533,2128,3.84,2129,3.923,2130,3.367,2268,3.012,2559,3.07,2564,5.136,2607,6.931,2610,5.084,2634,6.177,2635,6.177,2636,6.177,2637,6.177,2638,7.347,2639,5.362,2640,6.885,2641,6.885,2642,6.177]],["title/modules/HelgolandMapControlModule.html",[2125,1.515,2643,3.935]],["body/modules/HelgolandMapControlModule.html",[2,0.072,3,0.066,4,0.055,23,0.005,24,0.478,29,0.804,31,1.454,48,0.074,54,0.109,85,1.313,86,0.004,131,0.004,174,1.366,198,1.726,205,3.221,226,2.809,237,2.809,242,2.809,269,3.221,275,3.221,286,2.809,287,2.084,1004,2.282,1203,2.484,1988,3.436,2125,2.322,2128,3.52,2129,3.682,2130,3.16,2268,2.623,2559,2.674,2564,4.709,2569,5.356,2616,6.03,2617,4.428,2643,8.154,2644,5.38,2645,5.997,2646,5.38,2647,5.997,2648,5.38,2649,6.494,2650,7.094,2651,5.38,2652,4.974,2653,5.997,2654,5.997,2655,5.997,2656,5.997,2657,5.997]],["title/modules/HelgolandMapModule.html",[2125,1.515,2649,3.415]],["body/modules/HelgolandMapModule.html",[2,0.08,3,0.074,4,0.061,23,0.005,24,0.42,29,0.892,48,0.076,54,0.121,85,1.457,86,0.004,131,0.004,174,1.433,198,1.916,205,3.282,235,1.553,269,3.282,275,3.282,287,2.227,427,5.821,478,4.331,1004,2.533,1203,2.757,2125,2.481,2128,3.761,2129,3.865,2130,3.317,2268,2.912,2559,2.968,2649,7.08,2658,5.972,2659,6.657,2660,6.657,2661,5.972,2662,5.972]],["title/modules/HelgolandMapSelectorModule.html",[2125,1.515,2663,3.935]],["body/modules/HelgolandMapSelectorModule.html",[2,0.074,3,0.068,4,0.056,23,0.005,24,0.47,29,0.823,31,1.489,48,0.074,54,0.111,85,1.345,86,0.004,131,0.004,174,1.381,198,1.768,205,3.235,218,2.128,221,1.721,235,2.256,259,2.852,260,1.744,268,2.852,269,3.235,274,2.898,275,3.235,287,2.116,1004,2.337,1203,2.544,1988,3.519,2125,2.358,2128,3.574,2129,3.724,2130,2.898,2268,2.687,2559,2.738,2564,4.781,2569,5.39,2649,6.535,2652,5.094,2663,8.134,2664,5.51,2665,6.142,2666,6.142,2667,6.142,2668,5.51,2669,5.51,2670,5.862,2671,6.142,2672,5.51]],["title/modules/HelgolandMapViewModule.html",[2125,1.515,2673,3.935]],["body/modules/HelgolandMapViewModule.html",[2,0.084,3,0.077,4,0.063,23,0.005,24,0.458,29,0.933,48,0.078,54,0.126,86,0.004,98,1.95,131,0.004,198,2.003,234,3.843,235,1.984,287,2.289,1004,2.649,1203,2.883,2125,2.55,2128,3.865,2129,3.942,2130,3.133,2268,3.045,2559,3.103,2649,6.743,2652,5.773,2673,8,2674,6.245,2675,6.245,2676,6.961,2677,6.245,2678,6.961,2679,6.961,2680,6.961]],["title/modules/HelgolandModificationModule.html",[2125,1.515,2681,3.935]],["body/modules/HelgolandModificationModule.html",[2,0.073,3,0.067,4,0.055,23,0.005,24,0.472,29,0.81,31,1.466,48,0.074,54,0.11,86,0.004,131,0.004,175,3.713,180,5.423,185,2.263,198,1.74,208,3.713,209,1.912,224,3.713,225,2.094,244,3.713,245,2.003,246,2.578,287,2.095,652,5.423,1004,2.3,1203,2.504,1991,3.054,2058,5.423,2125,2.334,2128,3.538,2129,3.696,2130,2.868,2268,2.644,2559,2.695,2569,5.368,2616,6.061,2617,4.463,2670,4.085,2681,8.141,2682,5.423,2683,5.423,2684,6.045,2685,5.423,2686,6.045,2687,7.783,2688,5.423,2689,7.783,2690,5.423,2691,6.045]],["title/modules/HelgolandPermalinkModule.html",[2125,1.515,2692,3.935]],["body/modules/HelgolandPermalinkModule.html",[2,0.078,3,0.072,4,0.059,23,0.005,24,0.458,29,0.867,48,0.076,54,0.117,66,1.509,85,1.415,86,0.004,131,0.004,174,1.415,198,1.861,205,3.265,252,2.946,253,3.273,255,2.946,257,2.946,269,3.265,275,3.265,287,2.186,1004,2.46,1203,2.678,1991,3.266,2125,2.436,2128,3.692,2129,3.814,2130,2.993,2268,2.828,2559,2.882,2692,8.078,2693,5.8,2694,6.465,2695,6.465,2696,5.8,2697,8.123,2698,5.362,2699,5.8,2700,6.465,2701,5.8,2702,6.465,2703,5.8,2704,6.465]],["title/modules/HelgolandPlotlyModule.html",[2125,1.515,2705,3.935]],["body/modules/HelgolandPlotlyModule.html",[2,0.084,3,0.077,4,0.063,23,0.005,24,0.458,29,0.935,31,1.691,48,0.078,54,0.126,86,0.004,131,0.004,198,2.007,261,3.613,262,2.416,263,2.82,287,2.291,1004,2.654,1203,2.888,2125,2.553,2128,3.87,2129,3.945,2130,3.137,2133,4.914,2268,3.05,2559,3.109,2569,5.564,2591,5.783,2705,8.003,2706,6.256,2707,6.256,2708,6.973,2709,6.256,2710,6.973]],["title/modules/HelgolandSelectorModule.html",[2125,1.515,2711,3.935]],["body/modules/HelgolandSelectorModule.html",[2,0.065,3,0.06,4,0.049,23,0.005,24,0.476,29,0.726,31,1.314,48,0.071,54,0.098,86,0.003,131,0.003,198,1.559,219,3.597,220,1.058,221,2.029,240,3.653,241,2.435,248,3.597,249,1.965,250,2.349,251,2.929,272,3.653,273,3.653,287,1.95,1004,2.062,1203,2.244,1581,4.493,1988,3.104,1991,2.737,1992,2.87,2125,2.172,2128,3.293,2129,3.504,2130,3.007,2268,2.37,2401,4.219,2559,2.415,2564,4.404,2569,5.208,2599,5.348,2607,6.313,2633,4.219,2670,6.136,2711,8.198,2712,4.86,2713,4.86,2714,5.418,2715,4.86,2716,4.86,2717,6.583,2718,6.897,2719,5.418,2720,5.641,2721,6.007,2722,6.354]],["title/modules/HelgolandTimeModule.html",[2125,1.515,2723,3.935]],["body/modules/HelgolandTimeModule.html",[2,0.074,3,0.068,4,0.056,23,0.005,24,0.474,29,0.826,31,1.494,48,0.074,54,0.112,85,1.349,86,0.004,131,0.004,140,2.082,174,1.383,198,1.774,205,3.237,241,2.649,264,2.858,265,2.201,269,3.237,275,3.237,276,2.858,277,1.703,282,2.858,283,2.858,284,2.95,287,2.121,1004,2.345,1203,2.552,1988,3.531,2125,2.363,2128,3.582,2129,3.73,2130,2.271,2268,2.696,2559,2.747,2564,4.791,2567,5.528,2569,5.395,2616,6.136,2617,4.55,2670,5.871,2723,8.09,2724,5.528,2725,6.162,2726,6.162,2727,6.162,2728,5.528,2729,5.528,2730,5.528,2731,5.528,2732,5.528]],["title/modules/HelgolandTimeRangeSliderModule.html",[2125,1.515,2733,3.935]],["body/modules/HelgolandTimeRangeSliderModule.html",[2,0.084,3,0.077,4,0.063,23,0.005,24,0.458,29,0.93,48,0.078,54,0.126,86,0.004,131,0.004,198,1.996,277,2.345,278,3.781,279,2.904,287,2.284,1004,2.639,1203,2.872,1988,3.974,2125,2.544,2128,3.857,2129,3.936,2130,3.378,2268,3.034,2559,3.092,2564,5.159,2733,7.996,2734,6.222,2735,6.222,2736,6.222,2737,6.222,2738,7.36,2739,5.401,2740,5.752,2741,6.935,2742,6.935,2743,6.222]],["title/interfaces/HighlightDataset.html",[0,0.081,779,3.935]],["body/interfaces/HighlightDataset.html",[0,0.076,2,0.011,3,0.011,4,0.009,6,0.194,7,0.173,18,0.529,21,0.559,22,0.084,23,0.005,24,0.204,29,0.127,31,0.23,32,1.352,34,1.205,35,0.844,47,1.614,48,0.008,54,0.017,56,0.503,57,1.341,60,0.183,62,0.369,64,0.361,65,3.911,66,0.737,68,1.686,71,3.104,79,1.189,85,1.618,86,0.001,90,0.491,91,2.637,97,1.485,100,2.951,131,0.001,140,0.685,141,0.136,146,1.6,150,1.001,153,0.596,154,0.617,156,1.959,165,2.06,166,1.445,170,3.263,171,1.256,172,0.278,174,0.386,183,0.297,184,0.289,186,0.301,189,0.792,191,1.587,192,1.15,195,1.132,196,0.562,199,0.624,200,0.88,209,1.073,212,1.027,213,1.012,214,1.045,216,0.334,220,1.52,225,1.043,227,0.334,232,0.329,235,0.407,245,1.167,246,0.579,265,0.339,277,1.979,279,2.438,287,0.948,288,0.614,293,2.615,304,0.489,326,1.512,347,0.822,359,1.335,428,0.617,438,3.952,440,0.301,456,2.729,488,2.291,489,2.797,499,2.655,518,1.95,531,3.801,532,0.739,533,0.739,534,0.739,535,0.739,536,0.739,537,0.739,545,3.069,546,2.365,575,0.459,594,0.596,596,0.596,615,0.577,621,1.601,629,0.925,630,0.449,638,2.683,659,1.578,670,3.199,673,0.669,675,4.171,676,0.669,677,0.641,678,0.544,679,0.974,681,0.431,682,0.56,683,0.56,688,0.529,692,1.425,695,0.596,702,0.948,705,1.639,724,0.669,725,1.136,728,0.739,737,0.596,741,0.669,742,2.481,743,1.36,744,0.577,745,0.669,746,1.892,748,2.355,762,0.739,763,1.146,764,1.097,765,1.475,766,0.596,767,0.641,768,0.75,769,1.03,770,0.81,771,2.212,772,4.46,773,2.92,774,0.787,775,0.787,776,0.787,777,0.787,778,2.6,779,2.742,780,2.797,781,2.931,782,2.931,783,2.012,784,2.497,785,2.012,786,2.012,787,3.794,788,2.683,789,1.18,790,1.448,791,2.012,792,1.18,793,2.012,794,1.136,795,0.641,796,0.641,797,0.787,798,5.327,799,2.497,800,4.984,801,0.787,802,0.787,803,0.787,804,0.701,805,0.701,806,0.617,807,0.787,808,0.787,809,0.787,810,1.475,811,1.36,812,2.497,813,1.18,814,0.641,815,0.641,816,0.787,817,0.701,818,0.787,819,0.787,820,0.701,821,0.701,822,0.787,823,4.105,824,2.012,825,0.787,826,0.787,827,0.787,828,3.794,829,3.635,830,3.551,831,1.448,832,0.787,833,0.669,834,1.431,835,0.596,836,0.701,837,0.974,838,1.639,839,0.669,840,1.062,841,2.655,842,0.701,843,1.289,844,4.859,845,1.791,846,1.289,847,1.289,848,0.701,849,0.701,850,0.701,851,0.701,852,0.787,853,0.701,854,0.701,855,0.787,856,0.787,857,0.787,858,0.787,859,2.76,860,1.231,861,0.701,862,0.701,863,0.739,864,0.787,865,0.81,866,1.062,867,0.596,868,1.448,869,0.787,870,1.791,871,0.787,872,0.701,873,2.6,874,1.097,875,2.6,876,1.791,877,1.289,878,2.931,879,0.844,880,1.289,881,1.289,882,0.701,883,2.92,884,1.448,885,2.012,886,0.577,887,0.577,888,0.739,889,1.448,890,0.787,891,0.544,892,0.787,893,0.56,894,0.701,895,1.448,896,0.787,897,0.787,898,0.787,899,1.448,900,0.787,901,0.577,902,1.448,903,1.448,904,2.497,905,3.292,906,1.448,907,4.179,908,1.448,909,1.448,910,3.915,911,0.577,912,0.577,913,0.787,914,2.012,915,0.577,916,1.062,917,0.701,918,0.787,919,0.577,920,0.787,921,0.787,922,0.56,923,0.787,924,0.701,925,0.641,926,0.669,927,0.577,928,1.448,929,2.111,930,0.787,931,0.787,932,0.701,933,1.289,934,0.787,935,0.787,936,0.787,937,0.787,938,1.36,939,0.787,940,0.544,941,0.739,942,0.787,943,0.787,944,1.36,945,1.448,946,1.097,947,3.077,948,0.596,949,0.739,950,1.639,951,0.787,952,0.787,953,2.497,954,0.787,955,1.448,956,0.739,957,1.448,958,0.787,959,0.641,960,0.787,961,0.787,962,0.787,963,0.787,964,0.787,965,0.787,966,0.787,967,0.787,968,0.787,969,0.787,970,0.787,971,0.787,972,0.787,973,1.865,974,0.787,975,1.791,976,0.739,977,2.38,978,0.739,979,2.012,980,0.787,981,0.641,982,0.787,983,0.787,984,0.787,985,0.787,986,0.787,987,0.787,988,1.36,989,0.787,990,0.787,991,0.787,992,1.448,993,0.787,994,2.497,995,2.012,996,0.787,997,0.787,998,0.787,999,0.701,1000,1.448,1001,0.787,1002,0.787,1003,0.787,1004,0.361,1005,2.012,1006,2.012,1007,0.787,1008,0.787,1009,0.787,1010,1.448,1011,0.787,1012,1.448,1013,0.787,1014,0.787,1015,0.787,1016,0.787,1017,0.787,1018,0.787,1019,0.787,1020,0.787,1021,2.575,1022,0.787,1023,0.787,1024,2.012,1025,0.787,1026,1.448,1027,1.448,1028,0.787,1029,0.787,1030,1.448,1031,1.448,1032,0.787,1033,0.787,1034,1.448,1035,2.223,1036,2.012,1037,3.486,1038,0.787,1039,0.787,1040,1.448,1041,0.787,1042,0.787,1043,3.775,1044,0.701,1045,2.012,1046,0.787,1047,0.787,1048,0.787,1049,1.231,1050,2.6,1051,0.701,1052,3.932,1053,3.72,1054,2.6,1055,3.72,1056,2.931,1057,1.289,1058,4.299,1059,0.787,1060,0.701,1061,0.701,1062,0.701,1063,0.701,1064,0.701,1065,1.289,1066,1.289,1067,0.701,1068,4.607,1069,3.486,1070,1.289,1071,1.289,1072,1.289,1073,1.289,1074,1.791,1075,1.289,1076,0.701,1077,2.223,1078,0.701,1079,2.223,1080,1.791,1081,1.791,1082,2.6,1083,1.289,1084,2.497,1085,0.701,1086,0.669,1087,0.701,1088,1.289,1089,0.787,1090,0.787,1091,1.448,1092,0.787,1093,0.787,1094,0.787,1095,2.012,1096,0.787,1097,0.787,1098,0.787,1099,0.787,1100,0.787,1101,0.787,1102,1.959,1103,0.787,1104,1.448,1105,0.787,1106,0.787,1107,0.787,1108,0.787,1109,0.787,1110,1.448,1111,0.787,1112,0.787,1113,0.787,1114,0.787,1115,0.787,1116,1.36,1117,0.787,1118,0.787,1119,0.787,1120,0.787,1121,0.787,1122,0.596,1123,0.787,1124,1.36,1125,1.448,1126,0.787,1127,0.787,1128,0.787,1129,1.448,1130,1.448,1131,0.701,1132,0.787,1133,0.617,1134,1.448,1135,1.725,1136,0.787,1137,0.739,1138,0.787,1139,0.787,1140,0.787,1141,1.448,1142,1.448,1143,2.497,1144,2.497,1145,3.915,1146,0.787,1147,0.787,1148,3.915,1149,3.292,1150,2.497,1151,2.497,1152,2.92,1153,0.787,1154,2.92,1155,0.787,1156,2.92,1157,2.92,1158,2.012,1159,2.92,1160,3.292,1161,2.345,1162,1.36,1163,0.787,1164,1.448,1165,0.787,1166,0.739,1167,2.92,1168,4.607,1169,0.787,1170,1.448,1171,0.787,1172,2.012,1173,2.012,1174,0.787,1175,1.448,1176,0.787,1177,1.448,1178,0.669,1179,0.787,1180,0.787,1181,0.739,1182,0.787,1183,1.36,1184,1.289,1185,0.787,1186,2.497,1187,0.787,1188,1.289,1189,0.669,1190,1.448,1191,2.92,1192,1.448,1193,0.787,1194,0.787,1195,1.448,1196,2.141,1197,1.892,1198,0.787,1199,0.787,1200,0.787,1201,0.787,1202,1.448,1203,0.723,1204,0.787,1205,0.787,1206,2.035,1207,2.497,1208,2.92,1209,1.448,1210,2.497,1211,1.791,1212,1.448,1213,1.448,1214,1.448,1215,1.448,1216,1.289,1217,0.787,1218,1.36,1219,2.6,1220,1.791,1221,1.289,1222,0.787,1223,1.791,1224,1.524,1225,1.791,1226,0.787,1227,1.791,1228,0.491,1229,0.701,1230,0.787,1231,1.136,1232,1.289,1233,3.224,1234,3.224,1235,0.701,1236,1.352,1237,0.787,1238,2.547,1239,0.787,1240,2.497,1241,1.448,1242,0.787,1243,1.448,1244,0.787,1245,2.012,1246,0.787,1247,1.524,1248,0.701,1249,0.787,1250,0.701,1251,1.289,1252,0.787,1253,0.787,1254,0.787,1255,0.701,1256,0.701,1257,0.701,1258,0.701,1259,0.787,1260,1.289,1261,0.701,1262,0.701,1263,1.448,1264,0.787,1265,1.448,1266,0.787,1267,0.787,1268,0.787,1269,0.787,1270,0.787,1271,0.787,1272,1.448,1273,0.739,1274,0.787,1275,0.787,1276,0.641,1277,0.787,1278,0.787,1279,0.787,1280,0.787,1281,0.787,1282,0.787,1283,0.787,1284,0.787,1285,0.787,1286,0.787,1287,0.787,1288,0.787,1289,0.787,1290,1.448,1291,0.787,1292,0.787,1293,0.787,1294,2.012,1295,0.787,1296,0.787,1297,0.787,1298,0.787,1299,1.448,1300,0.787,1301,0.739,1302,1.136,1303,0.701,1304,2.012,1305,0.787,1306,0.787,1307,0.787,1308,0.787,1309,1.448,1310,0.787,1311,0.739,1312,0.701,1313,0.787,1314,0.701,1315,1.448,1316,0.787,1317,1.448,1318,0.701,1319,0.701,1320,0.787,1321,0.787,1322,0.787,1323,0.787,1324,0.787,1325,0.787,1326,0.701,1327,0.787,1328,0.787,1329,0.701,1330,0.701,1331,0.787,1332,0.701,1333,0.787,1334,0.701,1335,0.787,1336,2.035,1337,1.36,1338,0.787,1339,0.701,1340,1.448,1341,1.448,1342,1.448,1343,0.787,1344,3.915,1345,0.701,1346,0.701,1347,0.787,1348,0.787,1349,0.739,1350,0.787,1351,0.787,1352,0.701,1353,1.448,1354,2.497,1355,0.787,1356,0.787,1357,0.787,1358,0.787,1359,0.787,1360,0.787,1361,1.36,1362,0.787,1363,0.787,1364,1.448,1365,0.787,1366,1.448,1367,0.787,1368,0.787,1369,0.787,1370,2.012,1371,1.448,1372,0.787,1373,1.448,1374,0.669,1375,0.787,1376,0.787,1377,1.448,1378,1.289,1379,0.701,1380,0.701,1381,1.679,1382,0.787,1383,2.497,1384,2.012,1385,1.448,1386,0.787,1387,0.596,1388,0.787,1389,2.012,1390,0.787,1391,1.448,1392,1.448,1393,1.448,1394,2.012,1395,1.448,1396,1.448,1397,0.787,1398,0.787,1399,1.448,1400,0.787,1401,0.787,1402,0.787,1403,1.791,1404,1.289,1405,0.787,1406,0.787,1407,0.701,1408,0.787,1409,0.787,1410,0.701,1411,0.739,1412,0.787,1413,0.787,1414,0.787,1415,0.787,1416,0.787,1417,2.012,1418,1.448,1419,0.787,1420,0.787,1421,0.739,1422,0.787,1423,1.289,1424,2.497,1425,2.92,1426,0.787,1427,0.787,1428,0.787,1429,2.92,1430,0.787,1431,2.414,1432,1.448,1433,1.231,1434,2.012,1435,4.299,1436,0.701,1437,3.486,1438,2.497,1439,1.448,1440,0.787,1441,1.448,1442,1.289,1443,1.448,1444,1.709,1445,0.787,1446,0.787,1447,1.18,1448,0.787,1449,0.701,1450,1.791,1451,1.289,1452,2.012,1453,1.289,1454,0.787,1455,0.701,1456,0.787,1457,1.36,1458,0.787,1459,0.787,1460,0.787,1461,0.701,1462,0.701,1463,0.787,1464,0.701,1465,0.701,1466,0.701,1467,1.791,1468,0.701,1469,2.223,1470,2.223,1471,0.701,1472,0.701,1473,0.701,1474,0.701,1475,0.701,1476,0.701,1477,0.596,1478,1.448,1479,0.787,1480,3.915,1481,0.787,1482,0.787,1483,0.787,1484,0.701]],["title/classes/HttpCache.html",[54,0.092,376,3.288]],["body/classes/HttpCache.html",[2,0.076,3,0.07,4,0.057,6,0.28,22,0.383,23,0.005,24,0.373,27,2.658,34,3.512,35,3.048,47,1.55,48,0.065,54,0.159,62,0.946,64,0.959,79,1.396,86,0.004,88,1.086,97,3.893,131,0.004,136,1.643,141,1.146,143,1.209,152,4.549,171,1.071,195,2.073,361,3.636,369,4.774,374,6.04,375,6.86,376,5.202,378,5.516,379,6.007,381,5.903,388,5.903,389,6.482,571,4.655,578,5.023,581,4.91,587,3.515,973,4.235,1907,5.903,2744,5.656,2745,7.172,2746,6.305,2747,6.305,2748,7.172,2749,5.229,2750,5.229,2751,5.229,2752,5.229]],["title/interfaces/HttpRequestOptions.html",[0,0.081,1493,3.175]],["body/interfaces/HttpRequestOptions.html",[0,0.156,2,0.087,3,0.08,4,0.066,6,0.32,7,0.86,21,0.694,22,0.416,23,0.005,48,0.076,64,1.161,86,0.004,131,0.004,140,1.64,171,1.682,172,1.148,250,1.866,294,7.536,524,3.215,926,5.081,927,4.385,929,3.486,1485,4.873,1486,5.98,1487,5.98,1488,4.389,1489,3.486,1490,5.615,1491,3.728,1492,5.615,1493,5.458,1494,6.541]],["title/injectables/HttpService.html",[28,1.149,30,2.895]],["body/injectables/HttpService.html",[0,0.136,2,0.071,3,0.065,4,0.053,6,0.259,7,0.754,22,0.406,23,0.005,24,0.356,27,2.467,28,2.042,29,0.784,30,4.366,47,1.033,48,0.076,54,0.106,57,1.348,60,1.47,62,0.788,64,1.077,66,1.415,79,1.152,85,1.281,86,0.004,88,1.035,97,3.573,131,0.004,136,1.566,141,1.215,143,1.152,171,0.994,182,2.997,293,2.342,300,5.144,347,1.365,361,2.423,374,4.998,378,3.675,440,1.856,573,4.319,574,6.067,575,3.683,576,6.725,578,5.324,582,6.326,589,6.56,602,7.276,1135,4.855,1494,3.954,1531,5.004,2134,4.958,2554,4.122,2753,4.319,2754,6.319,2755,5.85,2756,7.432,2757,7.619,2758,5.934,2759,5.85,2760,4.556,2761,4.319,2762,4.556,2763,4.556,2764,4.556,2765,4.556,2766,4.556,2767,4.556,2768,4.556,2769,4.556,2770,4.556]],["title/interfaces/HttpServiceHandler.html",[0,0.081,576,3.561]],["body/interfaces/HttpServiceHandler.html",[0,0.148,2,0.075,3,0.069,4,0.056,6,0.275,22,0.297,23,0.005,24,0.37,27,2.615,28,1.982,29,0.831,30,3.554,47,1.095,48,0.077,54,0.112,57,1.429,60,1.196,62,0.577,64,1.045,66,1.469,79,1.196,85,1.358,86,0.004,88,0.843,97,2.615,131,0.004,136,1.626,141,0.889,143,0.938,171,1.054,182,3.076,293,1.714,300,4.992,361,2.569,374,5.591,378,3.896,573,4.579,574,5.347,575,3.825,576,6.68,578,5.765,582,5.575,589,6.14,602,6.999,1135,5.432,1494,4.192,1531,4.411,2134,5.971,2554,4.371,2753,4.579,2756,6.785,2758,4.83,2760,4.83,2761,4.579,2762,6.161,2763,4.83,2764,4.83,2765,4.83,2766,4.83,2767,4.83,2768,4.83,2769,4.83,2770,4.83,2771,6.202]],["title/interfaces/HttpServiceInterceptor.html",[0,0.081,582,3.561]],["body/interfaces/HttpServiceInterceptor.html",[0,0.147,2,0.074,3,0.068,4,0.056,6,0.273,22,0.295,23,0.005,24,0.368,27,2.598,28,1.976,29,0.826,30,3.531,47,1.088,48,0.077,54,0.112,57,1.42,60,1.189,62,0.573,64,1.042,66,1.463,79,1.191,85,1.349,86,0.004,88,0.837,97,2.598,131,0.004,136,1.619,141,0.884,143,0.932,171,1.047,182,3.072,293,1.703,300,4.977,361,2.552,374,5.58,378,3.871,568,7.069,573,5.817,574,5.325,575,4.426,576,6.819,578,5.752,582,6.121,589,6.121,602,6.985,1135,4.977,1494,4.165,1531,4.392,2134,5.957,2554,4.342,2753,4.55,2756,6.764,2758,4.799,2760,4.799,2761,4.55,2762,4.799,2763,4.799,2764,4.799,2765,4.799,2766,4.799,2767,4.799,2768,4.799,2769,4.799,2770,4.799,2772,6.162]],["title/interfaces/HttpServiceMetadata.html",[0,0.081,574,3.415]],["body/interfaces/HttpServiceMetadata.html",[0,0.147,2,0.075,3,0.068,4,0.056,6,0.274,7,0.782,22,0.378,23,0.005,24,0.369,27,2.607,28,1.979,29,0.829,30,3.542,47,1.536,48,0.077,54,0.112,57,1.424,60,1.193,62,0.575,64,1.162,66,1.466,79,0.935,85,1.353,86,0.004,97,2.607,131,0.004,171,1.478,182,2.987,293,1.709,300,4.985,361,3.603,374,5.131,378,5.758,573,4.564,574,5.88,575,3.817,576,6.459,578,5.465,582,5.564,589,6.13,602,6.992,1135,4.985,1494,6.195,1531,3.446,2134,5.137,2554,4.356,2753,4.564,2756,6.775,2758,4.814,2760,4.814,2761,4.564,2762,4.814,2763,4.814,2764,4.814,2765,4.814,2766,4.814,2767,4.814,2768,4.814,2769,4.814,2770,4.814]],["title/interfaces/IDataEntry.html",[0,0.081,755,3.288]],["body/interfaces/IDataEntry.html",[0,0.163,2,0.086,3,0.079,4,0.065,21,0.616,23,0.005,43,3.673,47,1.7,48,0.082,54,0.129,86,0.004,91,3.444,98,2.412,131,0.004,172,1.534,347,2.247,359,3.114,524,3.167,625,2.703,638,2.618,752,4.801,753,4.211,754,4.075,755,6.265,756,5.601,757,4.319,758,4.622,759,4.799,760,5.818,761,4.189]],["title/interfaces/IDataset.html",[0,0.081,763,1.923]],["body/interfaces/IDataset.html",[0,0.144,2,0.062,3,0.057,4,0.047,6,0.229,7,0.693,21,0.698,22,0.451,23,0.005,24,0.372,47,1.236,48,0.08,54,0.167,56,2.016,62,0.987,86,0.003,88,0.7,131,0.003,143,1.549,146,1.495,165,3.561,166,1.635,170,4.45,171,0.876,172,1.359,209,1.72,214,1.234,220,1.007,221,2.391,250,1.334,260,1.463,304,2.579,347,1.203,359,1.733,518,1.525,545,2.343,624,2.492,625,1.961,753,4.542,763,3.248,1228,2.665,1489,2.492,1491,4.615,1499,3.134,1500,4.692,1501,5.275,1502,5.396,1503,3.134,1505,5.57,1511,4.692,1518,2.873,1519,4.876,1520,2.44,1521,2.492,1522,2.492,1523,3.134,1524,4.131,1525,4.976,1526,2.953,1527,2.953,1528,2.953,1529,3.04]],["title/interfaces/Id.html",[0,0.081,146,1.079]],["body/interfaces/Id.html",[0,0.162,2,0.078,3,0.072,4,0.059,6,0.288,7,0.806,21,0.684,22,0.39,23,0.005,47,1.805,48,0.081,62,0.757,86,0.004,131,0.004,146,2.236,166,1.828,172,1.417,176,2.181,182,2.51,334,3.136,347,1.514,359,2.181,627,5.788,628,4.384,629,3.436,630,3.071,631,4.384,632,5.673,633,4.95,634,4.384,635,4.384,636,3.826,637,4.384,638,3.278,639,4.384,640,4.384,641,4.384,642,4.384,643,4.384,644,4.384,645,3.945,646,4.95,647,4.384,648,5.296,649,4.384,650,3.945]],["title/classes/IdCache.html",[54,0.092,2773,3.731]],["body/classes/IdCache.html",[2,0.079,3,0.073,4,0.06,6,0.291,7,0.811,21,0.677,22,0.448,23,0.005,48,0.053,54,0.148,62,0.946,64,1.072,66,1.521,79,1.457,86,0.004,88,1.214,131,0.004,136,1.684,141,1.342,143,1.351,146,1.908,171,1.392,195,1.472,235,2.249,293,2.47,326,3.518,347,2.249,369,4.841,371,4.839,440,2.079,754,4.562,2773,6.049,2774,9.638,2775,6.554,2776,8.192,2777,6.554,2778,8.192,2779,6.554,2780,8.192,2781,6.554,2782,6.554,2783,6.554,2784,6.554]],["title/interfaces/Identifiable.html",[0,0.081,2785,4.191]],["body/interfaces/Identifiable.html",[0,0.147,2,0.095,3,0.087,4,0.072,6,0.35,7,0.907,21,0.644,22,0.377,23,0.005,48,0.064,86,0.004,131,0.004,146,2.126,625,2.999,2785,7.594,2786,7.882]],["title/interfaces/InternalDatasetId.html",[0,0.081,2787,3.935]],["body/interfaces/InternalDatasetId.html",[0,0.128,2,0.076,3,0.069,4,0.057,6,0.278,7,0.788,21,0.665,22,0.381,23,0.005,24,0.409,28,1.811,29,0.84,48,0.065,54,0.113,62,0.74,65,3.849,79,1.204,85,1.743,86,0.004,131,0.004,146,2.205,165,3.08,220,1.858,250,1.621,304,2.766,487,3.401,763,3.03,770,2.905,859,3.094,865,3.692,924,4.624,925,4.233,929,4.231,946,3.935,1531,3.492,1573,4.414,1575,4.624,1898,4.624,2787,6.816,2788,5.194,2789,5.619,2790,6.603,2791,5.194,2792,7.259,2793,5.974,2794,5.194,2795,5.619,2796,5.194,2797,5.194,2798,5.619,2799,5.619,2800,5.619,2801,5.619,2802,5.619,2803,5.619,2804,5.619]],["title/injectables/InternalIdHandler.html",[28,1.149,770,2.343]],["body/injectables/InternalIdHandler.html",[0,0.091,2,0.069,3,0.063,4,0.052,6,0.252,21,0.642,22,0.358,23,0.005,24,0.39,28,1.901,29,0.762,48,0.061,54,0.103,62,0.88,64,0.897,65,3.615,79,1.342,85,1.637,86,0.004,88,1.016,131,0.004,136,1.537,141,1.072,143,1.13,146,2.224,165,3.232,195,1.277,220,1.954,250,1.935,304,2.653,487,4.061,740,5.081,763,3.378,770,3.468,859,2.808,865,4.117,924,4.197,925,3.842,929,4.577,946,3.571,1531,4.658,1573,4.006,1575,4.197,1898,6.17,2787,6.507,2788,4.714,2789,5.1,2790,6.202,2791,4.714,2792,7.649,2793,6.283,2794,6.202,2795,6.708,2796,6.202,2797,6.202,2798,6.708,2799,5.1,2800,5.1,2801,5.1,2802,5.1,2803,5.1,2804,5.1,2805,7.478,2806,7.478,2807,5.684,2808,5.684]],["title/injectables/JsonFavoriteExporterService.html",[28,1.149,2623,3.935]],["body/injectables/JsonFavoriteExporterService.html",[2,0.068,3,0.063,4,0.076,6,0.252,22,0.4,23,0.005,24,0.414,28,1.899,29,0.761,34,3.688,35,3.611,48,0.046,54,0.103,57,1.308,60,1.441,62,0.88,64,0.896,66,1.551,71,2.059,75,4,79,1.262,85,2.144,86,0.004,88,1.015,131,0.004,136,1.535,141,1.197,143,1.129,191,1.908,195,1.275,230,3.099,620,4,837,3.164,1538,3.693,1545,4.191,2296,5.049,2299,5.574,2438,4.707,2623,5.817,2809,8.873,2810,5.676,2811,8.873,2812,7.47,2813,5.676,2814,5.676,2815,7.47,2816,5.676,2817,7.47,2818,5.676,2819,5.676,2820,8.35,2821,5.676,2822,5.676,2823,5.676,2824,5.676,2825,5.676,2826,5.676,2827,5.676,2828,5.092,2829,5.676,2830,5.676,2831,5.676,2832,5.676,2833,5.676,2834,5.676,2835,5.676,2836,5.676,2837,5.092,2838,5.676,2839,5.676,2840,5.676,2841,5.676,2842,5.676,2843,5.676,2844,5.676,2845,5.676,2846,5.676,2847,5.676,2848,5.676,2849,5.676,2850,5.676,2851,5.676,2852,5.092,2853,5.676,2854,5.676,2855,5.676]],["title/components/LabelMapperComponent.html",[174,0.805,238,1.833]],["body/components/LabelMapperComponent.html",[2,0.052,3,0.048,4,0.039,6,0.192,7,0.613,21,0.579,22,0.378,23,0.005,24,0.289,29,0.579,38,1.41,48,0.035,54,0.078,56,1.782,57,0.995,60,1.194,62,0.881,64,0.743,66,0.802,79,0.653,86,0.003,88,1.074,98,1.21,131,0.003,136,1.272,140,1.646,141,1.199,143,0.936,166,1.991,174,1.332,175,1.567,176,1.452,177,1.644,178,1.644,182,1.332,183,3.296,184,3.205,185,1.617,186,1.964,195,1.39,196,2.543,198,1.243,199,2.211,200,2.246,201,2.211,202,2.959,203,1.644,204,2.356,205,1.39,206,1.617,207,2.753,208,1.567,209,1.061,210,3.687,211,1.567,212,2.111,213,2.081,214,2.003,215,3.313,216,1.519,217,1.543,218,2.506,219,1.543,220,1.209,221,1.734,222,1.592,223,1.644,224,1.567,225,1.496,226,1.567,227,1.519,228,2.753,229,1.567,230,1.452,231,1.567,232,2.145,233,1.592,234,1.592,235,1.844,236,1.644,237,1.567,238,2.867,239,1.644,240,1.567,241,2.081,242,1.567,243,1.543,244,1.567,245,1.431,246,1.431,247,1.644,248,1.543,249,1.567,250,1.872,251,2.081,252,1.567,253,2.666,254,1.644,255,1.567,256,1.644,257,1.567,258,1.644,259,1.567,260,1.226,261,1.496,262,1.496,263,2.397,264,1.567,265,1.543,266,1.567,267,2.753,268,1.567,269,1.39,270,1.617,271,2.356,272,1.567,273,1.567,274,1.592,275,1.39,276,1.567,277,1.711,278,1.567,279,1.313,280,1.644,281,1.543,282,1.567,283,1.567,284,1.617,285,1.567,286,1.567,287,1.163,288,1.519,289,1.644,347,1.008,395,3.425,412,3.201,440,1.37,453,2.93,454,3.665,456,1.889,518,1.831,546,2.081,717,4.3,2415,4.571,2610,6.427,2638,5.835,2639,6.779,2642,3.875,2856,4.319,2857,5.554,2858,6.191,2859,8.705,2860,4.319,2861,6.191,2862,6.191,2863,4.319,2864,4.319,2865,4.319,2866,4.319,2867,4.319,2868,4.319,2869,4.319]],["title/injectables/LabelMapperService.html",[28,1.149,2638,3.731]],["body/injectables/LabelMapperService.html",[2,0.061,3,0.076,4,0.046,6,0.223,7,0.682,21,0.643,22,0.424,23,0.005,24,0.413,27,2.122,28,1.787,29,0.675,31,1.22,34,3.867,35,3.331,48,0.041,54,0.091,57,1.587,60,1.329,62,0.731,64,1.014,66,1.459,68,1.797,79,1.382,85,2.049,86,0.003,88,1.148,97,2.905,131,0.003,136,1.416,141,1.269,143,1.277,166,2.045,195,1.13,202,1.884,293,2.672,300,5.237,304,2.367,326,2.161,347,1.174,369,4.369,440,1.596,490,3.06,620,3.546,621,3.132,1231,3.274,1302,3.274,1545,3.715,2001,4.514,2003,4.514,2129,2.161,2610,6.748,2638,5.087,2639,7.117,2773,6.748,2870,4.514,2871,6.89,2872,6.89,2873,6.89,2874,4.514,2875,7.857,2876,5.954,2877,6.89,2878,6.89,2879,5.032,2880,6.89,2881,5.032,2882,6.89,2883,5.032,2884,5.032,2885,8.851,2886,5.032,2887,5.032,2888,5.032,2889,5.032,2890,6.89,2891,5.032,2892,5.032,2893,4.173,2894,5.032,2895,5.032,2896,5.032,2897,5.032,2898,4.514,2899,5.032,2900,6.89,2901,7.857,2902,5.032,2903,5.032,2904,5.032,2905,5.032,2906,5.032,2907,5.032,2908,5.032,2909,6.89,2910,5.032,2911,5.032]],["title/interfaces/Language.html",[0,0.081,333,3.073]],["body/interfaces/Language.html",[0,0.146,2,0.094,3,0.086,4,0.071,6,0.344,7,0.898,21,0.681,22,0.434,23,0.005,48,0.063,86,0.004,131,0.004,166,2.037,333,5.515,334,4.791,2912,7.753]],["title/classes/LanguageChangNotifier.html",[54,0.092,2404,3.731]],["body/classes/LanguageChangNotifier.html",[2,0.088,3,0.081,4,0.067,6,0.325,22,0.351,23,0.005,24,0.343,48,0.06,54,0.159,57,2.242,60,1.693,64,0.88,79,1.109,86,0.004,88,0.997,131,0.004,136,1.804,141,1.258,143,1.109,152,3.99,195,1.971,879,4.243,1990,6.115,1991,3.706,1992,3.885,2404,6.48,2411,7.58,2913,9.392,2914,7.336,2915,6.084,2916,7.336,2917,7.336,2918,7.336,2919,7.336]],["title/interfaces/LayerOptions.html",[0,0.081,446,4.191]],["body/interfaces/LayerOptions.html",[0,0.144,2,0.092,3,0.084,4,0.069,6,0.337,7,0.887,21,0.634,22,0.457,23,0.005,48,0.062,86,0.004,131,0.004,166,2.023,171,1.619,446,7.433,545,4.476,547,8.166,671,6.302,2920,6.817,2921,9.533]],["title/interfaces/Layout.html",[0,0.081,2149,3.731]],["body/interfaces/Layout.html",[0,0.112,2,0.034,3,0.032,4,0.026,6,0.127,21,0.588,22,0.137,23,0.005,24,0.299,29,0.383,31,0.692,47,0.799,48,0.023,54,0.052,56,0.822,57,2.037,60,0.551,62,0.595,64,0.891,66,1.379,68,3.372,71,2.928,79,0.85,85,2.13,86,0.002,88,0.388,91,1.811,108,1.793,131,0.002,140,1.029,141,0.409,146,1.49,153,1.793,165,1.104,171,0.485,172,1.111,174,0.721,183,0.893,184,0.868,186,0.906,189,1.478,192,1.836,195,1.912,209,0.701,212,1.321,220,0.884,235,1.056,261,0.989,262,2.217,263,2.578,277,1.251,279,1.946,293,2.541,304,1.268,326,1.226,359,1.891,361,1.182,387,1.736,476,1.736,518,2.387,524,3.874,546,2.346,575,2.188,630,1.351,638,2.572,670,1.512,675,4.88,678,1.636,679,2.523,681,1.298,682,1.683,683,1.683,688,1.591,702,2.458,746,2.844,748,2.371,754,1.351,759,3.568,763,2.436,764,2.844,765,3.42,766,1.793,768,1.943,769,2.669,770,2.099,787,1.736,814,1.929,823,3.892,828,3.892,834,1.683,835,1.793,837,3.135,840,2.752,841,1.736,859,1.41,865,2.099,866,2.752,867,1.793,874,1.793,886,1.736,887,1.736,891,1.636,893,1.683,901,1.736,911,1.736,912,1.736,915,1.736,916,2.752,919,1.736,922,1.683,940,1.636,948,1.793,950,3.059,973,2.397,981,3.059,1021,2.669,1133,2.945,1196,1.736,1197,1.793,1224,2.844,1236,1.591,1238,1.249,1247,3.533,1387,1.793,1447,1.929,1583,2.012,1663,2.012,1667,1.793,1795,4.51,1796,3.963,1841,3.42,2131,4.152,2132,3.342,2133,3.19,2134,4.54,2135,2.012,2136,2.012,2137,3.342,2138,3.342,2139,3.342,2140,3.342,2141,3.342,2142,2.012,2143,2.223,2144,2.223,2145,2.223,2146,2.223,2147,2.223,2148,2.223,2149,4.726,2150,2.223,2151,2.223,2152,2.223,2153,2.223,2154,2.223,2155,2.223,2156,2.223,2157,2.223,2158,2.223,2159,2.223,2160,2.223,2161,2.223,2162,2.223,2163,2.223,2164,4.38,2165,2.223,2166,5.782,2167,2.752,2168,2.752,2169,2.752,2170,2.223,2171,4.38,2172,2.108,2173,2.223,2174,2.223,2175,2.223,2176,2.223,2177,2.223,2178,2.223,2179,2.223,2180,2.223,2181,2.223,2182,2.223,2183,3.525,2184,2.223,2185,2.223,2186,2.223,2187,2.223,2188,2.223,2189,2.223,2190,2.223,2191,2.223,2192,2.223,2193,2.223,2194,2.223,2195,2.223,2196,2.223,2197,2.223,2198,2.223,2199,2.223,2200,2.223,2201,2.223,2202,2.223,2203,3.525,2204,3.342,2205,2.223,2206,2.223,2207,2.223,2208,2.223,2209,2.012,2210,2.108,2211,2.223,2212,2.223,2213,2.223,2214,6.473,2215,6.286,2216,5.434,2217,3.525,2218,4.38,2219,2.223,2220,2.223,2221,6.473,2222,2.223,2223,3.342,2224,3.342,2225,3.525,2226,3.525,2227,2.223,2228,3.525,2229,3.525,2230,2.223,2231,2.223,2232,3.525,2233,3.525,2234,2.223,2235,2.223,2236,2.223,2237,2.223,2238,3.525,2239,2.223,2240,1.929,2241,4.984,2242,3.525,2243,6.473,2244,2.223,2245,2.223,2246,2.223,2247,2.223,2248,3.525,2249,4.38,2250,4.38,2251,3.525,2252,4.38,2253,4.38,2254,3.525,2255,2.223,2256,2.223,2257,2.223,2258,2.223,2259,2.223,2260,2.108,2261,2.223,2262,2.223,2263,2.223,2264,2.223,2265,2.108,2266,2.223,2267,2.223,2268,1.249,2269,2.223,2270,2.223,2271,2.223,2272,2.108,2922,2.855]],["title/classes/ListEntryComponent.html",[54,0.092,2923,3.731]],["body/classes/ListEntryComponent.html",[2,0.065,3,0.06,4,0.049,6,0.24,21,0.645,22,0.457,23,0.005,24,0.338,29,0.725,31,1.312,48,0.044,54,0.131,56,2.083,57,2.005,60,1.396,62,0.958,64,0.978,66,1.344,79,1.372,85,1.184,86,0.003,88,1.108,131,0.003,136,1.487,141,1.433,143,1.233,146,1.74,152,3.29,171,1.479,189,2.963,191,2.433,192,3.113,195,2.141,196,3.005,304,2.284,398,5.511,414,5.469,454,2.509,691,5.305,748,4.02,770,4.33,1276,5.511,1652,6.762,1862,6.427,2923,5.343,2924,10.068,2925,4.213,2926,6.001,2927,7.22,2928,6.001,2929,6.762,2930,6.762,2931,5.41,2932,6.492,2933,5.635,2934,5.41,2935,4.854,2936,4.854,2937,5.41,2938,6.001,2939,4.487,2940,5.41,2941,4.854,2942,5.41,2943,4.854,2944,7.236,2945,5.41,2946,4.854,2947,5.41,2948,5.41,2949,5.41,2950,7.236]],["title/components/ListSelectorComponent.html",[174,0.805,240,1.833]],["body/components/ListSelectorComponent.html",[2,0.038,3,0.035,4,0.029,6,0.3,7,0.484,21,0.57,22,0.427,23,0.005,24,0.315,29,0.422,31,0.764,38,1.028,47,0.863,48,0.026,54,0.057,56,1.407,57,1.38,60,0.943,62,0.854,64,0.877,65,2.897,66,0.908,68,1.746,71,1.142,79,1.324,85,1.07,86,0.003,88,1.097,98,0.882,131,0.004,132,3.341,136,1.005,140,1.363,141,1.279,143,1.296,166,0.647,171,0.83,174,1.286,175,1.142,176,1.059,177,1.198,178,1.198,182,0.971,183,3.235,184,3.137,185,1.179,186,1.551,189,2.205,191,1.059,192,2.205,195,1.346,196,2.599,198,0.906,199,1.746,200,1.773,201,1.746,202,2.529,203,1.198,204,1.86,205,1.013,206,1.179,207,2.28,208,1.142,209,0.774,210,3.447,211,1.142,212,1.748,213,1.644,214,1.751,215,2.945,216,1.108,217,1.125,218,2.076,219,1.125,220,0.955,221,1.37,222,1.16,223,1.198,224,1.142,225,1.091,226,1.142,227,1.108,228,2.28,229,1.142,230,1.059,231,1.142,232,1.694,233,1.16,234,1.16,235,1.576,236,1.198,237,1.142,238,1.142,239,1.198,240,2.45,241,2.882,242,1.142,243,1.125,244,1.142,245,1.043,246,1.043,247,1.198,248,1.125,249,1.773,250,1.892,251,2.882,252,1.142,253,2.208,254,1.198,255,1.142,256,1.198,257,1.142,258,1.198,259,1.142,260,0.894,261,1.091,262,1.091,263,1.985,264,1.142,265,1.125,266,1.142,267,2.28,268,1.142,269,1.013,270,1.179,271,1.86,272,1.142,273,1.142,274,1.16,275,1.013,276,1.142,277,1.351,278,1.142,279,0.958,280,1.198,281,1.125,282,1.142,283,1.142,284,1.179,285,1.142,286,1.142,287,0.848,288,1.108,289,1.198,293,2.139,304,0.882,395,2.836,412,2.528,453,2.314,454,3.132,456,1.378,487,2.655,488,2.049,518,1.998,546,1.644,594,3.071,653,1.756,654,2.725,740,1.915,748,2.061,763,1.198,768,2.9,859,1.556,1004,1.86,1021,2.883,1238,2.621,1421,2.452,1431,3.644,1477,3.071,1488,3.91,1530,4.987,1539,2.612,1550,2.825,1553,2.825,1598,2.452,1866,5.376,2130,1.802,2399,4.667,2401,2.452,2402,2.325,2403,5.577,2405,3.304,2416,4.055,2670,2.128,2717,5.454,2720,7.055,2721,2.612,2951,7.514,2952,7.739,2953,4.889,2954,4.889,2955,4.889,2956,4.97,2957,5.992,2958,3.149,2959,5.992,2960,4.386,2961,4.667,2962,2.612,2963,2.612,2964,3.149,2965,3.149,2966,4.889,2967,5.992,2968,3.149,2969,3.149,2970,3.149,2971,3.149,2972,2.825,2973,4.889,2974,3.149,2975,3.149,2976,3.149,2977,6.755,2978,3.149,2979,3.149,2980,4.889,2981,4.889,2982,3.149,2983,3.149,2984,3.149,2985,4.889,2986,3.149,2987,3.149,2988,3.149,2989,2.452,2990,3.149,2991,2.325,2992,3.149,2993,3.149,2994,3.149,2995,4.889,2996,4.889,2997,3.149,2998,3.149,2999,4.889,3000,3.149,3001,3.149,3002,4.889,3003,3.149,3004,3.149,3005,3.149,3006,3.149,3007,3.149,3008,3.149,3009,3.149,3010,3.149,3011,3.149,3012,3.149,3013,4.889,3014,4.889]],["title/interfaces/ListSelectorParameter.html",[0,0.081,2961,3.935]],["body/interfaces/ListSelectorParameter.html",[0,0.137,2,0.084,3,0.077,4,0.063,6,0.308,7,0.841,21,0.684,22,0.492,23,0.005,24,0.397,28,1.932,29,0.931,31,1.685,48,0.069,54,0.126,62,0.79,64,1.196,66,1.29,86,0.004,131,0.004,171,1.558,235,1.982,316,7.442,369,3.593,2402,7.056,2403,5.526,2717,4.896,2720,5.411,2951,5.762,2956,5.762,2961,6.614,3015,5.762,3016,8.573,3017,8.573]],["title/injectables/ListSelectorService.html",[28,1.149,2717,3.561]],["body/injectables/ListSelectorService.html",[0,0.113,2,0.085,3,0.078,4,0.064,6,0.313,7,0.849,21,0.614,22,0.442,23,0.005,24,0.4,28,2.1,29,0.945,31,1.71,48,0.07,54,0.128,62,0.93,66,1.592,86,0.004,131,0.004,141,1.229,171,1.198,235,2.296,316,5.491,347,1.645,369,4.966,440,2.237,2402,5.206,2403,6.249,2717,6.039,2720,7.19,2951,7.657,2956,7.966,2961,5.491,3015,5.848,3016,6.325,3017,6.325,3018,7.051,3019,7.051]],["title/injectables/LocalHttpCache.html",[28,1.149,380,3.731]],["body/injectables/LocalHttpCache.html",[0,0.123,2,0.071,3,0.065,4,0.053,6,0.26,7,0.755,21,0.39,22,0.406,23,0.005,24,0.396,27,2.47,28,1.929,29,0.785,47,1.585,48,0.048,54,0.106,61,4.878,62,0.888,64,0.915,66,1.416,79,1.358,85,1.67,86,0.004,88,1.036,97,2.47,131,0.004,136,1.567,141,1.216,143,1.153,146,1.251,172,0.933,195,1.316,277,2.483,293,2.344,347,1.367,361,3.72,369,5.097,370,6.995,371,4.326,372,5.94,374,5.734,375,6.851,376,4.963,377,4.129,378,6.261,379,4.963,380,5.631,381,5.631,382,6.604,383,4.859,384,6.326,385,5.94,386,4.859,387,3.563,388,5.631,389,6.632,390,3.357,391,4.859,440,1.859,578,4.792,2745,6.842,3020,5.256,3021,5.859,3022,5.859]],["title/injectables/LocalOngoingHttpCache.html",[28,1.149,2555,4.191]],["body/injectables/LocalOngoingHttpCache.html",[2,0.071,3,0.065,4,0.053,6,0.259,7,0.754,21,0.389,22,0.465,23,0.005,24,0.396,27,2.467,28,1.927,29,0.784,34,3.986,35,2.828,48,0.048,54,0.106,61,5.183,62,0.947,64,1.077,79,1.443,86,0.004,88,1.22,131,0.004,136,1.566,141,1.335,143,1.357,171,1.294,195,1.903,293,2.342,326,3.272,347,1.365,369,4.642,370,7.432,371,4.319,374,6.039,382,6.599,387,3.557,440,1.856,499,3.557,524,2.608,578,5.64,581,4.556,587,5.189,1131,5.626,2080,5.626,2555,6.319,2556,8.562,2749,6.319,2750,6.319,2751,6.319,2752,6.319,3020,5.248,3023,5.85,3024,5.85,3025,5.85,3026,5.85,3027,5.85]],["title/classes/LocalSelectorComponent.html",[54,0.092,3028,4.533]],["body/classes/LocalSelectorComponent.html",[2,0.074,3,0.068,4,0.056,6,0.271,7,0.775,22,0.452,23,0.005,24,0.404,29,0.818,48,0.05,54,0.142,56,2.254,57,1.406,60,1.511,62,0.941,64,1.037,79,1.307,86,0.004,88,1.175,131,0.004,136,1.609,141,1.384,143,1.307,152,2.774,195,2.049,196,2.936,293,2.39,333,6.106,395,4.093,412,4.049,453,3.707,454,4.23,456,2.67,879,3.785,1492,4.753,1990,5.731,1991,3.083,1992,3.232,2915,5.061,3028,7.025,3029,9.816,3030,6.103,3031,9.122,3032,9.122,3033,7.831,3034,8.647,3035,7.831,3036,6.103,3037,6.103,3038,7.831,3039,6.103,3040,6.103,3041,6.103,3042,6.103,3043,7.831,3044,6.103,3045,6.103,3046,6.103,3047,6.103,3048,5.475]],["title/injectables/LocalStorage.html",[28,1.149,1951,3.073]],["body/injectables/LocalStorage.html",[2,0.067,3,0.062,4,0.051,6,0.247,7,0.73,21,0.68,22,0.451,23,0.005,24,0.26,28,1.881,29,0.746,48,0.045,54,0.101,60,1.596,62,0.94,64,1.057,65,4.257,79,1.529,85,1.811,86,0.005,88,1.197,97,3.488,131,0.003,136,1.516,141,1.35,143,1.423,171,1.253,293,2.286,347,1.299,438,4.739,440,1.766,499,3.386,518,2.447,546,2.48,717,3.644,754,4.456,1951,4.485,1966,7.479,2794,6.118,2852,6.617,3049,9.604,3050,5.568,3051,8.806,3052,7.376,3053,7.376,3054,7.376,3055,7.376,3056,5.568,3057,7.376,3058,5.568,3059,7.376,3060,5.568,3061,7.376,3062,5.568,3063,5.568,3064,4.995,3065,9.161,3066,5.568,3067,5.568,3068,8.272]],["title/components/LocateControlComponent.html",[174,0.805,242,1.833]],["body/components/LocateControlComponent.html",[2,0.056,3,0.051,4,0.042,6,0.204,7,0.641,21,0.499,22,0.31,23,0.005,24,0.302,29,0.617,38,1.502,48,0.037,54,0.083,57,1.06,60,1.249,62,0.849,64,0.552,66,0.854,79,0.695,86,0.003,88,1.018,98,1.289,131,0.003,136,1.331,140,1.704,141,1.166,143,0.695,166,0.945,174,1.365,175,1.669,176,1.547,177,1.751,178,1.751,182,1.419,183,3.308,184,3.217,185,1.723,186,2.054,195,1.033,196,2.616,198,1.324,199,2.312,200,2.349,201,2.312,202,3.044,203,1.751,204,2.464,205,1.481,206,1.723,207,2.851,208,1.669,209,1.13,210,3.73,211,1.669,212,2.186,213,2.177,214,2.051,215,3.382,216,1.618,217,1.643,218,2.595,219,1.643,220,1.265,221,1.814,222,1.695,223,1.751,224,1.669,225,1.594,226,1.669,227,1.618,228,2.851,229,1.669,230,1.547,231,1.669,232,2.243,233,1.695,234,1.695,235,1.897,236,1.751,237,1.669,238,1.669,239,1.751,240,1.669,241,2.177,242,2.949,243,3.06,244,1.669,245,1.524,246,1.524,247,1.751,248,1.643,249,1.669,250,1.938,251,2.177,252,1.669,253,2.761,254,1.751,255,1.669,256,1.751,257,1.669,258,1.751,259,1.669,260,1.306,261,1.594,262,1.594,263,2.482,264,1.669,265,1.643,266,1.669,267,2.851,268,1.669,269,1.481,270,1.723,271,2.464,272,1.669,273,1.669,274,1.695,275,1.481,276,1.669,277,1.79,278,1.669,279,1.399,280,1.751,281,1.643,282,1.669,283,1.669,284,1.723,285,1.669,286,1.669,287,1.238,288,2.635,289,1.751,347,1.073,422,5.531,440,1.46,518,1.915,681,2.943,2650,6.562,3069,4.601,3070,6.474,3071,6.474,3072,7.294,3073,8.13,3074,4.601,3075,6.474,3076,4.601,3077,4.601,3078,4.601,3079,6.721,3080,4.601,3081,4.601]],["title/injectables/LocateService.html",[28,1.149,2650,3.731]],["body/injectables/LocateService.html",[2,0.072,3,0.066,4,0.054,6,0.263,21,0.638,22,0.432,23,0.005,24,0.398,28,1.94,29,0.795,48,0.048,54,0.107,57,1.367,60,1.483,62,0.891,64,1.083,79,1.29,85,2.097,86,0.004,88,1.226,131,0.004,136,1.58,141,1.294,143,1.364,146,1.641,195,1.916,235,1.99,243,2.119,293,2.358,390,3.399,426,4.38,427,5.65,436,6.298,476,3.607,477,3.142,478,3.86,546,2.585,621,2.697,1238,2.595,1484,4.38,2209,4.18,2292,4.18,2650,5.677,3082,5.322,3083,7.689,3084,7.689,3085,7.689,3086,5.932,3087,7.689,3088,5.932,3089,7.689,3090,5.932,3091,7.689,3092,5.932,3093,5.322,3094,5.322,3095,5.322,3096,5.322,3097,7.653,3098,7.689,3099,5.932,3100,5.932,3101,5.932,3102,7.689,3103,5.932,3104,5.932,3105,5.932,3106,5.932,3107,5.932,3108,5.932,3109,5.932,3110,5.932,3111,5.932,3112,5.932,3113,5.932,3114,5.932,3115,5.932,3116,5.932]],["title/interfaces/LocatedProfileDataEntry.html",[0,0.081,761,2.98]],["body/interfaces/LocatedProfileDataEntry.html",[0,0.161,2,0.081,3,0.074,4,0.061,6,0.297,7,0.822,21,0.645,22,0.452,23,0.005,43,4.665,47,1.744,48,0.081,54,0.121,86,0.004,91,3.773,98,2.717,131,0.004,172,1.544,347,2.338,359,3.322,524,2.984,625,2.546,638,2.466,752,4.523,753,4.101,754,3.928,755,5.87,756,5.4,757,4.069,758,4.354,759,5.029,760,6.554,761,4.895]],["title/interfaces/LocatedTimeValueEntry.html",[0,0.081,757,3.073]],["body/interfaces/LocatedTimeValueEntry.html",[0,0.162,2,0.084,3,0.077,4,0.063,6,0.308,7,0.841,21,0.611,22,0.333,23,0.005,43,3.593,47,1.687,48,0.082,54,0.126,86,0.004,91,3.398,98,2.746,131,0.004,172,1.561,347,2.23,359,3.084,524,3.098,625,2.644,638,2.56,752,4.696,753,4.17,754,4.02,755,5.969,756,5.969,757,5.165,758,5.969,759,4.735,760,5.74,761,4.098]],["title/injectables/MapCache.html",[28,1.149,427,2.98]],["body/injectables/MapCache.html",[2,0.081,3,0.074,4,0.061,6,0.297,7,0.823,21,0.658,22,0.432,23,0.005,24,0.388,28,2.054,29,0.899,48,0.054,54,0.121,62,0.919,64,0.997,66,1.543,79,1.365,86,0.004,88,1.129,131,0.004,136,1.707,141,1.295,143,1.256,146,1.773,195,1.505,235,2.382,293,2.496,347,1.564,427,5.831,436,7.163,440,2.127,476,4.076,477,3.551,2920,8.467,3117,6.704,3118,8.309,3119,8.309,3120,8.309,3121,6.704,3122,8.309,3123,6.704,3124,6.704,3125,6.704,3126,6.704]],["title/interfaces/MinMaxRange.html",[0,0.081,771,3.175]],["body/interfaces/MinMaxRange.html",[0,0.13,2,0.078,3,0.071,4,0.059,6,0.286,7,0.803,21,0.669,22,0.389,23,0.005,47,1.774,48,0.076,54,0.161,60,1.565,62,0.968,68,2.305,71,2.341,86,0.004,131,0.004,146,1.378,165,3.602,171,1.582,172,1.028,209,2.405,245,3.085,246,3.085,359,2.984,367,4.362,518,2.625,545,2.934,546,2.17,692,3.841,717,3.188,744,3.925,771,5.576,788,4.362,789,4.362,792,4.362,794,4.199,929,3.12,1823,5.026,1825,5.026,1835,5.991,1839,5.026,1840,5.026,1841,3.925,1842,5.026]],["title/components/MinMaxRangeComponent.html",[174,0.805,244,1.833]],["body/components/MinMaxRangeComponent.html",[2,0.048,3,0.044,4,0.036,6,0.175,7,0.575,21,0.263,22,0.387,23,0.005,24,0.271,29,0.53,31,0.959,38,1.292,47,1.491,48,0.032,54,0.072,56,1.672,62,0.92,64,0.475,66,1.079,71,2.107,79,1.04,85,1.272,86,0.003,88,0.935,97,3.198,98,1.108,131,0.003,136,1.194,140,1.566,141,1.251,143,0.598,166,0.813,174,1.287,175,1.435,176,1.33,177,1.505,178,1.505,182,1.22,183,3.279,184,3.188,185,1.481,186,1.843,189,2.476,191,1.33,192,2.476,195,1.546,196,2.441,198,1.139,199,2.075,200,2.107,201,2.075,202,2.84,203,1.505,204,2.21,205,1.273,206,1.481,207,2.619,208,1.435,209,0.972,210,3.625,211,1.435,212,2.008,213,1.953,214,1.934,215,3.214,216,1.391,217,1.413,218,2.384,219,1.413,220,1.135,221,1.627,222,1.458,223,1.505,224,1.435,225,1.37,226,1.435,227,1.391,228,2.619,229,1.435,230,1.33,231,1.435,232,2.012,233,1.458,234,1.458,235,1.77,236,1.505,237,1.435,238,1.435,239,1.505,240,1.435,241,1.953,242,1.435,243,1.413,244,2.751,245,3.027,246,3.381,247,1.505,248,1.413,249,1.435,250,1.781,251,1.953,252,1.435,253,2.536,254,1.505,255,1.435,256,1.505,257,1.435,258,1.505,259,1.435,260,1.123,261,1.37,262,1.37,263,2.28,264,1.435,265,1.413,266,1.435,267,2.619,268,1.435,269,1.273,270,1.481,271,2.21,272,1.435,273,1.435,274,1.458,275,1.273,276,1.435,277,1.606,278,1.435,279,2.568,280,1.505,281,1.413,282,1.435,283,1.435,284,1.481,285,1.435,286,1.435,287,1.065,288,1.391,289,1.505,395,3.258,412,3.003,453,2.75,454,3.517,456,1.731,499,3.532,681,2.641,771,4.324,2268,2.541,2690,8.032,3127,8.953,3128,3.956,3129,5.809,3130,5.809,3131,7.584,3132,7.584,3133,7.584,3134,7.584,3135,6.883,3136,3.956,3137,3.956,3138,3.956,3139,3.956,3140,3.956,3141,3.956,3142,3.956,3143,3.956,3144,3.956,3145,8.078,3146,3.956,3147,8.078,3148,3.956,3149,5.809]],["title/components/MultiServiceFilterSelectorComponent.html",[174,0.805,248,1.805]],["body/components/MultiServiceFilterSelectorComponent.html",[0,0.046,2,0.035,3,0.032,4,0.026,6,0.128,7,0.452,21,0.555,22,0.4,23,0.005,24,0.265,29,0.387,31,0.7,38,0.943,47,0.806,48,0.037,54,0.052,56,1.314,57,1.8,60,0.881,62,0.857,64,0.773,66,0.848,71,2.336,79,1.225,85,1.24,86,0.002,88,1.014,98,0.809,131,0.002,132,2.546,136,0.939,140,1.289,141,1.29,143,1.128,145,4.755,166,0.593,172,0.902,174,1.245,175,1.047,176,0.971,177,1.099,178,1.099,182,0.89,183,3.213,184,3.115,185,1.081,186,1.449,189,2.103,191,0.971,192,2.103,195,1.958,196,2.258,198,0.831,199,1.631,200,1.657,201,1.631,202,2.412,203,1.099,204,1.738,205,0.929,206,1.081,207,2.156,208,1.047,209,0.709,210,3.374,211,1.047,212,1.653,213,1.535,214,1.68,215,2.839,216,1.015,217,1.031,218,1.963,219,1.031,220,1.107,221,1.279,222,1.064,223,1.099,224,1.047,225,1,226,1.047,227,1.015,228,2.156,229,1.047,230,0.971,231,1.047,232,1.582,233,1.064,234,1.064,235,1.503,236,1.099,237,1.047,238,1.047,239,1.099,240,1.047,241,2.165,242,1.047,243,1.031,244,1.047,245,0.956,246,0.956,247,1.099,248,2.3,249,2.545,250,2.628,251,3.471,252,1.047,253,2.088,254,1.099,255,1.047,256,1.099,257,1.047,258,1.099,259,1.047,260,1.297,261,1,262,1,263,1.877,264,1.047,265,1.031,266,1.047,267,2.156,268,1.047,269,0.929,270,1.081,271,1.738,272,1.047,273,1.047,274,1.064,275,0.929,276,1.047,277,1.262,278,1.047,279,0.878,280,1.099,281,1.031,282,1.047,283,1.047,284,1.081,285,1.047,286,1.047,287,0.777,288,1.015,289,1.099,293,2.306,304,1.804,347,0.674,395,2.682,412,2.361,440,1.449,453,2.162,454,2.987,456,1.263,487,2.48,546,0.971,615,4.928,621,3.553,624,1.396,653,1.609,654,2.546,717,3.182,740,1.756,748,1.926,768,2.766,879,2.739,1004,1.738,1431,5.073,1488,3.254,1489,1.396,1520,1.366,1521,1.396,1522,1.396,1552,3.556,1588,2.131,1590,2.59,1592,2.59,1708,2.131,1710,5.507,1844,1.703,1990,4.046,1991,1.458,1992,1.529,2130,1.683,2393,2.394,2399,6.654,2400,8.071,2401,7.006,2402,4.755,2403,3.687,2404,4.755,2405,3.087,2406,4.699,2407,2.394,2408,3.788,2409,3.788,2410,2.394,2411,6.086,2412,5.342,2413,2.394,2414,2.59,2415,4.755,2416,2.394,2417,7.27,2418,3.788,2419,2.59,2420,7.011,2421,6.482,2422,7.011,2423,6.482,2424,6.482,2425,2.59,2426,2.59,2427,2.59,2428,2.59,2429,2.59,2430,2.59,2431,2.248,2432,5.342,2433,3.788,2434,5.778,2435,2.248,2436,2.59,2437,2.59,2438,2.394,2439,2.59,2440,2.59,2441,2.59,2963,2.394,3150,4.097,3151,4.097,3152,4.097,3153,2.887,3154,2.887,3155,2.59,3156,2.887,3157,2.887,3158,2.59,3159,2.59,3160,2.59]],["title/injectables/NominatimGeoSearchService.html",[28,1.149,55,3.731]],["body/injectables/NominatimGeoSearchService.html",[0,0.118,1,4.874,2,0.054,3,0.049,4,0.041,5,3.47,6,0.198,7,0.627,8,3.47,9,3.976,10,3.47,11,3.976,12,3.47,13,3.976,14,3.47,15,3.976,16,3.976,17,3.976,18,3.528,19,3.47,20,3.976,21,0.692,22,0.405,23,0.005,24,0.423,25,3.47,26,5.187,27,1.879,28,1.674,29,0.597,30,4.592,31,1.08,32,4.903,33,3.352,34,3.387,35,2.154,36,4.874,37,3.849,38,2.403,39,4.727,40,2.628,41,4.673,42,4.929,43,2.304,44,4.625,45,4.625,46,4.625,47,0.786,48,0.06,49,4.673,50,3.47,51,3.47,52,3.47,53,3.47,54,0.081,55,4.673,56,1.282,57,1.846,58,5.417,59,4.929,60,1.221,61,3.437,62,0.818,63,3.976,64,1.144,65,4.711,66,1.175,67,3.47,68,2.629,69,3.47,70,3.47,71,1.616,72,3.47,73,4.46,74,4.929,75,4.46,76,3.47,77,3.47,78,3.47,79,1.33,80,4.929,81,4.673,82,3.29,83,3.47,84,3.47,85,1.386,86,0.003,87,3.47,88,1.15,89,3.47,90,4.144,91,1.782,92,3.47,93,3.47,94,3.47,95,3.47,96,3.47,97,1.879,98,2.245,99,4.929,100,3.011,101,3.47,102,3.47,103,3.976,104,3.47,105,3.47,106,3.47,107,3.47,108,4.625,109,3.47,110,3.47,111,3.47,112,2.799,113,3.47,114,3.47,115,2.799,116,3.47,117,3.47,118,2.799,119,3.47,120,3.47,121,2.799,122,3.47,123,3.47,124,3.47,125,3.47,126,3.47,127,2.799,128,3.47,129,3.47,130,3.47,131,0.003,136,1.301,141,1.149,143,1.113,149,3.849,299,3.695,347,1.04,440,1.413,2510,5.249,3161,6.329,3162,4.456,3163,4.456]],["title/interfaces/NominatimReverseResult.html",[0,0.081,49,3.731]],["body/interfaces/NominatimReverseResult.html",[0,0.13,1,5.739,2,0.055,3,0.05,4,0.041,5,3.519,6,0.2,7,0.633,8,3.519,9,4.016,10,3.519,11,4.016,12,3.519,13,4.016,14,3.519,15,4.016,16,4.016,17,4.016,18,3.564,19,3.519,20,4.016,21,0.703,22,0.458,23,0.005,24,0.424,25,3.519,26,5.228,27,1.905,28,1.454,29,0.606,30,3.663,31,1.096,32,4.136,33,3.386,34,2.968,35,2.185,36,3.888,37,3.888,38,2.422,39,3.77,40,2.665,41,4.72,42,6.628,43,2.337,44,5.551,45,5.551,46,5.551,47,0.798,48,0.06,49,5.477,50,6.281,51,6.281,52,6.281,53,6.281,54,0.082,55,3.336,56,1.301,57,1.473,58,3.054,59,3.519,60,0.872,61,2.454,62,0.594,63,2.839,64,0.89,65,4.723,66,1.187,67,3.519,68,2.65,69,3.519,70,3.519,71,1.639,72,3.519,73,3.184,74,4.979,75,4.505,76,3.519,77,3.519,78,3.519,79,1.219,80,4.979,81,4.72,82,3.336,83,3.519,84,3.519,85,1.4,86,0.003,87,3.519,88,0.869,89,3.519,90,4.17,91,1.808,92,3.519,93,3.519,94,3.519,95,3.519,96,3.519,97,1.905,98,2.26,99,4.979,100,3.054,101,3.519,102,3.519,103,2.839,104,3.519,105,3.519,106,3.519,107,3.519,108,2.839,109,3.519,110,3.519,111,3.519,112,2.839,113,3.519,114,3.519,115,2.839,116,3.519,117,3.519,118,2.839,119,3.519,120,3.519,121,2.839,122,3.519,123,3.519,124,3.519,125,3.519,126,3.519,127,2.839,128,3.519,129,3.519,130,3.519,131,0.003]],["title/interfaces/NominatimSearchResult.html",[0,0.081,41,3.731]],["body/interfaces/NominatimSearchResult.html",[0,0.132,1,4.973,2,0.056,3,0.052,4,0.042,5,3.631,6,0.207,7,0.647,8,3.631,9,4.106,10,3.631,11,4.106,12,3.631,13,4.106,14,3.631,15,4.106,16,4.106,17,4.106,18,3.643,19,3.631,20,4.106,21,0.697,22,0.427,23,0.005,24,0.428,25,3.631,26,5.317,27,1.966,28,1.486,29,0.625,30,3.745,31,1.131,32,4.207,33,4.561,34,3.019,35,2.254,36,3.974,37,3.974,38,2.464,39,3.854,40,2.75,41,5.571,42,6.706,43,3.902,44,5.608,45,5.608,46,5.608,47,1.332,48,0.061,49,4.825,50,3.631,51,3.631,52,3.631,53,3.631,54,0.084,55,3.442,56,1.342,57,1.506,58,3.151,59,3.631,60,0.899,61,2.532,62,0.608,63,2.929,64,1.033,65,4.749,66,1.214,67,3.631,68,2.695,69,3.631,70,3.631,71,1.691,72,3.631,73,3.286,74,5.089,75,4.605,76,3.631,77,3.631,78,3.631,79,1.236,80,5.089,81,4.825,82,3.442,83,3.631,84,3.631,85,1.431,86,0.004,87,3.631,88,0.888,89,3.631,90,4.229,91,1.865,92,3.631,93,3.631,94,3.631,95,3.631,96,3.631,97,1.966,98,2.291,99,5.089,100,3.151,101,3.631,102,3.631,103,2.929,104,3.631,105,3.631,106,3.631,107,3.631,108,2.929,109,3.631,110,3.631,111,3.631,112,2.929,113,3.631,114,3.631,115,2.929,116,3.631,117,3.631,118,2.929,119,3.631,120,3.631,121,2.929,122,3.631,123,3.631,124,3.631,125,3.631,126,3.631,127,2.929,128,3.631,129,3.631,130,3.631,131,0.003]],["title/injectables/NotifierService.html",[28,1.149,2373,3.731]],["body/injectables/NotifierService.html",[2,0.08,3,0.073,4,0.06,6,0.293,7,0.815,21,0.597,22,0.394,23,0.005,24,0.308,28,2.039,29,0.885,48,0.054,54,0.12,60,1.73,62,0.834,64,0.792,79,0.998,85,2.156,86,0.004,88,0.897,131,0.004,136,1.691,141,1.285,143,0.998,146,1.756,195,1.482,293,2.478,1231,5.353,1336,4.46,1378,6.075,2372,7.435,2373,6.075,3164,5.92,3165,9.386,3166,8.228,3167,8.228,3168,6.599,3169,4.65,3170,7.381,3171,5.92,3172,8.965,3173,8.228,3174,5.92,3175,6.599,3176,6.599,3177,6.599,3178,6.599,3179,6.599,3180,6.599,3181,6.599,3182,6.599,3183,6.599,3184,8.228,3185,6.599,3186,6.599,3187,6.599,3188,6.599]],["title/interfaces/Offering.html",[0,0.081,1520,2.392]],["body/interfaces/Offering.html",[0,0.148,2,0.096,3,0.088,4,0.072,23,0.005,24,0.37,48,0.064,86,0.004,131,0.004,143,1.509,172,1.464,625,3.018,1520,4.35,3189,7.931]],["title/classes/OnGoingHttpCache.html",[54,0.092,571,3.731]],["body/classes/OnGoingHttpCache.html",[2,0.074,3,0.068,4,0.056,6,0.272,22,0.438,23,0.005,24,0.367,27,2.586,34,3.981,35,2.964,47,1.082,48,0.064,54,0.157,62,0.962,64,1.096,79,1.428,86,0.004,88,1.242,97,3.312,131,0.004,136,1.614,141,1.31,143,1.381,152,4.524,171,1.334,195,2.122,326,3.373,361,2.54,369,4.061,374,6.123,375,6.107,376,3.99,378,3.853,379,5.111,381,4.528,388,4.528,389,4.528,571,5.799,578,5.741,581,4.775,587,4.831,973,3.248,1131,5.799,1907,4.528,2744,5.501,2748,5.501,2749,6.515,2750,6.515,2751,6.515,2752,6.515,3190,6.132,3191,6.132,3192,6.132,3193,6.132]],["title/interfaces/Parameter.html",[0,0.081,143,0.764]],["body/interfaces/Parameter.html",[0,0.144,2,0.092,3,0.084,4,0.069,6,0.337,7,0.887,21,0.678,22,0.429,23,0.005,24,0.355,48,0.062,86,0.004,131,0.004,143,1.355,146,2.102,166,2.023,172,1.427,625,2.892,2785,8.166,3194,7.599]],["title/classes/ParameterConstellation.html",[54,0.092,1519,2.676]],["body/classes/ParameterConstellation.html",[0,0.136,2,0.06,3,0.055,4,0.046,6,0.222,7,0.68,21,0.688,22,0.437,23,0.005,24,0.366,47,1.213,48,0.079,54,0.169,56,1.978,62,0.992,86,0.003,88,0.681,131,0.003,141,1.309,143,1.577,146,1.467,165,3.033,166,1.611,170,3.79,171,0.851,172,1.249,209,1.688,214,1.2,220,0.979,221,2.363,250,2.183,260,1.423,304,2.197,347,1.169,359,1.685,518,1.482,545,2.278,624,4.078,625,3.557,753,4.25,763,2.984,1228,2.591,1489,4.078,1491,4.57,1499,3.048,1500,4.624,1501,4.493,1502,4.834,1503,3.048,1505,5.307,1511,4.624,1518,2.794,1519,4.681,1520,3.993,1521,4.078,1522,4.078,1523,3.048,1524,4.052,1525,4.927,1526,2.872,1527,2.872,1528,2.872,1529,2.956,3195,5.012,3196,5.012,3197,5.012,3198,5.012,3199,5.012,3200,5.012]],["title/interfaces/ParameterFilter.html",[0,0.081,1488,2.553]],["body/interfaces/ParameterFilter.html",[0,0.152,2,0.081,3,0.074,4,0.061,6,0.368,7,0.821,21,0.705,22,0.473,23,0.005,48,0.073,64,1.245,86,0.004,131,0.004,140,1.519,141,0.958,171,1.646,172,1.064,250,2.439,294,5.202,524,3.696,926,4.707,927,5.732,929,3.229,1485,4.515,1486,6.876,1487,5.54,1488,4.554,1489,4.557,1490,7.341,1491,4.874,1492,7.341,1493,4.197,1494,4.515,3201,6.68]],["title/interfaces/ParsedTimespanPreset.html",[0,0.081,338,3.288]],["body/interfaces/ParsedTimespanPreset.html",[0,0.16,2,0.079,3,0.073,4,0.06,6,0.291,7,0.812,21,0.701,22,0.449,23,0.005,24,0.307,47,1.159,48,0.08,64,0.984,86,0.004,88,1.337,131,0.004,140,2.314,148,3.395,166,2.021,171,1.638,304,1.839,322,5.152,323,4.626,324,4.437,325,4.626,326,2.819,327,5.82,328,4.437,329,4.626,330,4.626,331,5.82,332,4.437,333,3.992,334,3.174,335,4.626,336,5.543,337,6.517,338,5.336]],["title/components/PermalinkInMailComponent.html",[174,0.805,252,1.833]],["body/components/PermalinkInMailComponent.html",[2,0.057,3,0.052,4,0.043,6,0.209,21,0.506,22,0.316,23,0.005,24,0.22,29,0.633,38,1.541,48,0.038,54,0.086,62,0.804,66,1.224,79,0.714,86,0.003,88,0.896,98,1.322,131,0.003,136,1.355,140,1.728,141,1.089,166,0.97,174,1.378,175,1.712,176,1.587,177,1.796,178,1.796,182,1.456,183,3.313,184,3.221,185,1.767,186,2.091,189,2.685,191,1.587,192,2.685,195,1.06,196,2.646,198,1.359,199,2.354,200,2.391,201,2.354,202,3.079,203,1.796,204,2.508,205,1.519,206,1.767,207,2.891,208,1.712,209,1.159,210,3.746,211,1.712,212,2.216,213,2.216,214,2.071,215,3.41,216,1.66,217,1.686,218,2.631,219,1.686,220,1.288,221,1.847,222,1.739,223,1.796,224,1.712,225,1.635,226,1.712,227,1.66,228,2.891,229,1.712,230,1.587,231,1.712,232,2.284,233,1.739,234,1.739,235,1.918,236,1.796,237,1.712,238,1.712,239,1.796,240,1.712,241,2.216,242,1.712,243,1.686,244,1.712,245,1.564,246,1.564,247,1.796,248,1.686,249,1.712,250,1.965,251,2.216,252,2.983,253,3.389,254,1.796,255,1.712,256,1.796,257,1.712,258,1.796,259,1.712,260,1.34,261,1.635,262,1.635,263,2.517,264,1.712,265,1.686,266,1.712,267,2.891,268,1.712,269,1.519,270,1.767,271,2.508,272,1.712,273,1.712,274,1.739,275,1.519,276,1.712,277,1.822,278,1.712,279,1.435,280,1.796,281,1.686,282,1.712,283,1.712,284,1.767,285,1.712,286,1.712,287,1.27,288,1.66,289,1.796,304,2.128,2699,7.376,2991,4.867,3202,6.819,3203,4.72,3204,7.376,3205,6.592,3206,8.222,3207,6.3,3208,4.72,3209,4.72,3210,4.72,3211,4.235,3212,4.72,3213,4.72,3214,4.235]],["title/components/PermalinkNewWindowComponent.html",[174,0.805,255,1.833]],["body/components/PermalinkNewWindowComponent.html",[2,0.056,3,0.052,4,0.042,6,0.207,21,0.502,22,0.313,23,0.005,24,0.218,29,0.624,38,1.52,48,0.038,54,0.084,62,0.8,66,1.871,79,0.704,86,0.003,88,0.887,98,1.305,131,0.003,136,1.342,140,1.715,141,1.081,166,0.957,174,1.371,175,1.689,176,1.566,177,1.772,178,1.772,182,1.436,183,3.31,184,3.219,185,1.744,186,2.072,189,2.669,191,1.566,192,2.669,195,1.046,196,2.63,198,1.34,199,2.332,200,2.369,201,2.332,202,3.06,203,1.772,204,2.485,205,1.499,206,1.744,207,2.87,208,1.689,209,1.144,210,3.738,211,1.689,212,2.2,213,2.195,214,2.06,215,3.395,216,1.638,217,1.663,218,2.612,219,1.663,220,1.276,221,1.829,222,1.716,223,1.772,224,1.689,225,1.613,226,1.689,227,1.638,228,2.87,229,1.689,230,1.566,231,1.689,232,2.262,233,1.716,234,1.716,235,1.907,236,1.772,237,1.689,238,1.689,239,1.772,240,1.689,241,2.195,242,1.689,243,1.663,244,1.689,245,1.543,246,1.543,247,1.772,248,1.663,249,1.689,250,1.951,251,2.195,252,1.689,253,3.376,254,1.772,255,2.965,256,1.772,257,1.689,258,1.772,259,1.689,260,1.322,261,1.613,262,1.613,263,2.498,264,1.689,265,1.663,266,1.689,267,2.87,268,1.689,269,1.499,270,1.744,271,2.485,272,1.689,273,1.689,274,1.716,275,1.499,276,1.689,277,1.805,278,1.689,279,1.416,280,1.772,281,1.663,282,1.689,283,1.689,284,1.744,285,1.689,286,1.689,287,1.253,288,1.638,289,1.772,304,2.113,2701,7.333,2837,4.178,2991,4.821,3202,6.779,3207,6.254,3214,4.178,3215,4.657,3216,8.174,3217,6.53,3218,8.174,3219,4.657,3220,4.657,3221,4.657,3222,4.657]],["title/classes/PermalinkService.html",[54,0.092,3223,4.533]],["body/classes/PermalinkService.html",[2,0.082,3,0.076,4,0.062,6,0.303,7,0.832,21,0.559,23,0.005,48,0.055,54,0.152,57,2.287,62,0.923,68,2.437,79,1.521,85,1.494,86,0.004,131,0.004,136,1.726,141,1.362,152,4.137,304,2.353,347,1.592,440,2.165,754,3.976,3211,6.122,3223,7.536,3224,6.824,3225,9.497,3226,9.497,3227,9.497,3228,9.497,3229,8.4,3230,6.824,3231,6.824,3232,6.824,3233,6.824,3234,8.4,3235,6.824]],["title/components/PermalinkToClipboardComponent.html",[174,0.805,257,1.833]],["body/components/PermalinkToClipboardComponent.html",[2,0.059,3,0.054,4,0.044,6,0.216,21,0.514,22,0.322,23,0.005,24,0.227,29,0.652,38,1.588,48,0.04,54,0.088,62,0.626,66,1.25,86,0.003,88,0.915,98,1.363,131,0.003,140,1.756,141,0.965,166,1,174,1.393,175,1.765,176,1.636,177,1.851,178,1.851,182,1.5,183,3.318,184,3.226,185,1.822,186,2.136,189,2.72,191,1.636,192,2.72,196,2.681,198,1.4,199,2.404,200,2.442,201,2.404,202,3.119,203,1.851,204,2.562,205,1.566,206,1.822,207,2.937,208,1.765,209,1.195,210,3.766,211,1.765,212,2.252,213,2.263,214,2.093,215,3.442,216,1.711,217,1.737,218,2.674,219,1.737,220,1.315,221,1.886,222,1.793,223,1.851,224,1.765,225,1.685,226,1.765,227,1.711,228,2.937,229,1.765,230,1.636,231,1.765,232,2.332,233,1.793,234,1.793,235,1.944,236,1.851,237,1.765,238,1.765,239,1.851,240,1.765,241,2.263,242,1.765,243,1.737,244,1.765,245,1.612,246,1.612,247,1.851,248,1.737,249,1.765,250,1.997,251,2.263,252,1.765,253,3.417,254,1.851,255,1.765,256,1.851,257,3.022,258,1.851,259,1.765,260,1.381,261,1.685,262,1.685,263,2.557,264,1.765,265,1.737,266,1.765,267,2.937,268,1.765,269,1.566,270,1.822,271,2.562,272,1.765,273,1.765,274,1.793,275,1.566,276,1.765,277,1.861,278,1.765,279,1.479,280,1.851,281,1.737,282,1.765,283,1.765,284,1.822,285,1.765,286,1.765,287,1.309,288,1.711,289,1.851,304,2.162,484,5.242,2698,6.908,2703,6.925,3202,6.402,3207,6.402,3236,4.865,3237,6.732,3238,4.865,3239,4.865]],["title/interfaces/Phenomenon.html",[0,0.081,1489,2.443]],["body/interfaces/Phenomenon.html",[0,0.148,2,0.096,3,0.088,4,0.072,23,0.005,24,0.37,48,0.064,86,0.004,131,0.004,143,1.509,172,1.464,625,3.018,1489,4.442,3240,7.931]],["title/interfaces/Platform.html",[0,0.081,260,1.435]],["body/interfaces/Platform.html",[0,0.141,2,0.088,3,0.081,4,0.067,6,0.325,7,0.868,22,0.449,23,0.005,24,0.438,48,0.059,86,0.004,98,2.725,131,0.004,143,1.47,172,1.396,220,1.943,260,2.489,625,2.786,758,6.106,763,3.701,1491,5.321,1518,4.082,3241,7.322]],["title/components/PlatformMapSelectorComponent.html",[174,0.805,259,1.833]],["body/components/PlatformMapSelectorComponent.html",[2,0.041,3,0.038,4,0.031,6,0.153,7,0.518,21,0.348,22,0.443,23,0.005,24,0.374,29,0.461,31,0.834,38,1.123,48,0.028,54,0.062,56,1.506,57,2.101,58,3.535,60,1.009,62,0.818,64,0.76,66,0.639,71,1.247,79,1.15,85,0.753,86,0.003,88,1.034,90,2.705,91,1.376,98,1.465,131,0.002,132,2.916,136,1.075,140,1.44,141,1.368,143,0.957,166,0.707,171,1.293,172,0.833,174,1.212,175,1.247,176,1.156,177,1.309,178,1.309,182,1.061,183,3.255,184,3.158,185,1.288,186,1.659,189,1.708,191,1.759,192,1.708,195,1.709,196,2.277,198,0.99,199,1.868,200,1.898,201,1.868,202,2.649,203,1.309,204,1.991,205,1.107,206,1.288,207,2.409,208,1.247,209,0.845,210,3.519,211,1.247,212,1.847,213,1.759,214,1.822,215,3.05,216,1.209,217,1.228,218,2.193,219,1.228,220,1.022,221,1.465,222,1.267,223,1.309,224,1.247,225,1.191,226,1.247,227,1.209,228,2.409,229,1.247,230,1.156,231,1.247,232,1.812,233,1.267,234,1.267,235,2.309,236,1.309,237,1.247,238,1.247,239,1.309,240,1.247,241,1.759,242,1.247,243,1.228,244,1.247,245,1.139,246,1.139,247,1.309,248,1.228,249,1.247,250,1.638,251,2.378,252,1.247,253,2.333,254,1.309,255,1.247,256,1.309,257,1.247,258,1.309,259,2.566,260,2.009,261,1.191,262,1.191,263,2.097,264,1.247,265,1.228,266,1.247,267,2.409,268,1.247,269,1.107,270,1.288,271,1.991,272,1.247,273,1.247,274,1.267,275,1.107,276,1.247,277,1.446,278,1.247,279,1.046,280,1.309,281,1.228,282,1.247,283,1.247,284,1.288,285,1.247,286,1.247,287,1.704,288,1.209,289,1.309,293,1.75,390,1.97,395,2.997,412,2.705,427,4.914,428,4.603,429,5.867,453,1.628,454,2.426,456,1.504,466,4.074,476,2.091,477,1.821,478,2.238,487,1.868,494,7.84,518,1.017,531,2.529,546,1.759,615,2.091,653,1.917,654,2.916,679,3.529,680,2.324,681,2.378,685,4.461,688,3.529,695,3.286,699,5.223,700,5.509,723,2.539,726,2.678,740,2.091,768,3.038,1043,2.324,1477,3.286,1488,1.737,1582,3.686,1588,2.539,1591,3.085,1844,5.378,2209,2.423,2292,2.423,2435,2.678,2669,6.828,2670,2.324,2893,2.852,2989,2.678,3242,7.611,3243,7.074,3244,5.679,3245,7.475,3246,4.693,3247,6.331,3248,4.693,3249,4.693,3250,4.693,3251,3.085,3252,3.085,3253,3.085,3254,3.085,3255,3.085,3256,3.085,3257,3.085,3258,3.085,3259,3.085,3260,3.085,3261,3.085,3262,6.346,3263,3.085,3264,3.085,3265,2.852,3266,3.085,3267,5.231,3268,3.439,3269,6.331,3270,3.439,3271,3.439,3272,3.439,3273,3.085,3274,3.085,3275,3.439,3276,3.439,3277,3.439,3278,3.439,3279,3.439,3280,3.439,3281,3.439,3282,3.439,3283,3.439,3284,3.085]],["title/interfaces/PlatformParameter.html",[0,0.081,1524,2.98]],["body/interfaces/PlatformParameter.html",[0,0.146,2,0.066,3,0.06,4,0.05,6,0.242,7,0.721,21,0.694,22,0.262,23,0.005,24,0.383,47,1.286,48,0.081,54,0.17,56,2.097,62,0.99,86,0.003,88,0.743,131,0.003,143,1.541,146,1.555,165,3.17,166,1.684,170,3.961,171,0.928,172,1.392,209,1.789,214,1.308,220,1.068,221,2.449,250,1.414,260,1.552,304,2.296,347,1.275,359,1.837,518,1.616,545,2.484,624,2.642,625,2.079,753,4.346,763,3.118,1228,2.825,1489,2.642,1491,5.135,1499,3.323,1500,4.833,1501,4.695,1502,5.008,1503,3.323,1505,5.413,1511,4.833,1518,3.046,1519,4.629,1520,2.587,1521,2.642,1522,2.642,1523,3.323,1524,4.833,1525,5.075,1526,3.131,1527,3.131,1528,3.131,1529,3.223]],["title/interfaces/Plot.html",[0,0.081,725,3.288]],["body/interfaces/Plot.html",[0,0.142,2,0.09,3,0.082,4,0.068,6,0.33,22,0.356,23,0.005,24,0.347,48,0.06,64,0.892,79,1.338,86,0.004,88,1.01,131,0.004,136,1.818,141,1.269,143,1.124,171,1.605,172,1.184,195,1.987,279,2.261,725,5.757,815,6.608,1336,6.384,1560,8.109,3285,7.436,3286,8.848,3287,7.436,3288,8.848,3289,7.436,3290,7.436]],["title/interfaces/PlotOptions.html",[0,0.081,861,3.731]],["body/interfaces/PlotOptions.html",[0,0.125,2,0.073,3,0.067,4,0.055,6,0.268,7,0.771,21,0.667,22,0.501,23,0.005,24,0.282,47,1.604,48,0.049,64,1.26,86,0.004,131,0.004,140,1.375,161,8.44,171,1.664,172,0.963,209,1.485,279,1.838,741,6.405,744,5.527,746,5.71,748,3.832,861,5.746,1183,4.707,1218,4.707,1387,5.909,2080,7.326,2204,6.711,3291,6.045,3292,8.154,3293,9.089,3294,8.154,3295,9.089,3296,6.045,3297,5.423,3298,7.783,3299,6.045,3300,6.045,3301,6.045,3302,6.045,3303,6.045]],["title/components/PredefinedTimespanSelectorComponent.html",[174,0.805,264,1.833]],["body/components/PredefinedTimespanSelectorComponent.html",[2,0.037,3,0.034,4,0.028,6,0.137,7,0.585,21,0.59,22,0.397,23,0.005,24,0.225,29,0.413,31,0.748,38,1.007,47,0.849,48,0.025,54,0.056,56,1.384,57,0.71,60,0.928,62,0.901,64,0.961,66,1.425,68,1.101,79,1.316,85,1.294,86,0.002,88,1.126,97,1.3,98,0.864,131,0.003,136,0.988,140,2.332,141,1.221,143,1.095,150,3.826,154,2.006,155,2.557,156,3.129,166,0.988,171,1.134,174,1.153,175,1.118,176,1.037,177,1.173,178,1.173,182,0.951,183,3.23,184,3.132,185,1.154,186,1.526,189,2.18,191,1.037,192,2.18,195,1.08,196,2.469,198,0.887,199,1.717,200,1.744,201,1.717,202,2.5,203,1.173,204,1.83,205,0.992,206,1.154,207,2.25,208,1.118,209,0.757,210,3.43,211,1.118,212,1.725,213,1.617,214,1.733,215,2.919,216,1.084,217,1.101,218,2.048,219,1.101,220,0.939,221,1.347,222,1.136,223,1.173,224,1.118,225,1.068,226,1.118,227,1.084,228,2.25,229,1.118,230,1.037,231,1.118,232,1.666,233,1.136,234,1.136,235,1.558,236,1.173,237,1.118,238,1.118,239,1.173,240,1.118,241,1.617,242,1.118,243,1.101,244,1.118,245,1.021,246,1.021,247,1.173,248,1.101,249,1.118,250,1.53,251,1.617,252,1.118,253,2.179,254,1.173,255,1.118,256,1.173,257,1.118,258,1.173,259,1.118,260,0.875,261,1.068,262,1.068,263,1.959,264,2.422,265,2.862,266,1.118,267,2.25,268,1.118,269,0.992,270,1.154,271,1.83,272,1.118,273,1.118,274,1.136,275,0.992,276,1.118,277,1.329,278,1.118,279,0.938,280,1.173,281,1.101,282,1.118,283,1.118,284,1.154,285,1.118,286,1.118,287,0.83,288,1.084,289,1.173,326,2.538,331,5.666,334,1.49,337,2.084,338,5.393,361,2.449,398,3.996,414,4.195,438,2.755,487,2.612,518,0.912,531,3.228,546,1.037,575,1.49,653,1.719,654,2.681,657,2.557,658,2.557,681,2.186,690,4.314,697,4.365,737,1.937,787,1.875,810,2.924,829,2.006,837,2.681,949,3.745,975,2.276,1004,1.83,1206,5.415,1381,2.681,1582,3.389,1710,3.389,2167,1.875,2168,1.875,2729,7.813,2797,3.988,2876,4.706,2962,2.557,3304,8.709,3305,4.809,3306,4.809,3307,4.809,3308,3.083,3309,4.314,3310,4.809,3311,4.809,3312,3.083,3313,5.991,3314,4.809,3315,3.083,3316,5.912,3317,4.809,3318,3.083,3319,4.809,3320,3.083,3321,3.083,3322,3.083,3323,3.083,3324,3.083,3325,3.083,3326,3.083,3327,3.083,3328,3.083,3329,3.083,3330,3.083,3331,3.083,3332,3.083,3333,5.912,3334,3.083,3335,3.083,3336,3.083,3337,3.083,3338,5.912,3339,4.903,3340,3.083,3341,3.083,3342,5.991,3343,3.083,3344,3.083,3345,3.083,3346,3.083,3347,3.083,3348,3.083,3349,2.401,3350,3.083,3351,3.083,3352,3.083,3353,3.083,3354,3.083,3355,4.314,3356,2.766,3357,3.083,3358,3.083,3359,2.766,3360,3.083,3361,2.766,3362,3.083,3363,2.766,3364,4.809,3365,4.809,3366,2.276,3367,3.083,3368,3.083,3369,3.083,3370,3.083,3371,3.083,3372,4.809,3373,3.083,3374,3.083,3375,3.083,3376,3.083,3377,5.912,3378,3.083,3379,3.083,3380,3.083,3381,4.809,3382,3.083,3383,3.083,3384,2.766,3385,3.083,3386,4.314,3387,2.557,3388,3.083,3389,3.083,3390,4.809,3391,3.083,3392,3.083,3393,3.083,3394,3.083,3395,3.083,3396,2.766,3397,5.912,3398,3.083,3399,3.083,3400,3.083,3401,3.083,3402,3.083,3403,3.083,3404,3.083,3405,3.083,3406,3.083,3407,3.083,3408,4.809]],["title/interfaces/PresenterHighlight.html",[0,0.081,2135,3.561]],["body/interfaces/PresenterHighlight.html",[0,0.146,2,0.093,3,0.086,4,0.07,6,0.343,7,0.897,21,0.639,22,0.434,23,0.005,47,1.695,48,0.063,86,0.004,131,0.004,165,3.831,2135,6.383,2265,7.312,3409,6.417,3410,7.738]],["title/interfaces/PresenterMessage.html",[0,0.081,1906,4.191]],["body/interfaces/PresenterMessage.html",[0,0.144,2,0.092,3,0.084,4,0.069,6,0.338,7,0.89,21,0.636,22,0.493,23,0.005,24,0.356,48,0.062,86,0.004,131,0.004,1906,7.451,1907,5.633,1908,7.83,3409,6.327,3411,7.629,3412,8.845]],["title/interfaces/Procedure.html",[0,0.081,1522,2.443]],["body/interfaces/Procedure.html",[0,0.148,2,0.096,3,0.088,4,0.072,23,0.005,24,0.37,48,0.064,86,0.004,131,0.004,143,1.509,172,1.464,625,3.018,1522,4.442,3413,7.931]],["title/interfaces/ProfileDataEntry.html",[0,0.081,759,2.817]],["body/interfaces/ProfileDataEntry.html",[0,0.162,2,0.082,3,0.075,4,0.062,6,0.301,7,0.828,21,0.648,22,0.434,23,0.005,43,3.503,47,1.75,48,0.082,54,0.123,86,0.004,91,3.79,98,2.343,131,0.004,172,1.55,347,2.344,359,3.332,524,3.021,625,2.578,638,2.497,752,4.579,753,4.124,754,3.959,755,6.164,756,5.441,757,4.12,758,4.408,759,5.057,760,6.577,761,3.996]],["title/components/ProfileEntryComponent.html",[174,0.805,266,1.833]],["body/components/ProfileEntryComponent.html",[2,0.035,3,0.032,4,0.026,6,0.127,7,0.451,21,0.613,22,0.464,23,0.005,24,0.264,29,0.385,31,0.697,38,0.938,48,0.023,54,0.052,57,1.797,60,0.878,62,0.951,64,1.092,66,1.449,68,1.026,79,1.376,85,0.996,86,0.002,88,1.183,98,0.805,131,0.002,136,0.935,140,1.592,141,1.419,143,1.259,146,1.206,165,1.112,166,0.591,171,0.96,172,0.725,174,1.115,175,1.042,176,0.966,177,1.094,178,1.094,182,0.886,183,3.203,184,3.114,185,1.076,186,1.444,189,2.642,191,2.623,192,3.086,195,1.955,196,2.068,198,0.827,199,1.625,200,1.651,201,1.625,202,2.406,203,1.094,204,1.732,205,0.925,206,1.076,207,2.15,208,1.042,209,0.706,210,3.37,211,1.042,212,1.648,213,1.53,214,1.676,215,2.834,216,1.011,217,1.026,218,1.957,219,1.026,220,1.701,221,1.275,222,1.059,223,1.094,224,1.042,225,0.996,226,1.042,227,1.011,228,2.15,229,1.042,230,0.966,231,1.042,232,1.576,233,1.059,234,1.059,235,1.499,236,1.094,237,1.042,238,1.042,239,1.094,240,1.042,241,1.899,242,1.042,243,1.026,244,1.042,245,0.952,246,0.952,247,1.094,248,1.026,249,1.042,250,1.462,251,1.53,252,1.042,253,2.082,254,1.094,255,1.042,256,1.094,257,1.042,258,1.094,259,1.042,260,0.816,261,0.996,262,0.996,263,2.76,264,1.042,265,1.026,266,2.331,267,2.15,268,1.042,269,0.925,270,1.076,271,1.732,272,1.042,273,1.042,274,1.059,275,0.925,276,1.042,277,1.258,278,1.042,279,0.874,280,1.094,281,1.026,282,1.042,283,1.042,284,1.076,285,1.042,286,1.042,287,0.774,288,1.011,289,1.094,304,1.961,361,1.885,414,3.549,518,0.85,681,2.069,691,2.961,692,2.674,748,2.709,761,1.695,768,2.759,770,3.618,865,2.11,879,2.2,891,1.647,1238,1.991,1276,3.075,1457,3.544,1491,1.486,1623,3.774,1667,1.805,1682,2.383,1841,5.861,1844,5.033,1862,4.171,2172,2.122,2381,3.36,2612,8.48,2613,2.238,2923,6.635,2925,2.238,2926,5.328,2927,4.685,2928,3.774,2929,3.774,2930,3.774,2933,4.399,2935,2.578,2938,2.383,2939,2.383,2946,2.578,3414,9.453,3415,4.082,3416,3.774,3417,6.425,3418,5.328,3419,3.774,3420,6.425,3421,4.551,3422,4.551,3423,4.082,3424,3.774,3425,5.649,3426,4.685,3427,5.649,3428,5.068,3429,4.685,3430,2.578,3431,4.551,3432,2.874,3433,2.578,3434,2.578,3435,2.578,3436,2.874,3437,2.874,3438,2.874,3439,2.578,3440,2.578,3441,2.578,3442,4.082,3443,2.874,3444,2.874,3445,2.874,3446,4.551,3447,2.874,3448,4.551,3449,2.874,3450,4.551,3451,2.874,3452,4.551,3453,2.874,3454,2.578,3455,2.578,3456,2.578,3457,2.578,3458,2.578,3459,2.874,3460,2.383,3461,2.874,3462,2.578,3463,4.551,3464,2.238,3465,2.874,3466,2.874,3467,2.874,3468,2.874,3469,2.874,3470,2.874,3471,2.874,3472,2.874,3473,2.578,3474,2.874,3475,2.578,3476,4.551,3477,4.551,3478,3.36]],["title/components/ProfileTrajectoryMapSelectorComponent.html",[174,0.805,268,1.833]],["body/components/ProfileTrajectoryMapSelectorComponent.html",[2,0.033,3,0.03,4,0.025,6,0.122,7,0.435,21,0.292,22,0.452,23,0.005,24,0.358,29,0.369,31,0.667,33,2.906,38,0.898,47,0.485,48,0.022,54,0.05,56,1.264,57,1.94,58,2.969,60,0.848,62,0.827,64,0.822,66,1.164,68,1.569,79,1.273,81,2.03,85,1.372,86,0.003,88,1.042,90,2.272,91,1.1,98,1.231,131,0.002,132,2.449,136,0.903,140,1.811,141,1.394,143,1.036,166,0.565,171,0.932,172,0.7,174,1.091,175,0.997,176,0.924,177,1.046,178,1.046,182,0.848,183,3.2,184,3.102,185,1.029,186,1.394,189,2.046,191,1.845,192,2.385,195,1.788,196,2.017,198,0.791,199,1.569,200,1.594,201,1.569,202,2.346,203,1.046,204,1.672,205,0.885,206,1.029,207,2.088,208,0.997,209,1.683,210,3.331,211,0.997,212,1.601,213,1.477,214,1.64,215,2.78,216,0.967,217,0.982,218,2.373,219,0.982,220,1.71,221,1.231,222,1.013,223,1.046,224,0.997,225,0.952,226,0.997,227,0.967,228,2.088,229,0.997,230,0.924,231,0.997,232,1.522,233,1.013,234,1.013,235,2.368,236,1.046,237,0.997,238,0.997,239,1.046,240,0.997,241,1.477,242,0.997,243,0.982,244,0.997,245,0.911,246,0.911,247,1.046,248,0.982,249,0.997,250,1.42,251,2.107,252,0.997,253,2.022,254,1.046,255,0.997,256,1.046,257,0.997,258,1.046,259,0.997,260,0.781,261,0.952,262,0.952,263,2.27,264,0.997,265,0.982,266,0.997,267,2.088,268,2.273,269,0.885,270,1.029,271,1.672,272,0.997,273,0.997,274,1.013,275,0.885,276,0.997,277,1.214,278,0.997,279,0.836,280,1.046,281,0.982,282,0.997,283,0.997,284,1.029,285,0.997,286,0.997,287,1.477,288,0.967,289,1.046,293,2.687,347,1.025,390,1.575,395,2.597,412,3.24,427,4.522,428,4.077,429,5.197,440,1.394,453,2.597,454,3.387,456,1.922,466,3.421,476,1.672,477,1.456,478,1.789,487,1.493,494,7.473,518,0.813,531,2.124,547,5.197,638,2.524,653,1.533,654,2.449,679,3.059,680,1.858,681,1.997,685,3.866,688,3.059,695,2.76,699,4.627,700,4.88,723,2.03,726,2.141,740,1.672,759,2.449,761,4.522,763,2.918,768,2.691,956,2.141,1043,1.858,1086,4.416,1137,3.421,1188,3.244,1236,2.449,1477,2.76,1488,1.389,1582,3.096,1588,2.03,1650,2.28,1844,5.072,2292,1.938,2381,2.03,2528,3.941,2670,1.858,2672,8.083,2972,2.467,3155,2.467,3158,2.467,3159,2.467,3244,4.922,3245,6.553,3246,3.941,3248,3.941,3249,3.941,3251,2.467,3252,2.467,3253,2.467,3254,2.467,3255,2.467,3257,2.467,3258,2.467,3259,2.467,3260,2.467,3261,2.467,3262,4.922,3263,2.467,3264,2.467,3265,2.28,3266,2.467,3273,2.467,3274,2.467,3284,2.467,3297,4.922,3479,9.01,3480,6.266,3481,6.266,3482,6.266,3483,4.393,3484,6.266,3485,5.487,3486,2.75,3487,2.28,3488,2.75,3489,2.75,3490,4.393,3491,2.75,3492,2.75,3493,2.75,3494,2.28,3495,7.304,3496,6.266,3497,4.393,3498,4.393,3499,2.75,3500,2.28,3501,2.75,3502,2.75,3503,2.75,3504,2.75,3505,4.393,3506,2.75,3507,2.75,3508,2.75,3509,2.75,3510,2.75,3511,2.75,3512,2.75,3513,2.75,3514,2.28,3515,2.75,3516,2.75,3517,2.75,3518,2.75,3519,2.75,3520,2.75,3521,2.75,3522,2.75,3523,4.393,3524,2.75,3525,2.75,3526,4.393,3527,2.75,3528,2.75,3529,2.75,3530,2.75,3531,2.75,3532,2.75]],["title/interfaces/Provider.html",[0,0.081,2130,1.862]],["body/interfaces/Provider.html",[0,0.153,2,0.091,3,0.083,4,0.068,6,0.334,7,0.882,21,0.676,22,0.427,23,0.005,24,0.351,48,0.072,86,0.004,131,0.004,146,2.095,172,1.198,251,2.53,304,2.75,587,4.194,1488,4.502,2130,3.498,2398,6.24,2403,4.895,2442,6.75]],["title/interfaces/RawData.html",[0,0.081,2137,3.731]],["body/interfaces/RawData.html",[0,0.112,2,0.034,3,0.031,4,0.026,6,0.125,7,0.445,21,0.577,22,0.305,23,0.005,24,0.297,29,0.379,31,0.686,47,0.793,48,0.023,54,0.051,56,0.814,57,2.032,60,0.545,62,0.592,64,0.994,66,1.373,68,3.366,71,2.918,79,0.845,85,2.127,86,0.002,88,0.384,91,1.797,108,1.776,131,0.002,140,1.022,146,1.482,153,1.776,165,1.094,171,0.48,172,1.014,174,0.715,183,0.884,184,0.86,186,0.897,189,1.467,192,1.825,195,1.907,209,0.694,212,1.31,220,1.357,235,1.048,261,0.979,262,2.205,263,2.301,277,1.242,279,1.936,293,2.535,304,1.258,326,1.214,359,1.879,361,1.171,387,1.719,476,1.719,518,2.379,524,3.786,546,2.335,575,2.171,630,1.338,638,2.964,670,1.497,675,4.865,678,1.62,679,2.504,681,1.285,682,1.667,683,1.667,688,1.576,702,2.439,746,2.822,748,2.356,754,1.338,759,4.122,763,2.814,764,2.822,765,3.398,766,1.776,768,1.929,769,2.649,770,2.083,787,1.719,814,1.911,823,3.871,828,3.871,834,1.667,835,1.776,837,3.115,840,2.731,841,1.719,859,1.397,865,2.083,866,2.731,867,1.776,874,1.776,886,1.719,887,1.719,891,1.62,893,1.667,901,1.719,911,1.719,912,1.719,915,1.719,916,2.731,919,1.719,922,1.667,940,1.62,948,1.776,950,3.036,973,2.379,981,3.036,1021,2.649,1133,2.922,1196,1.719,1197,1.776,1224,2.822,1236,1.576,1238,1.237,1247,3.511,1387,1.776,1447,1.911,1583,1.992,1663,1.992,1667,1.776,1795,4.486,1796,3.938,1841,4.223,2131,4.126,2132,2.087,2133,1.992,2134,4.142,2135,1.992,2136,1.992,2137,4.126,2138,3.316,2139,3.316,2140,3.316,2141,3.316,2142,1.992,2143,2.201,2144,2.201,2145,2.201,2146,2.201,2147,2.201,2148,2.201,2149,4.126,2150,2.201,2151,2.201,2152,2.201,2153,2.201,2154,2.201,2155,2.201,2156,2.201,2157,2.201,2158,2.201,2159,2.201,2160,2.201,2161,2.201,2162,2.201,2163,2.201,2164,4.352,2165,2.201,2166,5.758,2167,2.731,2168,2.731,2169,2.731,2170,2.201,2171,4.352,2172,2.087,2173,2.201,2174,2.201,2175,2.201,2176,2.201,2177,2.201,2178,2.201,2179,2.201,2180,2.201,2181,2.201,2182,2.201,2183,3.498,2184,2.201,2185,2.201,2186,2.201,2187,2.201,2188,2.201,2189,2.201,2190,2.201,2191,2.201,2192,2.201,2193,2.201,2194,2.201,2195,2.201,2196,2.201,2197,2.201,2198,2.201,2199,2.201,2200,2.201,2201,2.201,2202,2.201,2203,3.498,2204,3.316,2205,2.201,2206,2.201,2207,2.201,2208,2.201,2209,1.992,2210,2.087,2211,2.201,2212,2.201,2213,2.201,2214,6.453,2215,6.264,2216,5.408,2217,3.498,2218,4.352,2219,2.201,2220,2.201,2221,6.453,2222,2.201,2223,3.316,2224,3.316,2225,3.498,2226,3.498,2227,2.201,2228,3.498,2229,3.498,2230,2.201,2231,2.201,2232,3.498,2233,3.498,2234,2.201,2235,2.201,2236,2.201,2237,2.201,2238,3.498,2239,2.201,2240,1.911,2241,4.957,2242,3.498,2243,6.453,2244,2.201,2245,2.201,2246,2.201,2247,2.201,2248,3.498,2249,4.352,2250,4.352,2251,3.498,2252,4.352,2253,4.352,2254,3.498,2255,2.201,2256,2.201,2257,2.201,2258,2.201,2259,2.201,2260,2.087,2261,2.201,2262,2.201,2263,2.201,2264,2.201,2265,2.087,2266,2.201,2267,2.201,2268,1.237,2269,2.201,2270,2.201,2271,2.201,2272,2.087]],["title/classes/ReferenceValue.html",[54,0.092,753,2.297]],["body/classes/ReferenceValue.html",[0,0.136,2,0.061,3,0.056,4,0.046,6,0.225,7,0.685,21,0.697,22,0.425,23,0.005,24,0.368,47,1.222,48,0.08,54,0.17,56,1.992,62,0.992,64,1.017,86,0.003,88,0.688,131,0.003,141,1.272,143,1.516,146,1.477,165,3.05,166,1.882,170,3.811,171,1.339,172,1.256,209,2.179,214,1.213,220,0.99,221,2.374,250,1.311,260,1.438,304,2.209,347,1.182,359,1.703,518,1.498,545,3.852,624,2.449,625,3.485,753,4.338,763,3,1228,2.619,1489,2.449,1491,4.587,1499,3.08,1500,4.65,1501,4.517,1502,5.371,1503,3.08,1505,5.458,1511,4.65,1518,2.824,1519,4.488,1520,2.398,1521,2.449,1522,2.449,1523,5.153,1524,4.082,1525,4.946,1526,2.902,1527,2.902,1528,2.902,1529,2.987,3533,5.065,3534,5.065,3535,5.065,3536,5.065,3537,5.065]],["title/injectables/ReferenceValueColorCache.html",[28,1.149,2608,3.935]],["body/injectables/ReferenceValueColorCache.html",[2,0.052,3,0.048,4,0.039,21,0.63,23,0.005,24,0.337,28,1.642,29,0.576,31,1.043,48,0.05,54,0.112,56,1.238,57,2.002,60,0.829,62,0.961,66,1.465,68,2.204,79,0.65,85,1.727,86,0.003,131,0.003,146,0.918,170,2.079,172,0.983,174,0.983,183,1.345,184,1.308,186,1.364,189,2.726,192,3.045,196,2.538,209,1.937,214,2.143,220,1.631,241,1.446,277,1.706,281,1.536,293,1.995,304,1.205,357,4.534,390,4.519,395,2.921,453,2.035,454,2.862,518,2.135,545,2.805,546,2.651,621,1.955,659,4.015,681,1.955,692,3.416,702,2.335,733,3.348,753,3.585,763,2.348,767,2.906,768,2.65,770,3.347,795,2.906,796,2.906,865,1.994,888,3.348,891,2.464,988,3.348,1021,3.639,1238,1.881,1501,2.464,1502,2.464,1505,4.024,1526,2.464,1552,3.348,1667,2.701,1913,5.536,2381,6.61,2608,5.62,2613,3.348,2614,3.857,2773,4.556,2923,4.556,2925,3.348,2933,3.348,3415,3.857,3416,3.566,3418,3.566,3419,3.566,3423,3.857,3424,3.566,3426,3.566,3428,3.857,3429,3.566,3460,3.566,3464,4.805,3473,3.857,3475,3.857,3538,4.3,3539,4.3,3540,4.3,3541,3.857,3542,3.857,3543,4.3,3544,4.3,3545,4.3,3546,4.3,3547,4.3,3548,4.3,3549,4.3,3550,4.3,3551,4.3,3552,6.171,3553,4.3,3554,6.171,3555,4.3,3556,6.171,3557,4.3,3558,4.3,3559,4.3,3560,5.536,3561,4.3,3562,4.3,3563,6.171,3564,6.171,3565,4.3,3566,7.217,3567,4.3,3568,4.3,3569,6.171,3570,4.3,3571,4.3,3572,4.3,3573,4.3,3574,6.171,3575,4.3,3576,6.171,3577,4.3,3578,4.3,3579,4.3,3580,4.3,3581,4.3,3582,4.3,3583,4.3,3584,4.3,3585,4.3,3586,4.3,3587,4.3,3588,4.3,3589,4.3,3590,4.3,3591,4.3,3592,4.3,3593,4.3,3594,6.171,3595,4.3,3596,4.3,3597,4.3,3598,6.171,3599,4.3,3600,4.3,3601,3.857,3602,4.3,3603,4.3,3604,4.3,3605,4.3,3606,4.3,3607,4.3,3608,4.3,3609,4.3,3610,4.3,3611,4.3,3612,4.3]],["title/classes/ReferenceValueOption.html",[54,0.092,1835,3.731]],["body/classes/ReferenceValueOption.html",[0,0.102,2,0.077,3,0.071,4,0.058,6,0.282,7,0.797,21,0.686,22,0.385,23,0.005,47,1.636,48,0.075,54,0.168,60,1.552,62,0.977,68,2.274,71,2.31,86,0.004,131,0.004,141,1.154,146,1.978,165,3.584,171,1.574,172,1.014,209,2.486,245,2.11,246,2.11,359,2.965,367,4.304,518,2.609,545,2.895,546,2.141,692,3.808,717,3.146,744,3.872,771,5.055,788,4.304,789,4.304,792,4.304,794,4.143,929,3.078,1823,4.959,1825,4.959,1835,6.512,1839,4.959,1840,4.959,1841,3.872,1842,4.959,3613,6.368,3614,6.368]],["title/classes/ReferenceValues.html",[54,0.092,753,2.297]],["body/classes/ReferenceValues.html",[0,0.161,2,0.085,3,0.078,4,0.064,6,0.311,21,0.638,23,0.005,43,3.626,47,1.692,48,0.082,54,0.155,86,0.004,91,3.417,98,2.393,131,0.004,141,1.005,172,1.527,347,2.237,359,3.097,524,3.808,625,3.25,638,2.584,752,4.739,753,4.358,754,4.36,755,5.993,756,5.557,757,4.264,758,4.562,759,4.761,760,5.773,761,4.135,3615,7.012]],["title/components/RefreshButtonComponent.html",[174,0.805,269,1.626]],["body/components/RefreshButtonComponent.html",[2,0.045,3,0.042,4,0.034,6,0.167,7,0.554,21,0.25,22,0.397,23,0.005,24,0.261,29,0.504,31,0.912,38,1.228,47,0.988,48,0.031,54,0.068,56,1.611,57,0.866,60,1.079,62,0.877,64,0.671,66,1.039,79,1.298,86,0.003,88,1.006,98,1.054,131,0.003,136,1.15,140,1.52,141,1.352,143,0.846,166,0.773,171,0.951,174,1.26,175,1.364,176,1.265,177,1.431,178,1.431,182,1.16,183,3.268,184,3.178,185,1.408,186,1.775,189,2.416,191,1.265,192,2.416,195,2.025,196,2.546,198,1.083,199,1.998,200,2.03,201,1.998,202,2.771,203,1.431,204,2.129,205,1.21,206,1.408,207,2.543,208,1.364,209,0.924,210,3.587,211,1.364,212,1.95,213,1.881,214,1.894,215,3.155,216,1.323,217,1.343,218,2.315,219,1.343,220,1.093,221,1.568,222,1.386,223,1.431,224,1.364,225,1.303,226,1.364,227,1.323,228,2.543,229,1.364,230,1.265,231,1.364,232,1.938,233,1.386,234,1.386,235,1.727,236,1.431,237,1.364,238,1.364,239,1.431,240,1.364,241,1.881,242,1.364,243,1.343,244,1.364,245,1.246,246,1.246,247,1.431,248,1.343,249,1.364,250,1.729,251,1.881,252,1.364,253,2.462,254,1.431,255,1.364,256,1.431,257,1.364,258,1.431,259,1.364,260,1.068,261,1.303,262,1.303,263,2.214,264,1.364,265,1.343,266,1.364,267,2.543,268,1.364,269,2.382,270,3.53,271,2.129,272,1.364,273,1.364,274,1.386,275,1.21,276,1.364,277,1.547,278,1.364,279,1.144,280,1.431,281,1.343,282,1.364,283,1.364,284,1.408,285,1.364,286,1.364,287,1.012,288,1.323,289,1.431,293,2.679,326,2.869,344,6.051,395,3.163,398,4.516,412,2.893,414,4.649,453,2.649,454,3.432,456,1.645,813,2.542,1102,4.815,2566,8.548,2876,5.215,3616,9.528,3617,3.374,3618,4.641,3619,5.02,3620,7.4,3621,7.4,3622,7.4,3623,6.682,3624,3.761,3625,5.596,3626,3.374,3627,3.374,3628,3.374,3629,3.761,3630,3.761,3631,3.761,3632,3.761,3633,3.761,3634,3.761,3635,3.761,3636,6.682,3637,6.682,3638,5.596,3639,3.761,3640,6.682,3641,3.761,3642,7.4,3643,5.596,3644,3.761,3645,3.761,3646,3.761,3647,3.761,3648,3.761,3649,3.761,3650,5.596]],["title/classes/ResizableComponent.html",[54,0.092,1853,4.191]],["body/classes/ResizableComponent.html",[2,0.09,3,0.082,4,0.068,6,0.33,23,0.005,24,0.347,29,0.997,48,0.06,54,0.16,57,2.176,62,0.691,79,1.124,86,0.004,131,0.004,136,1.818,141,1.269,152,4.022,191,3.287,195,1.987,922,5.766,1853,7.338,3651,7.436,3652,9.447,3653,8.848,3654,7.436,3655,7.436,3656,7.436,3657,7.436,3658,7.436,3659,7.436,3660,7.436]],["title/interfaces/ScatterData.html",[0,0.081,2272,3.731]],["body/interfaces/ScatterData.html",[0,0.112,2,0.034,3,0.031,4,0.026,6,0.126,7,0.446,21,0.596,22,0.268,23,0.005,24,0.298,29,0.38,31,0.688,47,1.126,48,0.023,54,0.051,56,0.817,57,2.033,60,0.547,62,0.593,64,0.889,66,1.375,68,3.368,71,2.922,79,0.847,85,2.128,86,0.002,88,0.386,91,1.802,108,1.783,131,0.002,140,1.025,146,1.719,153,1.783,165,1.098,171,0.482,172,1.108,174,0.717,183,0.887,184,0.863,186,0.9,189,1.471,192,1.829,195,1.909,209,0.697,212,1.314,220,0.88,235,1.051,261,0.983,262,2.21,263,2.305,277,1.245,279,1.94,293,2.537,304,1.262,326,1.218,359,2.49,361,1.175,387,1.725,476,1.725,518,2.382,524,3.79,546,2.339,575,2.178,630,1.343,638,2.564,670,1.503,675,4.871,678,1.626,679,2.511,681,1.29,682,1.673,683,1.673,688,1.582,702,2.446,746,2.83,748,2.362,754,1.343,759,3.556,763,2.427,764,2.83,765,3.407,766,1.783,768,1.934,769,2.657,770,2.089,787,1.725,814,1.918,823,3.879,828,3.879,834,1.673,835,1.783,837,3.123,840,2.739,841,1.725,859,1.402,865,2.089,866,2.739,867,1.783,874,1.783,886,1.725,887,1.725,891,1.626,893,1.673,901,1.725,911,1.725,912,1.725,915,1.725,916,2.739,919,1.725,922,1.673,940,1.626,948,1.783,950,3.045,973,2.386,981,3.045,1021,2.657,1133,2.931,1196,1.725,1197,1.783,1224,2.83,1236,1.582,1238,1.241,1247,3.519,1387,1.783,1447,1.918,1583,2,1663,2,1667,1.783,1795,4.495,1796,3.948,1841,3.407,2131,4.136,2132,2.095,2133,2,2134,4.527,2135,2,2136,2,2137,3.326,2138,3.326,2139,3.326,2140,3.326,2141,3.326,2142,2,2143,2.21,2144,2.21,2145,2.21,2146,2.21,2147,2.21,2148,2.21,2149,4.136,2150,2.21,2151,2.21,2152,2.21,2153,2.21,2154,2.21,2155,2.21,2156,2.21,2157,2.21,2158,2.21,2159,2.21,2160,2.21,2161,2.21,2162,2.21,2163,2.21,2164,4.363,2165,2.21,2166,5.767,2167,2.739,2168,2.739,2169,2.739,2170,2.21,2171,4.363,2172,2.095,2173,2.21,2174,2.21,2175,2.21,2176,2.21,2177,2.21,2178,2.21,2179,2.21,2180,2.21,2181,2.21,2182,2.21,2183,3.508,2184,2.21,2185,2.21,2186,2.21,2187,2.21,2188,2.21,2189,2.21,2190,2.21,2191,2.21,2192,2.21,2193,2.21,2194,2.21,2195,2.21,2196,2.21,2197,2.21,2198,2.21,2199,2.21,2200,2.21,2201,2.21,2202,2.21,2203,3.508,2204,3.326,2205,2.21,2206,2.21,2207,2.21,2208,2.21,2209,2,2210,2.095,2211,2.21,2212,2.21,2213,2.21,2214,6.461,2215,6.272,2216,5.418,2217,3.508,2218,4.363,2219,2.21,2220,2.21,2221,6.461,2222,2.21,2223,3.326,2224,3.326,2225,3.508,2226,3.508,2227,2.21,2228,3.508,2229,3.508,2230,2.21,2231,2.21,2232,3.508,2233,3.508,2234,2.21,2235,2.21,2236,2.21,2237,2.21,2238,3.508,2239,2.21,2240,1.918,2241,4.968,2242,3.508,2243,6.461,2244,2.21,2245,2.21,2246,2.21,2247,2.21,2248,3.508,2249,4.363,2250,4.363,2251,3.508,2252,4.363,2253,4.363,2254,3.508,2255,2.21,2256,2.21,2257,2.21,2258,2.21,2259,2.21,2260,2.095,2261,2.21,2262,2.21,2263,2.21,2264,2.21,2265,2.095,2266,2.21,2267,2.21,2268,1.241,2269,2.21,2270,2.21,2271,2.21,2272,3.326]],["title/interfaces/SeriesOptions.html",[0,0.081,1496,4.191]],["body/interfaces/SeriesOptions.html",[0,0.154,2,0.092,3,0.085,4,0.07,6,0.34,7,0.892,21,0.51,22,0.367,23,0.005,48,0.073,64,1.08,86,0.004,131,0.004,165,2.963,171,1.625,172,1.434,638,2.823,748,4.162,815,5.177,1495,6.872,1496,7.933,1497,6.872,1498,6.872]],["title/interfaces/Service.html",[0,0.081,250,1.307]],["body/interfaces/Service.html",[0,0.148,2,0.075,3,0.069,4,0.057,6,0.277,7,0.787,21,0.702,22,0.497,23,0.005,24,0.292,47,1.78,48,0.071,64,1.166,86,0.004,131,0.004,143,1.391,146,1.965,148,4.759,166,1.892,171,1.486,172,1.267,214,1.497,220,1.222,221,1.752,250,2.058,260,1.775,490,3.802,624,3.023,625,2.379,632,5.597,1520,2.96,1521,3.023,1522,3.023,1538,5.989,2793,3.928,3661,5.186,3662,7.634,3663,7.168,3664,7.78,3665,7.634,3666,7.168,3667,5.186]],["title/components/ServiceFilterSelectorComponent.html",[174,0.805,272,1.833]],["body/components/ServiceFilterSelectorComponent.html",[2,0.038,3,0.035,4,0.029,6,0.141,7,0.488,21,0.539,22,0.428,23,0.005,24,0.282,29,0.426,31,0.771,38,1.038,48,0.026,54,0.058,56,1.417,57,1.867,58,4.073,60,0.95,62,0.888,64,0.814,66,0.914,79,1.225,86,0.003,88,1.056,91,1.271,98,0.89,131,0.002,132,3.36,136,1.012,140,1.371,141,1.347,143,1.406,145,5.012,166,0.653,171,1.024,172,0.784,174,1.29,175,1.153,176,1.068,177,1.209,178,1.209,182,0.98,183,3.237,184,3.14,185,1.19,186,1.562,189,2.216,191,1.068,192,2.216,195,1.972,196,2.608,198,0.915,199,1.758,200,1.786,201,1.758,202,2.542,203,1.209,204,1.874,205,1.023,206,1.19,207,2.294,208,1.153,209,0.781,210,3.455,211,1.153,212,1.759,213,1.655,214,1.758,215,2.956,216,1.118,217,1.135,218,2.088,219,1.135,220,0.962,221,1.379,222,1.171,223,1.209,224,1.153,225,1.101,226,1.153,227,1.118,228,2.294,229,1.153,230,1.068,231,1.153,232,1.706,233,1.171,234,1.171,235,1.584,236,1.209,237,1.153,238,1.153,239,1.209,240,1.153,241,2.282,242,1.153,243,1.135,244,1.153,245,1.053,246,1.053,247,1.209,248,1.135,249,1.153,250,2.096,251,3.466,252,1.153,253,2.221,254,1.209,255,1.153,256,1.209,257,1.153,258,1.209,259,1.153,260,0.902,261,1.101,262,1.101,263,1.997,264,1.153,265,1.135,266,1.153,267,2.294,268,1.153,269,1.023,270,1.19,271,1.874,272,2.462,273,1.153,274,1.171,275,1.023,276,1.153,277,1.361,278,1.153,279,0.966,280,1.209,281,1.135,282,1.153,283,1.153,284,1.19,285,1.153,286,1.153,287,0.855,288,1.118,289,1.209,293,2.376,390,1.821,395,2.853,412,2.546,440,1.008,453,2.331,454,3.148,456,1.39,487,2.674,518,1.456,546,1.068,615,3.665,621,3.338,624,1.536,653,1.772,654,2.745,717,3.838,740,1.933,748,2.076,768,2.915,879,2.38,1004,1.874,1431,4.927,1477,3.093,1488,3.045,1489,1.536,1520,1.504,1521,1.536,1522,1.536,1589,2.636,1598,2.475,1708,2.346,1710,5.175,1844,1.874,1990,4.264,1991,1.606,1992,1.683,2130,1.814,2404,5.012,2405,3.328,2406,4.999,2407,2.636,2408,4.083,2409,4.083,2410,2.636,2411,6.31,2412,5.629,2413,4.083,2415,4.45,2418,4.083,2421,6.091,2423,6.091,2424,6.091,2431,2.475,2432,5.629,2433,4.083,2722,7.318,2893,6.091,2915,2.636,2962,2.636,2963,4.083,2989,5.719,3150,4.417,3151,4.417,3160,2.851,3250,2.851,3309,2.851,3487,2.636,3494,2.636,3668,7.793,3669,6.027,3670,2.851,3671,3.178,3672,3.178,3673,3.178,3674,3.178,3675,3.178,3676,3.178,3677,3.178,3678,3.178,3679,3.178,3680,3.178]],["title/interfaces/ServiceQuantities.html",[0,0.081,3666,3.935]],["body/interfaces/ServiceQuantities.html",[0,0.148,2,0.075,3,0.069,4,0.057,6,0.276,7,0.785,21,0.656,22,0.486,23,0.005,24,0.291,47,1.876,48,0.071,64,1.258,86,0.004,131,0.004,143,1.319,146,1.328,148,3.217,166,1.279,171,1.057,172,0.991,214,2.199,220,1.795,221,2.574,250,1.61,260,2.609,490,3.784,624,4.442,625,2.368,632,3.784,1520,4.349,1521,4.442,1522,4.442,1538,4.049,2793,3.909,3661,5.161,3662,5.161,3663,4.846,3664,6.795,3665,5.161,3666,6.795,3667,7.62]],["title/components/ServiceSelectorComponent.html",[174,0.805,273,1.833]],["body/components/ServiceSelectorComponent.html",[2,0.038,3,0.035,4,0.029,6,0.139,7,0.483,21,0.209,22,0.439,23,0.005,24,0.28,29,0.421,31,0.762,38,1.027,47,0.862,48,0.026,54,0.057,56,1.405,57,0.724,60,0.942,62,0.924,64,0.718,66,0.907,68,1.123,71,2.928,79,1.22,86,0.002,88,0.993,91,1.258,98,0.881,131,0.002,136,1.003,140,1.362,141,1.331,143,0.905,166,0.646,171,1.241,174,1.285,175,1.14,176,1.057,177,1.196,178,1.196,182,0.97,183,3.235,184,3.137,185,1.177,186,1.549,189,2.203,191,1.057,192,2.203,195,1.096,196,2.757,198,0.905,199,1.744,200,1.771,201,1.744,202,2.527,203,1.196,204,1.858,205,1.012,206,1.177,207,2.278,208,1.14,209,0.772,210,3.446,211,1.14,212,1.747,213,1.642,214,1.749,215,2.943,216,1.106,217,1.123,218,2.074,219,1.123,220,0.954,221,1.368,222,1.159,223,1.196,224,1.14,225,1.089,226,1.14,227,1.106,228,2.278,229,1.14,230,1.057,231,1.14,232,1.691,233,1.159,234,1.159,235,1.575,236,1.196,237,1.14,238,1.14,239,1.196,240,1.14,241,2.269,242,1.14,243,1.123,244,1.14,245,1.042,246,1.042,247,1.196,248,1.123,249,1.14,250,2.662,251,2.713,252,1.14,253,2.206,254,1.196,255,1.14,256,1.196,257,1.14,258,1.196,259,1.14,260,0.893,261,1.089,262,1.089,263,1.983,264,1.14,265,1.123,266,1.14,267,2.278,268,1.14,269,1.012,270,1.177,271,1.858,272,1.14,273,2.448,274,1.159,275,1.012,276,1.14,277,1.35,278,1.14,279,0.956,280,1.196,281,1.123,282,1.14,283,1.14,284,1.177,285,1.14,286,1.14,287,0.846,288,1.106,289,1.196,304,1.368,322,3.761,327,5.032,328,4.046,347,0.734,390,1.801,398,4.046,414,4.24,440,0.997,487,2.652,518,0.93,587,2.722,615,3.64,621,1.429,653,1.753,654,2.722,681,2.22,740,1.912,748,2.059,863,6.023,879,4.378,932,2.321,938,4.662,1004,1.858,1197,1.975,1302,3.177,1431,2.969,1488,3.024,1582,3.441,1589,2.607,1593,2.821,2130,2.487,2405,3.3,2435,2.448,2718,5.71,2721,4.965,2722,7.302,2960,2.821,2989,4.662,3256,2.821,3487,4.049,3494,2.607,3668,7.777,3681,6.749,3682,4.38,3683,4.883,3684,5.986,3685,5.986,3686,5.986,3687,5.986,3688,5.986,3689,3.144,3690,2.821,3691,3.144,3692,3.144,3693,2.821,3694,4.883,3695,3.144,3696,4.883,3697,3.144,3698,3.144,3699,5.986,3700,3.144,3701,3.144,3702,3.144,3703,3.144,3704,3.144,3705,3.144,3706,3.144,3707,3.144,3708,3.144,3709,3.144,3710,3.144,3711,3.144,3712,3.144,3713,3.144,3714,3.144,3715,3.144,3716,3.144,3717,3.144,3718,3.144,3719,5.986,3720,3.144,3721,4.883,3722,4.883,3723,4.883,3724,4.883,3725,4.883,3726,4.883,3727,4.883,3728,4.883,3729,4.883,3730,4.883,3731,4.883,3732,4.883,3733,4.883,3734,4.883,3735,4.38]],["title/injectables/ServiceSelectorService.html",[28,1.149,2718,3.731]],["body/injectables/ServiceSelectorService.html",[2,0.068,3,0.063,4,0.051,6,0.251,21,0.659,22,0.399,23,0.005,24,0.45,28,1.895,29,0.758,31,2.148,34,3.683,35,3.601,48,0.046,54,0.102,57,1.302,60,1.437,62,0.775,64,1,66,1.049,79,1.392,85,1.237,86,0.003,88,1.132,91,2.26,131,0.003,132,4.152,136,1.531,141,1.195,143,1.26,171,1.265,250,2.382,251,2.978,293,2.303,304,2.7,322,6.055,324,5.034,390,3.238,518,1.671,546,1.9,620,5.249,621,2.569,622,5.069,768,3.803,932,4.172,1488,4.475,1545,4.172,1588,4.172,2718,5.499,2722,6.897,3015,4.686,3668,7.346,3736,8.332,3737,7.448,3738,5.651,3739,5.651,3740,9.639,3741,5.651,3742,7.448,3743,5.651,3744,5.651,3745,5.651,3746,5.651,3747,5.651,3748,5.651,3749,8.332,3750,5.651,3751,5.651,3752,5.651]],["title/interfaces/Settings.html",[0,0.081,326,2.17]],["body/interfaces/Settings.html",[0,0.158,2,0.074,3,0.068,4,0.056,6,0.271,7,0.775,21,0.696,22,0.485,23,0.005,24,0.285,47,1.526,48,0.078,64,1.249,86,0.004,88,1.175,131,0.004,140,2.075,148,3.156,166,1.777,171,1.602,304,1.71,322,5.731,323,4.301,324,4.125,325,4.301,326,3.362,327,6.469,328,6.165,329,6.428,330,6.428,331,6.469,332,6.165,333,5.547,334,2.95,335,6.428,336,5.292,337,5.292,338,3.971,2080,5.782]],["title/classes/SettingsService.html",[54,0.092,2876,3.561]],["body/classes/SettingsService.html",[2,0.083,3,0.076,4,0.063,6,0.306,7,0.837,22,0.405,23,0.005,24,0.322,48,0.056,54,0.153,57,2.107,60,1.764,62,0.85,64,0.828,79,1.382,86,0.004,88,0.937,131,0.004,136,1.738,141,1.367,143,1.043,152,3.136,195,1.549,293,2.528,326,4.371,440,2.188,754,4.819,2169,4.194,2260,6.752,2876,5.959,3753,6.898,3754,9.533,3755,8.456,3756,8.456,3757,6.898,3758,8.456,3759,6.898,3760,6.898]],["title/interfaces/SingleFavorite.html",[0,0.081,2296,3.415]],["body/interfaces/SingleFavorite.html",[0,0.137,2,0.062,3,0.057,4,0.047,6,0.228,7,0.692,21,0.612,22,0.246,23,0.005,24,0.326,28,1.589,29,0.688,31,1.245,48,0.069,54,0.093,57,1.183,60,0.99,62,0.89,66,1.297,71,1.862,79,1.509,85,1.951,86,0.003,131,0.003,146,1.902,166,2.036,171,1.514,172,1.264,195,1.568,220,1.365,230,3.431,235,1.988,293,2.464,438,4.882,518,2.066,531,3.376,546,2.997,763,3.643,946,3.225,959,3.469,1238,3.055,1951,4.827,2294,3.617,2295,3.79,2296,6.024,2297,3.79,2298,6.004,2299,3.225,2300,3.998,2301,3.998,2302,3.998,2303,3.998,2304,3.998,2305,5.439,2306,3.998,2307,7.16,2308,3.998,2309,3.998,2310,3.998,2311,3.998,2312,3.998,2313,3.998,2314,3.998,2315,3.998,2316,3.998,2317,3.998,2318,3.998,2319,3.998,2320,3.998,2321,3.998,2322,3.998,2323,3.998,2324,3.998,2325,3.998,2326,3.998,2327,3.998,2328,3.998,2329,3.998,2330,3.998,2331,3.998,2332,3.998,2333,3.998,2334,3.998,2335,3.998,2336,3.998,2337,3.998,2338,3.998,2339,5.439,2340,3.998,2341,3.998,2342,3.998,2343,5.439,2344,3.998,2345,3.998,2346,3.998,2347,3.79,2348,3.79]],["title/injectables/SplittedDataDatasetApiInterface.html",[28,1.149,3761,3.935]],["body/injectables/SplittedDataDatasetApiInterface.html",[2,0.063,3,0.057,4,0.047,6,0.23,21,0.614,22,0.382,23,0.005,24,0.464,28,1.814,29,0.695,30,5.283,34,3.191,48,0.042,54,0.094,57,1.838,60,1.356,62,0.742,64,1.132,65,4.323,66,0.962,79,1.352,85,1.958,86,0.003,88,0.955,91,2.073,131,0.003,136,1.445,140,2.182,141,1.008,143,1.206,146,1.703,148,4.624,150,4.028,151,3.502,156,4.574,172,0.825,220,1.012,235,1.209,311,3.256,312,4.298,347,1.64,440,1.644,524,2.31,575,3.398,587,3.919,638,3.295,753,2.356,754,2.453,770,3.967,813,4.751,865,3.967,879,4.135,1302,3.372,1381,3.919,1485,5.781,1493,5.374,1531,4.447,1573,3.652,1574,4.298,1577,4.298,1899,4.298,1990,5.374,1991,2.618,1992,2.745,2085,4.649,2086,4.649,2092,4.649,2462,4.036,2463,4.298,2787,6.661,2793,3.256,3761,5.474,3762,7.977,3763,7.157,3764,5.182,3765,5.182,3766,5.182,3767,4.649,3768,7.03,3769,5.182,3770,4.649,3771,5.182,3772,7.03,3773,5.182,3774,5.182,3775,5.182,3776,5.182,3777,5.182,3778,7.03,3779,5.182,3780,5.182,3781,5.182,3782,5.182,3783,4.649,3784,5.182,3785,5.182,3786,5.182,3787,5.182,3788,5.182,3789,5.182,3790,5.182,3791,5.182,3792,5.182]],["title/classes/Station.html",[54,0.092,221,1.416]],["body/classes/Station.html",[0,0.112,2,0.084,3,0.077,4,0.063,6,0.308,7,0.987,21,0.636,22,0.439,23,0.005,24,0.396,48,0.074,54,0.166,62,0.955,86,0.004,98,2.675,131,0.004,141,1.314,143,1.386,146,2.039,172,1.105,214,2.194,220,1.355,221,2.377,524,3.092,625,3.634,1519,4.494,3793,5.752,3794,7.602,3795,6.935,3796,6.935,3797,7.437,3798,6.935,3799,6.607]],["title/interfaces/StationProperties.html",[0,0.081,3797,3.935]],["body/interfaces/StationProperties.html",[0,0.14,2,0.087,3,0.08,4,0.066,6,0.321,7,0.925,21,0.579,22,0.347,23,0.005,24,0.407,48,0.076,54,0.158,62,0.868,86,0.004,98,2.028,131,0.004,143,1.465,146,1.545,172,1.387,214,2.458,220,1.414,221,2.028,524,3.227,625,2.754,1519,4.612,3793,6.003,3794,6.003,3797,7.272,3799,7.546]],["title/injectables/StatusCheckService.html",[28,1.149,3800,4.533]],["body/injectables/StatusCheckService.html",[2,0.051,3,0.047,4,0.038,6,0.367,7,0.602,21,0.676,22,0.436,23,0.005,24,0.365,27,1.775,28,1.622,29,0.564,34,3.995,48,0.034,54,0.129,60,1.172,62,0.918,64,1.067,66,0.782,68,2.547,79,1.502,85,1.561,86,0.003,88,1.209,91,1.684,131,0.003,136,1.605,141,1.33,143,1.345,154,5.926,195,1.365,235,0.982,293,2.604,300,4.944,304,2.906,311,2.645,312,3.491,347,0.982,396,5.04,440,1.335,487,4.241,585,5.452,587,3.976,615,2.56,620,4.282,621,1.914,740,2.56,973,3.219,1133,3.954,1238,2.658,1410,6.371,1444,5.503,1545,3.108,2793,5.421,2874,3.777,3355,5.452,3363,5.452,3735,8.65,3767,3.777,3800,5.452,3801,9.421,3802,9.421,3803,4.21,3804,6.077,3805,4.733,3806,6.077,3807,5.04,3808,6.077,3809,7.81,3810,7.81,3811,6.077,3812,6.077,3813,6.077,3814,6.077,3815,4.21,3816,7.81,3817,4.21,3818,6.077,3819,6.077,3820,4.21,3821,6.077,3822,4.21,3823,6.077,3824,4.21,3825,6.077,3826,4.21,3827,6.077,3828,4.21,3829,4.21,3830,4.21,3831,4.21,3832,6.077,3833,4.21,3834,4.21,3835,4.21,3836,4.21,3837,4.21,3838,4.21,3839,4.21,3840,4.21,3841,4.21,3842,4.21]],["title/interfaces/StatusInterval.html",[0,0.081,1525,2.817]],["body/interfaces/StatusInterval.html",[0,0.145,2,0.064,3,0.059,4,0.048,6,0.236,7,0.708,21,0.701,22,0.414,23,0.005,24,0.378,47,1.263,48,0.08,54,0.168,56,2.059,62,0.988,86,0.003,88,1.175,131,0.003,143,1.527,146,1.527,165,3.127,166,1.661,170,3.908,171,0.904,172,1.288,209,2.216,214,1.273,220,1.039,221,2.422,250,1.376,260,1.51,304,2.265,347,1.241,359,1.788,518,1.573,545,2.418,624,2.572,625,2.024,753,4.316,763,3.076,1228,4.471,1489,2.572,1491,4.665,1499,3.235,1500,4.768,1501,4.632,1502,4.954,1503,3.235,1505,5.381,1511,4.768,1518,2.966,1519,4.58,1520,2.518,1521,2.572,1522,2.572,1523,3.235,1524,4.22,1525,5.18,1526,3.048,1527,3.048,1528,3.048,1529,5.099]],["title/injectables/StatusIntervalResolverService.html",[28,1.149,2574,3.935]],["body/injectables/StatusIntervalResolverService.html",[2,0.083,3,0.076,4,0.063,6,0.305,22,0.329,23,0.005,24,0.394,28,2.077,29,0.921,47,1.612,48,0.056,54,0.125,60,1.761,62,0.849,64,0.825,79,1.275,85,1.847,86,0.004,88,0.934,131,0.004,136,1.734,141,1.21,143,1.039,347,1.969,1102,5.94,1228,3.554,1525,5.751,1529,4.976,1531,5.09,1573,4.843,1575,5.074,2574,6.57,2579,8.191,3843,6.873,3844,8.437,3845,6.873,3846,8.437,3847,6.873,3848,6.873,3849,6.873,3850,6.873,3851,6.873,3852,6.873,3853,6.873,3854,6.873]],["title/components/StringTogglerComponent.html",[174,0.805,275,1.626]],["body/components/StringTogglerComponent.html",[2,0.051,3,0.047,4,0.039,6,0.189,7,0.608,21,0.649,22,0.428,23,0.005,24,0.199,29,0.572,38,1.393,48,0.035,54,0.077,56,1.766,62,0.914,64,0.943,66,1.14,79,0.928,86,0.003,88,0.976,98,1.195,131,0.003,136,1.261,140,1.634,141,1.311,143,0.645,166,0.877,171,1.221,174,1.326,175,1.548,176,1.434,177,1.623,178,1.623,182,1.316,183,3.294,184,3.203,185,1.597,186,1.947,189,2.566,191,1.434,192,2.566,195,1.378,196,2.875,198,1.228,199,2.191,200,2.226,201,2.191,202,2.942,203,1.623,204,2.335,205,1.373,206,1.597,207,2.734,208,1.548,209,1.048,210,3.678,211,1.548,212,2.097,213,2.063,214,1.993,215,3.299,216,1.5,217,1.524,218,2.489,219,1.524,220,1.199,221,1.719,222,1.572,223,1.623,224,1.548,225,1.478,226,1.548,227,1.5,228,2.734,229,1.548,230,1.434,231,1.548,232,2.126,233,1.572,234,1.572,235,1.833,236,1.623,237,1.548,238,1.548,239,1.623,240,1.548,241,2.063,242,1.548,243,1.524,244,1.548,245,1.413,246,1.413,247,1.623,248,1.524,249,1.548,250,1.859,251,2.063,252,1.548,253,2.648,254,1.623,255,1.548,256,1.623,257,1.548,258,1.623,259,1.548,260,1.211,261,1.478,262,1.478,263,2.381,264,1.548,265,1.524,266,1.548,267,2.734,268,1.548,269,1.373,270,1.597,271,2.335,272,1.548,273,1.548,274,1.572,275,2.529,276,1.548,277,1.696,278,1.548,279,1.297,280,1.623,281,1.524,282,1.548,283,1.548,284,1.597,285,1.548,286,1.548,287,1.148,288,1.5,289,1.623,341,3.538,342,5.089,343,5.089,344,5.537,345,6.446,346,5.959,347,1.677,348,6.446,349,3.827,350,3.827,351,3.827,352,3.827,395,3.401,412,3.173,453,2.904,454,3.644,456,1.866,2486,3.538,2568,8.352,3072,7.049,3079,3.827,3855,9.309,3856,4.266,3857,4.266,3858,4.266,3859,4.266,3860,4.266,3861,4.266,3862,4.266]],["title/interfaces/SupportedMimeTypes.html",[0,0.081,3664,3.935]],["body/interfaces/SupportedMimeTypes.html",[0,0.156,2,0.087,3,0.08,4,0.066,21,0.677,22,0.345,23,0.005,24,0.337,47,1.824,48,0.076,86,0.004,131,0.004,143,1.409,146,1.539,148,3.728,166,1.482,171,1.225,172,1.148,214,1.726,220,1.409,221,2.02,250,1.866,260,2.047,490,4.385,624,3.486,625,2.744,632,4.385,1520,3.413,1521,3.486,1522,3.486,1538,4.692,2793,4.53,3661,5.98,3662,5.98,3663,5.615,3664,7.536,3665,5.98,3666,6.765,3667,5.98]],["title/injectables/Time.html",[28,1.149,277,1.397]],["body/injectables/Time.html",[2,0.049,3,0.045,4,0.037,6,0.18,21,0.567,22,0.447,23,0.005,24,0.381,28,1.587,29,0.543,47,1.622,48,0.033,54,0.107,57,0.934,60,1.141,62,0.956,64,1.121,65,2.858,66,1.633,75,4.918,79,1.533,85,2.22,86,0.003,88,1.269,97,1.709,131,0.003,136,1.215,140,2.392,141,1.357,143,1.412,150,3.388,151,2.739,156,3.847,171,1.004,195,0.91,277,1.929,293,1.929,355,4.365,357,6.013,361,3.642,390,3.388,518,1.199,546,1.363,813,6.469,859,2.921,1102,2.637,1349,4.604,1381,2.259,1950,3.361,1951,5.179,1965,2.856,1966,3.156,1967,3.361,1982,3.156,2029,7.318,2431,3.156,2462,3.156,3863,4.053,3864,5.912,3865,5.912,3866,5.912,3867,5.912,3868,7.672,3869,5.912,3870,5.912,3871,5.912,3872,5.912,3873,4.053,3874,5.912,3875,4.053,3876,5.912,3877,4.053,3878,5.912,3879,6.98,3880,4.053,3881,5.912,3882,4.053,3883,5.912,3884,4.053,3885,5.912,3886,4.053,3887,5.912,3888,4.053,3889,5.912,3890,4.053,3891,5.912,3892,4.053,3893,5.912,3894,4.053,3895,4.053,3896,4.053,3897,5.912,3898,4.053,3899,4.053,3900,6.98,3901,5.912,3902,4.053,3903,4.053,3904,4.053,3905,4.053,3906,4.053,3907,4.053,3908,4.053,3909,4.053,3910,4.053,3911,4.053,3912,5.912,3913,4.053,3914,4.053,3915,4.053,3916,4.053,3917,3.156,3918,4.053,3919,4.053,3920,4.053,3921,4.053,3922,4.053,3923,4.053]],["title/classes/TimeInterval.html",[54,0.092,357,3.175]],["body/classes/TimeInterval.html",[2,0.087,3,0.08,4,0.066,23,0.005,47,1.776,48,0.076,54,0.175,60,1.678,62,0.9,86,0.004,131,0.004,140,1.643,152,3.284,172,1.385,355,5.334,356,5.992,357,6.084,358,7.739,359,3.137,361,3.602,364,5.464,365,5.992,366,7.213,367,4.883,368,5.992]],["title/components/TimeListSelectorComponent.html",[174,0.805,276,1.833]],["body/components/TimeListSelectorComponent.html",[2,0.056,3,0.051,4,0.042,6,0.204,21,0.306,22,0.359,23,0.005,24,0.215,29,0.617,38,1.502,47,1.512,48,0.037,54,0.083,62,0.797,64,0.552,66,1.202,79,0.695,86,0.003,88,1.018,98,1.289,131,0.003,136,1.331,140,1.704,141,1.074,143,0.695,166,0.945,174,1.365,175,1.669,176,1.547,177,1.751,178,1.751,182,1.419,183,3.313,184,3.217,185,1.723,186,2.054,189,2.654,191,1.547,192,2.654,195,1.033,196,2.616,198,1.324,199,2.312,200,2.349,201,2.312,202,3.044,203,1.751,204,2.464,205,1.481,206,1.723,207,2.851,208,1.669,209,1.13,210,3.73,211,1.669,212,2.186,213,2.177,214,2.051,215,3.382,216,1.618,217,1.643,218,2.595,219,1.643,220,1.265,221,1.814,222,1.695,223,1.751,224,1.669,225,1.594,226,1.669,227,1.618,228,2.851,229,1.669,230,1.547,231,1.669,232,2.243,233,1.695,234,1.695,235,1.897,236,1.751,237,1.669,238,1.669,239,1.751,240,1.669,241,3.344,242,1.669,243,1.643,244,1.669,245,1.524,246,1.524,247,1.751,248,1.643,249,1.669,250,1.938,251,2.177,252,1.669,253,2.761,254,1.751,255,1.669,256,1.751,257,1.669,258,1.751,259,1.669,260,1.306,261,1.594,262,1.594,263,2.482,264,1.669,265,1.643,266,1.669,267,2.851,268,1.669,269,1.481,270,1.723,271,2.464,272,1.669,273,1.669,274,1.695,275,1.481,276,2.949,277,2.577,278,1.669,279,1.399,280,1.751,281,1.643,282,1.669,283,1.669,284,1.723,285,1.669,286,1.669,287,1.238,288,1.618,289,1.751,359,1.547,361,2.682,653,2.565,654,3.609,656,4.127,657,3.816,2730,7.294,3514,6.213,3670,4.127,3924,8.13,3925,6.474,3926,7.492,3927,6.474,3928,4.601,3929,5.37]],["title/injectables/TimeRangeSliderCache.html",[28,1.149,2738,3.731]],["body/injectables/TimeRangeSliderCache.html",[2,0.094,3,0.086,4,0.071,23,0.005,24,0.425,28,2.192,29,1.046,31,1.892,48,0.063,54,0.141,86,0.004,131,0.004,140,1.774,172,1.242,279,2.768,2738,6.72,2739,6.075,2740,6.47,2773,6.72,3930,7.801]],["title/components/TimeRangeSliderComponent.html",[174,0.805,278,1.833]],["body/components/TimeRangeSliderComponent.html",[2,0.042,3,0.039,4,0.032,6,0.155,7,0.525,21,0.233,22,0.414,23,0.005,24,0.358,29,0.469,31,0.849,38,1.143,47,1.675,48,0.028,54,0.063,56,1.527,57,0.807,60,1.023,62,0.909,64,0.636,66,1.189,68,1.251,79,0.529,85,0.767,86,0.002,88,0.97,98,0.981,131,0.002,136,1.09,140,1.907,141,1.268,143,0.802,146,1.366,156,5.252,166,0.72,174,1.222,175,1.27,176,1.177,177,1.333,178,1.333,182,1.08,183,3.252,184,3.162,185,1.311,186,1.683,189,2.331,191,2.152,192,2.331,195,1.191,196,2.469,198,1.008,199,1.894,200,1.924,201,1.894,202,2.674,203,1.333,204,2.018,205,1.127,206,1.311,207,2.436,208,1.27,209,0.86,210,3.533,211,1.27,212,1.868,213,1.783,214,1.837,215,3.072,216,1.232,217,1.251,218,2.218,219,1.251,220,1.036,221,1.486,222,1.291,223,1.333,224,1.27,225,1.213,226,1.27,227,1.232,228,2.436,229,1.27,230,1.177,231,1.27,232,1.837,233,1.291,234,1.291,235,1.666,236,1.333,237,1.27,238,1.27,239,1.333,240,1.27,241,1.783,242,1.27,243,1.251,244,1.27,245,2.366,246,2.366,247,1.333,248,1.251,249,1.27,250,1.656,251,1.783,252,1.27,253,2.359,254,1.333,255,1.27,256,1.333,257,1.27,258,1.333,259,1.27,260,0.994,261,1.213,262,1.213,263,2.121,264,1.27,265,1.251,266,1.27,267,2.436,268,1.27,269,1.127,270,1.311,271,2.018,272,1.27,273,1.27,274,1.291,275,1.127,276,1.27,277,2.444,278,2.59,279,3.088,280,1.333,281,1.251,282,1.27,283,1.27,284,1.311,285,1.27,286,1.27,287,0.943,288,1.232,289,1.333,346,2.904,347,1.238,361,3.577,369,2.742,395,3.03,412,2.742,440,1.111,453,2.51,454,3.311,456,1.532,569,3.142,681,2.411,767,2.367,795,3.585,796,3.585,1378,2.586,1381,4.5,1623,7.162,2559,1.561,2738,5.272,2739,7.019,2740,7.475,2743,3.142,3514,5.309,3931,3.502,3932,5.743,3933,3.502,3934,5.304,3935,5.304,3936,5.304,3937,8.072,3938,8.072,3939,5.743,3940,5.304,3941,3.502,3942,3.502,3943,3.502,3944,3.502,3945,3.502,3946,3.502,3947,3.502,3948,4.758,3949,3.502,3950,3.502,3951,3.502,3952,3.502,3953,5.304,3954,3.502,3955,5.304,3956,3.502,3957,3.502,3958,3.502,3959,7.14,3960,3.502,3961,7.14,3962,3.502,3963,3.502,3964,3.502,3965,3.502,3966,5.304,3967,3.502,3968,3.502,3969,3.502,3970,3.502]],["title/interfaces/TimeValueEntry.html",[0,0.081,756,3.288]],["body/interfaces/TimeValueEntry.html",[0,0.162,2,0.083,3,0.076,4,0.062,6,0.304,7,0.834,21,0.607,22,0.404,23,0.005,43,3.547,47,1.795,48,0.082,54,0.124,86,0.004,91,3.371,98,2.361,131,0.004,172,1.555,347,2.35,359,3.343,524,3.059,625,2.611,638,2.528,752,4.637,753,4.147,754,3.989,755,6.191,756,5.936,757,4.172,758,4.464,759,4.698,760,5.696,761,4.046]],["title/classes/TimedDatasetOptions.html",[54,0.092,1841,3.073]],["body/classes/TimedDatasetOptions.html",[0,0.078,2,0.058,3,0.054,4,0.044,6,0.215,7,0.665,21,0.674,22,0.474,23,0.005,47,1.746,48,0.068,54,0.151,60,1.486,62,0.983,64,1.176,68,2.398,71,2.435,86,0.003,88,0.659,131,0.003,141,1.428,143,0.733,146,1.034,165,3.653,171,1.68,172,1.069,209,2.409,245,1.606,246,1.606,347,2.162,359,3.175,367,3.275,440,2.939,518,2.673,545,3.781,546,2.257,692,4.745,717,4.108,744,5.057,771,5.225,788,5.621,789,5.621,792,5.621,794,5.411,929,4.02,1823,3.774,1825,6.476,1826,4.348,1835,6.14,1839,3.774,1840,3.774,1841,4.083,1842,3.774,1844,5.783,3971,6.714,3972,4.846,3973,4.846,3974,4.846,3975,4.846,3976,4.846,3977,4.846,3978,4.846,3979,4.846,3980,4.846,3981,4.846,3982,4.846]],["title/classes/Timeseries.html",[54,0.092,214,1.21]],["body/classes/Timeseries.html",[0,0.13,2,0.055,3,0.05,4,0.041,6,0.202,7,0.637,21,0.696,22,0.464,23,0.005,24,0.348,47,1.135,48,0.078,54,0.165,56,2.145,62,0.993,64,0.772,86,0.003,88,0.619,131,0.003,141,1.403,143,1.519,146,1.822,165,3.427,166,1.821,170,4.283,171,0.774,172,1.187,209,1.58,214,1.539,220,0.89,221,2.649,250,1.179,260,1.294,304,2.482,347,1.5,359,1.532,440,1.446,518,1.902,545,2.071,624,2.203,625,3.753,753,4.448,763,3.081,1228,2.356,1489,2.203,1491,4.414,1499,2.771,1500,4.395,1501,5.077,1502,5.217,1503,2.771,1505,5.454,1511,4.395,1518,2.54,1519,4.693,1520,2.157,1521,2.203,1522,2.203,1523,2.771,1524,3.793,1525,5.343,1526,4.639,1527,2.611,1528,2.611,1529,2.687,3983,4.557,3984,4.557,3985,4.557,3986,4.557,3987,4.557,3988,4.557,3989,4.557,3990,4.557,3991,4.557,3992,4.557,3993,4.557,3994,4.557]],["title/classes/TimeseriesCollection.html",[54,0.092,3799,3.935]],["body/classes/TimeseriesCollection.html",[0,0.118,2,0.089,3,0.082,4,0.067,6,0.327,7,0.729,21,0.626,23,0.005,24,0.411,48,0.076,54,0.17,62,0.875,86,0.004,98,2.063,131,0.004,141,1.056,143,1.422,146,1.572,172,1.173,214,2.252,220,1.439,221,2.063,524,3.922,625,3.348,1519,4.983,3793,6.107,3794,6.107,3797,6.851,3799,7.326,3995,7.364]],["title/interfaces/TimeseriesExtras.html",[0,0.081,1527,2.895]],["body/interfaces/TimeseriesExtras.html",[0,0.146,2,0.065,3,0.06,4,0.049,6,0.239,7,0.715,21,0.696,22,0.346,23,0.005,24,0.38,47,1.275,48,0.08,54,0.169,56,2.079,62,0.989,64,1.043,86,0.003,88,0.733,131,0.003,143,1.531,146,1.542,165,3.15,166,1.673,170,3.936,171,0.916,172,1.297,209,1.774,214,1.291,220,1.054,221,2.436,250,1.396,260,1.532,304,2.281,347,1.259,359,1.814,518,1.596,545,2.452,624,2.608,625,2.053,753,4.332,763,3.098,1228,2.789,1489,2.608,1491,4.687,1499,3.281,1500,4.802,1501,4.665,1502,4.982,1503,3.281,1505,5.398,1511,4.802,1518,3.007,1519,4.606,1520,2.554,1521,2.608,1522,2.608,1523,3.281,1524,4.26,1525,5.523,1526,3.091,1527,4.138,1528,4.982,1529,3.182]],["title/classes/Timespan.html",[54,0.092,140,1.149]],["body/classes/Timespan.html",[2,0.082,3,0.075,4,0.062,6,0.301,7,0.828,22,0.434,23,0.005,47,1.847,48,0.074,54,0.172,60,1.75,62,0.943,64,0.813,86,0.004,88,0.921,131,0.004,140,1.902,141,1.301,143,1.024,149,4.12,152,3.08,172,1.445,355,5.002,356,5.619,357,5.952,358,7.524,359,3.05,361,3.464,364,5.254,365,5.619,366,6.936,367,4.579,368,5.619,3996,6.775,3997,8.363,3998,6.775]],["title/components/TimespanButtonComponent.html",[174,0.805,282,1.833]],["body/components/TimespanButtonComponent.html",[2,0.053,3,0.048,4,0.04,6,0.194,21,0.56,22,0.403,23,0.005,24,0.292,29,0.587,31,1.062,38,1.43,48,0.036,54,0.079,57,1.009,60,1.206,62,0.837,64,0.525,66,1.161,79,1.102,86,0.003,88,0.991,98,1.227,131,0.003,136,1.285,140,2.131,141,1.254,143,0.662,166,1.797,174,1.339,175,1.588,176,1.472,177,1.666,178,1.666,182,1.35,183,3.299,184,3.208,185,1.64,186,1.983,189,2.596,191,1.472,192,2.596,195,0.983,196,2.814,198,1.26,199,2.233,200,2.268,201,2.233,202,2.977,203,1.666,204,2.379,205,1.409,206,1.64,207,2.774,208,1.588,209,1.076,210,3.696,211,1.588,212,2.127,213,2.102,214,2.013,215,3.328,216,1.54,217,1.564,218,2.526,219,1.564,220,1.221,221,1.751,222,1.614,223,1.666,224,1.588,225,1.517,226,1.588,227,1.54,228,2.774,229,1.588,230,1.472,231,1.588,232,2.166,233,1.614,234,1.614,235,1.855,236,1.666,237,1.588,238,1.588,239,1.666,240,1.588,241,2.102,242,1.588,243,1.564,244,1.588,245,1.451,246,1.451,247,1.666,248,1.564,249,1.588,250,1.886,251,2.102,252,1.588,253,2.687,254,1.666,255,1.588,256,1.666,257,1.588,258,1.666,259,1.588,260,1.243,261,1.517,262,1.517,263,2.415,264,1.588,265,2.84,266,1.588,267,2.774,268,1.588,269,1.409,270,1.64,271,2.379,272,1.588,273,1.588,274,1.614,275,1.409,276,1.588,277,1.728,278,1.588,279,1.332,280,1.666,281,1.564,282,2.885,283,1.588,284,1.64,285,1.588,286,1.588,287,1.179,288,1.54,289,1.666,531,2.117,2005,5.871,2011,6.595,2731,8.075,3617,3.928,3618,5.185,3619,5.608,3626,3.928,3627,3.928,3628,3.928,3939,6.541,3999,8.075,4000,6.193,4001,7.291,4002,4.379,4003,6.252,4004,6.252,4005,4.379,4006,4.379,4007,4.379,4008,4.379,4009,4.379,4010,4.379]],["title/interfaces/TimespanMomentTemplate.html",[0,0.081,336,3.415]],["body/interfaces/TimespanMomentTemplate.html",[0,0.162,2,0.082,3,0.076,4,0.062,6,0.303,7,0.832,21,0.703,22,0.402,23,0.005,24,0.319,47,1.204,48,0.081,86,0.004,88,1.237,131,0.004,140,2.16,148,3.528,166,1.87,171,1.546,304,1.912,322,5.277,323,4.808,324,4.612,325,4.808,326,2.93,327,5.921,328,4.612,329,4.808,330,4.808,331,5.921,332,4.612,333,4.149,334,3.299,335,4.808,336,6.151,337,5.677,338,4.44]],["title/interfaces/TimespanPreset.html",[0,0.081,331,3.288]],["body/interfaces/TimespanPreset.html",[0,0.16,2,0.079,3,0.073,4,0.06,6,0.291,7,0.812,21,0.701,22,0.449,23,0.005,24,0.307,47,1.159,48,0.08,64,0.984,86,0.004,88,1.337,131,0.004,140,2.269,148,3.395,166,2.021,171,1.638,304,1.839,322,5.152,323,4.626,324,4.437,325,4.626,326,2.819,327,5.82,328,4.437,329,4.626,330,4.626,331,6.096,332,4.437,333,3.992,334,3.174,335,4.626,336,6.332,337,6.517,338,4.272]],["title/components/TimespanShiftSelectorComponent.html",[174,0.805,283,1.833]],["body/components/TimespanShiftSelectorComponent.html",[2,0.05,3,0.046,4,0.038,6,0.183,21,0.275,22,0.371,23,0.005,24,0.28,29,0.554,31,1.002,38,1.349,48,0.034,54,0.075,57,0.952,60,1.157,62,0.893,64,0.496,66,1.311,79,1.067,86,0.003,88,0.959,98,1.158,131,0.003,136,1.232,140,2.206,141,1.268,143,0.625,166,0.849,174,1.309,175,1.499,176,1.389,177,1.572,178,1.572,182,1.274,183,3.293,184,3.197,185,1.547,186,1.902,189,2.684,191,2.016,192,2.888,195,1.585,196,2.492,198,1.189,199,2.141,200,2.175,201,2.141,202,2.899,203,1.572,204,2.282,205,1.33,206,1.547,207,2.685,208,1.499,209,1.015,210,3.656,211,1.499,212,2.059,213,2.016,214,1.968,215,3.263,216,1.453,217,1.476,218,2.445,219,1.476,220,1.171,221,1.68,222,1.523,223,1.572,224,1.499,225,1.431,226,1.499,227,1.453,228,2.685,229,1.499,230,1.389,231,1.499,232,2.077,233,1.523,234,1.523,235,1.806,236,1.572,237,1.499,238,1.499,239,1.572,240,1.499,241,2.016,242,1.499,243,1.476,244,1.499,245,1.369,246,1.369,247,1.572,248,1.476,249,1.499,250,1.826,251,2.016,252,1.499,253,2.601,254,1.572,255,1.499,256,1.572,257,1.499,258,1.572,259,1.499,260,1.173,261,1.431,262,1.431,263,2.338,264,1.499,265,1.476,266,1.499,267,2.685,268,1.499,269,1.33,270,1.547,271,2.282,272,1.499,273,1.499,274,1.523,275,1.33,276,1.499,277,2.37,278,1.499,279,1.257,280,1.572,281,1.476,282,1.499,283,2.808,284,3.793,285,1.499,286,1.499,287,1.112,288,1.453,289,1.572,361,3.207,601,6.421,653,2.304,654,3.343,697,5.21,698,3.427,702,3.256,1410,5.716,1598,3.218,2462,4.669,2463,4.973,2732,8.129,2991,5.716,3152,3.707,3690,5.379,3693,3.707,3929,6.421,3999,8.129,4011,7.057,4012,4.132,4013,4.132,4014,4.132,4015,4.132,4016,4.132,4017,4.132,4018,4.132,4019,4.132]],["title/components/TrajectoryEntryComponent.html",[174,0.805,285,1.833]],["body/components/TrajectoryEntryComponent.html",[2,0.042,3,0.039,4,0.032,6,0.155,7,0.525,21,0.637,22,0.454,23,0.005,24,0.299,29,0.469,31,0.848,38,1.142,48,0.028,54,0.063,57,1.931,60,1.022,62,0.93,64,0.968,66,1.188,79,1.305,86,0.002,88,1.139,98,0.98,131,0.002,136,1.089,140,1.455,141,1.409,143,1.159,146,1.366,166,0.719,171,0.9,172,0.844,174,1.221,175,1.269,176,1.176,177,1.331,178,1.331,182,1.079,183,3.252,184,3.162,185,1.31,186,1.681,189,2.504,191,2.4,192,2.886,195,1.985,196,2.297,198,1.007,199,1.893,200,1.923,201,1.893,202,2.672,203,1.331,204,2.017,205,1.126,206,1.31,207,2.435,208,1.269,209,0.859,210,3.532,211,1.269,212,1.867,213,1.782,214,1.836,215,3.071,216,1.231,217,1.25,218,2.904,219,1.25,220,1.789,221,1.485,222,1.289,223,1.331,224,1.269,225,1.212,226,1.269,227,1.231,228,2.435,229,1.269,230,1.176,231,1.269,232,1.836,233,1.289,234,1.289,235,1.665,236,1.331,237,1.269,238,1.269,239,1.331,240,1.269,241,2.151,242,1.269,243,1.25,244,1.269,245,1.159,246,1.159,247,1.331,248,1.25,249,1.269,250,1.655,251,1.782,252,1.269,253,2.358,254,1.331,255,1.269,256,1.331,257,1.269,258,1.331,259,1.269,260,0.993,261,1.212,262,1.212,263,2.12,264,1.269,265,1.25,266,1.269,267,2.435,268,1.269,269,1.126,270,1.31,271,2.017,272,1.269,273,1.269,274,1.289,275,1.126,276,1.269,277,1.465,278,1.269,279,1.064,280,1.331,281,1.25,282,1.269,283,1.269,284,1.31,285,2.589,286,1.269,287,0.942,288,1.231,289,1.331,304,2.148,414,4.019,691,3.448,692,4.184,748,3.009,768,3.065,770,3.887,865,2.458,891,2.005,1238,2.318,1276,3.582,1667,2.198,1844,5.315,1862,4.724,2381,2.583,2613,2.725,2615,8.084,2923,6.933,2925,2.725,2926,5.919,2927,5.306,2928,4.396,2929,4.396,2930,4.396,2932,3.139,2933,4.982,2936,3.139,2938,2.902,2939,2.902,2941,3.139,2943,3.139,3416,4.396,3418,5.919,3419,4.396,3424,5.919,3426,5.306,3429,5.306,3430,3.139,3433,3.139,3434,3.139,3435,3.139,3439,3.139,3440,3.139,3441,3.139,3442,4.755,3454,3.139,3455,3.139,3456,3.139,3457,3.139,3458,3.139,3460,2.902,3462,3.139,3464,2.725,3560,4.755,4020,9.011,4021,5.3,4022,3.499,4023,5.3]],["title/interfaces/TrajectoryResult.html",[0,0.081,3500,4.191]],["body/interfaces/TrajectoryResult.html",[0,0.145,2,0.092,3,0.085,4,0.07,6,0.339,7,0.891,22,0.431,23,0.005,24,0.357,31,1.854,48,0.062,86,0.004,131,0.004,220,1.927,638,3.635,761,5.818,763,3.754,3500,7.46,4024,7.645,4025,7.645]],["title/classes/UriParameterCoder.html",[54,0.092,2109,4.191]],["body/classes/UriParameterCoder.html",[0,0.058,2,0.044,3,0.04,4,0.033,6,0.161,21,0.702,22,0.348,23,0.005,24,0.459,26,5.764,27,1.529,30,3.745,34,4.044,48,0.044,54,0.118,56,1.881,57,1.674,60,0.699,62,0.96,64,1.22,65,4.872,66,1.011,79,1.375,86,0.003,88,0.987,131,0.003,132,3.035,134,3.252,135,3.252,136,1.119,140,1.771,141,1.042,143,1.098,146,1.997,148,5.193,151,2.45,152,4.596,172,0.577,214,0.868,220,0.708,221,1.016,250,0.938,260,1.029,311,2.278,347,1.525,364,2.278,524,2.914,574,3.679,587,2.021,624,1.752,638,1.336,768,1.557,879,1.752,1485,4.418,1488,5.074,1489,1.752,1493,6.31,1520,1.716,1521,1.752,1522,1.752,1527,2.077,1531,4.341,1532,5.75,1556,4.515,1560,3.007,1561,4.884,1562,4.884,1573,6.408,1574,3.007,1575,2.677,1576,3.252,1577,3.007,1990,3.42,1991,1.832,1992,1.92,2107,3.252,2109,5.421,2117,3.252,2118,3.252,2123,3.252,2124,3.252,3048,4.884,3763,3.252,3770,3.252,4026,6.537,4027,5.444,4028,5.444,4029,5.444,4030,5.444,4031,5.444,4032,3.625,4033,5.444,4034,3.625,4035,5.444,4036,3.625,4037,5.444,4038,3.625,4039,3.625,4040,3.625,4041,3.625,4042,3.625,4043,3.625,4044,3.625,4045,3.625,4046,3.625,4047,3.625,4048,3.625,4049,3.625,4050,5.444,4051,5.444,4052,3.625,4053,3.625,4054,3.625,4055,5.444,4056,3.625,4057,3.625,4058,5.444,4059,5.444,4060,5.444,4061,3.625,4062,3.625,4063,3.625,4064,3.625,4065,3.625,4066,3.625]],["title/interfaces/YScale.html",[0,0.081,780,3.561]],["body/interfaces/YScale.html",[0,0.076,2,0.011,3,0.011,4,0.009,6,0.194,7,0.173,18,0.529,21,0.551,22,0.084,23,0.005,24,0.204,29,0.127,31,0.23,32,1.352,34,1.205,35,0.844,47,1.623,48,0.008,54,0.017,56,0.503,57,1.341,60,0.183,62,0.369,64,0.361,65,3.911,66,0.737,68,1.686,71,3.104,79,1.189,85,1.618,86,0.001,90,0.491,91,2.637,97,1.485,100,2.951,131,0.001,140,0.685,141,0.136,146,1.528,150,1.001,153,0.596,154,0.617,156,1.959,165,2.06,166,1.445,170,3.263,171,1.216,172,0.278,174,0.386,183,0.297,184,0.289,186,0.301,189,0.792,191,1.587,192,1.15,195,1.132,196,0.562,199,0.624,200,0.88,209,1.073,212,1.027,213,1.012,214,1.045,216,0.334,220,1.52,225,1.043,227,0.334,232,0.329,235,0.407,245,1.167,246,0.579,265,0.339,277,1.979,279,2.438,287,0.948,288,0.614,293,2.615,304,0.489,326,1.512,347,0.822,359,1.335,428,0.617,438,3.952,440,0.301,456,2.444,488,2.291,489,2.797,499,2.655,518,1.95,531,3.801,532,0.739,533,0.739,534,0.739,535,0.739,536,0.739,537,0.739,545,3.069,546,2.365,575,0.459,594,0.596,596,0.596,615,0.577,621,1.601,629,0.925,630,0.449,638,2.683,659,1.578,670,3.199,673,0.669,675,4.171,676,0.669,677,0.641,678,0.544,679,0.974,681,0.431,682,0.56,683,0.56,688,0.529,692,1.425,695,0.596,702,0.948,705,1.639,724,0.669,725,1.136,728,0.739,737,0.596,741,0.669,742,2.481,743,1.36,744,0.577,745,0.669,746,1.892,748,2.355,762,0.739,763,1.146,764,1.097,765,1.475,766,0.596,767,0.641,768,0.75,769,1.03,770,0.81,771,2.212,772,4.46,773,2.92,774,0.787,775,0.787,776,0.787,777,0.787,778,2.6,779,2.345,780,3.753,781,3.72,782,3.486,783,2.012,784,2.497,785,2.012,786,2.012,787,3.794,788,2.683,789,1.18,790,1.448,791,2.012,792,1.18,793,2.012,794,1.136,795,0.641,796,0.641,797,0.787,798,5.327,799,2.497,800,4.984,801,0.787,802,0.787,803,0.787,804,0.701,805,0.701,806,0.617,807,0.787,808,0.787,809,0.787,810,1.475,811,1.36,812,2.497,813,1.18,814,0.641,815,0.641,816,0.787,817,0.701,818,0.787,819,0.787,820,0.701,821,0.701,822,0.787,823,4.105,824,2.012,825,0.787,826,0.787,827,0.787,828,3.794,829,3.635,830,3.551,831,1.448,832,0.787,833,0.669,834,1.431,835,0.596,836,0.701,837,0.974,838,1.639,839,0.669,840,1.062,841,2.655,842,0.701,843,1.289,844,4.859,845,1.791,846,1.289,847,1.289,848,0.701,849,0.701,850,0.701,851,0.701,852,0.787,853,0.701,854,0.701,855,0.787,856,0.787,857,0.787,858,0.787,859,2.76,860,1.231,861,0.701,862,0.701,863,0.739,864,0.787,865,0.81,866,1.062,867,0.596,868,1.448,869,0.787,870,1.791,871,0.787,872,0.701,873,2.6,874,1.097,875,2.6,876,1.791,877,1.289,878,2.931,879,0.844,880,1.289,881,1.289,882,0.701,883,2.92,884,1.448,885,2.012,886,0.577,887,0.577,888,0.739,889,1.448,890,0.787,891,0.544,892,0.787,893,0.56,894,0.701,895,1.448,896,0.787,897,0.787,898,0.787,899,1.448,900,0.787,901,0.577,902,1.448,903,1.448,904,2.497,905,3.292,906,1.448,907,4.179,908,1.448,909,1.448,910,3.915,911,0.577,912,0.577,913,0.787,914,2.012,915,0.577,916,1.062,917,0.701,918,0.787,919,0.577,920,0.787,921,0.787,922,0.56,923,0.787,924,0.701,925,0.641,926,0.669,927,0.577,928,1.448,929,2.111,930,0.787,931,0.787,932,0.701,933,1.289,934,0.787,935,0.787,936,0.787,937,0.787,938,1.36,939,0.787,940,0.544,941,0.739,942,0.787,943,0.787,944,1.36,945,1.448,946,1.097,947,3.077,948,0.596,949,0.739,950,1.639,951,0.787,952,0.787,953,2.497,954,0.787,955,1.448,956,0.739,957,1.448,958,0.787,959,0.641,960,0.787,961,0.787,962,0.787,963,0.787,964,0.787,965,0.787,966,0.787,967,0.787,968,0.787,969,0.787,970,0.787,971,0.787,972,0.787,973,1.865,974,0.787,975,1.791,976,0.739,977,2.38,978,0.739,979,2.012,980,0.787,981,0.641,982,0.787,983,0.787,984,0.787,985,0.787,986,0.787,987,0.787,988,1.36,989,0.787,990,0.787,991,0.787,992,1.448,993,0.787,994,2.497,995,2.012,996,0.787,997,0.787,998,0.787,999,0.701,1000,1.448,1001,0.787,1002,0.787,1003,0.787,1004,0.361,1005,2.012,1006,2.012,1007,0.787,1008,0.787,1009,0.787,1010,1.448,1011,0.787,1012,1.448,1013,0.787,1014,0.787,1015,0.787,1016,0.787,1017,0.787,1018,0.787,1019,0.787,1020,0.787,1021,2.575,1022,0.787,1023,0.787,1024,2.012,1025,0.787,1026,1.448,1027,1.448,1028,0.787,1029,0.787,1030,1.448,1031,1.448,1032,0.787,1033,0.787,1034,1.448,1035,2.223,1036,2.012,1037,3.486,1038,0.787,1039,0.787,1040,1.448,1041,0.787,1042,0.787,1043,3.775,1044,0.701,1045,2.012,1046,0.787,1047,0.787,1048,0.787,1049,1.231,1050,2.6,1051,0.701,1052,3.932,1053,3.72,1054,2.6,1055,3.72,1056,2.931,1057,1.289,1058,4.299,1059,0.787,1060,0.701,1061,0.701,1062,0.701,1063,0.701,1064,0.701,1065,1.289,1066,1.289,1067,0.701,1068,4.607,1069,3.486,1070,1.289,1071,1.289,1072,1.289,1073,1.289,1074,1.791,1075,1.289,1076,0.701,1077,2.223,1078,0.701,1079,2.223,1080,1.791,1081,1.791,1082,2.6,1083,1.289,1084,2.497,1085,0.701,1086,0.669,1087,0.701,1088,1.289,1089,0.787,1090,0.787,1091,1.448,1092,0.787,1093,0.787,1094,0.787,1095,2.012,1096,0.787,1097,0.787,1098,0.787,1099,0.787,1100,0.787,1101,0.787,1102,1.959,1103,0.787,1104,1.448,1105,0.787,1106,0.787,1107,0.787,1108,0.787,1109,0.787,1110,1.448,1111,0.787,1112,0.787,1113,0.787,1114,0.787,1115,0.787,1116,1.36,1117,0.787,1118,0.787,1119,0.787,1120,0.787,1121,0.787,1122,0.596,1123,0.787,1124,1.36,1125,1.448,1126,0.787,1127,0.787,1128,0.787,1129,1.448,1130,1.448,1131,0.701,1132,0.787,1133,0.617,1134,1.448,1135,1.725,1136,0.787,1137,0.739,1138,0.787,1139,0.787,1140,0.787,1141,1.448,1142,1.448,1143,2.497,1144,2.497,1145,3.915,1146,0.787,1147,0.787,1148,3.915,1149,3.292,1150,2.497,1151,2.497,1152,2.92,1153,0.787,1154,2.92,1155,0.787,1156,2.92,1157,2.92,1158,2.012,1159,2.92,1160,3.292,1161,2.345,1162,1.36,1163,0.787,1164,1.448,1165,0.787,1166,0.739,1167,2.92,1168,4.607,1169,0.787,1170,1.448,1171,0.787,1172,2.012,1173,2.012,1174,0.787,1175,1.448,1176,0.787,1177,1.448,1178,0.669,1179,0.787,1180,0.787,1181,0.739,1182,0.787,1183,1.36,1184,1.289,1185,0.787,1186,2.497,1187,0.787,1188,1.289,1189,0.669,1190,1.448,1191,2.92,1192,1.448,1193,0.787,1194,0.787,1195,1.448,1196,2.141,1197,1.892,1198,0.787,1199,0.787,1200,0.787,1201,0.787,1202,1.448,1203,0.723,1204,0.787,1205,0.787,1206,2.035,1207,2.497,1208,2.92,1209,1.448,1210,2.497,1211,1.791,1212,1.448,1213,1.448,1214,1.448,1215,1.448,1216,1.289,1217,0.787,1218,1.36,1219,2.6,1220,1.791,1221,1.289,1222,0.787,1223,1.791,1224,1.524,1225,1.791,1226,0.787,1227,1.791,1228,0.491,1229,0.701,1230,0.787,1231,1.136,1232,1.289,1233,3.224,1234,3.224,1235,0.701,1236,1.352,1237,0.787,1238,2.547,1239,0.787,1240,2.497,1241,1.448,1242,0.787,1243,1.448,1244,0.787,1245,2.012,1246,0.787,1247,1.524,1248,0.701,1249,0.787,1250,0.701,1251,1.289,1252,0.787,1253,0.787,1254,0.787,1255,0.701,1256,0.701,1257,0.701,1258,0.701,1259,0.787,1260,1.289,1261,0.701,1262,0.701,1263,1.448,1264,0.787,1265,1.448,1266,0.787,1267,0.787,1268,0.787,1269,0.787,1270,0.787,1271,0.787,1272,1.448,1273,0.739,1274,0.787,1275,0.787,1276,0.641,1277,0.787,1278,0.787,1279,0.787,1280,0.787,1281,0.787,1282,0.787,1283,0.787,1284,0.787,1285,0.787,1286,0.787,1287,0.787,1288,0.787,1289,0.787,1290,1.448,1291,0.787,1292,0.787,1293,0.787,1294,2.012,1295,0.787,1296,0.787,1297,0.787,1298,0.787,1299,1.448,1300,0.787,1301,0.739,1302,1.136,1303,0.701,1304,2.012,1305,0.787,1306,0.787,1307,0.787,1308,0.787,1309,1.448,1310,0.787,1311,0.739,1312,0.701,1313,0.787,1314,0.701,1315,1.448,1316,0.787,1317,1.448,1318,0.701,1319,0.701,1320,0.787,1321,0.787,1322,0.787,1323,0.787,1324,0.787,1325,0.787,1326,0.701,1327,0.787,1328,0.787,1329,0.701,1330,0.701,1331,0.787,1332,0.701,1333,0.787,1334,0.701,1335,0.787,1336,2.035,1337,1.36,1338,0.787,1339,0.701,1340,1.448,1341,1.448,1342,1.448,1343,0.787,1344,3.915,1345,0.701,1346,0.701,1347,0.787,1348,0.787,1349,0.739,1350,0.787,1351,0.787,1352,0.701,1353,1.448,1354,2.497,1355,0.787,1356,0.787,1357,0.787,1358,0.787,1359,0.787,1360,0.787,1361,1.36,1362,0.787,1363,0.787,1364,1.448,1365,0.787,1366,1.448,1367,0.787,1368,0.787,1369,0.787,1370,2.012,1371,1.448,1372,0.787,1373,1.448,1374,0.669,1375,0.787,1376,0.787,1377,1.448,1378,1.289,1379,0.701,1380,0.701,1381,1.679,1382,0.787,1383,2.497,1384,2.012,1385,1.448,1386,0.787,1387,0.596,1388,0.787,1389,2.012,1390,0.787,1391,1.448,1392,1.448,1393,1.448,1394,2.012,1395,1.448,1396,1.448,1397,0.787,1398,0.787,1399,1.448,1400,0.787,1401,0.787,1402,0.787,1403,1.791,1404,1.289,1405,0.787,1406,0.787,1407,0.701,1408,0.787,1409,0.787,1410,0.701,1411,0.739,1412,0.787,1413,0.787,1414,0.787,1415,0.787,1416,0.787,1417,2.012,1418,1.448,1419,0.787,1420,0.787,1421,0.739,1422,0.787,1423,1.289,1424,2.497,1425,2.92,1426,0.787,1427,0.787,1428,0.787,1429,2.92,1430,0.787,1431,2.414,1432,1.448,1433,1.231,1434,2.012,1435,4.299,1436,0.701,1437,3.486,1438,2.497,1439,1.448,1440,0.787,1441,1.448,1442,1.289,1443,1.448,1444,1.709,1445,0.787,1446,0.787,1447,1.18,1448,0.787,1449,0.701,1450,1.791,1451,1.289,1452,2.012,1453,1.289,1454,0.787,1455,0.701,1456,0.787,1457,1.36,1458,0.787,1459,0.787,1460,0.787,1461,0.701,1462,0.701,1463,0.787,1464,0.701,1465,0.701,1466,0.701,1467,1.791,1468,0.701,1469,2.223,1470,2.223,1471,0.701,1472,0.701,1473,0.701,1474,0.701,1475,0.701,1476,0.701,1477,0.596,1478,1.448,1479,0.787,1480,3.915,1481,0.787,1482,0.787,1483,0.787,1484,0.701]],["title/components/ZoomControlComponent.html",[174,0.805,286,1.833]],["body/components/ZoomControlComponent.html",[2,0.057,3,0.052,4,0.043,6,0.208,21,0.504,22,0.314,23,0.005,24,0.307,29,0.629,38,1.532,48,0.038,54,0.085,57,1.081,60,1.266,62,0.854,64,0.563,66,0.871,79,0.992,86,0.003,88,1.029,98,1.314,131,0.003,136,1.349,140,1.722,141,1.176,143,0.709,166,0.964,174,1.375,175,1.702,176,1.577,177,1.785,178,1.785,182,1.447,183,3.312,184,3.22,185,1.757,186,2.082,195,1.474,196,2.639,198,1.35,199,2.344,200,2.381,201,2.344,202,3.07,203,1.785,204,2.498,205,1.51,206,1.757,207,2.881,208,1.702,209,1.152,210,3.742,211,1.702,212,2.209,213,2.207,214,2.066,215,3.403,216,1.65,217,1.676,218,2.623,219,1.676,220,1.282,221,1.839,222,1.729,223,1.785,224,1.702,225,1.625,226,1.702,227,1.65,228,2.881,229,1.702,230,1.577,231,1.702,232,2.274,233,1.729,234,1.729,235,1.913,236,1.785,237,1.702,238,1.702,239,1.785,240,1.702,241,2.207,242,1.702,243,1.676,244,1.702,245,1.554,246,1.554,247,1.785,248,1.676,249,1.702,250,1.959,251,2.207,252,1.702,253,2.79,254,1.785,255,1.702,256,1.785,257,1.702,258,1.785,259,1.702,260,1.332,261,1.625,262,1.625,263,2.508,264,1.702,265,1.676,266,1.702,267,2.881,268,1.702,269,1.51,270,1.757,271,2.498,272,1.702,273,1.702,274,1.729,275,1.51,276,1.702,277,1.814,278,1.702,279,1.427,280,1.785,281,1.676,282,1.702,283,1.702,284,1.757,285,1.702,286,2.975,287,2.038,288,2.663,289,1.785,422,5.59,426,3.464,427,5.274,478,3.052,2292,3.306,4067,4.691,4068,6.564,4069,8.2,4070,8.2,4071,6.564,4072,4.691,4073,4.691,4074,4.691,4075,4.691]],["title/dependencies.html",[1203,2.519,4076,3.78]],["body/dependencies.html",[23,0.005,29,0.848,33,3.35,54,0.115,86,0.004,131,0.004,150,3.624,209,1.554,212,1.846,232,2.191,311,5.033,477,3.35,1203,2.62,1982,4.926,1988,3.624,1991,4.67,1992,3.35,2136,4.458,2559,2.82,2617,4.67,2688,5.675,2698,5.246,3265,5.246,3932,7.187,3948,5.675,4077,6.326,4078,10.107,4079,6.326,4080,8.012,4081,6.326,4082,6.326,4083,5.675,4084,8.012,4085,7.187,4086,6.326,4087,6.326,4088,6.326,4089,6.326,4090,6.326,4091,5.246,4092,5.246,4093,6.326,4094,6.326,4095,8.012,4096,6.326,4097,6.326,4098,6.326,4099,6.326,4100,6.326,4101,6.326,4102,6.326,4103,6.326,4104,6.326,4105,6.326,4106,6.326,4107,6.326,4108,6.326,4109,6.326,4110,6.326,4111,6.326,4112,6.326,4113,6.326,4114,4.926,4115,6.326,4116,6.326,4117,6.326,4118,6.326,4119,6.326,4120,6.326,4121,6.326,4122,5.675,4123,4.275,4124,6.326,4125,6.326,4126,6.326,4127,6.326,4128,6.326,4129,6.326,4130,6.326,4131,6.326,4132,6.326,4133,6.326,4134,8.012,4135,6.326,4136,6.326,4137,6.326]],["title/miscellaneous/enumerations.html",[4138,2.969,4139,5.455]],["body/miscellaneous/enumerations.html",[2,0.083,6,0.304,23,0.004,86,0.004,131,0.004,263,2.269,277,1.893,347,2.451,621,3.113,625,2.606,669,5.333,674,6.556,675,4.824,978,5.333,1178,4.826,1189,4.826,1490,6.556,1491,4.353,1500,4.965,1531,3.818,1532,5.056,1533,7.552,1539,6.982,1543,6.144,1544,6.144,1908,6.556,2006,6.144,2007,7.552,2011,6.982,2014,6.144,2015,6.144,2016,7.552,2017,7.552,2018,7.552,2019,7.552,2020,7.552,2021,7.552,2022,7.552,2023,7.552,2024,7.552,3409,5.68,3412,7.552,3663,7.098,4138,4.826,4139,6.144,4140,6.848,4141,9.509,4142,6.848,4143,9.115,4144,6.848,4145,6.848,4146,6.848,4147,8.419,4148,8.419,4149,6.848,4150,6.848,4151,6.848]],["title/miscellaneous/functions.html",[531,2.94,4138,2.969]],["body/miscellaneous/functions.html",[6,0.342,22,0.433,23,0.005,64,1.151,86,0.004,88,1.303,131,0.004,143,1.45,438,5.178,499,4.686,531,3.725,723,6.672,2294,5.43,2347,5.69,2348,5.69,4138,5.43,4152,9.037,4153,8.107,4154,9.037,4155,7.706,4156,7.706,4157,7.706,4158,7.706]],["title/index.html",[6,0.187,1381,2.349,3805,3.281]],["body/index.html",[3,0.063,4,0.052,7,0.563,23,0.005,28,1.293,34,2.991,48,0.046,86,0.004,131,0.004,150,3.257,174,0.905,235,1.326,250,1.935,334,3.615,440,1.803,489,4.006,490,5.081,546,1.911,596,3.571,599,4.006,621,2.584,829,3.699,865,3.468,929,4.039,947,4.006,973,4.426,1203,3.677,1206,3.842,1311,5.823,1381,4.169,1433,4.006,1538,6.28,1908,4.427,1965,5.269,2083,4.197,2125,1.705,2130,2.095,2405,3.842,2754,6.202,3169,5.269,3174,7.497,3366,4.197,3396,5.1,3805,4.427,4076,5.1,4122,5.1,4123,5.054,4159,5.521,4160,5.1,4161,6.708,4162,6.507,4163,5.888,4164,6.499,4165,7.497,4166,5.684,4167,6.81,4168,7.316,4169,3.842,4170,4.197,4171,5.1,4172,5.684,4173,5.684,4174,5.684,4175,7.478,4176,4.714,4177,5.684,4178,5.684,4179,4.197,4180,9.909,4181,6.17,4182,5.684,4183,7.478,4184,5.1,4185,7.478,4186,5.1,4187,5.521,4188,5.1,4189,5.684,4190,5.684,4191,7.497,4192,5.684,4193,5.684,4194,4.714,4195,7.478,4196,5.684,4197,5.1,4198,9.223,4199,7.478,4200,5.684,4201,5.684,4202,5.684,4203,8.356,4204,5.1,4205,5.684,4206,5.684,4207,6.202,4208,6.708,4209,5.1,4210,5.684,4211,5.684,4212,5.1,4213,5.684,4214,5.684,4215,5.684,4216,4.427,4217,6.202,4218,5.684,4219,4.427,4220,4.714,4221,5.684,4222,4.197,4223,7.478,4224,5.684,4225,5.684,4226,5.684,4227,5.684,4228,5.684,4229,5.684,4230,5.684,4231,5.684,4232,5.684,4233,5.684]],["title/license.html",[1381,2.349,1528,2.414,3805,3.281]],["body/license.html",[0,0.048,3,0.099,4,0.077,18,3.678,22,0.144,23,0.002,24,0.141,68,1.688,73,5.797,86,0.003,88,0.792,131,0.002,141,0.432,155,5.471,191,1.014,201,2.356,241,1.014,250,0.78,288,2.52,317,4.239,334,2.817,361,1.249,379,3.075,428,1.962,438,4.355,456,1.319,484,4.538,486,7.177,490,5.262,492,7.67,549,5.918,612,2.705,629,4.026,810,1.833,829,1.962,830,4.649,838,2.038,859,1.489,879,1.457,929,2.284,940,1.727,941,3.68,973,2.503,976,6.98,977,2.038,1004,1.147,1049,2.124,1188,2.226,1196,1.833,1197,1.894,1206,2.038,1231,3.792,1236,1.681,1301,2.348,1352,2.226,1411,4.538,1433,2.124,1444,2.124,1520,2.237,1528,5.705,1538,3.075,1824,2.226,1904,4.239,1982,2.348,2130,3.031,2142,2.124,2223,3.489,2224,2.226,2405,2.038,2828,2.705,2898,2.705,3204,2.705,3292,2.705,3313,2.705,3339,2.5,3349,2.348,3356,5.918,3359,2.705,3361,4.239,3366,2.226,3386,4.239,3387,2.5,3807,6.303,3929,2.5,4162,2.348,4169,3.194,4171,4.239,4179,4.303,4188,2.705,4191,5.918,4197,2.705,4204,4.239,4207,2.5,4209,4.239,4219,2.348,4222,2.226,4234,3.015,4235,3.015,4236,3.015,4237,3.015,4238,8.82,4239,6.597,4240,8.82,4241,5.828,4242,9.297,4243,3.919,4244,4.725,4245,8.653,4246,8.653,4247,7.164,4248,8.82,4249,8.226,4250,7.164,4251,3.015,4252,5.828,4253,7.6,4254,2.705,4255,7.6,4256,3.015,4257,4.725,4258,4.725,4259,9.534,4260,4.725,4261,3.015,4262,4.725,4263,3.015,4264,3.015,4265,2.705,4266,3.015,4267,3.015,4268,3.015,4269,5.828,4270,4.725,4271,5.828,4272,9.089,4273,3.015,4274,6.303,4275,9.089,4276,3.015,4277,2.5,4278,3.015,4279,3.015,4280,3.015,4281,3.015,4282,5.828,4283,4.725,4284,3.015,4285,9.297,4286,3.015,4287,3.015,4288,9.598,4289,3.015,4290,3.015,4291,3.015,4292,4.239,4293,3.015,4294,4.725,4295,3.015,4296,3.015,4297,6.597,4298,8.226,4299,5.137,4300,4.725,4301,7.164,4302,4.725,4303,7.164,4304,4.725,4305,3.015,4306,3.015,4307,5.228,4308,3.015,4309,4.725,4310,3.015,4311,3.015,4312,3.015,4313,4.833,4314,3.015,4315,4.725,4316,3.015,4317,5.828,4318,3.015,4319,3.015,4320,4.725,4321,7.946,4322,4.725,4323,4.725,4324,4.725,4325,4.725,4326,5.828,4327,4.725,4328,5.828,4329,4.725,4330,4.725,4331,5.828,4332,4.725,4333,3.919,4334,3.015,4335,7.946,4336,4.725,4337,4.725,4338,3.015,4339,3.015,4340,5.828,4341,5.828,4342,3.015,4343,5.828,4344,5.828,4345,3.015,4346,3.015,4347,4.725,4348,3.015,4349,3.015,4350,3.015,4351,3.015,4352,3.015,4353,3.015,4354,2.705,4355,5.828,4356,6.597,4357,3.015,4358,3.015,4359,6.597,4360,3.015,4361,3.015,4362,3.015,4363,3.015,4364,5.828,4365,4.725,4366,3.015,4367,3.015,4368,3.015,4369,3.015,4370,3.015,4371,3.015,4372,3.015,4373,3.015,4374,3.015,4375,3.015,4376,3.015,4377,3.015,4378,3.015,4379,3.015,4380,5.828,4381,3.015,4382,3.015,4383,3.015,4384,3.015,4385,3.015,4386,3.015,4387,3.015,4388,3.015,4389,3.015,4390,3.015,4391,7.6,4392,4.725,4393,5.828,4394,3.015,4395,3.015,4396,3.015,4397,3.015,4398,3.015,4399,3.015,4400,4.725,4401,2.705,4402,3.015,4403,3.015,4404,3.015,4405,3.015,4406,7.164,4407,3.015,4408,3.015,4409,4.725,4410,3.015,4411,3.015,4412,3.015,4413,7.164,4414,3.015,4415,3.015,4416,3.015,4417,3.015,4418,3.015,4419,3.015,4420,4.725,4421,3.015,4422,3.015,4423,3.015,4424,3.015,4425,3.015,4426,3.015,4427,3.015,4428,5.471,4429,3.015,4430,3.015,4431,3.015,4432,4.725,4433,3.015,4434,3.015,4435,3.015,4436,3.015,4437,3.015,4438,3.015,4439,3.015,4440,3.015]],["title/modules.html",[2125,2.072]],["body/modules.html",[23,0.004,86,0.004,131,0.004,670,4.449,1116,8.232,1433,5.919,2125,2.046,2126,5.659,2552,5.659,2558,5.314,2569,3.804,2585,5.038,2592,5.038,2601,5.038,2607,4.612,2618,5.314,2627,5.314,2643,5.314,2649,4.612,2663,5.314,2673,5.314,2681,5.314,2692,5.314,2705,5.314,2711,5.314,2723,5.314,2733,5.314,4085,9.483,4222,7.804,4441,10.605]],["title/overview.html",[213,2.323]],["body/overview.html",[0,0.052,23,0.005,28,0.738,48,0.026,54,0.059,68,1.158,86,0.002,131,0.002,174,0.516,175,2.961,198,0.933,205,3.241,208,2.961,211,2.961,213,1.09,216,2.871,217,2.915,219,2.915,222,3.008,224,2.961,231,2.961,233,3.008,234,3.008,238,2.961,240,2.961,244,2.961,248,2.915,261,2.827,269,3.241,272,2.961,273,2.961,275,3.241,277,1.687,278,2.961,287,1.346,319,2.394,427,3.6,659,3.972,770,2.831,840,1.972,1004,1.234,1203,1.343,1530,4.507,1951,3.712,1980,6.356,2005,4.507,2125,1.5,2129,1.392,2130,1.195,2268,1.419,2299,3.835,2373,4.507,2558,6.999,2559,1.446,2560,2.909,2561,2.909,2562,2.909,2569,5.644,2570,2.909,2571,2.909,2572,2.909,2573,2.909,2574,4.754,2585,6.822,2586,2.909,2587,2.909,2589,2.909,2592,6.026,2593,2.909,2594,2.909,2596,2.909,2601,7.079,2602,2.909,2604,2.909,2606,2.909,2607,5.969,2608,4.754,2618,7.346,2619,2.909,2622,2.909,2623,4.754,2627,6.878,2628,2.909,2629,2.909,2631,2.909,2634,2.909,2635,2.909,2636,2.909,2637,2.909,2638,4.507,2643,7.466,2644,2.909,2646,2.909,2648,2.909,2649,6.431,2650,4.507,2658,2.909,2661,2.909,2663,7.346,2664,2.909,2673,6.356,2674,2.909,2675,2.909,2677,2.909,2681,7.41,2682,2.909,2683,2.909,2685,2.909,2692,6.999,2693,2.909,2705,6.356,2706,2.909,2707,2.909,2709,2.909,2711,7.77,2712,2.909,2713,2.909,2715,2.909,2716,2.909,2717,4.302,2718,4.507,2723,7.196,2724,2.909,2733,6.356,2734,2.909,2735,2.909,2736,2.909,2737,2.909,2738,4.507,4442,3.243,4443,3.243,4444,3.243,4445,3.243]],["title/miscellaneous/variables.html",[4138,2.969,4446,5.043]],["body/miscellaneous/variables.html",[6,0.15,21,0.654,22,0.496,23,0.005,47,1.576,66,0.627,86,0.002,131,0.002,146,1.611,174,1.591,205,1.086,214,1.498,226,1.224,229,1.224,235,1.635,237,1.224,242,1.224,243,1.205,252,1.224,255,1.224,257,1.224,259,1.224,263,2.636,264,1.224,266,1.224,268,1.224,269,1.086,274,1.244,275,1.086,276,1.224,279,1.026,281,1.205,282,1.224,283,1.224,285,1.224,286,1.224,347,2.417,393,3.028,394,6.285,440,3.286,479,5.614,480,3.028,481,5.614,482,3.028,483,5.614,484,2.628,485,3.028,486,2.799,546,3.222,678,4.743,837,1.881,859,1.667,1236,1.881,1374,4.937,1531,2.875,1851,3.028,1852,4.626,1898,2.492,1909,3.028,2132,2.492,2133,2.378,2138,4.62,2139,4.62,2140,4.62,2141,4.62,2142,2.378,2294,2.378,2295,4.62,2296,2.281,2297,4.62,2298,2.378,2372,2.799,2445,3.028,2446,2.799,2554,4.41,2563,3.028,2609,3.028,2610,2.492,2624,3.028,2639,2.628,2651,3.028,2662,3.028,2668,3.028,2696,3.028,2728,3.028,2739,2.628,2753,2.492,2761,2.492,2788,4.277,2790,5.19,2791,2.799,2870,4.626,3082,3.028,3093,5.614,3094,3.028,3095,5.614,3096,3.028,3097,5.614,3164,3.028,3169,2.378,3170,5.614,3171,3.028,4138,2.378,4153,4.626,4179,7.706,4446,2.799,4447,3.375,4448,3.375,4449,3.375,4450,3.375,4451,3.375,4452,3.375,4453,6.258,4454,3.375,4455,10.437,4456,10.21,4457,6.258,4458,3.375,4459,3.375,4460,5.157,4461,3.375,4462,7.006,4463,6.258,4464,3.375,4465,9.584,4466,9.584,4467,3.375,4468,3.375,4469,3.375,4470,3.375,4471,3.375,4472,3.375,4473,3.375,4474,3.375,4475,3.375,4476,3.375,4477,3.375,4478,3.375,4479,3.375,4480,3.375,4481,3.375]],["title/additional-documentation/introduction.html",[4123,2.848,4299,2.848,4482,3.78]],["body/additional-documentation/introduction.html",[0,0.097,23,0.004,24,0.364,28,1.377,32,3.375,34,3.117,61,3.288,82,4.47,86,0.004,131,0.004,146,2.056,166,1.244,174,1.56,182,1.867,183,1.894,209,1.487,212,1.766,214,2.062,218,2.097,220,1.989,230,2.619,232,2.699,235,2.01,241,2.036,243,2.162,250,2.535,251,2.036,253,2.871,262,2.097,263,2.006,277,1.674,287,1.63,288,3.03,304,1.696,344,4.266,359,2.036,369,4.028,377,4.266,379,3.939,428,5.069,477,3.207,488,3.939,587,4.343,596,3.804,638,2.871,670,4.817,748,3.285,770,2.808,806,3.939,829,3.939,865,4.364,929,4.164,975,5.752,1004,2.304,1135,5.211,1238,2.648,1302,3.939,1336,4.092,1824,4.47,1907,6.36,1965,4.266,1977,4.47,2125,2.583,2136,4.266,2754,6.461,2792,6.461,2793,5.714,2796,6.461,2857,5.432,3064,5.432,3478,4.47,3618,5.021,4114,4.715,4159,4.47,4160,5.432,4161,6.989,4162,6.708,4163,4.266,4164,4.266,4165,5.432,4169,4.092,4181,4.47,4186,5.432,4222,4.47,4274,6.461,4292,5.432,4307,5.432,4333,5.021,4482,5.432,4483,6.054,4484,6.054,4485,6.054,4486,5.432,4487,6.054,4488,6.054,4489,6.054,4490,6.054,4491,6.054,4492,6.054,4493,6.054,4494,6.054,4495,5.021,4496,6.054]],["title/additional-documentation/how-tos.html",[4123,2.848,4299,2.848,4497,3.78]],["body/additional-documentation/how-tos.html",[23,0.004,66,1.679,86,0.004,88,0.914,131,0.004,172,1.071,174,1.505,212,2.429,214,2.165,241,2.262,243,2.403,326,2.889,456,3.642,488,5.884,492,4.967,588,6.035,599,4.741,621,3.058,699,4.967,806,4.377,940,3.855,1122,5.231,1135,3.855,1181,5.239,1238,2.943,1352,4.967,1381,5.041,1977,4.967,2125,2.018,2240,5.628,2991,4.967,3169,6.659,3294,6.035,4000,5.239,4159,4.967,4163,4.741,4164,6.844,4167,6.677,4168,6.148,4169,4.547,4170,4.967,4181,4.967,4184,6.035,4187,7.405,4208,8.113,4212,7.47,4216,5.239,4354,6.035,4497,8.113,4498,6.373,4499,7.891,4500,5.579,4501,6.035,4502,6.727,4503,5.239,4504,6.727,4505,6.727,4506,6.035,4507,6.727,4508,6.727,4509,6.727,4510,5.239,4511,6.727,4512,6.727,4513,6.727]],["title/additional-documentation/how-tos/integrate-a-d3-timeseries-component.html",[174,0.448,212,0.82,214,0.673,4123,1.9,4299,1.9,4498,1.981]],["body/additional-documentation/how-tos/integrate-a-d3-timeseries-component.html",[4,0.033,21,0.359,22,0.311,23,0.005,24,0.441,27,1.508,31,1.573,33,3.435,48,0.053,54,0.098,56,2.078,60,0.69,61,1.943,62,0.785,64,0.866,66,1.438,68,1.278,71,2.618,79,0.541,86,0.003,91,2.888,131,0.003,140,1.921,141,0.773,171,0.608,172,0.57,174,1.443,184,1.639,201,2.766,209,2.185,212,2.686,214,2.169,220,1.513,235,1.258,245,2.565,246,2.565,279,1.972,287,0.963,300,3.716,326,3.099,334,4.45,347,1.807,385,4.197,387,2.176,440,1.71,456,3.158,487,1.943,490,5.136,492,4.788,518,1.058,531,4.202,546,2.18,594,2.248,595,4.197,596,2.248,599,3.798,621,1.626,638,2.39,670,4.8,675,4.981,692,3.07,705,4.383,717,1.767,718,3.21,725,2.328,737,2.248,741,2.521,744,2.176,745,3.798,748,3.265,768,2.785,794,2.328,800,2.641,805,3.98,806,5.038,810,2.176,811,2.786,828,5.409,829,2.328,830,3.798,834,2.11,844,2.786,859,1.767,860,5.457,865,1.659,879,3.934,929,2.606,940,2.05,947,4.57,973,4.711,977,2.418,1004,1.361,1049,2.521,1122,4.074,1124,2.786,1135,2.05,1161,2.786,1162,2.786,1166,4.197,1203,3.684,1238,2.837,1303,3.98,1336,3.643,1337,2.786,1361,2.786,1374,2.521,1381,4.024,1387,3.386,1824,3.98,1991,3.912,1992,1.895,1996,2.967,2125,1.073,2128,2.45,2129,1.536,2130,3.203,2210,2.641,2240,2.418,2557,4.197,2559,1.595,2585,4.788,2599,3.98,3169,5.952,3339,4.47,3342,3.21,3349,2.786,3366,2.641,3387,2.967,3478,3.98,3761,5.05,3783,3.21,3917,5.05,4000,2.786,4091,4.47,4092,5.378,4114,2.786,4159,3.98,4162,2.786,4163,2.521,4164,2.521,4167,2.641,4168,4.788,4169,5.708,4170,2.641,4176,4.47,4179,2.641,4181,3.98,4187,5.329,4194,4.47,4207,2.967,4216,2.786,4217,2.967,4219,5.05,4220,2.967,4243,2.967,4274,2.967,4277,2.967,4299,2.418,4313,2.967,4401,3.21,4428,2.967,4446,4.47,4495,2.967,4498,5.087,4499,6.926,4500,2.967,4503,5.621,4510,4.197,4514,2.967,4515,3.21,4516,4.835,4517,3.578,4518,3.578,4519,5.39,4520,3.21,4521,4.835,4522,4.835,4523,3.21,4524,3.21,4525,3.21,4526,3.21,4527,4.835,4528,3.21,4529,5.378,4530,3.21,4531,3.21,4532,3.21,4533,3.21,4534,3.21,4535,3.21,4536,3.21,4537,3.21,4538,3.21,4539,3.21,4540,3.21,4541,3.21,4542,3.21,4543,3.21,4544,3.21,4545,3.21,4546,3.21,4547,3.21,4548,3.21,4549,3.21,4550,3.578,4551,3.578,4552,3.21,4553,4.835,4554,3.578,4555,3.578,4556,3.578,4557,3.21,4558,3.578,4559,4.835,4560,3.578,4561,3.578,4562,3.578,4563,3.578,4564,3.578,4565,3.578,4566,3.578,4567,5.39,4568,3.578,4569,3.578,4570,3.578,4571,5.39,4572,3.578,4573,3.578,4574,3.578,4575,3.578,4576,3.21,4577,3.578,4578,3.21,4579,3.21,4580,3.578,4581,3.578,4582,3.578,4583,6.485,4584,3.578,4585,3.578]],["title/additional-documentation/how-tos/integrate-a-table-component.html",[174,0.504,1977,2.335,4123,2.137,4299,2.137,4498,2.228]],["body/additional-documentation/how-tos/integrate-a-table-component.html",[4,0.039,22,0.346,23,0.005,24,0.452,27,1.813,31,1.496,33,3.823,48,0.059,54,0.112,56,2.077,60,0.829,61,2.335,62,0.671,64,0.516,66,1.614,68,1.536,71,1.56,79,0.65,85,0.941,86,0.003,91,1.72,131,0.003,140,1.794,141,1.131,143,0.65,146,0.918,172,0.685,174,1.459,184,1.876,201,2.817,209,1.773,220,1.631,235,1.44,300,4.135,326,2.65,334,4.428,456,1.881,487,2.335,490,5.078,492,5.329,531,4.202,594,2.701,595,4.805,596,2.701,599,4.348,621,3.281,638,1.584,691,2.798,692,3.953,717,2.124,768,3.099,805,3.175,806,4.696,810,2.615,837,3.44,859,2.124,860,5.086,879,4.202,940,2.464,973,4.742,977,2.906,1004,1.636,1049,3.03,1122,4.534,1135,3.536,1203,3.92,1303,3.175,1381,4.396,1824,3.175,1977,7.147,1991,4.219,1992,2.277,1996,3.566,2125,1.851,2128,2.805,2129,1.846,2130,3.203,2240,4.17,2557,4.805,2559,1.917,2592,5.329,2599,4.556,2633,3.348,2793,2.701,3169,6.125,3349,3.348,3366,3.175,3478,4.556,3761,5.62,3917,5.62,4091,5.118,4092,5.986,4114,3.348,4159,4.556,4163,3.03,4164,3.03,4167,3.175,4168,5.823,4169,5.874,4170,3.175,4176,5.118,4179,3.175,4181,3.175,4187,5.823,4194,5.118,4216,3.348,4217,3.566,4219,4.805,4220,3.566,4243,3.566,4277,3.566,4313,3.566,4428,3.566,4486,3.857,4495,3.566,4498,5.884,4499,7.133,4500,3.566,4503,6.503,4506,3.857,4510,4.805,4514,3.566,4515,3.857,4516,3.857,4520,3.857,4521,5.536,4522,5.536,4523,3.857,4524,3.857,4525,3.857,4526,3.857,4527,5.536,4528,3.857,4529,5.986,4530,3.857,4531,3.857,4532,3.857,4533,3.857,4534,3.857,4535,3.857,4536,3.857,4537,3.857,4538,3.857,4539,3.857,4540,3.857,4541,3.857,4542,3.857,4543,3.857,4544,3.857,4545,3.857,4546,3.857,4547,3.857,4548,3.857,4549,3.857,4553,5.536,4559,3.857,4576,3.857,4578,3.857,4579,3.857,4586,4.3,4587,4.3,4588,6.171,4589,4.3,4590,4.3,4591,4.3,4592,4.3,4593,4.3,4594,4.3,4595,4.3,4596,6.171,4597,4.3,4598,4.3,4599,4.3,4600,4.3,4601,4.3,4602,4.3,4603,4.3,4604,4.3,4605,4.3,4606,4.3,4607,4.3,4608,3.857,4609,4.3,4610,3.857,4611,4.3,4612,3.857]],["title/additional-documentation/how-tos/extend-a-timeseries-entry-component.html",[172,0.448,174,0.448,214,0.673,1238,1.23,4123,1.9,4299,1.9]],["body/additional-documentation/how-tos/extend-a-timeseries-entry-component.html",[21,0.493,23,0.005,24,0.44,28,1.684,31,1.092,48,0.037,54,0.164,60,0.869,62,0.749,64,0.765,66,1.639,68,2.876,79,0.681,86,0.003,90,2.328,131,0.003,136,1.655,143,0.681,146,1.58,153,2.829,154,2.93,170,2.177,171,0.765,172,1.555,174,1.579,176,2.489,184,1.369,199,2.644,201,1.608,212,1.314,214,2.388,220,1.447,241,2.858,281,1.608,314,4.04,326,2.738,364,2.829,456,2.79,488,5.24,489,3.173,490,3.878,595,4.966,596,2.829,599,3.173,692,2.131,717,2.225,748,3.122,800,5.946,806,2.93,810,2.738,833,3.173,834,2.656,838,4.31,839,3.173,841,3.878,859,2.225,860,3.173,929,3.083,940,2.58,947,5.218,973,5.338,977,3.043,1122,4.006,1135,2.58,1206,3.043,1236,2.51,1238,4.306,1276,3.043,1444,3.173,1538,2.93,1695,5.289,2129,1.933,2130,2.728,2557,3.507,2601,5.467,2633,5.766,2876,5.989,3384,4.04,3464,3.507,3478,3.325,3541,4.04,3542,4.04,3601,4.04,3682,4.04,3807,3.735,3917,3.507,4000,3.507,4083,4.04,4163,3.173,4164,4.494,4167,4.708,4168,5.467,4169,3.043,4170,3.325,4187,4.708,4222,3.325,4254,4.04,4265,4.04,4333,3.735,4498,5.218,4499,6.271,4501,4.04,4503,6.271,4510,4.966,4514,3.735,4529,6.141,4552,4.04,4557,4.04,4608,4.04,4610,5.721,4612,4.04,4613,6.377,4614,8.826,4615,4.503,4616,4.503,4617,4.503,4618,4.503,4619,7.404,4620,4.503,4621,7.404,4622,4.503,4623,4.503,4624,6.377,4625,4.503,4626,4.503,4627,4.503,4628,7.404,4629,4.503,4630,4.503,4631,4.503,4632,4.503,4633,4.503,4634,4.503,4635,4.503,4636,4.503,4637,8.053,4638,4.503,4639,4.503,4640,4.503,4641,4.503,4642,4.503,4643,4.503,4644,4.503,4645,4.503,4646,4.503,4647,4.503,4648,4.503,4649,4.503,4650,4.503,4651,4.503,4652,4.503,4653,6.377,4654,4.503,4655,4.503,4656,6.377,4657,4.503,4658,4.503,4659,4.503,4660,4.503,4661,4.503,4662,4.503,4663,4.503,4664,4.503,4665,4.503,4666,4.503,4667,4.503,4668,4.503,4669,4.503,4670,4.503]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/Feature.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Offering.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["0",{"_index":71,"title":{},"body":{"interfaces/Address.html":{},"classes/CachedMapComponent.html":{},"injectables/ColorService.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetService.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/FilteredParameter.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"injectables/JsonFavoriteExporterService.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValueOption.html":{},"interfaces/ScatterData.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/SingleFavorite.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["0.0.31",{"_index":4099,"title":{},"body":{"dependencies.html":{}}}],["0.0001",{"_index":1439,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["0.05",{"_index":2255,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["0.06",{"_index":2252,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["0.1",{"_index":2249,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["0.1.9",{"_index":4113,"title":{},"body":{"dependencies.html":{}}}],["0.10",{"_index":1248,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["0.2",{"_index":1678,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["0.3",{"_index":1139,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["0.4",{"_index":1266,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["0.5.0",{"_index":4121,"title":{},"body":{"dependencies.html":{}}}],["0.65",{"_index":3497,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["0.8.26",{"_index":4137,"title":{},"body":{"dependencies.html":{}}}],["0123456789abcdef",{"_index":667,"title":{},"body":{"injectables/ColorService.html":{}}}],["0x10000",{"_index":535,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["1",{"_index":68,"title":{},"body":{"interfaces/Address.html":{},"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetService.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"injectables/LabelMapperService.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"interfaces/MinMaxRange.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"classes/PermalinkService.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"interfaces/ScatterData.html":{},"components/ServiceSelectorComponent.html":{},"injectables/StatusCheckService.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{},"license.html":{},"overview.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["1.0.3",{"_index":4107,"title":{},"body":{"dependencies.html":{}}}],["1.1.3",{"_index":4089,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":4124,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":4105,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":4129,"title":{},"body":{"dependencies.html":{}}}],["1.3.1",{"_index":4128,"title":{},"body":{"dependencies.html":{}}}],["1.38.1",{"_index":4111,"title":{},"body":{"dependencies.html":{}}}],["1.38.3",{"_index":4133,"title":{},"body":{"dependencies.html":{}}}],["1.5",{"_index":1720,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["10",{"_index":837,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"injectables/JsonFavoriteExporterService.html":{},"interfaces/Layout.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["10.0.2",{"_index":4090,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":874,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["1000",{"_index":813,"title":{},"body":{"interfaces/DataConst.html":{},"injectables/DefinedTimespanService.html":{},"interfaces/HighlightDataset.html":{},"components/RefreshButtonComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/Time.html":{},"interfaces/YScale.html":{}}}],["100000000",{"_index":4567,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["10800000",{"_index":809,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["11",{"_index":1194,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["12",{"_index":1202,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["123",{"_index":4493,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["123456",{"_index":4563,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["13",{"_index":1465,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["1].dist",{"_index":1817,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["1].i",{"_index":1363,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["1].tick",{"_index":1821,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["1].timestamp",{"_index":1819,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["1em",{"_index":1258,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["1px",{"_index":1076,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["2",{"_index":859,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"injectables/Time.html":{},"interfaces/YScale.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["2.0",{"_index":4235,"title":{},"body":{"license.html":{}}}],["2.13.0",{"_index":4109,"title":{},"body":{"dependencies.html":{}}}],["2.22.2",{"_index":4130,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":4116,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":4611,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["20",{"_index":4442,"title":{},"body":{"overview.html":{}}}],["2004http://www.apache.org/licens",{"_index":4237,"title":{},"body":{"license.html":{}}}],["234",{"_index":3380,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["24t01:49:59.000z').gettim",{"_index":4597,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["25t01:49:59.000z').gettim",{"_index":4598,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["27",{"_index":4443,"title":{},"body":{"overview.html":{}}}],["274344771",{"_index":4215,"title":{},"body":{"index.html":{}}}],["28",{"_index":4565,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["2f",{"_index":2227,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["2r",{"_index":2245,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["3",{"_index":810,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["3.0.1",{"_index":4093,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":4125,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":4103,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1218,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/PlotOptions.html":{},"interfaces/YScale.html":{}}}],["3000",{"_index":3171,"title":{},"body":{"injectables/NotifierService.html":{},"miscellaneous/variables.html":{}}}],["30000",{"_index":3110,"title":{},"body":{"injectables/LocateService.html":{}}}],["321",{"_index":3382,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["34",{"_index":3381,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["3600",{"_index":812,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["3600000",{"_index":1208,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["38",{"_index":4444,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1206,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/YScale.html":{},"index.html":{},"license.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["4.0.0",{"_index":4127,"title":{},"body":{"dependencies.html":{}}}],["4.13.0",{"_index":4117,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":4120,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":840,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"overview.html":{}}}],["47",{"_index":1199,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["48",{"_index":1193,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["5",{"_index":1236,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["5.0.0",{"_index":4097,"title":{},"body":{"dependencies.html":{}}}],["5.3.1",{"_index":4132,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":4265,"title":{},"body":{"license.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["500px",{"_index":4627,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["6",{"_index":2142,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["6.0.9",{"_index":4078,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":4134,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":4080,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3639,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["7",{"_index":1188,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["7.0",{"_index":4172,"title":{},"body":{"index.html":{}}}],["7200000",{"_index":1205,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["7946.0.3",{"_index":4101,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":2828,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{},"license.html":{}}}],["9",{"_index":4244,"title":{},"body":{"license.html":{}}}],["9.1.3",{"_index":4131,"title":{},"body":{"dependencies.html":{}}}],["9.9.0",{"_index":4095,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":1256,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["92",{"_index":4445,"title":{},"body":{"overview.html":{}}}],["__",{"_index":2791,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"miscellaneous/variables.html":{}}}],["_basemap",{"_index":399,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["_blank",{"_index":2837,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{},"components/PermalinkNewWindowComponent.html":{}}}],["_d",{"_index":3402,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["_differbasemap",{"_index":400,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["_differoverlaymap",{"_index":401,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["_overlaymap",{"_index":402,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["a.click",{"_index":2840,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["a.download",{"_index":2838,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["a.href",{"_index":2833,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["a.i",{"_index":1358,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["a.idx",{"_index":1368,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["a.label",{"_index":3711,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["a.target",{"_index":2836,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["a```bash",{"_index":4631,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["abov",{"_index":3387,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["abstract",{"_index":152,"title":{},"body":{"classes/ApiInterface.html":{},"classes/BufferedTime.html":{},"classes/CachedMapComponent.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"classes/EventingApiService.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"classes/HttpCache.html":{},"classes/LanguageChangNotifier.html":{},"classes/ListEntryComponent.html":{},"classes/LocalSelectorComponent.html":{},"classes/OnGoingHttpCache.html":{},"classes/PermalinkService.html":{},"classes/ResizableComponent.html":{},"classes/SettingsService.html":{},"classes/TimeInterval.html":{},"classes/Timespan.html":{},"classes/UriParameterCoder.html":{}}}],["accept",{"_index":4428,"title":{},"body":{"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["access",{"_index":4559,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["accesss",{"_index":4518,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["account",{"_index":1997,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["act",{"_index":4252,"title":{},"body":{"license.html":{}}}],["activ",{"_index":3650,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["activepanel",{"_index":2952,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["actual_compon",{"_index":289,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["ad",{"_index":860,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["adapt",{"_index":805,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["add",{"_index":973,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/Layout.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"injectables/StatusCheckService.html":{},"interfaces/YScale.html":{},"index.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["add(numb",{"_index":3340,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["addbasemap",{"_index":407,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["addbasemap(layeropt",{"_index":445,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["adddataset",{"_index":1858,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{}}}],["adddataset(id",{"_index":887,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["adddataset(internalid",{"_index":1954,"title":{},"body":{"classes/DatasetService.html":{}}}],["adddatasetbyinternalid",{"_index":1859,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["adddatasetbyinternalid(internalid",{"_index":1877,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["addendum",{"_index":4375,"title":{},"body":{"license.html":{}}}],["addfavorit",{"_index":2349,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["addfavorite(dataset",{"_index":2304,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["addfavoritegroup",{"_index":2350,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["addfavoritegroup(dataset",{"_index":2316,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["addit",{"_index":4299,"title":{"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}},"body":{"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["additionalwidth",{"_index":163,"title":{},"body":{"interfaces/AxesOptions.html":{}}}],["addlinewidth",{"_index":858,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["addoverlaymap",{"_index":408,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["addoverlaymap(layeropt",{"_index":448,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["addparameterfilt",{"_index":2087,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["addparameterfilter(param",{"_index":2094,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["addreferencevaluedata(internalid",{"_index":980,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["address",{"_index":1,"title":{"interfaces/Address.html":{}},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["address29",{"_index":8,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["addtimespan",{"_index":2088,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["addtimespan(timespan",{"_index":2096,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["addurl",{"_index":3808,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["addurl(url",{"_index":3814,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["adher",{"_index":3335,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["adjust",{"_index":4614,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["advis",{"_index":4427,"title":{},"body":{"license.html":{}}}],["afterviewinit",{"_index":679,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["again",{"_index":3353,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["against",{"_index":3386,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"license.html":{}}}],["agre",{"_index":4393,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":4385,"title":{},"body":{"license.html":{}}}],["alertservice.error($translate.instant('favorite.import.wrongfil",{"_index":2848,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["alleg",{"_index":4351,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1130,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["allowsyntheticdefaultimport",{"_index":4229,"title":{},"body":{"index.html":{}}}],["alon",{"_index":4345,"title":{},"body":{"license.html":{}}}],["along",{"_index":4368,"title":{},"body":{"license.html":{}}}],["alongsid",{"_index":4374,"title":{},"body":{"license.html":{}}}],["alpha.53",{"_index":4226,"title":{},"body":{"index.html":{}}}],["alreadi",{"_index":4502,"title":{},"body":{"additional-documentation/how-tos.html":{}}}],["altern",{"_index":962,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["amounttimestamp",{"_index":1391,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["analysi",{"_index":4190,"title":{},"body":{"index.html":{}}}],["anchor",{"_index":1224,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["and/or",{"_index":4433,"title":{},"body":{"license.html":{}}}],["angular",{"_index":4164,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["angular/anim",{"_index":4077,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":4079,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk@^5.0.0",{"_index":4651,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["angular/cli",{"_index":4512,"title":{},"body":{"additional-documentation/how-tos.html":{}}}],["angular/common",{"_index":1988,"title":{},"body":{"pipes/DateProxyPipe.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":27,"title":{},"body":{"interfaces/Address.html":{},"injectables/BasicAuthService.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"injectables/DatasetApiMapping.html":{},"injectables/EventingImplApiInterface.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"modules/HelgolandCoreModule.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"injectables/LabelMapperService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"classes/OnGoingHttpCache.html":{},"injectables/StatusCheckService.html":{},"classes/UriParameterCoder.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["angular/compil",{"_index":4081,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":29,"title":{},"body":{"interfaces/Address.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"components/BoolTogglerComponent.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"dependencies.html":{}}}],["angular/core)```typescript",{"_index":4638,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["angular/form",{"_index":2617,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandTimeModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":4082,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":4083,"title":{},"body":{"dependencies.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["angular/material/prebuilt",{"_index":4658,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["angular/material@^5.0.0",{"_index":4652,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["angular/platform",{"_index":4084,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":4087,"title":{},"body":{"dependencies.html":{}}}],["anim",{"_index":3274,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["annot",{"_index":3292,"title":{},"body":{"interfaces/PlotOptions.html":{},"license.html":{}}}],["anyth",{"_index":585,"title":{},"body":{"injectables/CachingInterceptor.html":{},"injectables/StatusCheckService.html":{}}}],["apach",{"_index":4234,"title":{},"body":{"license.html":{}}}],["api",{"_index":865,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetApiV2.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/Layout.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["api.servic",{"_index":2110,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["api.service.t",{"_index":2063,"title":{},"body":{"classes/EventingApiService.html":{}}}],["api.service.ts:11",{"_index":2067,"title":{},"body":{"classes/EventingApiService.html":{}}}],["api.service.ts:13",{"_index":2075,"title":{},"body":{"classes/EventingApiService.html":{}}}],["api.service.ts:15",{"_index":2072,"title":{},"body":{"classes/EventingApiService.html":{}}}],["api.service.ts:9",{"_index":2070,"title":{},"body":{"classes/EventingApiService.html":{}}}],["api/api",{"_index":1532,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"classes/DatasetPresenterComponent.html":{},"modules/HelgolandCoreModule.html":{},"classes/UriParameterCoder.html":{},"miscellaneous/enumerations.html":{}}}],["api/categori",{"_index":4039,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["api/category.t",{"_index":626,"title":{},"body":{"interfaces/Category.html":{}}}],["api/data",{"_index":1574,"title":{},"body":{"interfaces/DatasetApiV2.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["api/data.t",{"_index":752,"title":{},"body":{"interfaces/Data.html":{},"interfaces/IDataEntry.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/ProfileDataEntry.html":{},"classes/ReferenceValues.html":{},"interfaces/TimeValueEntry.html":{}}}],["api/data.ts:9",{"_index":3615,"title":{},"body":{"classes/ReferenceValues.html":{}}}],["api/dataset",{"_index":1575,"title":{},"body":{"interfaces/DatasetApiV2.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/StatusIntervalResolverService.html":{},"classes/UriParameterCoder.html":{}}}],["api/dataset.t",{"_index":1499,"title":{},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["api/dataset.ts:16",{"_index":3200,"title":{},"body":{"classes/ParameterConstellation.html":{}}}],["api/dataset.ts:17",{"_index":3197,"title":{},"body":{"classes/ParameterConstellation.html":{}}}],["api/dataset.ts:18",{"_index":3196,"title":{},"body":{"classes/ParameterConstellation.html":{}}}],["api/dataset.ts:19",{"_index":3199,"title":{},"body":{"classes/ParameterConstellation.html":{}}}],["api/dataset.ts:20",{"_index":3198,"title":{},"body":{"classes/ParameterConstellation.html":{}}}],["api/dataset.ts:21",{"_index":3195,"title":{},"body":{"classes/ParameterConstellation.html":{}}}],["api/dataset.ts:25",{"_index":2443,"title":{},"body":{"classes/FirstLastValue.html":{}}}],["api/dataset.ts:26",{"_index":2444,"title":{},"body":{"classes/FirstLastValue.html":{}}}],["api/dataset.ts:30",{"_index":3536,"title":{},"body":{"classes/ReferenceValue.html":{}}}],["api/dataset.ts:31",{"_index":3534,"title":{},"body":{"classes/ReferenceValue.html":{}}}],["api/dataset.ts:32",{"_index":3535,"title":{},"body":{"classes/ReferenceValue.html":{}}}],["api/dataset.ts:33",{"_index":3533,"title":{},"body":{"classes/ReferenceValue.html":{}}}],["api/dataset.ts:34",{"_index":3537,"title":{},"body":{"classes/ReferenceValue.html":{}}}],["api/dataset.ts:38",{"_index":1843,"title":{},"body":{"classes/DatasetParameterConstellation.html":{}}}],["api/dataset.ts:42",{"_index":1507,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:43",{"_index":1509,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:44",{"_index":1517,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:45",{"_index":1516,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:46",{"_index":1508,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:47",{"_index":1506,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:48",{"_index":1510,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:49",{"_index":1514,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:50",{"_index":1504,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:51",{"_index":1513,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:52",{"_index":1512,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:53",{"_index":1515,"title":{},"body":{"classes/Dataset.html":{}}}],["api/dataset.ts:57",{"_index":3985,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:58",{"_index":3987,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:59",{"_index":3994,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:60",{"_index":3993,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:61",{"_index":3986,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:62",{"_index":3983,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:63",{"_index":3988,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:64",{"_index":3990,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:65",{"_index":3991,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:66",{"_index":3989,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:67",{"_index":3992,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/dataset.ts:68",{"_index":3984,"title":{},"body":{"classes/Timeseries.html":{}}}],["api/enums.t",{"_index":4146,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["api/featur",{"_index":4040,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["api/feature.t",{"_index":2391,"title":{},"body":{"interfaces/Feature.html":{}}}],["api/helper/statu",{"_index":2579,"title":{},"body":{"modules/HelgolandCoreModule.html":{},"injectables/StatusIntervalResolverService.html":{}}}],["api/http.service.t",{"_index":2753,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"miscellaneous/variables.html":{}}}],["api/http.service.ts:12",{"_index":2771,"title":{},"body":{"interfaces/HttpServiceHandler.html":{}}}],["api/http.service.ts:16",{"_index":2772,"title":{},"body":{"interfaces/HttpServiceInterceptor.html":{}}}],["api/http.service.ts:24",{"_index":2757,"title":{},"body":{"injectables/HttpService.html":{}}}],["api/http.service.ts:41",{"_index":2759,"title":{},"body":{"injectables/HttpService.html":{}}}],["api/identifiable.t",{"_index":2786,"title":{},"body":{"interfaces/Identifiable.html":{}}}],["api/interfaces/api",{"_index":1557,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["api/intern",{"_index":1898,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"modules/HelgolandCoreModule.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"miscellaneous/variables.html":{}}}],["api/off",{"_index":4041,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["api/offering.t",{"_index":3189,"title":{},"body":{"interfaces/Offering.html":{}}}],["api/parameter.t",{"_index":3194,"title":{},"body":{"interfaces/Parameter.html":{}}}],["api/phenomenon",{"_index":4042,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["api/phenomenon.t",{"_index":3240,"title":{},"body":{"interfaces/Phenomenon.html":{}}}],["api/platform",{"_index":1576,"title":{},"body":{"interfaces/DatasetApiV2.html":{},"classes/UriParameterCoder.html":{}}}],["api/platform.t",{"_index":3241,"title":{},"body":{"interfaces/Platform.html":{}}}],["api/procedur",{"_index":4043,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["api/procedure.t",{"_index":3413,"title":{},"body":{"interfaces/Procedure.html":{}}}],["api/servic",{"_index":4044,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["api/service.t",{"_index":3661,"title":{},"body":{"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{}}}],["api/split",{"_index":3762,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["api/st",{"_index":4045,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["api/station.t",{"_index":3793,"title":{},"body":{"classes/Station.html":{},"interfaces/StationProperties.html":{},"classes/TimeseriesCollection.html":{}}}],["api/station.ts:14",{"_index":3995,"title":{},"body":{"classes/TimeseriesCollection.html":{}}}],["api/station.ts:5",{"_index":3796,"title":{},"body":{"classes/Station.html":{}}}],["api/station.ts:6",{"_index":3795,"title":{},"body":{"classes/Station.html":{}}}],["api/station.ts:7",{"_index":3798,"title":{},"body":{"classes/Station.html":{}}}],["apiinterfac",{"_index":132,"title":{"classes/ApiInterface.html":{}},"body":{"classes/ApiInterface.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/EventingApiService.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/FilteredParameter.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/UriParameterCoder.html":{}}}],["apiinterface:14",{"_index":2076,"title":{},"body":{"classes/EventingApiService.html":{}}}],["apiinterface:7",{"_index":2077,"title":{},"body":{"classes/EventingApiService.html":{}}}],["apimap",{"_index":2959,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["apiurl",{"_index":148,"title":{},"body":{"classes/ApiInterface.html":{},"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/Settings.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"interfaces/SupportedMimeTypes.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"classes/UriParameterCoder.html":{}}}],["apiversionid",{"_index":2999,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["app",{"_index":4499,"title":{},"body":{"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["app.component.css",{"_index":4623,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["app.component.html",{"_index":4621,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["app.component.scss",{"_index":4624,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["app.component.t",{"_index":4630,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["app.modul.t",{"_index":4632,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["app.module.t",{"_index":4653,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["appcompon",{"_index":4529,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["appear",{"_index":4373,"title":{},"body":{"license.html":{}}}],["append('g",{"_index":877,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["append('svg",{"_index":872,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["append('svg:clippath",{"_index":1305,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["append('svg:path",{"_index":1323,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["append('svg:rect",{"_index":1307,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["appendix",{"_index":4287,"title":{},"body":{"license.html":{}}}],["appli",{"_index":4339,"title":{},"body":{"license.html":{}}}],["applic",{"_index":4204,"title":{},"body":{"index.html":{},"license.html":{}}}],["application/json;charset=utf",{"_index":2827,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["appmodul",{"_index":4534,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["appropri",{"_index":4402,"title":{},"body":{"license.html":{}}}],["area",{"_index":1629,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["argument",{"_index":3655,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["aris",{"_index":4418,"title":{},"body":{"license.html":{}}}],["array",{"_index":91,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataEntry.html":{},"interfaces/Layout.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValues.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"interfaces/TimeValueEntry.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["array.from(this.groupfavs.valu",{"_index":2321,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["array.from(this.singlefavs.valu",{"_index":2310,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["array[index",{"_index":1418,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["arriv",{"_index":610,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["aspointgeometri",{"_index":2509,"title":{},"body":{"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{}}}],["assert",{"_index":4440,"title":{},"body":{"license.html":{}}}],["associ",{"_index":4405,"title":{},"body":{"license.html":{}}}],["assum",{"_index":4403,"title":{},"body":{"license.html":{}}}],["attach",{"_index":4286,"title":{},"body":{"license.html":{}}}],["attent",{"_index":4554,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["attr('ci",{"_index":1332,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('class",{"_index":1068,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('clip",{"_index":1310,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('cx",{"_index":1330,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('d",{"_index":1326,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('di",{"_index":1257,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('fil",{"_index":1054,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('height",{"_index":875,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('i",{"_index":1234,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('id",{"_index":1306,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('opac",{"_index":1265,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('point",{"_index":1057,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('r",{"_index":1334,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('strok",{"_index":1056,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('transform",{"_index":878,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('vis",{"_index":1425,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('width",{"_index":873,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('x",{"_index":1233,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('x1",{"_index":1072,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('x2",{"_index":1070,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('y1",{"_index":1073,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attr('y2",{"_index":1071,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["attribut",{"_index":549,"title":{},"body":{"classes/CachedMapComponent.html":{},"license.html":{}}}],["auth",{"_index":295,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth(usernam",{"_index":302,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth.service.t",{"_index":292,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth.service.ts:15",{"_index":305,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth.service.ts:27",{"_index":307,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth.service.ts:31",{"_index":309,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth.service.ts:35",{"_index":308,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["auth.service.ts:9",{"_index":301,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["author",{"_index":317,"title":{},"body":{"injectables/BasicAuthService.html":{},"license.html":{}}}],["authorship",{"_index":4282,"title":{},"body":{"license.html":{}}}],["autorang",{"_index":2246,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["autos",{"_index":2150,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["avail",{"_index":1433,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"index.html":{},"license.html":{},"modules.html":{}}}],["avoid",{"_index":4230,"title":{},"body":{"index.html":{}}}],["avoidzoomtoselect",{"_index":3248,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["awesom",{"_index":4119,"title":{},"body":{"dependencies.html":{}}}],["ax",{"_index":185,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandModificationModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["axesopt",{"_index":161,"title":{"interfaces/AxesOptions.html":{}},"body":{"interfaces/AxesOptions.html":{},"interfaces/PlotOptions.html":{}}}],["axesoptionscompon",{"_index":175,"title":{"components/AxesOptionsComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandModificationModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["axi",{"_index":675,"title":{},"body":{"interfaces/D3GraphOptions.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["axis.id",{"_index":2238,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["axis.node().getbbox().width",{"_index":1261,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["axis.overlay",{"_index":2233,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["axis.rang",{"_index":2234,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["axis.range[0",{"_index":2236,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["axis.range[1",{"_index":2237,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["axisbottom",{"_index":1630,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axisbottom(this.xscalebase).ticks(5",{"_index":1806,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axisdiv",{"_index":1272,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["axisleft",{"_index":1631,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axisleft(yscale).ticks(5",{"_index":1799,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axisopt",{"_index":791,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["axisresult",{"_index":1742,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axisresult.buff",{"_index":1745,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axisresult.yscal",{"_index":1744,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axisright",{"_index":1632,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axistop",{"_index":1633,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axistyp",{"_index":672,"title":{},"body":{"interfaces/D3GraphOptions.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["axiswidth",{"_index":1260,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["b",{"_index":1197,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["b.i",{"_index":1359,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["b.idx",{"_index":1369,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["b.label",{"_index":3712,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["back",{"_index":1410,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"injectables/StatusCheckService.html":{},"components/TimespanShiftSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["background",{"_index":847,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["bar",{"_index":790,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["base",{"_index":4162,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["base/geosearch/geosearch",{"_index":2531,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["base/map",{"_index":2292,"title":{},"body":{"components/ExtentControlComponent.html":{},"components/GeosearchControlComponent.html":{},"injectables/LocateService.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ZoomControlComponent.html":{}}}],["base/map.modul",{"_index":2652,"title":{},"body":{"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{}}}],["basector",{"_index":4158,"title":{},"body":{"miscellaneous/functions.html":{}}}],["baselay",{"_index":480,"title":{},"body":{"classes/CachedMapComponent.html":{},"miscellaneous/variables.html":{}}}],["basemap",{"_index":419,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["baseurl",{"_index":4544,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["basevalu",{"_index":1645,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["bash",{"_index":4636,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["basi",{"_index":4394,"title":{},"body":{"license.html":{}}}],["basic",{"_index":314,"title":{},"body":{"injectables/BasicAuthService.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["basicauthservic",{"_index":290,"title":{"injectables/BasicAuthService.html":{}},"body":{"injectables/BasicAuthService.html":{}}}],["basicauthtoken",{"_index":294,"title":{},"body":{"injectables/BasicAuthService.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/ParameterFilter.html":{}}}],["bbox",{"_index":2504,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["bboxparam",{"_index":2497,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["befor",{"_index":583,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["begin",{"_index":1181,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos.html":{}}}],["behalf",{"_index":4303,"title":{},"body":{"license.html":{}}}],["below",{"_index":4219,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["benefici",{"_index":4268,"title":{},"body":{"license.html":{}}}],["besid",{"_index":4620,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["better",{"_index":4491,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["between",{"_index":1179,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["bind",{"_index":4296,"title":{},"body":{"license.html":{}}}],["bisectd",{"_index":1787,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["bisectdate(data",{"_index":1420,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["bisectdate(this.basevalu",{"_index":1791,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["bisector",{"_index":1634,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["bisector((d",{"_index":1788,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["black",{"_index":1075,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["blacklist",{"_index":3740,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["blacklist.foreach((entri",{"_index":3750,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["blacklistedservic",{"_index":322,"title":{"interfaces/BlacklistedService.html":{}},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["blob",{"_index":2825,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["blob([json",{"_index":2826,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["blue",{"_index":3498,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["bodi",{"_index":1298,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["bool",{"_index":206,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandControlModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["boolean",{"_index":171,"title":{},"body":{"interfaces/AxesOptions.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DrawOptions.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataset.html":{},"classes/IdCache.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/LocalStorage.html":{},"interfaces/MinMaxRange.html":{},"classes/OnGoingHttpCache.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"interfaces/SingleFavorite.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["boolen",{"_index":4569,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["booltogglercompon",{"_index":205,"title":{"components/BoolTogglerComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandTimeModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":2559,"title":{},"body":{"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"components/TimeRangeSliderComponent.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["border",{"_index":1229,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["borderlin",{"_index":1125,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["both",{"_index":3389,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["bottom",{"_index":839,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["bound",{"_index":90,"title":{},"body":{"interfaces/Address.html":{},"interfaces/DataConst.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/HighlightDataset.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["boundingbox",{"_index":46,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["bounds.geteast",{"_index":2500,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["bounds.getnorth()].join",{"_index":2501,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["bounds.getsouth",{"_index":2499,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["bounds.getwest",{"_index":2498,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["bracket",{"_index":3377,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["break",{"_index":2424,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["brew",{"_index":4173,"title":{},"body":{"index.html":{}}}],["brows",{"_index":4441,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":4085,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":4530,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["brus_max",{"_index":1146,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["brush",{"_index":798,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["brush_max",{"_index":1147,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["brush_min",{"_index":1142,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["btoa(usernam",{"_index":315,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["buffer",{"_index":781,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["bufferedtim",{"_index":355,"title":{"classes/BufferedTime.html":{}},"body":{"classes/BufferedTime.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"classes/Timespan.html":{}}}],["bufferinterv",{"_index":358,"title":{},"body":{"classes/BufferedTime.html":{},"classes/TimeInterval.html":{},"classes/Timespan.html":{}}}],["buffersum",{"_index":851,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["bufferxrang",{"_index":1177,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["bug](https://github.com/angular/angular",{"_index":4205,"title":{},"body":{"index.html":{}}}],["build",{"_index":4165,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["build:lib",{"_index":4182,"title":{},"body":{"index.html":{}}}],["built",{"_index":1995,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["builtindatepip",{"_index":1998,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["builtindatepipe.transform(valu",{"_index":2002,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["bump",{"_index":4195,"title":{},"body":{"index.html":{}}}],["button",{"_index":3618,"title":{},"body":{"components/RefreshButtonComponent.html":{},"components/TimespanButtonComponent.html":{},"additional-documentation/introduction.html":{}}}],["button'},{'nam",{"_index":271,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["button.compon",{"_index":2567,"title":{},"body":{"modules/HelgolandControlModule.html":{},"modules/HelgolandTimeModule.html":{}}}],["button.component.html",{"_index":3619,"title":{},"body":{"components/RefreshButtonComponent.html":{},"components/TimespanButtonComponent.html":{}}}],["button.component.t",{"_index":3617,"title":{},"body":{"components/RefreshButtonComponent.html":{},"components/TimespanButtonComponent.html":{}}}],["button.component.ts:11",{"_index":3626,"title":{},"body":{"components/RefreshButtonComponent.html":{},"components/TimespanButtonComponent.html":{}}}],["button.component.ts:14",{"_index":3627,"title":{},"body":{"components/RefreshButtonComponent.html":{},"components/TimespanButtonComponent.html":{}}}],["button.component.ts:17",{"_index":3628,"title":{},"body":{"components/RefreshButtonComponent.html":{},"components/TimespanButtonComponent.html":{}}}],["button.component.ts:19",{"_index":3625,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["button.component.ts:20",{"_index":4003,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["button.component.ts:26",{"_index":4005,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["button.component.ts:30",{"_index":3631,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["button.component.ts:34",{"_index":3630,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["button.component.ts:40",{"_index":3635,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["button.component.ts:46",{"_index":3629,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["button.component.ts:54",{"_index":3633,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["button.component.ts:58",{"_index":3634,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["button.component.ts:62",{"_index":3632,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["button/refresh",{"_index":2566,"title":{},"body":{"modules/HelgolandControlModule.html":{},"components/RefreshButtonComponent.html":{}}}],["button/timespan",{"_index":2731,"title":{},"body":{"modules/HelgolandTimeModule.html":{},"components/TimespanButtonComponent.html":{}}}],["c",{"_index":4362,"title":{},"body":{"license.html":{}}}],["c1",{"_index":1370,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["c2",{"_index":1371,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["cach",{"_index":369,"title":{"interfaces/Cache.html":{}},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"injectables/DatasetApiMapping.html":{},"modules/HelgolandCachingModule.html":{},"classes/HttpCache.html":{},"classes/IdCache.html":{},"injectables/LabelMapperService.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{},"components/TimeRangeSliderComponent.html":{},"additional-documentation/introduction.html":{}}}],["cache.servic",{"_index":478,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/ExtentControlComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapModule.html":{},"injectables/LocateService.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ZoomControlComponent.html":{}}}],["cache.service.t",{"_index":3117,"title":{},"body":{"injectables/MapCache.html":{}}}],["cache.service.ts:13",{"_index":3123,"title":{},"body":{"injectables/MapCache.html":{}}}],["cache.service.ts:7",{"_index":3124,"title":{},"body":{"injectables/MapCache.html":{}}}],["cache.service.ts:9",{"_index":3121,"title":{},"body":{"injectables/MapCache.html":{}}}],["cache.t",{"_index":371,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/IdCache.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{}}}],["cache.ts:10",{"_index":3024,"title":{},"body":{"injectables/LocalOngoingHttpCache.html":{}}}],["cache.ts:11",{"_index":373,"title":{},"body":{"interfaces/Cache.html":{}}}],["cache.ts:13",{"_index":2781,"title":{},"body":{"classes/IdCache.html":{}}}],["cache.ts:14",{"_index":3025,"title":{},"body":{"injectables/LocalOngoingHttpCache.html":{}}}],["cache.ts:18",{"_index":3022,"title":{},"body":{"injectables/LocalHttpCache.html":{}}}],["cache.ts:20",{"_index":3020,"title":{},"body":{"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{}}}],["cache.ts:24",{"_index":3023,"title":{},"body":{"injectables/LocalOngoingHttpCache.html":{}}}],["cache.ts:3",{"_index":2775,"title":{},"body":{"classes/IdCache.html":{}}}],["cache.ts:33",{"_index":3021,"title":{},"body":{"injectables/LocalHttpCache.html":{}}}],["cache.ts:5",{"_index":2779,"title":{},"body":{"classes/IdCache.html":{}}}],["cache.ts:8",{"_index":3026,"title":{},"body":{"injectables/LocalOngoingHttpCache.html":{}}}],["cache.ts:9",{"_index":2777,"title":{},"body":{"classes/IdCache.html":{}}}],["cache_param_favorites_group",{"_index":2297,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{},"miscellaneous/variables.html":{}}}],["cache_param_favorites_singl",{"_index":2295,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{},"miscellaneous/variables.html":{}}}],["cacheditem",{"_index":372,"title":{"interfaces/CachedItem.html":{}},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/LocalHttpCache.html":{}}}],["cachedmapcompon",{"_index":392,"title":{"classes/CachedMapComponent.html":{}},"body":{"classes/CachedMapComponent.html":{}}}],["cachedrespons",{"_index":597,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["cachinginterceptor",{"_index":565,"title":{"injectables/CachingInterceptor.html":{}},"body":{"injectables/CachingInterceptor.html":{},"modules/HelgolandCachingModule.html":{}}}],["calctick",{"_index":1190,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["calcul",{"_index":844,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["calculatedrang",{"_index":994,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["calculatedrange.min",{"_index":1008,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["calculateheight",{"_index":1702,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["calculateoverviewrang",{"_index":687,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["calculatewidth",{"_index":1704,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["calcxvalu",{"_index":1700,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["call",{"_index":4526,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["call(axisbottom(this.xscalebas",{"_index":1810,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["call(axisright(this.yscalebase).ticksize(0).ticks(0",{"_index":1747,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["call(axistop(this.xscalebase).ticks(0).ticksize(0",{"_index":1812,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["call(brush",{"_index":1117,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["call(brush.mov",{"_index":1118,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["call(d3.axisleft(yscal",{"_index":1274,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["call(d3.axistop(this.xscalebase).ticks(0).ticksize(0",{"_index":1230,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["call(d3.drag",{"_index":1097,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["call(d3.zoom",{"_index":1090,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["call(this.yaxisgen",{"_index":1800,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["call(xaxisgen",{"_index":1221,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["call(yaxisgen",{"_index":1254,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["carri",{"_index":4360,"title":{},"body":{"license.html":{}}}],["case",{"_index":1710,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["catch",{"_index":2003,"title":{},"body":{"pipes/DateProxyPipe.html":{},"injectables/LabelMapperService.html":{}}}],["categori",{"_index":624,"title":{"interfaces/Category.html":{}},"body":{"interfaces/Category.html":{},"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/StatusInterval.html":{},"interfaces/SupportedMimeTypes.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/UriParameterCoder.html":{}}}],["categorylabel",{"_index":3544,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["caus",{"_index":4209,"title":{},"body":{"index.html":{},"license.html":{}}}],["cd",{"_index":699,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"additional-documentation/how-tos.html":{}}}],["centertimespan",{"_index":3864,"title":{},"body":{"injectables/Time.html":{}}}],["centertimespan(timespan",{"_index":3874,"title":{},"body":{"injectables/Time.html":{}}}],["chain",{"_index":3347,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["chang",{"_index":456,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"classes/DatasetPresenterComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"classes/LocalSelectorComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["changeal",{"_index":1284,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["changecolor",{"_index":4665,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["changedetectorref",{"_index":700,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["changedselecteddataset",{"_index":3539,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["changefals",{"_index":1278,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["changefalse.length",{"_index":1286,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["changefalse.push",{"_index":1282,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["changelabel",{"_index":2351,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["changelabel(favorit",{"_index":2325,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["changer.t",{"_index":2914,"title":{},"body":{"classes/LanguageChangNotifier.html":{}}}],["changer.ts:11",{"_index":2917,"title":{},"body":{"classes/LanguageChangNotifier.html":{}}}],["changer.ts:3",{"_index":2916,"title":{},"body":{"classes/LanguageChangNotifier.html":{}}}],["changes.changedselecteddataset",{"_index":3547,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["changes.changedselecteddatasets.currentvalue.foreach((obj",{"_index":3549,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["changes.changedselecteddatasets.firstchang",{"_index":3548,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["changes.dataset",{"_index":2380,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["changes.endpoint",{"_index":3675,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["changes.fitbound",{"_index":502,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["changes.foreachaddeditem((",{"_index":509,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["changes.foreachremoveditem((",{"_index":507,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["changes.label",{"_index":2866,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["changes.languagelist",{"_index":3042,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["changes.providerlist",{"_index":2975,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["changes.providerlist.currentvalu",{"_index":2976,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["changes.rang",{"_index":3143,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["changes.select",{"_index":1651,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["changes.selectedtimespan",{"_index":3502,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["changes.timeinterv",{"_index":733,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/DatasetPresenterComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"injectables/ReferenceValueColorCache.html":{}}}],["changes.timelist",{"_index":3951,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["changes.toggl",{"_index":3641,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["changes.valu",{"_index":3860,"title":{},"body":{"components/StringTogglerComponent.html":{}}}],["changes.zoomcontrolopt",{"_index":504,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["changeselectedids(tohighlightdataset",{"_index":1289,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["changetime(from",{"_index":923,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["changetru",{"_index":1279,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["changetrue.push",{"_index":1283,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["changeyaxesvis",{"_index":188,"title":{},"body":{"components/AxesOptionsComponent.html":{}}}],["charact",{"_index":4417,"title":{},"body":{"license.html":{}}}],["charg",{"_index":4328,"title":{},"body":{"license.html":{}}}],["check",{"_index":154,"title":{},"body":{"classes/ApiInterface.html":{},"injectables/CachingInterceptor.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"injectables/StatusCheckService.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["check.service.t",{"_index":3803,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["check.service.ts:13",{"_index":3813,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["check.service.ts:22",{"_index":3817,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["check.service.ts:30",{"_index":3820,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["check.service.ts:38",{"_index":3822,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["check.service.ts:45",{"_index":3815,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["check.service.ts:53",{"_index":3828,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["check.service.ts:58",{"_index":3826,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["check.service.ts:73",{"_index":3824,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["check/statu",{"_index":3802,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["checkal",{"_index":3809,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["checkdataintimespan",{"_index":3608,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["checkedurls.filter((entri",{"_index":3842,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["checkurl",{"_index":3810,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["checkurl(url",{"_index":3819,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["checkurls(url",{"_index":3821,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["choos",{"_index":4429,"title":{},"body":{"license.html":{}}}],["chrome",{"_index":2831,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["chunkspan",{"_index":3778,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["chvislabel(entri",{"_index":1445,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["citi",{"_index":9,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["city_district",{"_index":10,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["citydistrict",{"_index":115,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["claim",{"_index":4341,"title":{},"body":{"license.html":{}}}],["class",{"_index":54,"title":{"classes/ApiInterface.html":{},"classes/BufferedTime.html":{},"classes/CachedMapComponent.html":{},"classes/D3SelectionRange.html":{},"classes/Dataset.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"classes/EventingApiService.html":{},"classes/ExtendedTimeseries.html":{},"classes/Filter.html":{},"classes/FirstLastValue.html":{},"classes/GeoCureGeoJSON.html":{},"classes/GeoSearch.html":{},"classes/HasLoadableContent.html":{},"classes/HttpCache.html":{},"classes/IdCache.html":{},"classes/LanguageChangNotifier.html":{},"classes/ListEntryComponent.html":{},"classes/LocalSelectorComponent.html":{},"classes/OnGoingHttpCache.html":{},"classes/ParameterConstellation.html":{},"classes/PermalinkService.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"classes/ResizableComponent.html":{},"classes/SettingsService.html":{},"classes/Station.html":{},"classes/TimeInterval.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"classes/Timespan.html":{},"classes/UriParameterCoder.html":{}},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"classes/IdCache.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"classes/ParameterConstellation.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["classed('hidden",{"_index":1466,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["clear",{"_index":1131,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/YScale.html":{}}}],["clear(req",{"_index":2752,"title":{},"body":{"classes/HttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["cleardata",{"_index":2269,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["clearinterval(this.interv",{"_index":3648,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["clearlayout",{"_index":2267,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["clearmap",{"_index":3482,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["clearsearch",{"_index":2516,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["cleartimeout(this.notifiertimeout",{"_index":3182,"title":{},"body":{"injectables/NotifierService.html":{}}}],["cleartoken",{"_index":296,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["cli",{"_index":4208,"title":{},"body":{"index.html":{},"additional-documentation/how-tos.html":{}}}],["cli.json",{"_index":4615,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["cli/issues/3854",{"_index":4206,"title":{},"body":{"index.html":{}}}],["cli/issues/3854#issuecom",{"_index":4214,"title":{},"body":{"index.html":{}}}],["click",{"_index":4000,"title":{},"body":{"components/TimespanButtonComponent.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["client",{"_index":2754,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["client(metadata",{"_index":2758,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["clip",{"_index":1299,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["clipboard",{"_index":2698,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{},"components/PermalinkToClipboardComponent.html":{},"dependencies.html":{}}}],["clipboard'},{'nam",{"_index":258,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["clipboard.compon",{"_index":2704,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{}}}],["clipboard.component.html",{"_index":3237,"title":{},"body":{"components/PermalinkToClipboardComponent.html":{}}}],["clipboard.component.t",{"_index":3236,"title":{},"body":{"components/PermalinkToClipboardComponent.html":{}}}],["clipboard.component.ts:10",{"_index":3238,"title":{},"body":{"components/PermalinkToClipboardComponent.html":{}}}],["clipboard.component.ts:13",{"_index":3239,"title":{},"body":{"components/PermalinkToClipboardComponent.html":{}}}],["clipboard/permalink",{"_index":2703,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{},"components/PermalinkToClipboardComponent.html":{}}}],["clipboardmodul",{"_index":2697,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{}}}],["clone",{"_index":4177,"title":{},"body":{"index.html":{}}}],["closest",{"_index":2156,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["cluster",{"_index":3247,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["cluster_helgolandcontrolmodul",{"_index":2560,"title":{},"body":{"modules/HelgolandControlModule.html":{},"overview.html":{}}}],["cluster_helgolandcontrolmodule_declar",{"_index":2561,"title":{},"body":{"modules/HelgolandControlModule.html":{},"overview.html":{}}}],["cluster_helgolandcontrolmodule_export",{"_index":2562,"title":{},"body":{"modules/HelgolandControlModule.html":{},"overview.html":{}}}],["cluster_helgolandcoremodul",{"_index":2570,"title":{},"body":{"modules/HelgolandCoreModule.html":{},"overview.html":{}}}],["cluster_helgolandcoremodule_declar",{"_index":2571,"title":{},"body":{"modules/HelgolandCoreModule.html":{},"overview.html":{}}}],["cluster_helgolandcoremodule_export",{"_index":2572,"title":{},"body":{"modules/HelgolandCoreModule.html":{},"overview.html":{}}}],["cluster_helgolandcoremodule_provid",{"_index":2573,"title":{},"body":{"modules/HelgolandCoreModule.html":{},"overview.html":{}}}],["cluster_helgolandd3modul",{"_index":2586,"title":{},"body":{"modules/HelgolandD3Module.html":{},"overview.html":{}}}],["cluster_helgolandd3module_declar",{"_index":2587,"title":{},"body":{"modules/HelgolandD3Module.html":{},"overview.html":{}}}],["cluster_helgolandd3module_export",{"_index":2589,"title":{},"body":{"modules/HelgolandD3Module.html":{},"overview.html":{}}}],["cluster_helgolandd3module_import",{"_index":2588,"title":{},"body":{"modules/HelgolandD3Module.html":{}}}],["cluster_helgolanddatasetlistmodul",{"_index":2602,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"overview.html":{}}}],["cluster_helgolanddatasetlistmodule_declar",{"_index":2603,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{}}}],["cluster_helgolanddatasetlistmodule_export",{"_index":2605,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{}}}],["cluster_helgolanddatasetlistmodule_import",{"_index":2604,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"overview.html":{}}}],["cluster_helgolanddatasetlistmodule_provid",{"_index":2606,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"overview.html":{}}}],["cluster_helgolanddatasettablemodul",{"_index":2593,"title":{},"body":{"modules/HelgolandDatasetTableModule.html":{},"overview.html":{}}}],["cluster_helgolanddatasettablemodule_declar",{"_index":2594,"title":{},"body":{"modules/HelgolandDatasetTableModule.html":{},"overview.html":{}}}],["cluster_helgolanddatasettablemodule_export",{"_index":2596,"title":{},"body":{"modules/HelgolandDatasetTableModule.html":{},"overview.html":{}}}],["cluster_helgolanddatasettablemodule_import",{"_index":2595,"title":{},"body":{"modules/HelgolandDatasetTableModule.html":{}}}],["cluster_helgolandfavoritemodul",{"_index":2619,"title":{},"body":{"modules/HelgolandFavoriteModule.html":{},"overview.html":{}}}],["cluster_helgolandfavoritemodule_declar",{"_index":2620,"title":{},"body":{"modules/HelgolandFavoriteModule.html":{}}}],["cluster_helgolandfavoritemodule_export",{"_index":2621,"title":{},"body":{"modules/HelgolandFavoriteModule.html":{}}}],["cluster_helgolandfavoritemodule_provid",{"_index":2622,"title":{},"body":{"modules/HelgolandFavoriteModule.html":{},"overview.html":{}}}],["cluster_helgolandflotmodul",{"_index":2628,"title":{},"body":{"modules/HelgolandFlotModule.html":{},"overview.html":{}}}],["cluster_helgolandflotmodule_declar",{"_index":2629,"title":{},"body":{"modules/HelgolandFlotModule.html":{},"overview.html":{}}}],["cluster_helgolandflotmodule_export",{"_index":2631,"title":{},"body":{"modules/HelgolandFlotModule.html":{},"overview.html":{}}}],["cluster_helgolandflotmodule_import",{"_index":2630,"title":{},"body":{"modules/HelgolandFlotModule.html":{}}}],["cluster_helgolandlabelmappermodul",{"_index":2634,"title":{},"body":{"modules/HelgolandLabelMapperModule.html":{},"overview.html":{}}}],["cluster_helgolandlabelmappermodule_declar",{"_index":2635,"title":{},"body":{"modules/HelgolandLabelMapperModule.html":{},"overview.html":{}}}],["cluster_helgolandlabelmappermodule_export",{"_index":2636,"title":{},"body":{"modules/HelgolandLabelMapperModule.html":{},"overview.html":{}}}],["cluster_helgolandlabelmappermodule_provid",{"_index":2637,"title":{},"body":{"modules/HelgolandLabelMapperModule.html":{},"overview.html":{}}}],["cluster_helgolandmapcontrolmodul",{"_index":2644,"title":{},"body":{"modules/HelgolandMapControlModule.html":{},"overview.html":{}}}],["cluster_helgolandmapcontrolmodule_declar",{"_index":2645,"title":{},"body":{"modules/HelgolandMapControlModule.html":{}}}],["cluster_helgolandmapcontrolmodule_export",{"_index":2647,"title":{},"body":{"modules/HelgolandMapControlModule.html":{}}}],["cluster_helgolandmapcontrolmodule_import",{"_index":2646,"title":{},"body":{"modules/HelgolandMapControlModule.html":{},"overview.html":{}}}],["cluster_helgolandmapcontrolmodule_provid",{"_index":2648,"title":{},"body":{"modules/HelgolandMapControlModule.html":{},"overview.html":{}}}],["cluster_helgolandmapmodul",{"_index":2658,"title":{},"body":{"modules/HelgolandMapModule.html":{},"overview.html":{}}}],["cluster_helgolandmapmodule_declar",{"_index":2659,"title":{},"body":{"modules/HelgolandMapModule.html":{}}}],["cluster_helgolandmapmodule_export",{"_index":2660,"title":{},"body":{"modules/HelgolandMapModule.html":{}}}],["cluster_helgolandmapmodule_provid",{"_index":2661,"title":{},"body":{"modules/HelgolandMapModule.html":{},"overview.html":{}}}],["cluster_helgolandmapselectormodul",{"_index":2664,"title":{},"body":{"modules/HelgolandMapSelectorModule.html":{},"overview.html":{}}}],["cluster_helgolandmapselectormodule_declar",{"_index":2665,"title":{},"body":{"modules/HelgolandMapSelectorModule.html":{}}}],["cluster_helgolandmapselectormodule_export",{"_index":2667,"title":{},"body":{"modules/HelgolandMapSelectorModule.html":{}}}],["cluster_helgolandmapselectormodule_import",{"_index":2666,"title":{},"body":{"modules/HelgolandMapSelectorModule.html":{}}}],["cluster_helgolandmapviewmodul",{"_index":2674,"title":{},"body":{"modules/HelgolandMapViewModule.html":{},"overview.html":{}}}],["cluster_helgolandmapviewmodule_declar",{"_index":2675,"title":{},"body":{"modules/HelgolandMapViewModule.html":{},"overview.html":{}}}],["cluster_helgolandmapviewmodule_export",{"_index":2677,"title":{},"body":{"modules/HelgolandMapViewModule.html":{},"overview.html":{}}}],["cluster_helgolandmapviewmodule_import",{"_index":2676,"title":{},"body":{"modules/HelgolandMapViewModule.html":{}}}],["cluster_helgolandmodificationmodul",{"_index":2682,"title":{},"body":{"modules/HelgolandModificationModule.html":{},"overview.html":{}}}],["cluster_helgolandmodificationmodule_declar",{"_index":2683,"title":{},"body":{"modules/HelgolandModificationModule.html":{},"overview.html":{}}}],["cluster_helgolandmodificationmodule_export",{"_index":2685,"title":{},"body":{"modules/HelgolandModificationModule.html":{},"overview.html":{}}}],["cluster_helgolandmodificationmodule_import",{"_index":2684,"title":{},"body":{"modules/HelgolandModificationModule.html":{}}}],["cluster_helgolandpermalinkmodul",{"_index":2693,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{},"overview.html":{}}}],["cluster_helgolandpermalinkmodule_declar",{"_index":2694,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{}}}],["cluster_helgolandpermalinkmodule_export",{"_index":2695,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{}}}],["cluster_helgolandplotlymodul",{"_index":2706,"title":{},"body":{"modules/HelgolandPlotlyModule.html":{},"overview.html":{}}}],["cluster_helgolandplotlymodule_declar",{"_index":2707,"title":{},"body":{"modules/HelgolandPlotlyModule.html":{},"overview.html":{}}}],["cluster_helgolandplotlymodule_export",{"_index":2709,"title":{},"body":{"modules/HelgolandPlotlyModule.html":{},"overview.html":{}}}],["cluster_helgolandplotlymodule_import",{"_index":2708,"title":{},"body":{"modules/HelgolandPlotlyModule.html":{}}}],["cluster_helgolandselectormodul",{"_index":2712,"title":{},"body":{"modules/HelgolandSelectorModule.html":{},"overview.html":{}}}],["cluster_helgolandselectormodule_declar",{"_index":2713,"title":{},"body":{"modules/HelgolandSelectorModule.html":{},"overview.html":{}}}],["cluster_helgolandselectormodule_export",{"_index":2715,"title":{},"body":{"modules/HelgolandSelectorModule.html":{},"overview.html":{}}}],["cluster_helgolandselectormodule_import",{"_index":2714,"title":{},"body":{"modules/HelgolandSelectorModule.html":{}}}],["cluster_helgolandselectormodule_provid",{"_index":2716,"title":{},"body":{"modules/HelgolandSelectorModule.html":{},"overview.html":{}}}],["cluster_helgolandtimemodul",{"_index":2724,"title":{},"body":{"modules/HelgolandTimeModule.html":{},"overview.html":{}}}],["cluster_helgolandtimemodule_declar",{"_index":2725,"title":{},"body":{"modules/HelgolandTimeModule.html":{}}}],["cluster_helgolandtimemodule_export",{"_index":2727,"title":{},"body":{"modules/HelgolandTimeModule.html":{}}}],["cluster_helgolandtimemodule_import",{"_index":2726,"title":{},"body":{"modules/HelgolandTimeModule.html":{}}}],["cluster_helgolandtimerangeslidermodul",{"_index":2734,"title":{},"body":{"modules/HelgolandTimeRangeSliderModule.html":{},"overview.html":{}}}],["cluster_helgolandtimerangeslidermodule_declar",{"_index":2735,"title":{},"body":{"modules/HelgolandTimeRangeSliderModule.html":{},"overview.html":{}}}],["cluster_helgolandtimerangeslidermodule_export",{"_index":2736,"title":{},"body":{"modules/HelgolandTimeRangeSliderModule.html":{},"overview.html":{}}}],["cluster_helgolandtimerangeslidermodule_provid",{"_index":2737,"title":{},"body":{"modules/HelgolandTimeRangeSliderModule.html":{},"overview.html":{}}}],["code",{"_index":334,"title":{},"body":{"interfaces/BlacklistedService.html":{},"interfaces/CollectionMetadata.html":{},"interfaces/DatasetApi.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{},"interfaces/Language.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"index.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["collect",{"_index":3816,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["collectionmetadata",{"_index":627,"title":{"interfaces/CollectionMetadata.html":{}},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["color",{"_index":209,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandModificationModule.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"dependencies.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["color/color.servic",{"_index":2577,"title":{},"body":{"modules/HelgolandCoreModule.html":{}}}],["colorlist",{"_index":332,"title":{},"body":{"interfaces/BlacklistedService.html":{},"components/ColorSelectorComponent.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["colorpickermodul",{"_index":2687,"title":{},"body":{"modules/HelgolandModificationModule.html":{}}}],["colors[i",{"_index":4605,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["colorselectorcompon",{"_index":208,"title":{"components/ColorSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandModificationModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["colorservic",{"_index":659,"title":{"injectables/ColorService.html":{}},"body":{"injectables/ColorService.html":{},"interfaces/DataConst.html":{},"modules/HelgolandCoreModule.html":{},"interfaces/HighlightDataset.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/YScale.html":{},"overview.html":{}}}],["combi",{"_index":3477,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["combin",{"_index":2405,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"index.html":{},"license.html":{}}}],["command",{"_index":4184,"title":{},"body":{"index.html":{},"additional-documentation/how-tos.html":{}}}],["commerci",{"_index":4426,"title":{},"body":{"license.html":{}}}],["common",{"_index":4254,"title":{},"body":{"license.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["commonmodul",{"_index":2564,"title":{},"body":{"modules/HelgolandControlModule.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{}}}],["commun",{"_index":4307,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{}}}],["compar",{"_index":4528,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["compat",{"_index":4135,"title":{},"body":{"dependencies.html":{}}}],["compil",{"_index":4279,"title":{},"body":{"license.html":{}}}],["compileropt",{"_index":4220,"title":{},"body":{"index.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["complet",{"_index":4186,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["compli",{"_index":4378,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":4192,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":4088,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":174,"title":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"classes/CachedMapComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandTimeModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["component.t",{"_index":394,"title":{},"body":{"classes/CachedMapComponent.html":{},"miscellaneous/variables.html":{}}}],["component.ts:102",{"_index":457,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:106",{"_index":450,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:123",{"_index":451,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:132",{"_index":449,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:141",{"_index":462,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:148",{"_index":447,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:166",{"_index":460,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:173",{"_index":463,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:186",{"_index":464,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:20",{"_index":470,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:23",{"_index":472,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:26",{"_index":467,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:29",{"_index":473,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:32",{"_index":465,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:35",{"_index":469,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:38",{"_index":475,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:46",{"_index":437,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:48",{"_index":442,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:49",{"_index":441,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:50",{"_index":435,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:51",{"_index":444,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:53",{"_index":433,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:54",{"_index":432,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:55",{"_index":431,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:56",{"_index":430,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:66",{"_index":458,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:72",{"_index":455,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component.ts:83",{"_index":452,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["component_templ",{"_index":203,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["compris",{"_index":4484,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["comput",{"_index":4423,"title":{},"body":{"license.html":{}}}],["condit",{"_index":4238,"title":{},"body":{"license.html":{}}}],["config",{"_index":807,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["configur",{"_index":4277,"title":{},"body":{"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["confirmlabel",{"_index":2871,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["confirmlabel(observ",{"_index":2878,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["confirmvers",{"_index":1534,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["confirmversion(observ",{"_index":1537,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["consequenti",{"_index":4416,"title":{},"body":{"license.html":{}}}],["consist",{"_index":4434,"title":{},"body":{"license.html":{}}}],["consol",{"_index":1482,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["console.error('internalid",{"_index":2802,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{}}}],["console.error('wrong",{"_index":2431,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"injectables/Time.html":{}}}],["console.error(error",{"_index":1484,"title":{},"body":{"interfaces/DataConst.html":{},"pipes/DateProxyPipe.html":{},"interfaces/HighlightDataset.html":{},"injectables/LocateService.html":{},"interfaces/YScale.html":{}}}],["console.log('error",{"_index":1475,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["console.log('reload",{"_index":1663,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["console.log('timespan",{"_index":3393,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["conspicu",{"_index":4314,"title":{},"body":{"license.html":{}}}],["const",{"_index":85,"title":{},"body":{"interfaces/Address.html":{},"injectables/BasicAuthService.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandTimeModule.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"injectables/LabelMapperService.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalStorage.html":{},"injectables/LocateService.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"classes/PermalinkService.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"injectables/StatusIntervalResolverService.html":{},"injectables/Time.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["constitut",{"_index":4352,"title":{},"body":{"license.html":{}}}],["constru",{"_index":4376,"title":{},"body":{"license.html":{}}}],["construct",{"_index":2797,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"components/PredefinedTimespanSelectorComponent.html":{}}}],["constructor",{"_index":60,"title":{},"body":{"interfaces/Address.html":{},"injectables/BasicAuthService.html":{},"classes/BufferedTime.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/MinMaxRange.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"injectables/StatusIntervalResolverService.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["constructor(api",{"_index":3430,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["constructor(apiinterfac",{"_index":1588,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{}}}],["constructor(cach",{"_index":569,"title":{},"body":{"injectables/CachingInterceptor.html":{},"components/TimeRangeSliderComponent.html":{}}}],["constructor(favoritesrvc",{"_index":2813,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["constructor(favsrvc",{"_index":2371,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["constructor(from",{"_index":3996,"title":{},"body":{"classes/Timespan.html":{}}}],["constructor(http",{"_index":299,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/DatasetApiMapping.html":{},"injectables/NominatimGeoSearchService.html":{}}}],["constructor(httpcli",{"_index":2874,"title":{},"body":{"injectables/LabelMapperService.html":{},"injectables/StatusCheckService.html":{}}}],["constructor(httphandl",{"_index":2755,"title":{},"body":{"injectables/HttpService.html":{}}}],["constructor(httpservic",{"_index":2092,"title":{},"body":{"injectables/EventingImplApiInterface.html":{},"injectables/SplittedDataDatasetApiInterface.html":{}}}],["constructor(internalid",{"_index":1826,"title":{},"body":{"classes/DatasetOptions.html":{},"classes/TimedDatasetOptions.html":{}}}],["constructor(internalidhandl",{"_index":2931,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["constructor(iterablediff",{"_index":1868,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["constructor(labelmappersrvc",{"_index":2860,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["constructor(listselectorservic",{"_index":2958,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["constructor(localstorag",{"_index":1950,"title":{},"body":{"classes/DatasetService.html":{},"injectables/FavoriteService.html":{},"injectables/Time.html":{}}}],["constructor(locateservic",{"_index":3074,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["constructor(mapcach",{"_index":426,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/ExtentControlComponent.html":{},"components/GeosearchControlComponent.html":{},"injectables/LocateService.html":{},"components/ZoomControlComponent.html":{}}}],["constructor(opt",{"_index":2470,"title":{},"body":{"classes/GeoCureGeoJSON.html":{}}}],["constructor(predefinedsrvc",{"_index":4002,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["constructor(serviceselectorservic",{"_index":3689,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["constructor(set",{"_index":3624,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["constructor(settingsrvc",{"_index":3308,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["constructor(timesrvc",{"_index":698,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["constructor(timestamp",{"_index":360,"title":{},"body":{"classes/BufferedTime.html":{}}}],["constructor(transl",{"_index":2915,"title":{},"body":{"classes/LanguageChangNotifier.html":{},"classes/LocalSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["conta",{"_index":1446,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["contain",{"_index":829,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/YScale.html":{},"index.html":{},"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["content",{"_index":1904,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"license.html":{}}}],["content.t",{"_index":2547,"title":{},"body":{"classes/HasLoadableContent.html":{}}}],["content.ts:5",{"_index":2548,"title":{},"body":{"classes/HasLoadableContent.html":{}}}],["content.ts:7",{"_index":2550,"title":{},"body":{"classes/HasLoadableContent.html":{}}}],["context",{"_index":4455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":4260,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":4298,"title":{},"body":{"license.html":{}}}],["contribution(",{"_index":4344,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":486,"title":{},"body":{"classes/CachedMapComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["contributori",{"_index":4353,"title":{},"body":{"license.html":{}}}],["control",{"_index":288,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["control'},{'nam",{"_index":228,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["convers",{"_index":4280,"title":{},"body":{"license.html":{}}}],["coord",{"_index":845,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["coordin",{"_index":100,"title":{},"body":{"interfaces/Address.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"interfaces/YScale.html":{}}}],["coords[0",{"_index":1348,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["copi",{"_index":484,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["copyright",{"_index":4246,"title":{},"body":{"license.html":{}}}],["core",{"_index":4114,"title":{},"body":{"dependencies.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["correctli",{"_index":4525,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["correspond",{"_index":3355,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"injectables/StatusCheckService.html":{}}}],["count",{"_index":3385,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["counter",{"_index":1583,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["counterclaim",{"_index":4349,"title":{},"body":{"license.html":{}}}],["counterxaxi",{"_index":2147,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["counteryaxi",{"_index":2148,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["counti",{"_index":13,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["countri",{"_index":11,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["country_cod",{"_index":12,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["countrycod",{"_index":118,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["creat",{"_index":488,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/ListSelectorComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["createbaseurl",{"_index":3226,"title":{},"body":{"classes/PermalinkService.html":{}}}],["createbasicauthhead",{"_index":2089,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["createbasicauthheader(token",{"_index":2098,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["creategeojson",{"_index":3483,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["creategeojson(profiledataentri",{"_index":3490,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["createmap",{"_index":409,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["createpermalink",{"_index":3225,"title":{},"body":{"classes/PermalinkService.html":{}}}],["createrefvalid(refid",{"_index":3605,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["createrequesttimespan",{"_index":137,"title":{},"body":{"classes/ApiInterface.html":{},"classes/EventingApiService.html":{}}}],["createrequesttimespan(timespan",{"_index":139,"title":{},"body":{"classes/ApiInterface.html":{},"classes/EventingApiService.html":{}}}],["createrequesturl",{"_index":138,"title":{},"body":{"classes/ApiInterface.html":{},"classes/EventingApiService.html":{}}}],["createrequesturl(apiurl",{"_index":144,"title":{},"body":{"classes/ApiInterface.html":{},"classes/EventingApiService.html":{}}}],["createstyl",{"_index":1944,"title":{},"body":{"classes/DatasetService.html":{}}}],["createstyles(internalid",{"_index":1956,"title":{},"body":{"classes/DatasetService.html":{}}}],["createtimespanofinterv",{"_index":3865,"title":{},"body":{"injectables/Time.html":{}}}],["createtimespanofinterval(timeinterv",{"_index":3876,"title":{},"body":{"injectables/Time.html":{}}}],["createxaxis(dataset",{"_index":2213,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["createyaxis(dataset",{"_index":2239,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["creation",{"_index":4550,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["cross",{"_index":4348,"title":{},"body":{"license.html":{}}}],["crosshair",{"_index":3293,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["css",{"_index":4552,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["current",{"_index":1302,"title":{},"body":{"interfaces/DataConst.html":{},"pipes/DateProxyPipe.html":{},"interfaces/HighlightDataset.html":{},"injectables/LabelMapperService.html":{},"components/ServiceSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{}}}],["current_month",{"_index":2021,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["current_week",{"_index":2019,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["current_year",{"_index":2023,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["currentlang",{"_index":3031,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["currenttim",{"_index":384,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/LocalHttpCache.html":{}}}],["currenttimeid",{"_index":864,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["cursor",{"_index":1443,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["curve(curvelinear",{"_index":1659,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["curve(d3.curvelinear",{"_index":1322,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["curvelinear",{"_index":1635,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["custom",{"_index":1127,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["customari",{"_index":4389,"title":{},"body":{"license.html":{}}}],["d",{"_index":1196,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["d.dist",{"_index":1789,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["d.tick",{"_index":1790,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["d.timestamp",{"_index":1314,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d.valu",{"_index":2220,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["d.xdiagcoord",{"_index":1318,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d.ydiagcoord",{"_index":1321,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3",{"_index":212,"title":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandD3Module.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"dependencies.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["d3.area",{"_index":1642,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["d3.axi",{"_index":1644,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["d3.axisbottom(this.xscalebas",{"_index":1212,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.axisleft(yscale).ticks(5",{"_index":1252,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.brushx",{"_index":1107,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.event.selection[1",{"_index":1113,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.event.subject.x",{"_index":1390,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.event.x",{"_index":1385,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.extent([range[0",{"_index":2235,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["d3.extent(data.valu",{"_index":2219,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["d3.extent(dataentry.data",{"_index":998,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.j",{"_index":4490,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["d3.line",{"_index":1312,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.min(this.labeltimestamp",{"_index":1458,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.mouse(this.background.nod",{"_index":1340,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.scalelinear",{"_index":782,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.select",{"_index":818,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.select(k[0",{"_index":1263,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.select(this.d3elem.nativeel",{"_index":871,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.selectall('.focu",{"_index":1373,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.selectall('.mous",{"_index":1372,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.timeday.range(rang",{"_index":1176,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.timeformat(timeformatstring)(new",{"_index":1215,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.timehours(rang",{"_index":1174,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3.timeminutes(rang",{"_index":1171,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3axistyp",{"_index":674,"title":{},"body":{"interfaces/D3GraphOptions.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"miscellaneous/enumerations.html":{}}}],["d3axistype.dist",{"_index":1648,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["d3axistype.tick",{"_index":1714,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["d3axistype.tim",{"_index":1712,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["d3elem",{"_index":804,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["d3graphopt",{"_index":668,"title":{"interfaces/D3GraphOptions.html":{}},"body":{"interfaces/D3GraphOptions.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["d3overviewtimeseriesgraphcompon",{"_index":211,"title":{"components/D3OverviewTimeseriesGraphComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandD3Module.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["d3plotopt",{"_index":705,"title":{"interfaces/D3PlotOptions.html":{}},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["d3selectionrang",{"_index":747,"title":{"classes/D3SelectionRange.html":{}},"body":{"classes/D3SelectionRange.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["d3timeseriesgraphcompon",{"_index":216,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandD3Module.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["d3trajectorygraphcompon",{"_index":217,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandD3Module.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["d[0",{"_index":1315,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["daili",{"_index":1175,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["damag",{"_index":4413,"title":{},"body":{"license.html":{}}}],["darkgreen",{"_index":4601,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["dasharray",{"_index":1126,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["data",{"_index":638,"title":{"interfaces/Data.html":{}},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataSeries.html":{},"interfaces/DatasetApiV2.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataEntry.html":{},"interfaces/Id.html":{},"interfaces/Layout.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValues.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"interfaces/TimeValueEntry.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["data(entry.data.filter((d",{"_index":1328,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["data(valu",{"_index":1718,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["data.dist",{"_index":1711,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["data.referencevalues[refvalue.id",{"_index":989,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["data.t",{"_index":1978,"title":{},"body":{"interfaces/DatasetTableData.html":{}}}],["data.tick",{"_index":1715,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["data.timestamp",{"_index":1713,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["data.valu",{"_index":956,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["data.values.foreach((entri",{"_index":3515,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["data.values.length",{"_index":2175,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["data.values[0",{"_index":2180,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["data.verticalunit",{"_index":2242,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["data:application/json",{"_index":2834,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["dataconst",{"_index":762,"title":{"interfaces/DataConst.html":{}},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataentri",{"_index":772,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataentry.axisoptions.uom",{"_index":1013,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataentry.axisoptions.yaxisrang",{"_index":996,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataentry.axisoptions.zerobas",{"_index":1014,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataentry.bars.linewidth",{"_index":968,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataentry.datas[key",{"_index":2203,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["dataentry.datas[key].value.foreach((entri",{"_index":2197,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["dataentry.dataset.internalid",{"_index":2201,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["dataentry.internalid",{"_index":1010,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataentry.label",{"_index":2207,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["dataentry.lines.linewidth",{"_index":966,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataentry.lines.pointradiu",{"_index":967,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataentry.options.foreach((opt",{"_index":2194,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["dataentry.vis",{"_index":1011,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataext",{"_index":997,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataextent[1",{"_index":1007,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dataindex",{"_index":2265,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["datalength",{"_index":1646,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["dataparameterfilt",{"_index":1485,"title":{"interfaces/DataParameterFilter.html":{}},"body":{"interfaces/DataParameterFilter.html":{},"interfaces/DatasetApiV2.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/ParameterFilter.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["dataseri",{"_index":815,"title":{"interfaces/DataSeries.html":{}},"body":{"interfaces/DataConst.html":{},"interfaces/DataSeries.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Plot.html":{},"interfaces/SeriesOptions.html":{},"interfaces/YScale.html":{}}}],["dataset",{"_index":220,"title":{"classes/Dataset.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandSelectorModule.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["dataset.id",{"_index":924,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/YScale.html":{}}}],["dataset.internalid",{"_index":946,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/SingleFavorite.html":{},"interfaces/YScale.html":{}}}],["dataset.label",{"_index":959,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"interfaces/SingleFavorite.html":{},"interfaces/YScale.html":{}}}],["dataset.lastvalue.timestamp",{"_index":3510,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["dataset.uom",{"_index":950,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["dataset.url",{"_index":925,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/YScale.html":{}}}],["dataset?.parameters.phenomenon.label",{"_index":4023,"title":{},"body":{"components/TrajectoryEntryComponent.html":{}}}],["datasetapi",{"_index":327,"title":{"interfaces/DatasetApi.html":{}},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["datasetapiinterfac",{"_index":768,"title":{},"body":{"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/FilteredParameter.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["datasetapilist",{"_index":3684,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["datasetapimap",{"_index":1530,"title":{"injectables/DatasetApiMapping.html":{}},"body":{"injectables/DatasetApiMapping.html":{},"modules/HelgolandCoreModule.html":{},"components/ListSelectorComponent.html":{},"overview.html":{}}}],["datasetapiv1",{"_index":1559,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["datasetapiv2",{"_index":1556,"title":{"interfaces/DatasetApiV2.html":{}},"body":{"interfaces/DatasetApiV2.html":{},"classes/UriParameterCoder.html":{}}}],["datasetapivers",{"_index":1539,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"components/ListSelectorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["datasetapiversion.v1",{"_index":1550,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"components/ListSelectorComponent.html":{}}}],["datasetapiversion.v2",{"_index":1553,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"components/ListSelectorComponent.html":{}}}],["datasetbystationselectorcompon",{"_index":219,"title":{"components/DatasetByStationSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["datasetconstel",{"_index":1624,"title":{"interfaces/DatasetConstellation.html":{}},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["datasetentri",{"_index":1691,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["datasetentry.data",{"_index":1736,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["datasetentry.data.foreach((elem",{"_index":1696,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["datasetentry.dataset.internalid",{"_index":1740,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["datasetentry.dataset.uom",{"_index":1739,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["datasetentry.drawopt",{"_index":1738,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["datasetentry.yscal",{"_index":1746,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["datasetid",{"_index":691,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["datasetidresolv",{"_index":866,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["datasetidschang",{"_index":1914,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["datasetidschanges.foreachaddeditem((addeditem",{"_index":1916,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["datasetidschanges.foreachremoveditem((removeditem",{"_index":1918,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["datasetidsdiff",{"_index":1854,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["datasetidsmultipl",{"_index":4560,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["datasetidx",{"_index":944,"title":{},"body":{"interfaces/DataConst.html":{},"classes/DatasetService.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["datasetimplapiinterfac",{"_index":3768,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["datasetmap",{"_index":862,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["datasetopt",{"_index":692,"title":{"classes/DatasetOptions.html":{}},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DrawOptions.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/MinMaxRange.html":{},"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["datasetoptions(entri",{"_index":4576,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["datasetoptions.gener",{"_index":931,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["datasetoptions:16",{"_index":3974,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:17",{"_index":3972,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:18",{"_index":3980,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:19",{"_index":3976,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:20",{"_index":3978,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:21",{"_index":3982,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:22",{"_index":3973,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:23",{"_index":3979,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:24",{"_index":3977,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:25",{"_index":3975,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptions:26",{"_index":3981,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["datasetoptionschang",{"_index":1860,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["datasetoptionschanged(internalid",{"_index":915,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["datasetoptionsmultipl",{"_index":4573,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["datasetparameterconstel",{"_index":1511,"title":{"classes/DatasetParameterConstellation.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["datasetpresentercompon",{"_index":769,"title":{"classes/DatasetPresenterComponent.html":{}},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["datasets.foreach((dataset",{"_index":3508,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["datasetservic",{"_index":1942,"title":{"classes/DatasetService.html":{}},"body":{"classes/DatasetService.html":{}}}],["datasettablecompon",{"_index":222,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandDatasetTableModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["datasettabledata",{"_index":1975,"title":{"interfaces/DatasetTableData.html":{}},"body":{"interfaces/DatasetTableData.html":{}}}],["datasettyp",{"_index":1500,"title":{},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"miscellaneous/enumerations.html":{}}}],["datayrang",{"_index":793,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["date",{"_index":361,"title":{},"body":{"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"pipes/DateProxyPipe.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/Layout.html":{},"injectables/LocalHttpCache.html":{},"classes/OnGoingHttpCache.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/Timespan.html":{},"components/TimespanShiftSelectorComponent.html":{},"license.html":{}}}],["date('2017",{"_index":4596,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["date().gettim",{"_index":385,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/LocalHttpCache.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["date(d.valueof",{"_index":1216,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["date(this.dataset.firstvalue.timestamp",{"_index":3557,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["date(this.dataset.lastvalue.timestamp",{"_index":3559,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["date(this.xaxisrange.to",{"_index":1172,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["datepip",{"_index":1987,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["datepipe('en').transform(valu",{"_index":2004,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["datepipe(this.translate.currentlang",{"_index":1999,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["dateproxypip",{"_index":1980,"title":{"pipes/DateProxyPipe.html":{}},"body":{"pipes/DateProxyPipe.html":{},"modules/HelgolandCoreModule.html":{},"overview.html":{}}}],["datetim",{"_index":1979,"title":{},"body":{"interfaces/DatasetTableData.html":{}}}],["datum",{"_index":999,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["datum(entry.data",{"_index":1324,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["datum(valu",{"_index":1725,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["datum[0",{"_index":1001,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["datum[1",{"_index":1000,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["datum[options.id",{"_index":1794,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["days').endof('day').unix",{"_index":2035,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["days').startof('day').unix",{"_index":2034,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["declar",{"_index":2129,"title":{},"body":{"modules/EventingModule.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"injectables/LabelMapperService.html":{},"overview.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["decodekey",{"_index":4027,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["decodekey(key",{"_index":4031,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["decodevalu",{"_index":4028,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["decodevalue(valu",{"_index":4033,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["default",{"_index":440,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"classes/ExtendedTimeseries.html":{},"injectables/FavoriteService.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"classes/IdCache.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/MapCache.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"classes/PermalinkService.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"classes/SettingsService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/YScale.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["default_base_layer_attribut",{"_index":483,"title":{},"body":{"classes/CachedMapComponent.html":{},"miscellaneous/variables.html":{}}}],["default_base_layer_nam",{"_index":479,"title":{},"body":{"classes/CachedMapComponent.html":{},"miscellaneous/variables.html":{}}}],["default_base_layer_url",{"_index":481,"title":{},"body":{"classes/CachedMapComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultgraphopt",{"_index":1647,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["defaults.styleext",{"_index":4616,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["defaultselect",{"_index":1586,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["defaultstyl",{"_index":3480,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["defend",{"_index":4436,"title":{},"body":{"license.html":{}}}],["defin",{"_index":141,"title":{},"body":{"classes/ApiInterface.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/D3SelectionRange.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/Filter.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"classes/GeoSearch.html":{},"components/GeosearchControlComponent.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"classes/IdCache.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/Plot.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/SettingsService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"injectables/StatusCheckService.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["definedtimespan",{"_index":2011,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"components/TimespanButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["definedtimespanservic",{"_index":2005,"title":{"injectables/DefinedTimespanService.html":{}},"body":{"injectables/DefinedTimespanService.html":{},"modules/HelgolandCoreModule.html":{},"components/TimespanButtonComponent.html":{},"overview.html":{}}}],["definit",{"_index":4241,"title":{},"body":{"license.html":{}}}],["delaytouchend",{"_index":3301,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["delet",{"_index":387,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["deliber",{"_index":4410,"title":{},"body":{"license.html":{}}}],["deliverymethod",{"_index":647,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["demo",{"_index":4203,"title":{},"body":{"index.html":{}}}],["dep",{"_index":4533,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["depend",{"_index":1203,"title":{"dependencies.html":{}},"body":{"interfaces/DataConst.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["depict",{"_index":4486,"title":{},"body":{"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["deriv",{"_index":4288,"title":{},"body":{"license.html":{}}}],["describ",{"_index":3349,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["descript",{"_index":740,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"classes/DatasetOptions.html":{},"injectables/InternalIdHandler.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/StatusCheckService.html":{}}}],["design",{"_index":4316,"title":{},"body":{"license.html":{}}}],["detail",{"_index":4517,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["determin",{"_index":4401,"title":{},"body":{"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["determinedlabel",{"_index":2859,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["devkit/cor",{"_index":4513,"title":{},"body":{"additional-documentation/how-tos.html":{}}}],["diagram",{"_index":800,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["diagramoptionsd3",{"_index":4570,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["diagramwidth",{"_index":1156,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["diff",{"_index":1389,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["differ",{"_index":428,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["diffoverviewtimeinterv",{"_index":1157,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dimens",{"_index":1471,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dimensions.height",{"_index":1474,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dimensions.width",{"_index":1473,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["direct",{"_index":201,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["directori",{"_index":4507,"title":{},"body":{"additional-documentation/how-tos.html":{}}}],["disabl",{"_index":1421,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/ListSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["disclaim",{"_index":4390,"title":{},"body":{"license.html":{}}}],["discuss",{"_index":4311,"title":{},"body":{"license.html":{}}}],["display",{"_index":4333,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["display_nam",{"_index":42,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["displaylogo",{"_index":2161,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["displaymodebar",{"_index":2157,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["displaynam",{"_index":112,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["dist",{"_index":1637,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["distanc",{"_index":1178,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"miscellaneous/enumerations.html":{}}}],["distribut",{"_index":4240,"title":{},"body":{"license.html":{}}}],["div",{"_index":4619,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["divid",{"_index":4483,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["divoverviewtimewidth",{"_index":1158,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["do",{"_index":584,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["doc",{"_index":3350,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["docheck",{"_index":396,"title":{},"body":{"classes/CachedMapComponent.html":{},"classes/DatasetPresenterComponent.html":{},"injectables/StatusCheckService.html":{}}}],["docheck(url",{"_index":3823,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["docheckurl",{"_index":3811,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["docheckurl(url",{"_index":3825,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["document",{"_index":4191,"title":{},"body":{"index.html":{},"license.html":{}}}],["document.body.appendchild(a",{"_index":2839,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["document.body.appendchild(nod",{"_index":3181,"title":{},"body":{"injectables/NotifierService.html":{}}}],["document.createelement('a",{"_index":2832,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["document.createelement('div",{"_index":3175,"title":{},"body":{"injectables/NotifierService.html":{}}}],["document.createtextnod",{"_index":3179,"title":{},"body":{"injectables/NotifierService.html":{}}}],["document.getelementbyid(id",{"_index":3173,"title":{},"body":{"injectables/NotifierService.html":{}}}],["doesn't",{"_index":3360,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["dom",{"_index":177,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["domain",{"_index":824,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["domain([range[0",{"_index":1797,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["domain([this.xaxisrange.from",{"_index":1185,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["domain([ymin",{"_index":1249,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["domain(this.getxdomain(this.basevalu",{"_index":1804,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["dommaxarr.push(entry.data.find((elem",{"_index":1419,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["domminarr.push(entry.data.find((elem",{"_index":1416,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["don't",{"_index":4231,"title":{},"body":{"index.html":{}}}],["done",{"_index":4579,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["dot",{"_index":673,"title":{},"body":{"interfaces/D3GraphOptions.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["drag",{"_index":225,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandModificationModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{}}}],["dragcurr",{"_index":854,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dragendhandl",{"_index":1763,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["draggingmov",{"_index":855,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["draghandl",{"_index":1762,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["dragmod",{"_index":2152,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["dragmoverang",{"_index":857,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dragmovestart",{"_index":856,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dragoptionscompon",{"_index":224,"title":{"components/DragOptionsComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandModificationModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["dragrect",{"_index":820,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dragrectg",{"_index":821,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dragstart",{"_index":853,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["dragstarthandl",{"_index":1761,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["draw",{"_index":1043,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["drawchart",{"_index":2256,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["drawdots(valu",{"_index":1716,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["drawgeometri",{"_index":3245,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["drawgraph(yscal",{"_index":1726,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["drawlinegraph",{"_index":1730,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["drawopt",{"_index":1625,"title":{"interfaces/DrawOptions.html":{}},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["drawvalueline(valu",{"_index":1723,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["drawxaxis(buff",{"_index":1803,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["drawxaxis(bufferxrang",{"_index":1182,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["drawyaxis(entri",{"_index":1239,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["drawyaxis(opt",{"_index":1792,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["durat",{"_index":3900,"title":{},"body":{"injectables/Time.html":{}}}],["durationmilli",{"_index":3910,"title":{},"body":{"injectables/Time.html":{}}}],["dynam",{"_index":4086,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":2850,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["e.cod",{"_index":3047,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["e.color",{"_index":3602,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["e.g",{"_index":975,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{}}}],["e.internalid",{"_index":904,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["e.label",{"_index":3327,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["e.nam",{"_index":3326,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["e.referencevalueid",{"_index":3597,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["e.seperatorafterthisitem",{"_index":3330,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["e.target.result",{"_index":2851,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["e.timestamp",{"_index":2186,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["e.uom",{"_index":1023,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["e.vis",{"_index":3604,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["each",{"_index":830,"title":{},"body":{"interfaces/DataConst.html":{},"classes/DatasetOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["edg",{"_index":1180,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["editableopt",{"_index":3417,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["editdatasetopt",{"_index":3419,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["editdatasetoptions(opt",{"_index":3442,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["editori",{"_index":4289,"title":{},"body":{"license.html":{}}}],["el",{"_index":1467,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["el.getbbox",{"_index":1472,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["elabor",{"_index":4291,"title":{},"body":{"license.html":{}}}],["electron",{"_index":4304,"title":{},"body":{"license.html":{}}}],["elem",{"_index":1461,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["elem.label",{"_index":2437,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["elem.xdiagcoord",{"_index":1417,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["element",{"_index":200,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{}}}],["elementref",{"_index":764,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["emit",{"_index":4581,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["empti",{"_index":2169,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"classes/SettingsService.html":{}}}],["en",{"_index":2000,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["enabl",{"_index":1426,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["encapsul",{"_index":795,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/YScale.html":{}}}],["encod",{"_index":2118,"title":{},"body":{"injectables/EventingImplApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["encodekey",{"_index":4029,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["encodekey(key",{"_index":4035,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["encodeuri(moment(timespan.from).format",{"_index":159,"title":{},"body":{"classes/ApiInterface.html":{}}}],["encodeuricomponent(json",{"_index":2835,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["encodeuricomponent(key",{"_index":4048,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["encodeuricomponent(this.url",{"_index":3213,"title":{},"body":{"components/PermalinkInMailComponent.html":{}}}],["encodeuricomponent(valu",{"_index":4049,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["encodevalu",{"_index":4030,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["encodevalue(valu",{"_index":4037,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["end",{"_index":156,"title":{},"body":{"classes/ApiInterface.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/Time.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/YScale.html":{}}}],["end.add(1",{"_index":3782,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["end.unix",{"_index":3780,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["endof(str",{"_index":3344,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["endpoint",{"_index":145,"title":{},"body":{"classes/ApiInterface.html":{},"classes/EventingApiService.html":{},"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["enough",{"_index":4556,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["enter().append('circl",{"_index":1329,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entiti",{"_index":4248,"title":{},"body":{"license.html":{}}}],["entri",{"_index":1238,"title":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"injectables/LocateService.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"interfaces/SingleFavorite.html":{},"injectables/StatusCheckService.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["entry'},{'nam",{"_index":267,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["entry.apiurl",{"_index":3752,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["entry.axisoptions.uom",{"_index":1294,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.color",{"_index":1084,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.compon",{"_index":2613,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entry.component.html",{"_index":3416,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entry.component.scss",{"_index":3415,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{}}}],["entry.component.t",{"_index":2925,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entry.component.ts:10",{"_index":2942,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["entry.component.ts:13",{"_index":2941,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entry.component.ts:16",{"_index":2943,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entry.component.ts:19",{"_index":2932,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entry.component.ts:21",{"_index":4022,"title":{},"body":{"components/TrajectoryEntryComponent.html":{}}}],["entry.component.ts:22",{"_index":3432,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:23",{"_index":4021,"title":{},"body":{"components/TrajectoryEntryComponent.html":{}}}],["entry.component.ts:25",{"_index":2935,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:28",{"_index":3436,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:31",{"_index":3437,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:32",{"_index":2936,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entry.component.ts:34",{"_index":3438,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:36",{"_index":2937,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["entry.component.ts:37",{"_index":3439,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entry.component.ts:39",{"_index":3459,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:41",{"_index":2939,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entry.component.ts:42",{"_index":3431,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:48",{"_index":2934,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["entry.component.ts:51",{"_index":3449,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:55",{"_index":3443,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:59",{"_index":3453,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:64",{"_index":3444,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:7",{"_index":2940,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["entry.component.ts:71",{"_index":3447,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:75",{"_index":3451,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.component.ts:91",{"_index":3445,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["entry.data",{"_index":1346,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.data.length",{"_index":1295,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.data[idx",{"_index":1432,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.dataset",{"_index":1665,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["entry.dataset.uom",{"_index":1776,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["entry.drawopt",{"_index":1749,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["entry.filt",{"_index":2416,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["entry.filter[this.parameters[index].typ",{"_index":2995,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["entry.filterlist",{"_index":2440,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["entry.first",{"_index":1034,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.focuslabel",{"_index":1082,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.focuslabel.text(item[id",{"_index":1449,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.focuslabelrect",{"_index":1077,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.geometry.coordinates[0",{"_index":3277,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["entry.id",{"_index":1552,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{}}}],["entry.internalid",{"_index":897,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.internalid.startswith('ref",{"_index":983,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.isdis",{"_index":2984,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["entry.itemid",{"_index":2996,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["entry.label",{"_index":2438,"title":{},"body":{"interfaces/FilteredParameter.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["entry.lines.linewidth",{"_index":1325,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.lines.pointradiu",{"_index":1335,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.offset",{"_index":1036,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.options.titl",{"_index":3115,"title":{},"body":{"injectables/LocateService.html":{}}}],["entry.points.length",{"_index":2262,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["entry.points[0].data.id",{"_index":2264,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["entry.points[0].pointnumb",{"_index":2266,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["entry.quantities.platform",{"_index":3706,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["entry.quantities.st",{"_index":3708,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["entry.reduce((previ",{"_index":3786,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["entry.select",{"_index":1615,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["entry.serviceid",{"_index":3751,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["entry.uom",{"_index":1271,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.url",{"_index":2422,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["entry.yscal",{"_index":1042,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entry.yscale(item[id",{"_index":1777,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["entry/profil",{"_index":2612,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"components/ProfileEntryComponent.html":{}}}],["entry/timeseri",{"_index":2614,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"injectables/ReferenceValueColorCache.html":{}}}],["entry/trajectori",{"_index":2615,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"components/TrajectoryEntryComponent.html":{}}}],["entryidx",{"_index":1344,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["entryone.id",{"_index":3009,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["entryone.url",{"_index":3011,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["entrytwo.id",{"_index":3010,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["entrytwo.url",{"_index":3012,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["entryx",{"_index":1450,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["enum",{"_index":1518,"title":{},"body":{"classes/Dataset.html":{},"injectables/DatasetApiMapping.html":{},"classes/DatasetParameterConstellation.html":{},"injectables/DefinedTimespanService.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/Platform.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["enumer",{"_index":4139,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":4178,"title":{},"body":{"index.html":{}}}],["equal",{"_index":1374,"title":{},"body":{"interfaces/DataConst.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["equal(this.oldgraphopt",{"_index":1926,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["equal(valu",{"_index":1933,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["error",{"_index":621,"title":{},"body":{"injectables/CachingInterceptor.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"pipes/DateProxyPipe.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/FilteredParameter.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"injectables/LabelMapperService.html":{},"injectables/LocateService.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"injectables/StatusCheckService.html":{},"interfaces/YScale.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["error('method",{"_index":1671,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["erroronload",{"_index":2432,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["es2015",{"_index":4545,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["escap",{"_index":3383,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["eval",{"_index":3397,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["eval'",{"_index":3334,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["eval(expression)._d",{"_index":3403,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["evaluterefresh",{"_index":3620,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["even",{"_index":3359,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"license.html":{}}}],["event",{"_index":191,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"injectables/JsonFavoriteExporterService.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["event.target.fil",{"_index":2841,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["event.value[0",{"_index":3970,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["event.value[1",{"_index":3966,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["eventemitt",{"_index":192,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{}}}],["eventingapiservic",{"_index":2061,"title":{"classes/EventingApiService.html":{}},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["eventingev",{"_index":633,"title":{"interfaces/EventingEvent.html":{}},"body":{"interfaces/CollectionMetadata.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["eventingeventfilt",{"_index":2069,"title":{"interfaces/EventingEventFilter.html":{}},"body":{"classes/EventingApiService.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscriptionFilter.html":{}}}],["eventingeventresult",{"_index":645,"title":{"interfaces/EventingEventResults.html":{}},"body":{"interfaces/CollectionMetadata.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["eventingfilt",{"_index":2082,"title":{"interfaces/EventingFilter.html":{}},"body":{"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscriptionFilter.html":{}}}],["eventingimplapiinterfac",{"_index":2084,"title":{"injectables/EventingImplApiInterface.html":{}},"body":{"injectables/EventingImplApiInterface.html":{}}}],["eventingmodul",{"_index":2126,"title":{"modules/EventingModule.html":{}},"body":{"modules/EventingModule.html":{},"modules.html":{}}}],["eventingsubscript",{"_index":646,"title":{"interfaces/EventingSubscription.html":{}},"body":{"interfaces/CollectionMetadata.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["eventingsubscriptionfilt",{"_index":2074,"title":{"interfaces/EventingSubscriptionFilter.html":{}},"body":{"classes/EventingApiService.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscriptionFilter.html":{}}}],["eventingsubscriptionresult",{"_index":650,"title":{"interfaces/EventingSubscriptionResults.html":{}},"body":{"interfaces/CollectionMetadata.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["eventingtempl",{"_index":648,"title":{"interfaces/EventingTemplate.html":{}},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["eventtrigg",{"_index":639,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["eventtyp",{"_index":634,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["everyth",{"_index":3806,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["evt",{"_index":3100,"title":{},"body":{"injectables/LocateService.html":{}}}],["exampl",{"_index":1824,"title":{},"body":{"classes/DatasetOptions.html":{},"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["except",{"_index":4336,"title":{},"body":{"license.html":{}}}],["exclud",{"_index":4313,"title":{},"body":{"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["exclus",{"_index":4327,"title":{},"body":{"license.html":{}}}],["execut",{"_index":1049,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["exercis",{"_index":4270,"title":{},"body":{"license.html":{}}}],["exist",{"_index":596,"title":{},"body":{"injectables/CachingInterceptor.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["expand",{"_index":927,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/HighlightDataset.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/ParameterFilter.html":{},"interfaces/YScale.html":{}}}],["expirationtim",{"_index":378,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"injectables/LocalHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["expirationtime.gettim",{"_index":391,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/LocalHttpCache.html":{}}}],["explan",{"_index":3338,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["explicitli",{"_index":4381,"title":{},"body":{"license.html":{}}}],["export",{"_index":48,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/Feature.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Offering.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["exporter.servic",{"_index":2626,"title":{},"body":{"modules/HelgolandFavoriteModule.html":{}}}],["exporter.service.t",{"_index":2810,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["exporter.service.ts:14",{"_index":2816,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["exporter.service.ts:34",{"_index":2818,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["exporter.service.ts:8",{"_index":2814,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["exportfavorit",{"_index":2811,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["express",{"_index":3313,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"license.html":{}}}],["extend",{"_index":172,"title":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}},"body":{"interfaces/AxesOptions.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/Feature.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"interfaces/Layout.html":{},"injectables/LocalHttpCache.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/MinMaxRange.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"interfaces/Offering.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"interfaces/StatusInterval.html":{},"interfaces/SupportedMimeTypes.html":{},"classes/TimeInterval.html":{},"injectables/TimeRangeSliderCache.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["extendedscatterdata",{"_index":2131,"title":{"interfaces/ExtendedScatterData.html":{}},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["extendedsettingsservic",{"_index":4637,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["extendedtimeseri",{"_index":1595,"title":{"classes/ExtendedTimeseries.html":{}},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["extendedtimeseriescompon",{"_index":4664,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["extendedtimeseriesentrycompon",{"_index":4661,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["extent",{"_index":227,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{}}}],["extent([[0",{"_index":1108,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["extent(this.basevalu",{"_index":1793,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["extent.component.html",{"_index":2287,"title":{},"body":{"components/ExtentControlComponent.html":{}}}],["extent/extent.compon",{"_index":2653,"title":{},"body":{"modules/HelgolandMapControlModule.html":{}}}],["extentcontrolcompon",{"_index":226,"title":{"components/ExtentControlComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapControlModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["extra",{"_index":3662,"title":{},"body":{"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{}}}],["factor",{"_index":3879,"title":{},"body":{"injectables/Time.html":{}}}],["factor).unix",{"_index":3912,"title":{},"body":{"injectables/Time.html":{}}}],["failur",{"_index":4424,"title":{},"body":{"license.html":{}}}],["fals",{"_index":518,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"pipes/DateProxyPipe.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"interfaces/MinMaxRange.html":{},"classes/ParameterConstellation.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/SingleFavorite.html":{},"interfaces/StatusInterval.html":{},"injectables/Time.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["favorit",{"_index":230,"title":{"interfaces/Favorite.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandFavoriteModule.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/SingleFavorite.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/introduction.html":{}}}],["favorite').subscribe((transl",{"_index":2386,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["favorite.label",{"_index":2326,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["favorite.servic",{"_index":2819,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["favoriteid",{"_index":2364,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["favorites.foreach((entri",{"_index":2853,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["favorites.json",{"_index":2821,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["favoriteservic",{"_index":2299,"title":{"injectables/FavoriteService.html":{}},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandFavoriteModule.html":{},"injectables/JsonFavoriteExporterService.html":{},"interfaces/SingleFavorite.html":{},"overview.html":{}}}],["favoritesrvc",{"_index":2815,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["favoritetogglercompon",{"_index":229,"title":{"components/FavoriteTogglerComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandFavoriteModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["favsrvc",{"_index":2375,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["featur",{"_index":1521,"title":{"interfaces/Feature.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/Feature.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/StatusInterval.html":{},"interfaces/SupportedMimeTypes.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/UriParameterCoder.html":{}}}],["fee",{"_index":4430,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":4595,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["fetchdata",{"_index":2467,"title":{},"body":{"classes/GeoCureGeoJSON.html":{}}}],["fetchdata(map",{"_index":2473,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["fetchservicesofapi",{"_index":3736,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["fetchservicesofapi(url",{"_index":3739,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["few",{"_index":4515,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["ff",{"_index":2830,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["ff0000",{"_index":4564,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["field",{"_index":4549,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["fifti",{"_index":4263,"title":{},"body":{"license.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/Feature.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Offering.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["filenam",{"_index":2820,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["fileread",{"_index":2845,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["files.length",{"_index":2842,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["fill",{"_index":1123,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["fillcolor",{"_index":786,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["filter",{"_index":251,"title":{"classes/Filter.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/introduction.html":{}}}],["filter((",{"_index":3323,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["filter).subscrib",{"_index":2420,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["filter.servic",{"_index":2417,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["filteredparamet",{"_index":2399,"title":{"interfaces/FilteredParameter.html":{}},"body":{"interfaces/FilteredParameter.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["filteredprovid",{"_index":2403,"title":{"interfaces/FilteredProvider.html":{}},"body":{"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"interfaces/Provider.html":{}}}],["filterlist",{"_index":2402,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["filterparamet",{"_index":2101,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["find",{"_index":2240,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["findurl",{"_index":2872,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["findurl(label",{"_index":2880,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["firebrick",{"_index":4599,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["first",{"_index":594,"title":{},"body":{"injectables/CachingInterceptor.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"components/ListSelectorComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["firstchang",{"_index":916,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["firstentri",{"_index":1693,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["firstlabel",{"_index":1350,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["firstlabel.push(",{"_index":1356,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["firstlabel.sort((a",{"_index":1357,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["firstlastvalu",{"_index":1505,"title":{"classes/FirstLastValue.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/ExtendedTimeseries.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["firstvalu",{"_index":1501,"title":{},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/ExtendedTimeseries.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["fit",{"_index":4398,"title":{},"body":{"license.html":{}}}],["fitbound",{"_index":420,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["fixedrang",{"_index":2232,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["flex",{"_index":4628,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["flot",{"_index":232,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandFlotModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"dependencies.html":{},"additional-documentation/introduction.html":{}}}],["flotoverviewtimeseriesgraphcompon",{"_index":231,"title":{"components/FlotOverviewTimeseriesGraphComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandFlotModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["flottimeseriesgraphcompon",{"_index":233,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandFlotModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["focu",{"_index":1069,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["focusg",{"_index":848,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["focuslab",{"_index":1643,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["focuslabel",{"_index":1626,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["focuslabelrect",{"_index":1627,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["focuslabeltim",{"_index":850,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["folder",{"_index":4212,"title":{},"body":{"index.html":{},"additional-documentation/how-tos.html":{}}}],["follow",{"_index":4169,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["font",{"_index":4118,"title":{},"body":{"dependencies.html":{}}}],["forceupd",{"_index":1494,"title":{},"body":{"interfaces/DataParameterFilter.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/ParameterFilter.html":{}}}],["foreach((key",{"_index":4066,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["forget",{"_index":4232,"title":{},"body":{"index.html":{}}}],["fork",{"_index":4175,"title":{},"body":{"index.html":{}}}],["forkjoin",{"_index":3767,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{}}}],["forkjoin(requests).pip",{"_index":3840,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["forkjoin(requests).pipe(map((entri",{"_index":3785,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["form",{"_index":4272,"title":{},"body":{"license.html":{}}}],["format",{"_index":926,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/HighlightDataset.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/ParameterFilter.html":{},"interfaces/YScale.html":{}}}],["formsmodul",{"_index":2616,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandTimeModule.html":{}}}],["formula",{"_index":1141,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["forward",{"_index":601,"title":{},"body":{"injectables/CachingInterceptor.html":{},"pipes/DateProxyPipe.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["found",{"_index":1477,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"components/ListSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["framer",{"_index":3302,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["free",{"_index":2223,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"license.html":{}}}],["ftp|http",{"_index":2907,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["function",{"_index":531,"title":{"miscellaneous/functions.html":{}},"body":{"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/SingleFavorite.html":{},"components/TimespanButtonComponent.html":{},"interfaces/YScale.html":{},"miscellaneous/functions.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["further",{"_index":3342,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["g",{"_index":4511,"title":{},"body":{"additional-documentation/how-tos.html":{}}}],["gener",{"_index":929,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/MinMaxRange.html":{},"interfaces/ParameterFilter.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{},"index.html":{},"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["generalizeallway",{"_index":741,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/PlotOptions.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["generateinternalid",{"_index":2805,"title":{},"body":{"injectables/InternalIdHandler.html":{}}}],["generateinternalid(dataset",{"_index":2795,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{}}}],["generatepermalink",{"_index":3227,"title":{},"body":{"classes/PermalinkService.html":{}}}],["generateuuid",{"_index":410,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["geo",{"_index":4487,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["geocuregeojson",{"_index":2464,"title":{"classes/GeoCureGeoJSON.html":{}},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["geocuregeojsonopt",{"_index":2471,"title":{"interfaces/GeoCureGeoJSONOptions.html":{}},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["geojson",{"_index":33,"title":{},"body":{"interfaces/Address.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"dependencies.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["geojson.bringtofront",{"_index":3531,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["geojson.geojsonobject",{"_index":43,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Data.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/IDataEntry.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"interfaces/ProfileDataEntry.html":{},"classes/ReferenceValues.html":{},"interfaces/TimeValueEntry.html":{}}}],["geojson.geometryobject",{"_index":3794,"title":{},"body":{"classes/Station.html":{},"interfaces/StationProperties.html":{},"classes/TimeseriesCollection.html":{}}}],["geojson.on('click",{"_index":3527,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["geojson.on('mouseout",{"_index":3532,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["geojson.on('mouseov",{"_index":3529,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["geojson.point",{"_index":758,"title":{},"body":{"interfaces/Data.html":{},"interfaces/IDataEntry.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/Platform.html":{},"interfaces/ProfileDataEntry.html":{},"classes/ReferenceValues.html":{},"interfaces/TimeValueEntry.html":{}}}],["geojson.setstyle(this.defaultstyl",{"_index":3526,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["geojson.setstyle(this.highlightstyl",{"_index":3530,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["geojsonopt",{"_index":2482,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["geometri",{"_index":98,"title":{},"body":{"interfaces/Address.html":{},"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/Data.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapViewModule.html":{},"interfaces/IDataEntry.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimeseriesCollection.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["geometrymapviewercompon",{"_index":234,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapViewModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["georeverseopt",{"_index":36,"title":{"interfaces/GeoReverseOptions.html":{}},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["georeverseresult",{"_index":37,"title":{"interfaces/GeoReverseResult.html":{}},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["geosearch",{"_index":38,"title":{"classes/GeoSearch.html":{}},"body":{"interfaces/Address.html":{},"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["geosearch.component.html",{"_index":2514,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["geosearch/geosearch.compon",{"_index":2654,"title":{},"body":{"modules/HelgolandMapControlModule.html":{}}}],["geosearchcontrolcompon",{"_index":237,"title":{"components/GeosearchControlComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapControlModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["geosearchopt",{"_index":39,"title":{"interfaces/GeoSearchOptions.html":{}},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["geosearchresult",{"_index":40,"title":{"interfaces/GeoSearchResult.html":{}},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["get",{"_index":3805,"title":{"index.html":{},"license.html":{}},"body":{"injectables/StatusCheckService.html":{},"index.html":{}}}],["get(id",{"_index":2776,"title":{},"body":{"classes/IdCache.html":{}}}],["get(req",{"_index":381,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/HttpCache.html":{},"injectables/LocalHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["get>(this.options.url",{"_index":2503,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["getapivers",{"_index":1535,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["getapiversion(apiurl",{"_index":1541,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["getbufferedtimespan",{"_index":3866,"title":{},"body":{"injectables/Time.html":{}}}],["getbufferedtimespan(timespan",{"_index":3878,"title":{},"body":{"injectables/Time.html":{}}}],["getcategori",{"_index":4055,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["getcolor",{"_index":661,"title":{},"body":{"injectables/ColorService.html":{}}}],["getdata",{"_index":1560,"title":{},"body":{"interfaces/DatasetApiV2.html":{},"interfaces/Plot.html":{},"classes/UriParameterCoder.html":{}}}],["getdata(id",{"_index":1563,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["getdataset",{"_index":1561,"title":{},"body":{"interfaces/DatasetApiV2.html":{},"classes/UriParameterCoder.html":{}}}],["getdataset(id",{"_index":1565,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["getdatasets(apiurl",{"_index":1567,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["getdimens",{"_index":1476,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["getdimensions(el",{"_index":1468,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["getdur",{"_index":3867,"title":{},"body":{"injectables/Time.html":{}}}],["getduration(timespan",{"_index":3881,"title":{},"body":{"injectables/Time.html":{}}}],["getev",{"_index":2064,"title":{},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["getevent(id",{"_index":2066,"title":{},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["getevents(apiurl",{"_index":2068,"title":{},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["getfavorit",{"_index":2309,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["getfavoritegroup",{"_index":2320,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["getfeatur",{"_index":4059,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["getgeometries(id",{"_index":1579,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["getinterv",{"_index":2008,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["getinterval(intervaldescrib",{"_index":2010,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["getitemforx(x",{"_index":1785,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["getmap",{"_index":3118,"title":{},"body":{"injectables/MapCache.html":{}}}],["getmap(id",{"_index":3120,"title":{},"body":{"injectables/MapCache.html":{}}}],["getmappedlabel",{"_index":2873,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["getmappedlabel(label",{"_index":2882,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["getmatchinginterv",{"_index":3844,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["getmatchinginterval(valu",{"_index":3846,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["getoff",{"_index":4058,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["getphenomena",{"_index":4056,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["getphenomenon",{"_index":4057,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["getplatform",{"_index":1562,"title":{},"body":{"interfaces/DatasetApiV2.html":{},"classes/UriParameterCoder.html":{}}}],["getplatform(id",{"_index":1569,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["getplatforms(apiurl",{"_index":1571,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["getprocedur",{"_index":4060,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["getrandomcolor",{"_index":662,"title":{},"body":{"injectables/ColorService.html":{}}}],["getservic",{"_index":4050,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["getset",{"_index":3754,"title":{},"body":{"classes/SettingsService.html":{}}}],["getsingletimeseri",{"_index":4053,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["getstat",{"_index":4051,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["getsubscript",{"_index":2065,"title":{},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["getsubscription(id",{"_index":2071,"title":{},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["getsubscriptions(apiurl",{"_index":2073,"title":{},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["gettimeseri",{"_index":4052,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["gettimeseriesextras(id",{"_index":4054,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["gettimestampbycoord(mincalcbrush",{"_index":1163,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["gettoken",{"_index":297,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["gettsdata",{"_index":3763,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["gettsdata(id",{"_index":3765,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["getxaxislabel",{"_index":1822,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["getxdomain(valu",{"_index":1814,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["getxdomainbytimestamp",{"_index":1140,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["getxvalue(data",{"_index":1707,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["getyaxisrang",{"_index":1296,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["getyaxisrange.yscal",{"_index":1297,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["gh",{"_index":4122,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["github",{"_index":4194,"title":{},"body":{"index.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["github:flot/flot",{"_index":4112,"title":{},"body":{"dependencies.html":{}}}],["give",{"_index":1444,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"injectables/StatusCheckService.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["given",{"_index":487,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/FilteredParameter.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/StatusCheckService.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["go",{"_index":608,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["goodwil",{"_index":4421,"title":{},"body":{"license.html":{}}}],["grah",{"_index":1308,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["grant",{"_index":4249,"title":{},"body":{"license.html":{}}}],["graph",{"_index":670,"title":{},"body":{"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"modules.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["graph'},{'nam",{"_index":215,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["graph.compon",{"_index":2591,"title":{},"body":{"modules/HelgolandD3Module.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandPlotlyModule.html":{}}}],["graph.component.html",{"_index":683,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["graph.component.scss",{"_index":682,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["graph.component.t",{"_index":678,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"miscellaneous/variables.html":{}}}],["graph.component.ts:22",{"_index":2448,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:24",{"_index":703,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:25",{"_index":2449,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:27",{"_index":704,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:28",{"_index":2450,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:30",{"_index":706,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:31",{"_index":2452,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:33",{"_index":708,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:34",{"_index":2451,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:347",{"_index":2922,"title":{},"body":{"interfaces/Layout.html":{}}}],["graph.component.ts:36",{"_index":707,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:37",{"_index":2455,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:39",{"_index":711,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:40",{"_index":2454,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:42",{"_index":710,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:43",{"_index":2453,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:45",{"_index":709,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:47",{"_index":720,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:49",{"_index":721,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:50",{"_index":722,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:52",{"_index":701,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:56",{"_index":2457,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:63",{"_index":2458,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:65",{"_index":713,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:69",{"_index":2460,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:72",{"_index":714,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:73",{"_index":2456,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:78",{"_index":719,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:82",{"_index":716,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph.component.ts:86",{"_index":712,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["graph/d3",{"_index":677,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"modules/HelgolandD3Module.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["graph/flot",{"_index":2446,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{},"modules/HelgolandFlotModule.html":{},"miscellaneous/variables.html":{}}}],["graph/plotli",{"_index":2133,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"modules/HelgolandPlotlyModule.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"miscellaneous/variables.html":{}}}],["graphbodi",{"_index":819,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["graphopt",{"_index":693,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/DatasetPresenterComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["graphoptionschang",{"_index":1861,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["graphoptionschanged(opt",{"_index":912,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["greater",{"_index":4635,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["grey",{"_index":1264,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["grid",{"_index":742,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["grossli",{"_index":4411,"title":{},"body":{"license.html":{}}}],["group",{"_index":2317,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["groupcount",{"_index":2302,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["groupfav",{"_index":2301,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["groupfavorit",{"_index":2298,"title":{"interfaces/GroupFavorite.html":{}},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{},"miscellaneous/variables.html":{}}}],["gt",{"_index":4019,"title":{},"body":{"components/TimespanShiftSelectorComponent.html":{}}}],["guid",{"_index":4505,"title":{},"body":{"additional-documentation/how-tos.html":{}}}],["h",{"_index":1470,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["h:%m",{"_index":1198,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["h:%m:%s')(new",{"_index":1809,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["halfdur",{"_index":3896,"title":{},"body":{"injectables/Time.html":{}}}],["handl",{"_index":1135,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["handle(req",{"_index":2762,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["handler",{"_index":602,"title":{},"body":{"injectables/CachingInterceptor.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["handler.servic",{"_index":1899,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"modules/HelgolandCoreModule.html":{},"injectables/SplittedDataDatasetApiInterface.html":{}}}],["handler.service.t",{"_index":2788,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"miscellaneous/variables.html":{}}}],["handler.service.ts:24",{"_index":2807,"title":{},"body":{"injectables/InternalIdHandler.html":{}}}],["handler.service.ts:33",{"_index":2808,"title":{},"body":{"injectables/InternalIdHandler.html":{}}}],["harmless",{"_index":4438,"title":{},"body":{"license.html":{}}}],["has(id",{"_index":2778,"title":{},"body":{"classes/IdCache.html":{}}}],["has(req",{"_index":2749,"title":{},"body":{"classes/HttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["hasdata",{"_index":1526,"title":{},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/ExtendedTimeseries.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["hasdataset",{"_index":1945,"title":{},"body":{"classes/DatasetService.html":{}}}],["hasfavorit",{"_index":2352,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["hasfavorite(dataset",{"_index":2308,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["hasloadablecont",{"_index":680,"title":{"classes/HasLoadableContent.html":{}},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/DatasetPresenterComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/HasLoadableContent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["hastoken",{"_index":298,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["have",{"_index":4210,"title":{},"body":{"index.html":{}}}],["header",{"_index":316,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{}}}],["headeraddit",{"_index":3016,"title":{},"body":{"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{}}}],["headers.set('author",{"_index":2122,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["height",{"_index":833,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["helgoland",{"_index":3169,"title":{},"body":{"injectables/NotifierService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["helgoland/cor",{"_index":31,"title":{},"body":{"interfaces/Address.html":{},"injectables/CachingInterceptor.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"interfaces/HighlightDataset.html":{},"injectables/LabelMapperService.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/SingleFavorite.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["helgoland/core';suggest",{"_index":4606,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["helgoland/d3",{"_index":4519,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["helgoland/d3';step",{"_index":4580,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["helgoland/depict",{"_index":2633,"title":{},"body":{"modules/HelgolandFlotModule.html":{},"modules/HelgolandSelectorModule.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["helgoland/depiction/dataset",{"_index":4588,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["helgolandcachingmodul",{"_index":2552,"title":{"modules/HelgolandCachingModule.html":{}},"body":{"modules/HelgolandCachingModule.html":{},"modules.html":{}}}],["helgolandcontrolmodul",{"_index":2558,"title":{"modules/HelgolandControlModule.html":{}},"body":{"modules/HelgolandControlModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandcoremodul",{"_index":2569,"title":{"modules/HelgolandCoreModule.html":{}},"body":{"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandd3modul",{"_index":2585,"title":{"modules/HelgolandD3Module.html":{}},"body":{"modules/HelgolandD3Module.html":{},"modules.html":{},"overview.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["helgolanddatasetlistmodul",{"_index":2601,"title":{"modules/HelgolandDatasetlistModule.html":{}},"body":{"modules/HelgolandDatasetlistModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["helgolanddatasettablemodul",{"_index":2592,"title":{"modules/HelgolandDatasetTableModule.html":{}},"body":{"modules/HelgolandDatasetTableModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["helgolandfavoritemodul",{"_index":2618,"title":{"modules/HelgolandFavoriteModule.html":{}},"body":{"modules/HelgolandFavoriteModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandflotmodul",{"_index":2627,"title":{"modules/HelgolandFlotModule.html":{}},"body":{"modules/HelgolandFlotModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandlabelmappermodul",{"_index":2607,"title":{"modules/HelgolandLabelMapperModule.html":{}},"body":{"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandmapcontrolmodul",{"_index":2643,"title":{"modules/HelgolandMapControlModule.html":{}},"body":{"modules/HelgolandMapControlModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandmapmodul",{"_index":2649,"title":{"modules/HelgolandMapModule.html":{}},"body":{"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandmapselectormodul",{"_index":2663,"title":{"modules/HelgolandMapSelectorModule.html":{}},"body":{"modules/HelgolandMapSelectorModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandmapviewmodul",{"_index":2673,"title":{"modules/HelgolandMapViewModule.html":{}},"body":{"modules/HelgolandMapViewModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandmodificationmodul",{"_index":2681,"title":{"modules/HelgolandModificationModule.html":{}},"body":{"modules/HelgolandModificationModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandpermalinkmodul",{"_index":2692,"title":{"modules/HelgolandPermalinkModule.html":{}},"body":{"modules/HelgolandPermalinkModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandplotlymodul",{"_index":2705,"title":{"modules/HelgolandPlotlyModule.html":{}},"body":{"modules/HelgolandPlotlyModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandselectormodul",{"_index":2711,"title":{"modules/HelgolandSelectorModule.html":{}},"body":{"modules/HelgolandSelectorModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandtimemodul",{"_index":2723,"title":{"modules/HelgolandTimeModule.html":{}},"body":{"modules/HelgolandTimeModule.html":{},"modules.html":{},"overview.html":{}}}],["helgolandtimerangeslidermodul",{"_index":2733,"title":{"modules/HelgolandTimeRangeSliderModule.html":{}},"body":{"modules/HelgolandTimeRangeSliderModule.html":{},"modules.html":{},"overview.html":{}}}],["here",{"_index":1122,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["herebi",{"_index":4323,"title":{},"body":{"license.html":{}}}],["herein",{"_index":4383,"title":{},"body":{"license.html":{}}}],["hh:mm",{"_index":1464,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["hidden",{"_index":1424,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["hide",{"_index":1378,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"injectables/NotifierService.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/YScale.html":{}}}],["hidediagramind",{"_index":1422,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["hidelabel",{"_index":164,"title":{},"body":{"interfaces/AxesOptions.html":{}}}],["highligh",{"_index":4648,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["highlight",{"_index":1276,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["highlight.t",{"_index":3410,"title":{},"body":{"interfaces/PresenterHighlight.html":{}}}],["highlightdataset",{"_index":779,"title":{"interfaces/HighlightDataset.html":{}},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["highlightfocu",{"_index":849,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["highlightline(id",{"_index":1277,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["highlightstyl",{"_index":3481,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["hold",{"_index":4437,"title":{},"body":{"license.html":{}}}],["host",{"_index":4626,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["hostlisten",{"_index":3652,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["hostlistener('window:res",{"_index":3658,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["hour",{"_index":811,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["hourli",{"_index":1173,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["hours').unix",{"_index":2027,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["house_numb",{"_index":14,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["housenumb",{"_index":121,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["hover",{"_index":743,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["hovercomparecartesian",{"_index":2160,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["hoverformat",{"_index":2226,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["hovermod",{"_index":2155,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["hovertext",{"_index":2206,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["href",{"_index":632,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{}}}],["html",{"_index":199,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["http",{"_index":61,"title":{},"body":{"interfaces/Address.html":{},"injectables/BasicAuthService.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/DatasetApiMapping.html":{},"modules/HelgolandCachingModule.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["http.servic",{"_index":3770,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["http://geo.irceline.be/sos/api/v1/__6941",{"_index":4592,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["http://sensorweb.demo.52north.org/sensorwebtestbed/api/v1/__95",{"_index":4590,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["http://sensorweb.demo.52north.org/sensorwebtestbed/api/v1/__96",{"_index":4591,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["http://sensorweb.demo.52north.org/sensorwebtestbed/api/v1/__97",{"_index":4593,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["http://www.fluggs.de/sos2/api/v1/__63",{"_index":4561,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["http://www.fluggs.de/sos2/api/v1/__72",{"_index":4562,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["http_service_interceptor",{"_index":2554,"title":{},"body":{"modules/HelgolandCachingModule.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"miscellaneous/variables.html":{}}}],["httpcach",{"_index":376,"title":{"classes/HttpCache.html":{}},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"modules/HelgolandCachingModule.html":{},"classes/HttpCache.html":{},"injectables/LocalHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["httpclient",{"_index":300,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/DatasetApiMapping.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"injectables/LabelMapperService.html":{},"injectables/StatusCheckService.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["httpclientmodul",{"_index":2576,"title":{},"body":{"modules/HelgolandCoreModule.html":{}}}],["httpevent",{"_index":581,"title":{},"body":{"injectables/CachingInterceptor.html":{},"classes/HttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["httphandler",{"_index":2756,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["httphandler.handle(req",{"_index":2766,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["httpheader",{"_index":310,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["httploaderfactori",{"_index":4527,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["httploaderfactory(http",{"_index":4535,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["httpparam",{"_index":26,"title":{},"body":{"interfaces/Address.html":{},"injectables/EventingImplApiInterface.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"classes/UriParameterCoder.html":{}}}],["httpparametercodec",{"_index":4026,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["httpparams.set('timespan",{"_index":2120,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["httpparams.set(key",{"_index":2124,"title":{},"body":{"injectables/EventingImplApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["httprequest",{"_index":374,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["httprequestopt",{"_index":1493,"title":{"interfaces/HttpRequestOptions.html":{}},"body":{"interfaces/DataParameterFilter.html":{},"interfaces/DatasetApiV2.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/ParameterFilter.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["httprespons",{"_index":375,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"classes/HttpCache.html":{},"injectables/LocalHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["https://momentjs.com/docs/#/manipul",{"_index":3337,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["https://nominatim.openstreetmap.org",{"_index":59,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["https://www.sample.de/api/v1",{"_index":4494,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["https://www.sample.de/api/v1/__123",{"_index":4496,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":482,"title":{},"body":{"classes/CachedMapComponent.html":{},"miscellaneous/variables.html":{}}}],["httpservic",{"_index":30,"title":{"injectables/HttpService.html":{}},"body":{"interfaces/Address.html":{},"injectables/EventingImplApiInterface.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["httpservicehandl",{"_index":576,"title":{"interfaces/HttpServiceHandler.html":{}},"body":{"injectables/CachingInterceptor.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["httpserviceinterceptor",{"_index":582,"title":{"interfaces/HttpServiceInterceptor.html":{}},"body":{"injectables/CachingInterceptor.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["httpservicemetadata",{"_index":574,"title":{"interfaces/HttpServiceMetadata.html":{}},"body":{"injectables/CachingInterceptor.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"classes/UriParameterCoder.html":{}}}],["i.",{"_index":3357,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["icon",{"_index":345,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/StringTogglerComponent.html":{}}}],["id",{"_index":146,"title":{"interfaces/Id.html":{}},"body":{"classes/ApiInterface.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"interfaces/CollectionMetadata.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandCoreModule.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"injectables/NotifierService.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"components/ProfileEntryComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"interfaces/ScatterData.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"interfaces/StatusInterval.html":{},"interfaces/SupportedMimeTypes.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["idataentri",{"_index":755,"title":{"interfaces/IDataEntry.html":{}},"body":{"interfaces/Data.html":{},"interfaces/IDataEntry.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/ProfileDataEntry.html":{},"classes/ReferenceValues.html":{},"interfaces/TimeValueEntry.html":{}}}],["idataset",{"_index":763,"title":{"interfaces/IDataset.html":{}},"body":{"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/FirstLastValue.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"interfaces/Platform.html":{},"interfaces/PlatformParameter.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"interfaces/SingleFavorite.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/TrajectoryResult.html":{},"interfaces/YScale.html":{}}}],["idcach",{"_index":2773,"title":{"classes/IdCache.html":{}},"body":{"classes/IdCache.html":{},"injectables/LabelMapperService.html":{},"injectables/ReferenceValueColorCache.html":{},"injectables/TimeRangeSliderCache.html":{}}}],["identifi",{"_index":2785,"title":{"interfaces/Identifiable.html":{}},"body":{"interfaces/Identifiable.html":{},"interfaces/Parameter.html":{}}}],["ids.foreach((id",{"_index":1280,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ids.length",{"_index":1285,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["idx",{"_index":1021,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["idxofmin",{"_index":1459,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["idxofpo",{"_index":832,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ie",{"_index":2824,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["ii",{"_index":4261,"title":{},"body":{"license.html":{}}}],["iii",{"_index":4267,"title":{},"body":{"license.html":{}}}],["impl",{"_index":2085,"title":{},"body":{"injectables/EventingImplApiInterface.html":{},"injectables/SplittedDataDatasetApiInterface.html":{}}}],["implement",{"_index":56,"title":{},"body":{"interfaces/Address.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"pipes/DateProxyPipe.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"classes/LocalSelectorComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"classes/ParameterConstellation.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["impli",{"_index":4396,"title":{},"body":{"license.html":{}}}],["import",{"_index":24,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/Category.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/Feature.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Offering.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["importfavorit",{"_index":2812,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["importfavorites(ev",{"_index":2817,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["improv",{"_index":4312,"title":{},"body":{"license.html":{}}}],["inabl",{"_index":4419,"title":{},"body":{"license.html":{}}}],["incident",{"_index":4415,"title":{},"body":{"license.html":{}}}],["includ",{"_index":4275,"title":{},"body":{"license.html":{}}}],["inclus",{"_index":4302,"title":{},"body":{"license.html":{}}}],["incorpor",{"_index":4320,"title":{},"body":{"license.html":{}}}],["incorrectli",{"_index":3368,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["increas",{"_index":4196,"title":{},"body":{"index.html":{}}}],["incur",{"_index":4439,"title":{},"body":{"license.html":{}}}],["indemn",{"_index":4431,"title":{},"body":{"license.html":{}}}],["indemnifi",{"_index":4435,"title":{},"body":{"license.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":4284,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":4257,"title":{},"body":{"license.html":{}}}],["individu",{"_index":4269,"title":{},"body":{"license.html":{}}}],["infinit",{"_index":3348,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/Feature.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Offering.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/enumerations.html":{}}}],["inform",{"_index":977,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["informationvis",{"_index":3545,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["infring",{"_index":4343,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":1844,"title":{},"body":{"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/EventingApiService.html":{},"classes/ExtendedTimeseries.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"classes/TimedDatasetOptions.html":{},"components/TrajectoryEntryComponent.html":{}}}],["init",{"_index":684,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["initi",{"_index":1303,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["initlay",{"_index":3484,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["inittimespan",{"_index":3868,"title":{},"body":{"injectables/Time.html":{}}}],["inject",{"_index":28,"title":{"injectables/BasicAuthService.html":{},"injectables/CachingInterceptor.html":{},"injectables/ColorService.html":{},"injectables/DatasetApiMapping.html":{},"injectables/DefinedTimespanService.html":{},"injectables/EventingImplApiInterface.html":{},"injectables/FavoriteService.html":{},"injectables/HttpService.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"injectables/LabelMapperService.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/LocalStorage.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"injectables/NominatimGeoSearchService.html":{},"injectables/NotifierService.html":{},"injectables/ReferenceValueColorCache.html":{},"injectables/ServiceSelectorService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"injectables/StatusIntervalResolverService.html":{},"injectables/Time.html":{},"injectables/TimeRangeSliderCache.html":{}},"body":{"interfaces/Address.html":{},"injectables/BasicAuthService.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"injectables/ColorService.html":{},"injectables/DatasetApiMapping.html":{},"injectables/DefinedTimespanService.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"injectables/LabelMapperService.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/LocalStorage.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"injectables/ReferenceValueColorCache.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"injectables/StatusIntervalResolverService.html":{},"injectables/Time.html":{},"injectables/TimeRangeSliderCache.html":{},"index.html":{},"overview.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["inject(http_service_interceptor",{"_index":2765,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["injectiontoken",{"_index":2760,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["injectiontoken('http_service_interceptor",{"_index":2761,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":196,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"classes/CachedMapComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"classes/LocalSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{}}}],["insid",{"_index":489,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"index.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["instal",{"_index":4167,"title":{},"body":{"index.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["install```bash",{"_index":4650,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["instanceof",{"_index":390,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocateService.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"injectables/Time.html":{}}}],["instead",{"_index":600,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["institut",{"_index":4346,"title":{},"body":{"license.html":{}}}],["instruct",{"_index":4170,"title":{},"body":{"index.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["integr",{"_index":4498,"title":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}},"body":{"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["intention",{"_index":4300,"title":{},"body":{"license.html":{}}}],["interact",{"_index":3303,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["intercept",{"_index":568,"title":{},"body":{"injectables/CachingInterceptor.html":{},"interfaces/HttpServiceInterceptor.html":{}}}],["intercept(req",{"_index":573,"title":{},"body":{"injectables/CachingInterceptor.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["interceptor",{"_index":589,"title":{},"body":{"injectables/CachingInterceptor.html":{},"modules/HelgolandCachingModule.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["interceptor.intercept(req",{"_index":2768,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["interceptor.t",{"_index":567,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["interceptor.ts:12",{"_index":572,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["interceptor.ts:18",{"_index":577,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["interceptors.reduceright((next",{"_index":2767,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/Address.html":{},"interfaces/AxesOptions.html":{},"interfaces/BlacklistedService.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"interfaces/D3GraphOptions.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"interfaces/DatasetApi.html":{},"interfaces/DatasetApiV2.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DatasetTableData.html":{},"interfaces/DrawOptions.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Favorite.html":{},"interfaces/Feature.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"interfaces/Language.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"interfaces/ListSelectorParameter.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/MinMaxRange.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"interfaces/Offering.html":{},"interfaces/Parameter.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/Settings.html":{},"interfaces/SingleFavorite.html":{},"interfaces/StationProperties.html":{},"interfaces/StatusInterval.html":{},"interfaces/SupportedMimeTypes.html":{},"interfaces/TimeValueEntry.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"interfaces/TrajectoryResult.html":{},"interfaces/YScale.html":{}},"body":{"interfaces/Address.html":{},"interfaces/AxesOptions.html":{},"interfaces/BlacklistedService.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"interfaces/D3GraphOptions.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"interfaces/DatasetApiV2.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DatasetTableData.html":{},"interfaces/DrawOptions.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/Feature.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/Language.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/MinMaxRange.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"interfaces/Offering.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/Settings.html":{},"interfaces/SingleFavorite.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"interfaces/StatusInterval.html":{},"interfaces/SupportedMimeTypes.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"license.html":{},"overview.html":{},"additional-documentation/introduction.html":{}}}],["interface.servic",{"_index":3769,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["interface.service.t",{"_index":2086,"title":{},"body":{"injectables/EventingImplApiInterface.html":{},"injectables/SplittedDataDatasetApiInterface.html":{}}}],["interface.service.ts:11",{"_index":2093,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.service.ts:15",{"_index":3764,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["interface.service.ts:17",{"_index":2102,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.service.ts:25",{"_index":3766,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["interface.service.ts:26",{"_index":2100,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.service.ts:31",{"_index":2104,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.service.ts:37",{"_index":2103,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.service.ts:42",{"_index":2108,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.service.ts:47",{"_index":2106,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.service.ts:55",{"_index":2097,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.service.ts:62",{"_index":2099,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.service.ts:68",{"_index":2095,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["interface.t",{"_index":135,"title":{},"body":{"classes/ApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["interface.ts:14",{"_index":142,"title":{},"body":{"classes/ApiInterface.html":{}}}],["interface.ts:23",{"_index":4036,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["interface.ts:27",{"_index":4038,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["interface.ts:31",{"_index":4032,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["interface.ts:35",{"_index":4034,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["interface.ts:7",{"_index":147,"title":{},"body":{"classes/ApiInterface.html":{}}}],["interfaces/api",{"_index":4046,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["intern",{"_index":2793,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"interfaces/SupportedMimeTypes.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["internal/http",{"_index":2398,"title":{},"body":{"classes/Filter.html":{},"interfaces/FilteredProvider.html":{},"interfaces/Provider.html":{}}}],["internal/timeinterv",{"_index":325,"title":{},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["internal_id_seper",{"_index":2790,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"miscellaneous/variables.html":{}}}],["internaldataentri",{"_index":785,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["internaldatasetid",{"_index":2787,"title":{"interfaces/InternalDatasetId.html":{}},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/SplittedDataDatasetApiInterface.html":{}}}],["internalid",{"_index":165,"title":{},"body":{"interfaces/AxesOptions.html":{},"interfaces/DataConst.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"classes/FirstLastValue.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/Layout.html":{},"interfaces/MinMaxRange.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"interfaces/PresenterHighlight.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/StatusInterval.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/YScale.html":{}}}],["internalid.split(internal_id_seper",{"_index":2800,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{}}}],["internalid.url",{"_index":3470,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["internalid.url).subscribe((platform",{"_index":3474,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["internalidhandl",{"_index":770,"title":{"injectables/InternalIdHandler.html":{}},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"modules/HelgolandCoreModule.html":{},"interfaces/HighlightDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"overview.html":{},"additional-documentation/introduction.html":{}}}],["internalidobj",{"_index":1938,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["internalidobj.url",{"_index":1941,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["interv",{"_index":1102,"title":{},"body":{"interfaces/DataConst.html":{},"injectables/DefinedTimespanService.html":{},"modules/HelgolandCoreModule.html":{},"interfaces/HighlightDataset.html":{},"components/RefreshButtonComponent.html":{},"injectables/StatusIntervalResolverService.html":{},"injectables/Time.html":{},"interfaces/YScale.html":{}}}],["interval.low",{"_index":3852,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["interval.upp",{"_index":3849,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["interval[0",{"_index":1105,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["interval[1",{"_index":1106,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["intervaldescrib",{"_index":2013,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["introduct",{"_index":4482,"title":{"additional-documentation/introduction.html":{}},"body":{"additional-documentation/introduction.html":{}}}],["invalid",{"_index":3395,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["irrevoc",{"_index":4330,"title":{},"body":{"license.html":{}}}],["isblacklist",{"_index":3749,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["iscontentload",{"_index":685,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/DatasetPresenterComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/HasLoadableContent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["iscontentloading(load",{"_index":2549,"title":{},"body":{"classes/HasLoadableContent.html":{}}}],["isdis",{"_index":3017,"title":{},"body":{"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{}}}],["isequ",{"_index":2953,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["isequal(liston",{"_index":2966,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["isfavorit",{"_index":2370,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["isfinite(calculatedrange.max",{"_index":1016,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["isfinite(calculatedrange.min",{"_index":1015,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["isgroupfavorit",{"_index":4152,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isgroupfavorite(favorit",{"_index":2329,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["isgroupfavorite(object",{"_index":2348,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{},"miscellaneous/functions.html":{}}}],["ismobil",{"_index":3420,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["isn't",{"_index":590,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["isnan(obj.range.min",{"_index":1032,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["issaf",{"_index":3390,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["issafemomentexpress",{"_index":3305,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["issafemomentexpression(express",{"_index":3311,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["issafetimespanpreset",{"_index":3306,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["issafetimespanpreset(preset",{"_index":3314,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["isselect",{"_index":3682,"title":{},"body":{"components/ServiceSelectorComponent.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["isselected(id",{"_index":4646,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["isselected(servic",{"_index":3694,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["isserviceblacklist",{"_index":3737,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["isserviceblacklisted(serviceid",{"_index":3742,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["issinglefavorit",{"_index":4154,"title":{},"body":{"miscellaneous/functions.html":{}}}],["issinglefavorite(favorit",{"_index":2327,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["issinglefavorite(object",{"_index":2347,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{},"miscellaneous/functions.html":{}}}],["issu",{"_index":3366,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["istoggl",{"_index":3072,"title":{},"body":{"components/LocateControlComponent.html":{},"components/StringTogglerComponent.html":{}}}],["it'",{"_index":586,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["it:```typescript",{"_index":4633,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["item",{"_index":1431,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/FilteredParameter.html":{},"interfaces/HighlightDataset.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["item.filterlist.push(filt",{"_index":2439,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["item.label",{"_index":3408,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["item.nam",{"_index":3734,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["item.tick",{"_index":1783,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["item.timestamp",{"_index":1457,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/ProfileEntryComponent.html":{},"interfaces/YScale.html":{}}}],["item.xdiagcoord",{"_index":1437,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["item.ydiagcoord",{"_index":1452,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["itemid",{"_index":2393,"title":{},"body":{"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["itemselect",{"_index":2954,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["itemselected(item",{"_index":2970,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["iterablediff",{"_index":765,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["januari",{"_index":4236,"title":{},"body":{"license.html":{}}}],["javascript",{"_index":4520,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["jqueri",{"_index":3948,"title":{},"body":{"components/TimeRangeSliderComponent.html":{},"dependencies.html":{}}}],["jquery('#slider').slid",{"_index":3963,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["jquery.flot.axisopt",{"_index":173,"title":{},"body":{"interfaces/AxesOptions.html":{}}}],["jquery.flot.dataseri",{"_index":1498,"title":{},"body":{"interfaces/DataSeries.html":{},"interfaces/SeriesOptions.html":{}}}],["jquery.flot.plot",{"_index":3290,"title":{},"body":{"interfaces/Plot.html":{}}}],["jquery.flot.plotopt",{"_index":3296,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["jquery.flot.seriesopt",{"_index":1497,"title":{},"body":{"interfaces/DataSeries.html":{},"interfaces/SeriesOptions.html":{}}}],["js",{"_index":4115,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":75,"title":{},"body":{"interfaces/Address.html":{},"injectables/JsonFavoriteExporterService.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/Time.html":{}}}],["json.parse(result",{"_index":2852,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{},"injectables/LocalStorage.html":{}}}],["json.stringify(object",{"_index":3067,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["json.stringify(this.favoritesrvc.getfavorit",{"_index":2822,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["jsonfavoriteexporterservic",{"_index":2623,"title":{"injectables/JsonFavoriteExporterService.html":{}},"body":{"modules/HelgolandFavoriteModule.html":{},"injectables/JsonFavoriteExporterService.html":{},"overview.html":{}}}],["jsonfil",{"_index":4126,"title":{},"body":{"dependencies.html":{}}}],["jumptofirsttimestamp",{"_index":3555,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["jumptolasttimestamp",{"_index":3558,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["k",{"_index":1268,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["kept",{"_index":4551,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["key",{"_index":524,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/Data.html":{},"interfaces/DataParameterFilter.html":{},"classes/DatasetPresenterComponent.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/IDataEntry.html":{},"interfaces/Layout.html":{},"injectables/LocalOngoingHttpCache.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ProfileDataEntry.html":{},"interfaces/RawData.html":{},"classes/ReferenceValues.html":{},"interfaces/ScatterData.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimeseriesCollection.html":{},"classes/UriParameterCoder.html":{}}}],["key.startswith('xaxi",{"_index":2216,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["key.startswith('yaxi",{"_index":2241,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["keyvaluediff",{"_index":429,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["kind",{"_index":4395,"title":{},"body":{"license.html":{}}}],["km",{"_index":1781,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["l",{"_index":476,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/ExtendedScatterData.html":{},"components/GeosearchControlComponent.html":{},"interfaces/Layout.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["l.control.lay",{"_index":434,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["l.control.layers(this.oldbaselay",{"_index":559,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["l.control.layersobject",{"_index":439,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["l.control.layersopt",{"_index":468,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["l.control.zoom",{"_index":443,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["l.control.zoom(this.zoomcontroloptions).addto(this.map",{"_index":564,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["l.control.zoomopt",{"_index":474,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["l.featuregroup",{"_index":3262,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["l.geojson",{"_index":2528,"title":{},"body":{"components/GeosearchControlComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["l.geojson(profiledataentry.geometri",{"_index":3525,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["l.geojson(result.geometry).addto(this.mapcache.getmap(this.mapid",{"_index":2539,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["l.latlngboundsexpress",{"_index":466,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/ExtentControlComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["l.layer",{"_index":2921,"title":{},"body":{"interfaces/LayerOptions.html":{}}}],["l.locationev",{"_index":3101,"title":{},"body":{"injectables/LocateService.html":{}}}],["l.map",{"_index":436,"title":{},"body":{"classes/CachedMapComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{}}}],["l.map(this.mapid",{"_index":519,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["l.mapopt",{"_index":471,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["l.marker",{"_index":3114,"title":{},"body":{"injectables/LocateService.html":{}}}],["l.marker([entry.geometry.coordinates[1",{"_index":3276,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["l.marker(evt.latlng).addto(map",{"_index":3103,"title":{},"body":{"injectables/LocateService.html":{}}}],["l.markerclustergroup",{"_index":3273,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["l.pathopt",{"_index":3495,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["l.tilelayer(default_base_layer_url",{"_index":548,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["label",{"_index":166,"title":{},"body":{"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/CachedMapComponent.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetParameterConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"interfaces/LayerOptions.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValue.html":{},"components/RefreshButtonComponent.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/Settings.html":{},"interfaces/SingleFavorite.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/introduction.html":{}}}],["label.length",{"_index":2903,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["label.replace(url",{"_index":2896,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["label.substring(label.lastindexof",{"_index":2902,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["labelbuff",{"_index":1438,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["labelmappercompon",{"_index":238,"title":{"components/LabelMapperComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandLabelMapperModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["labelmapperservic",{"_index":2638,"title":{"injectables/LabelMapperService.html":{}},"body":{"modules/HelgolandLabelMapperModule.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"overview.html":{}}}],["labelmappersrvc",{"_index":2862,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["labeltimestamp",{"_index":852,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["labelurl",{"_index":2889,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["labl",{"_index":1427,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["lang",{"_index":1492,"title":{},"body":{"interfaces/DataParameterFilter.html":{},"interfaces/HttpRequestOptions.html":{},"classes/LocalSelectorComponent.html":{},"interfaces/ParameterFilter.html":{}}}],["languag",{"_index":333,"title":{"interfaces/Language.html":{}},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"pipes/DateProxyPipe.html":{},"interfaces/Language.html":{},"classes/LocalSelectorComponent.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["languagechang",{"_index":2411,"title":{},"body":{"interfaces/FilteredParameter.html":{},"classes/LanguageChangNotifier.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["languagechangnotifi",{"_index":2404,"title":{"classes/LanguageChangNotifier.html":{}},"body":{"interfaces/FilteredParameter.html":{},"classes/LanguageChangNotifier.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["languagechangnotifier:11",{"_index":3160,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["languagelist",{"_index":3034,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["larger",{"_index":4572,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["last",{"_index":1361,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["last_hour",{"_index":2015,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["last_month",{"_index":2022,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["last_week",{"_index":2020,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["last_year",{"_index":2024,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["lasthour",{"_index":2014,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["lastvalu",{"_index":1502,"title":{},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/ExtendedTimeseries.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["lat",{"_index":44,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["later",{"_index":1018,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["latest",{"_index":2083,"title":{},"body":{"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscriptionFilter.html":{},"index.html":{}}}],["latlngbound",{"_index":2478,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["latlngboundsliter",{"_index":2508,"title":{},"body":{"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{}}}],["law",{"_index":4392,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":4350,"title":{},"body":{"license.html":{}}}],["layer",{"_index":547,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/LayerOptions.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["layer.t",{"_index":2466,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["layer.ts:13",{"_index":2472,"title":{},"body":{"classes/GeoCureGeoJSON.html":{}}}],["layer.ts:24",{"_index":2475,"title":{},"body":{"classes/GeoCureGeoJSON.html":{}}}],["layer.ts:31",{"_index":2481,"title":{},"body":{"classes/GeoCureGeoJSON.html":{}}}],["layer.ts:37",{"_index":2474,"title":{},"body":{"classes/GeoCureGeoJSON.html":{}}}],["layer.ts:47",{"_index":2479,"title":{},"body":{"classes/GeoCureGeoJSON.html":{}}}],["layercontrol",{"_index":403,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["layercontrolopt",{"_index":421,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["layeropt",{"_index":446,"title":{"interfaces/LayerOptions.html":{}},"body":{"classes/CachedMapComponent.html":{},"interfaces/LayerOptions.html":{}}}],["layeroptions.lay",{"_index":540,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["layeroptions.layer.addto(this.map",{"_index":542,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["layeroptions.vis",{"_index":541,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["layout",{"_index":2149,"title":{"interfaces/Layout.html":{}},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["leaflet",{"_index":477,"title":{},"body":{"classes/CachedMapComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"dependencies.html":{},"additional-documentation/introduction.html":{}}}],["leaflet.markerclust",{"_index":3265,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"dependencies.html":{}}}],["leafletev",{"_index":2483,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["left",{"_index":841,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["legal",{"_index":4250,"title":{},"body":{"license.html":{}}}],["legend",{"_index":198,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["length",{"_index":3332,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["letter",{"_index":666,"title":{},"body":{"injectables/ColorService.html":{}}}],["level",{"_index":3378,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["liabil",{"_index":4406,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":4412,"title":{},"body":{"license.html":{}}}],["lib:publish",{"_index":4200,"title":{},"body":{"index.html":{}}}],["librari",{"_index":4180,"title":{},"body":{"index.html":{}}}],["licenc",{"_index":51,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["licens",{"_index":1528,"title":{"license.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"license.html":{}}}],["licensor",{"_index":4245,"title":{},"body":{"license.html":{}}}],["lightblu",{"_index":4602,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["lighter",{"_index":1087,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["limit",{"_index":629,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/DataConst.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Id.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["line",{"_index":787,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["line.i",{"_index":1333,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["line.x",{"_index":1331,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["line:no",{"_index":2168,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/Layout.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["line_width",{"_index":2139,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"miscellaneous/variables.html":{}}}],["line_width_select",{"_index":2138,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"miscellaneous/variables.html":{}}}],["linefun",{"_index":1641,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["linewidth",{"_index":788,"title":{},"body":{"interfaces/DataConst.html":{},"classes/DatasetOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{}}}],["linewwidth",{"_index":963,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["link",{"_index":4207,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["lint",{"_index":4185,"title":{},"body":{"index.html":{}}}],["list",{"_index":241,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["listentrycompon",{"_index":2923,"title":{"classes/ListEntryComponent.html":{}},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:10",{"_index":3435,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:13",{"_index":3434,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:16",{"_index":3440,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:19",{"_index":3441,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:25",{"_index":3455,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:32",{"_index":3456,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:36",{"_index":3457,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:41",{"_index":3458,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:48",{"_index":3454,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["listentrycomponent:7",{"_index":3433,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["liston",{"_index":2969,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["listone.foreach((entryon",{"_index":3007,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["listone.length",{"_index":3005,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["listselectorcompon",{"_index":240,"title":{"components/ListSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["listselectorparamet",{"_index":2961,"title":{"interfaces/ListSelectorParameter.html":{}},"body":{"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{}}}],["listselectorservic",{"_index":2717,"title":{"injectables/ListSelectorService.html":{}},"body":{"modules/HelgolandSelectorModule.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"overview.html":{}}}],["listtwo",{"_index":2967,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["listtwo.find((entrytwo",{"_index":3008,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["listtwo.length",{"_index":3006,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["liter",{"_index":2080,"title":{},"body":{"interfaces/EventingEvent.html":{},"interfaces/GeoReverseResult.html":{},"injectables/LocalOngoingHttpCache.html":{},"interfaces/PlotOptions.html":{},"interfaces/Settings.html":{}}}],["litig",{"_index":4347,"title":{},"body":{"license.html":{}}}],["load",{"_index":717,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetOptions.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"classes/HasLoadableContent.html":{},"components/LabelMapperComponent.html":{},"injectables/LocalStorage.html":{},"interfaces/MinMaxRange.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ReferenceValueOption.html":{},"components/ServiceFilterSelectorComponent.html":{},"classes/TimedDatasetOptions.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["load(param",{"_index":3055,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["loadabl",{"_index":1903,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"classes/HasLoadableContent.html":{}}}],["loadarray",{"_index":3052,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["loadarray(param",{"_index":3057,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["loaddata",{"_index":2468,"title":{},"body":{"classes/GeoCureGeoJSON.html":{}}}],["loaddata(bound",{"_index":2477,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["loaddata(dataset",{"_index":1674,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["loaddataset",{"_index":2926,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["loaddataset(id",{"_index":2933,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["loadedgroupfav",{"_index":2343,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["loadedgroupfavs.foreach((entri",{"_index":2345,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["loadedsinglefav",{"_index":2339,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["loadedsinglefavs.foreach((entri",{"_index":2341,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["loader",{"_index":4092,"title":{},"body":{"dependencies.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["loader';anoth",{"_index":4524,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["loadfavorit",{"_index":2336,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["loadingcount",{"_index":863,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["loaditem",{"_index":2412,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["loadstat",{"_index":1946,"title":{},"body":{"classes/DatasetService.html":{}}}],["loadtextu",{"_index":3053,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["loadtextual(param",{"_index":3059,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["loadtimespan",{"_index":3869,"title":{},"body":{"injectables/Time.html":{}}}],["loadtimespan(param",{"_index":3885,"title":{},"body":{"injectables/Time.html":{}}}],["local",{"_index":1965,"title":{},"body":{"classes/DatasetService.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandCoreModule.html":{},"injectables/Time.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["localhttpcach",{"_index":380,"title":{"injectables/LocalHttpCache.html":{}},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"modules/HelgolandCachingModule.html":{},"injectables/LocalHttpCache.html":{}}}],["localongoinghttpcach",{"_index":2555,"title":{"injectables/LocalOngoingHttpCache.html":{}},"body":{"modules/HelgolandCachingModule.html":{},"injectables/LocalOngoingHttpCache.html":{}}}],["localselectorcompon",{"_index":3028,"title":{"classes/LocalSelectorComponent.html":{}},"body":{"classes/LocalSelectorComponent.html":{}}}],["localstorag",{"_index":1951,"title":{"injectables/LocalStorage.html":{}},"body":{"classes/DatasetService.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandCoreModule.html":{},"injectables/LocalStorage.html":{},"interfaces/SingleFavorite.html":{},"injectables/Time.html":{},"overview.html":{}}}],["localstorage.getitem(param",{"_index":3068,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["localstorage.setitem(param",{"_index":3066,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["localstorageen",{"_index":3051,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["locat",{"_index":243,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{}}}],["locate.component.html",{"_index":3071,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["locate.component.scss",{"_index":3070,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["locate.servic",{"_index":3078,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["locate/locate.compon",{"_index":2655,"title":{},"body":{"modules/HelgolandMapControlModule.html":{}}}],["locate/locate.servic",{"_index":2656,"title":{},"body":{"modules/HelgolandMapControlModule.html":{}}}],["locatecontrolcompon",{"_index":242,"title":{"components/LocateControlComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapControlModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["located_marker_id",{"_index":3097,"title":{},"body":{"injectables/LocateService.html":{},"miscellaneous/variables.html":{}}}],["locatedprofiledataentri",{"_index":761,"title":{"interfaces/LocatedProfileDataEntry.html":{}},"body":{"interfaces/Data.html":{},"interfaces/IDataEntry.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValues.html":{},"interfaces/TimeValueEntry.html":{},"interfaces/TrajectoryResult.html":{}}}],["locatedtimevalueentri",{"_index":757,"title":{"interfaces/LocatedTimeValueEntry.html":{}},"body":{"interfaces/Data.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/IDataEntry.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/ProfileDataEntry.html":{},"classes/ReferenceValues.html":{},"interfaces/TimeValueEntry.html":{}}}],["locateservic",{"_index":2650,"title":{"injectables/LocateService.html":{}},"body":{"modules/HelgolandMapControlModule.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"overview.html":{}}}],["locateus",{"_index":3073,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["location_error",{"_index":3095,"title":{},"body":{"injectables/LocateService.html":{},"miscellaneous/variables.html":{}}}],["location_found_ev",{"_index":3093,"title":{},"body":{"injectables/LocateService.html":{},"miscellaneous/variables.html":{}}}],["locationerror",{"_index":3096,"title":{},"body":{"injectables/LocateService.html":{},"miscellaneous/variables.html":{}}}],["locationfound",{"_index":3094,"title":{},"body":{"injectables/LocateService.html":{},"miscellaneous/variables.html":{}}}],["log",{"_index":1481,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["lon",{"_index":45,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["look",{"_index":4495,"title":{},"body":{"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["loss",{"_index":4420,"title":{},"body":{"license.html":{}}}],["lost",{"_index":3379,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["lower",{"_index":1529,"title":{},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["lt",{"_index":4017,"title":{},"body":{"components/TimespanShiftSelectorComponent.html":{}}}],["mac",{"_index":4174,"title":{},"body":{"index.html":{}}}],["made",{"_index":4283,"title":{},"body":{"license.html":{}}}],["mail",{"_index":3204,"title":{},"body":{"components/PermalinkInMailComponent.html":{},"license.html":{}}}],["mail'},{'nam",{"_index":254,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["mail.compon",{"_index":2700,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{}}}],["mail.component.html",{"_index":3205,"title":{},"body":{"components/PermalinkInMailComponent.html":{}}}],["mail.component.t",{"_index":3203,"title":{},"body":{"components/PermalinkInMailComponent.html":{}}}],["mail.component.ts:10",{"_index":3208,"title":{},"body":{"components/PermalinkInMailComponent.html":{}}}],["mail.component.ts:13",{"_index":3209,"title":{},"body":{"components/PermalinkInMailComponent.html":{}}}],["mail.component.ts:15",{"_index":3210,"title":{},"body":{"components/PermalinkInMailComponent.html":{}}}],["mail/permalink",{"_index":2699,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{},"components/PermalinkInMailComponent.html":{}}}],["mailto:?bodi",{"_index":3212,"title":{},"body":{"components/PermalinkInMailComponent.html":{}}}],["main",{"_index":799,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["maintimeinterv",{"_index":801,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["make",{"_index":4171,"title":{},"body":{"index.html":{},"license.html":{}}}],["malfunct",{"_index":4425,"title":{},"body":{"license.html":{}}}],["manag",{"_index":4258,"title":{},"body":{"license.html":{}}}],["manipulate/select",{"_index":4488,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["manual",{"_index":4538,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["map",{"_index":235,"title":{},"body":{"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"components/BoolTogglerComponent.html":{},"classes/CachedMapComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"interfaces/HighlightDataset.html":{},"classes/IdCache.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["map((",{"_index":3325,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["map((checkedurl",{"_index":3841,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["map((r",{"_index":109,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["map((resarray",{"_index":83,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["map(r",{"_index":320,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["map.eachlayer((entri",{"_index":3113,"title":{},"body":{"injectables/LocateService.html":{}}}],["map.getzoom",{"_index":2492,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["map.loc",{"_index":3106,"title":{},"body":{"injectables/LocateService.html":{}}}],["map.off(location_found_ev",{"_index":3112,"title":{},"body":{"injectables/LocateService.html":{}}}],["map.on(location_error",{"_index":3105,"title":{},"body":{"injectables/LocateService.html":{}}}],["map.on(location_found_ev",{"_index":3099,"title":{},"body":{"injectables/LocateService.html":{}}}],["map.removelayer(entri",{"_index":3116,"title":{},"body":{"injectables/LocateService.html":{}}}],["map.stoploc",{"_index":3111,"title":{},"body":{"injectables/LocateService.html":{}}}],["mapcach",{"_index":427,"title":{"injectables/MapCache.html":{}},"body":{"classes/CachedMapComponent.html":{},"components/ExtentControlComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapModule.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["mapid",{"_index":422,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/ExtentControlComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LocateControlComponent.html":{},"components/ZoomControlComponent.html":{}}}],["mapopt",{"_index":423,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["mapper",{"_index":2857,"title":{},"body":{"components/LabelMapperComponent.html":{},"additional-documentation/introduction.html":{}}}],["mapper'},{'nam",{"_index":239,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["mapper.compon",{"_index":2641,"title":{},"body":{"modules/HelgolandLabelMapperModule.html":{}}}],["mapper.component.html",{"_index":2858,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["mapper.component.t",{"_index":2856,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["mapper.component.ts:12",{"_index":2863,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["mapper.component.ts:14",{"_index":2865,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["mapper.component.ts:16",{"_index":2861,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["mapper.component.ts:22",{"_index":2864,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["mapper.modul",{"_index":2611,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{}}}],["mapper.module.t",{"_index":2640,"title":{},"body":{"modules/HelgolandLabelMapperModule.html":{}}}],["mapper.servic",{"_index":2642,"title":{},"body":{"modules/HelgolandLabelMapperModule.html":{},"components/LabelMapperComponent.html":{}}}],["mapper.service.t",{"_index":2870,"title":{},"body":{"injectables/LabelMapperService.html":{},"miscellaneous/variables.html":{}}}],["mapper.service.ts:12",{"_index":2877,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["mapper.service.ts:19",{"_index":2883,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["mapper.service.ts:53",{"_index":2879,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["mapper.service.ts:58",{"_index":2881,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["mapper/label",{"_index":2610,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"miscellaneous/variables.html":{}}}],["mapping.servic",{"_index":2578,"title":{},"body":{"modules/HelgolandCoreModule.html":{}}}],["mapping.service.t",{"_index":1533,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"miscellaneous/enumerations.html":{}}}],["mapping.service.ts:13",{"_index":1536,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["mapping.service.ts:19",{"_index":1542,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["mapping.service.ts:38",{"_index":1540,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["mapselectorcompon",{"_index":494,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:27",{"_index":3253,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:35",{"_index":3252,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:38",{"_index":3251,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:41",{"_index":3255,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:44",{"_index":3254,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:46",{"_index":3263,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:48",{"_index":3264,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:58",{"_index":3258,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:66",{"_index":3259,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:82",{"_index":3257,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mapselectorcomponent:91",{"_index":3261,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["margin",{"_index":835,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["mark",{"_index":4315,"title":{},"body":{"license.html":{}}}],["marker",{"_index":2209,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"injectables/LocateService.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["marker.on('click",{"_index":3278,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["marker.options.titl",{"_index":3104,"title":{},"body":{"injectables/LocateService.html":{}}}],["marker_s",{"_index":2141,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"miscellaneous/variables.html":{}}}],["marker_size_select",{"_index":2140,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"miscellaneous/variables.html":{}}}],["markerfeaturegroup",{"_index":3243,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["matbuttonmodul",{"_index":4655,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["matcardmodul",{"_index":4654,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["match",{"_index":131,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/Feature.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Offering.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["matcharray",{"_index":2909,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["matcharray[0",{"_index":2911,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["matchmaxzoom",{"_index":2490,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["matchminzoom",{"_index":2494,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["materi",{"_index":4649,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["math.ceil(calctick",{"_index":1192,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["math.floor((1",{"_index":533,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["math.max(0",{"_index":1365,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["math.max(1",{"_index":1200,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["math.max(4",{"_index":1440,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["math.random",{"_index":534,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["math.round(hourli",{"_index":1201,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["max",{"_index":246,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetOptions.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandModificationModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValueOption.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["maxcalcbrush",{"_index":1160,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["maxdiagramtimestamp",{"_index":1154,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["maximum",{"_index":1162,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["maxlabelwidth",{"_index":842,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["maxoverviewtimeinterv",{"_index":1150,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["maxtimeext",{"_index":3772,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["mc",{"_index":951,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["mean",{"_index":976,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["measur",{"_index":978,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"miscellaneous/enumerations.html":{}}}],["mechan",{"_index":4278,"title":{},"body":{"license.html":{}}}],["media",{"_index":4281,"title":{},"body":{"license.html":{}}}],["medium",{"_index":3929,"title":{},"body":{"components/TimeListSelectorComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"license.html":{}}}],["mediumd",{"_index":1986,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["meet",{"_index":4357,"title":{},"body":{"license.html":{}}}],["memberof",{"_index":493,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["merchant",{"_index":4397,"title":{},"body":{"license.html":{}}}],["mere",{"_index":4295,"title":{},"body":{"license.html":{}}}],["messag",{"_index":1908,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"interfaces/PresenterMessage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["message.t",{"_index":3411,"title":{},"body":{"interfaces/PresenterMessage.html":{}}}],["metadata",{"_index":182,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"pipes/DateProxyPipe.html":{},"components/DragOptionsComponent.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/Id.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/introduction.html":{}}}],["metadata).shar",{"_index":613,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["metadata.expirationtim",{"_index":617,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["metadata.forceupd",{"_index":593,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["method",{"_index":136,"title":{},"body":{"classes/ApiInterface.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"components/BoolTogglerComponent.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"components/ExtentControlComponent.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"classes/GeoSearch.html":{},"components/GeosearchControlComponent.html":{},"classes/HasLoadableContent.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"classes/IdCache.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/Plot.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/SettingsService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["middl",{"_index":1225,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["millisecond",{"_index":3783,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["milliseconds(numb",{"_index":3346,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["milliseconds*1000",{"_index":4566,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["min",{"_index":245,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetOptions.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandModificationModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValueOption.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["min/max",{"_index":4584,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["mincalcbrush",{"_index":1159,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["mindiagramtimestamp",{"_index":1152,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["minim",{"_index":3358,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["minimum",{"_index":1161,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["minli",{"_index":1170,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["minmaxrang",{"_index":771,"title":{"interfaces/MinMaxRange.html":{}},"body":{"interfaces/DataConst.html":{},"classes/DatasetOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{}}}],["minmaxrangecompon",{"_index":244,"title":{"components/MinMaxRangeComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandModificationModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["minoverviewtimeinterv",{"_index":1148,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["minrang",{"_index":1207,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["minrangeg",{"_index":1210,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["minsiz",{"_index":3300,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["miscellan",{"_index":4138,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":4557,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["missedto",{"_index":4578,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["mixin",{"_index":723,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"miscellaneous/functions.html":{}}}],["mixin([hasloadablecont",{"_index":726,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["mixin(basector",{"_index":4157,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mobil",{"_index":4148,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mobile_insitu",{"_index":4150,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mobileinsitu",{"_index":4149,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mode",{"_index":3298,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["modebarbuttonstoremov",{"_index":2158,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["model",{"_index":377,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"modules/HelgolandCachingModule.html":{},"injectables/LocalHttpCache.html":{},"additional-documentation/introduction.html":{}}}],["model/d3",{"_index":724,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["model/dataset",{"_index":1573,"title":{},"body":{"interfaces/DatasetApiV2.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusIntervalResolverService.html":{},"classes/UriParameterCoder.html":{}}}],["model/internal/http",{"_index":1577,"title":{},"body":{"interfaces/DatasetApiV2.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["model/internal/opt",{"_index":1900,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{}}}],["model/internal/resizablecompon",{"_index":1901,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["model/internal/timeinterv",{"_index":151,"title":{},"body":{"classes/ApiInterface.html":{},"interfaces/DatasetApiV2.html":{},"classes/DatasetPresenterComponent.html":{},"injectables/DefinedTimespanService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/Time.html":{},"classes/UriParameterCoder.html":{}}}],["model/languag",{"_index":3041,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["model/mixins/ha",{"_index":1902,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["model/request",{"_index":2078,"title":{},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["model/respons",{"_index":2079,"title":{},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["model/settings/set",{"_index":3760,"title":{},"body":{"classes/SettingsService.html":{}}}],["model/trajectori",{"_index":3501,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["modif",{"_index":4274,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["modifi",{"_index":4359,"title":{},"body":{"license.html":{}}}],["modul",{"_index":2125,"title":{"modules/EventingModule.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"modules.html":{}},"body":{"modules/EventingModule.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["moment",{"_index":150,"title":{},"body":{"classes/ApiInterface.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"injectables/DefinedTimespanService.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/Time.html":{},"interfaces/YScale.html":{},"dependencies.html":{},"index.html":{}}}],["moment().endof('day').unix",{"_index":2032,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment().endof('isoweek').unix",{"_index":2039,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment().endof('month').unix",{"_index":2045,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment().endof('year').unix",{"_index":2051,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment().startof('day').unix",{"_index":2031,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment().startof('isoweek').unix",{"_index":2038,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment().startof('month').unix",{"_index":2044,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment().startof('year').unix",{"_index":2050,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment().subtract(1",{"_index":2026,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment().unix",{"_index":2028,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["moment(date).add(halfduration).unix",{"_index":3899,"title":{},"body":{"injectables/Time.html":{}}}],["moment(date).subtract(halfduration).unix",{"_index":3898,"title":{},"body":{"injectables/Time.html":{}}}],["moment(now).endof('day').unix",{"_index":3919,"title":{},"body":{"injectables/Time.html":{}}}],["moment(now).startof('day').unix",{"_index":3918,"title":{},"body":{"injectables/Time.html":{}}}],["moment(start).endof('year",{"_index":3784,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["moment(timeinterval.timestamp).add(duration).unix",{"_index":3909,"title":{},"body":{"injectables/Time.html":{}}}],["moment(timeinterval.timestamp).subtract(duration).unix",{"_index":3908,"title":{},"body":{"injectables/Time.html":{}}}],["moment(timespan.from",{"_index":3921,"title":{},"body":{"injectables/Time.html":{}}}],["moment(timespan.from).add(duration).unix",{"_index":3904,"title":{},"body":{"injectables/Time.html":{}}}],["moment(timespan.from).endof('year",{"_index":3776,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["moment(timespan.from).startof('year",{"_index":3775,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["moment(timespan.from).subtract(duration).unix",{"_index":3902,"title":{},"body":{"injectables/Time.html":{}}}],["moment(timespan.from).subtract(durationmilli",{"_index":3911,"title":{},"body":{"injectables/Time.html":{}}}],["moment(timespan.to",{"_index":3922,"title":{},"body":{"injectables/Time.html":{}}}],["moment(timespan.to).add(duration).unix",{"_index":3905,"title":{},"body":{"injectables/Time.html":{}}}],["moment(timespan.to).add(durationmilli",{"_index":3913,"title":{},"body":{"injectables/Time.html":{}}}],["moment(timespan.to).format",{"_index":160,"title":{},"body":{"classes/ApiInterface.html":{}}}],["moment(timespan.to).subtract(duration).unix",{"_index":3903,"title":{},"body":{"injectables/Time.html":{}}}],["moment.dur",{"_index":3883,"title":{},"body":{"injectables/Time.html":{}}}],["moment.duration(1",{"_index":3773,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["moment.duration(timeinterval.bufferinterv",{"_index":3907,"title":{},"body":{"injectables/Time.html":{}}}],["moment.duration(to.diff(from",{"_index":3923,"title":{},"body":{"injectables/Time.html":{}}}],["month=20",{"_index":3362,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["months').endof('month').unix",{"_index":2048,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["months').startof('month').unix",{"_index":2047,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["more",{"_index":4197,"title":{},"body":{"index.html":{},"license.html":{}}}],["mous",{"_index":1058,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["mouse(this.background.nod",{"_index":1758,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["mouseclick",{"_index":1109,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["mousedownbrush",{"_index":816,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["mousemovehandl",{"_index":1339,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["mouseouthandl",{"_index":1379,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["mousmov",{"_index":1338,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["move",{"_index":1110,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["moveend",{"_index":2476,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["multi",{"_index":249,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["multiservicefilterselectorcompon",{"_index":248,"title":{"components/MultiServiceFilterSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["n52",{"_index":184,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["name",{"_index":88,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"classes/HasLoadableContent.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/IDataset.html":{},"classes/IdCache.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/how-tos.html":{}}}],["namespac",{"_index":4537,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["nan",{"_index":1317,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["nasti",{"_index":3399,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["nbsp;&ndash;&nbsp",{"_index":4018,"title":{},"body":{"components/TimespanShiftSelectorComponent.html":{}}}],["necessari",{"_index":4516,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["necessarili",{"_index":4342,"title":{},"body":{"license.html":{}}}],["need",{"_index":806,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["neglig",{"_index":4409,"title":{},"body":{"license.html":{}}}],["neighbourhood",{"_index":15,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["nest",{"_index":4233,"title":{},"body":{"index.html":{}}}],["network",{"_index":609,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["new",{"_index":66,"title":{},"body":{"interfaces/Address.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"components/BoolTogglerComponent.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandPermalinkModule.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"classes/IdCache.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"components/LocateControlComponent.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["newdatasetidx",{"_index":1009,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["newtimemax",{"_index":1396,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["newtimemin",{"_index":1395,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["next",{"_index":575,"title":{},"body":{"injectables/CachingInterceptor.html":{},"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/Layout.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"interfaces/YScale.html":{}}}],["next.handle(req",{"_index":592,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["next.referencevalues[key",{"_index":3790,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["ng",{"_index":4187,"title":{},"body":{"index.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["ngafterviewinit",{"_index":688,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["ngdocheck",{"_index":411,"title":{},"body":{"classes/CachedMapComponent.html":{},"classes/DatasetPresenterComponent.html":{}}}],["ngmodul",{"_index":2128,"title":{},"body":{"modules/EventingModule.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["ngonchang",{"_index":412,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/DatasetPresenterComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"classes/LocalSelectorComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeRangeSliderComponent.html":{}}}],["ngonchanges(chang",{"_index":453,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"classes/LocalSelectorComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeRangeSliderComponent.html":{}}}],["ngondestroy",{"_index":413,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["ngoninit",{"_index":414,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{},"classes/ListEntryComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["ngx",{"_index":1991,"title":{},"body":{"pipes/DateProxyPipe.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandSelectorModule.html":{},"classes/LanguageChangNotifier.html":{},"classes/LocalSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{},"dependencies.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["node",{"_index":3174,"title":{},"body":{"injectables/NotifierService.html":{},"index.html":{}}}],["node.appendchild(textnod",{"_index":3180,"title":{},"body":{"injectables/NotifierService.html":{}}}],["node.classnam",{"_index":3177,"title":{},"body":{"injectables/NotifierService.html":{}}}],["node.id",{"_index":3176,"title":{},"body":{"injectables/NotifierService.html":{}}}],["node/npm",{"_index":4166,"title":{},"body":{"index.html":{}}}],["node_modul",{"_index":4211,"title":{},"body":{"index.html":{}}}],["node_modules/@angular",{"_index":4221,"title":{},"body":{"index.html":{}}}],["node_modules/bootstrap",{"_index":3950,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["nodejs.tim",{"_index":3636,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["nominatimgeosearchservic",{"_index":55,"title":{"injectables/NominatimGeoSearchService.html":{}},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["nominatimreverseresult",{"_index":49,"title":{"interfaces/NominatimReverseResult.html":{}},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["nominatimsearchresult",{"_index":41,"title":{"interfaces/NominatimSearchResult.html":{}},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["non",{"_index":4326,"title":{},"body":{"license.html":{}}}],["none",{"_index":1055,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["noresultsfound",{"_index":3244,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["normal",{"_index":4372,"title":{},"body":{"license.html":{}}}],["noth",{"_index":2898,"title":{},"body":{"injectables/LabelMapperService.html":{},"license.html":{}}}],["notic",{"_index":4285,"title":{},"body":{"license.html":{}}}],["notifi",{"_index":2372,"title":{},"body":{"components/FavoriteTogglerComponent.html":{},"injectables/NotifierService.html":{},"miscellaneous/variables.html":{}}}],["notificationlevel",{"_index":635,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["notifier/notifier.servic",{"_index":2581,"title":{},"body":{"modules/HelgolandCoreModule.html":{}}}],["notifierel",{"_index":3172,"title":{},"body":{"injectables/NotifierService.html":{}}}],["notifierelement.classnam",{"_index":3184,"title":{},"body":{"injectables/NotifierService.html":{}}}],["notifierelement.classname.replace('hid",{"_index":3185,"title":{},"body":{"injectables/NotifierService.html":{}}}],["notifierelement.classname.replace('show",{"_index":3188,"title":{},"body":{"injectables/NotifierService.html":{}}}],["notifierelement.innerhtml",{"_index":3183,"title":{},"body":{"injectables/NotifierService.html":{}}}],["notifierservic",{"_index":2373,"title":{"injectables/NotifierService.html":{}},"body":{"components/FavoriteTogglerComponent.html":{},"modules/HelgolandCoreModule.html":{},"injectables/NotifierService.html":{},"overview.html":{}}}],["notifiertimeout",{"_index":3165,"title":{},"body":{"injectables/NotifierService.html":{}}}],["notify(text",{"_index":3167,"title":{},"body":{"injectables/NotifierService.html":{}}}],["notwithstand",{"_index":4382,"title":{},"body":{"license.html":{}}}],["now",{"_index":3917,"title":{},"body":{"injectables/Time.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["npm",{"_index":4168,"title":{},"body":{"index.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["npmjs.com",{"_index":4201,"title":{},"body":{"index.html":{}}}],["null",{"_index":97,"title":{},"body":{"interfaces/Address.html":{},"injectables/BasicAuthService.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"injectables/LabelMapperService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalStorage.html":{},"components/MinMaxRangeComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"classes/OnGoingHttpCache.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"injectables/Time.html":{},"interfaces/YScale.html":{}}}],["number",{"_index":47,"title":{},"body":{"interfaces/Address.html":{},"interfaces/AxesOptions.html":{},"interfaces/BlacklistedService.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"interfaces/CollectionMetadata.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/DatasetTableData.html":{},"interfaces/DrawOptions.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"injectables/FavoriteService.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalHttpCache.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"classes/OnGoingHttpCache.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/PlatformParameter.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/Settings.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"interfaces/YScale.html":{},"miscellaneous/variables.html":{}}}],["number.max_valu",{"_index":3851,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["number.min_valu",{"_index":3854,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["o.id",{"_index":3596,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["obj",{"_index":1020,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["obj.chang",{"_index":3551,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["obj.id",{"_index":1027,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["obj.rang",{"_index":1026,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["obj.range.min",{"_index":1031,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["obj.uom",{"_index":1024,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["obj.zerobasedyaxi",{"_index":1028,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["object",{"_index":438,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"injectables/LocalStorage.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/SingleFavorite.html":{},"interfaces/YScale.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["object.assign",{"_index":1928,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["object.assign(this.plotopt",{"_index":913,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["object.getownpropertynames(param",{"_index":4065,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["object.keys(this.oldbaselayer).length",{"_index":557,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["object.keys(this.oldoverlaylayer).length",{"_index":558,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["oblig",{"_index":4432,"title":{},"body":{"license.html":{}}}],["observ",{"_index":34,"title":{},"body":{"interfaces/Address.html":{},"injectables/BasicAuthService.html":{},"injectables/CachingInterceptor.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"injectables/JsonFavoriteExporterService.html":{},"injectables/LabelMapperService.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"classes/OnGoingHttpCache.html":{},"injectables/ServiceSelectorService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"index.html":{},"additional-documentation/introduction.html":{}}}],["observable((observ",{"_index":1545,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"injectables/JsonFavoriteExporterService.html":{},"injectables/LabelMapperService.html":{},"injectables/ServiceSelectorService.html":{},"injectables/StatusCheckService.html":{}}}],["observable.create((observ",{"_index":943,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["observable.of(cachedrespons",{"_index":603,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["observable>((observ",{"_index":611,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["observe(req",{"_index":2751,"title":{},"body":{"classes/HttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["observer.complet",{"_index":620,"title":{},"body":{"injectables/CachingInterceptor.html":{},"injectables/DatasetApiMapping.html":{},"injectables/JsonFavoriteExporterService.html":{},"injectables/LabelMapperService.html":{},"injectables/ServiceSelectorService.html":{},"injectables/StatusCheckService.html":{}}}],["observer.error(error",{"_index":622,"title":{},"body":{"injectables/CachingInterceptor.html":{},"injectables/ServiceSelectorService.html":{}}}],["observer.next(label",{"_index":2904,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["observer.next(nul",{"_index":3836,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["observer.next(r",{"_index":619,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["observer.next(tru",{"_index":2855,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["observer.next(url",{"_index":3837,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["observer.next(usableservic",{"_index":3748,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["observer.next(vers",{"_index":1555,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["occur",{"_index":2543,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["odd",{"_index":1375,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["offer",{"_index":1520,"title":{"interfaces/Offering.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"interfaces/Offering.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/StatusInterval.html":{},"interfaces/SupportedMimeTypes.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/UriParameterCoder.html":{},"license.html":{}}}],["offset",{"_index":630,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Id.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["ok",{"_index":3363,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"injectables/StatusCheckService.html":{}}}],["old",{"_index":2899,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["oldbaselay",{"_index":404,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["olddatasetopt",{"_index":1855,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["oldgraphopt",{"_index":1856,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["oldoverlaylay",{"_index":405,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["on",{"_index":1352,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos.html":{}}}],["on('drag",{"_index":1099,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["on('end",{"_index":1095,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["on('mousedown",{"_index":1129,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["on('mousedown.drag",{"_index":1750,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["on('mousemove.drag",{"_index":1752,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["on('mousemove.focu",{"_index":1060,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["on('mouseout",{"_index":1267,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["on('mouseout.focu",{"_index":1062,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["on('mouseup",{"_index":1269,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["on('mouseup.drag",{"_index":1754,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["on('slid",{"_index":3969,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["on('slidestop",{"_index":3964,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["on('start",{"_index":1091,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["on('zoom",{"_index":1093,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["onadd",{"_index":2469,"title":{},"body":{"classes/GeoCureGeoJSON.html":{}}}],["onadd(map",{"_index":2480,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["onc",{"_index":4183,"title":{},"body":{"index.html":{}}}],["onchang",{"_index":395,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"classes/LocalSelectorComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeRangeSliderComponent.html":{}}}],["onchangeyaxesvis",{"_index":190,"title":{},"body":{"components/AxesOptionsComponent.html":{}}}],["oncolorchang",{"_index":655,"title":{},"body":{"components/ColorSelectorComponent.html":{}}}],["oncompleteloadingdata",{"_index":937,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["oncontentload",{"_index":695,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"classes/DatasetPresenterComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["ondatasetselect",{"_index":1866,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"components/ListSelectorComponent.html":{}}}],["ondeletedataset",{"_index":2929,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["ondeletedatasetopt",{"_index":3425,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["ondestroy",{"_index":397,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["oneditopt",{"_index":3426,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["onerror(error",{"_index":1483,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ongo",{"_index":2556,"title":{},"body":{"modules/HelgolandCachingModule.html":{},"injectables/LocalOngoingHttpCache.html":{}}}],["ongoingcach",{"_index":570,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["ongoinghttpcach",{"_index":571,"title":{"classes/OnGoingHttpCache.html":{}},"body":{"injectables/CachingInterceptor.html":{},"modules/HelgolandCachingModule.html":{},"classes/HttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["ongraphload",{"_index":689,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["ongraphloading(load",{"_index":715,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["onhighlight",{"_index":2143,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["onhoverhighlight",{"_index":1639,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["oninit",{"_index":398,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{},"classes/ListEntryComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["onitemselect",{"_index":2406,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["onleftsid",{"_index":1435,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["onload",{"_index":696,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["onmessagethrown",{"_index":1867,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["onopenincombiview",{"_index":3427,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["onopentimeset",{"_index":4011,"title":{},"body":{"components/TimespanShiftSelectorComponent.html":{}}}],["onrangechang",{"_index":3135,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["onres",{"_index":922,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["onresultchang",{"_index":2519,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["onselect",{"_index":3249,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["onselectd",{"_index":3540,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["onselectdataset",{"_index":2930,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["onselectid",{"_index":802,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["onselectionchang",{"_index":1587,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"classes/ExtendedTimeseries.html":{}}}],["onselectionchangedfinish",{"_index":1638,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["onselectitem",{"_index":3150,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["onselectitem(item",{"_index":2409,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["onserviceselect",{"_index":3688,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["onshowgeometri",{"_index":3428,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{}}}],["ontimelistdetermin",{"_index":3485,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["ontimeselect",{"_index":3926,"title":{},"body":{"components/TimeListSelectorComponent.html":{}}}],["ontimespanchang",{"_index":697,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/DatasetPresenterComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["ontimespanselect",{"_index":3939,"title":{},"body":{"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{}}}],["ontoggl",{"_index":348,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/StringTogglerComponent.html":{}}}],["ontogglepanzoom",{"_index":2059,"title":{},"body":{"components/DragOptionsComponent.html":{}}}],["ontrigg",{"_index":3207,"title":{},"body":{"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{}}}],["onupdateopt",{"_index":3429,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["onwindowresize(ev",{"_index":3659,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["opac",{"_index":3496,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["open",{"_index":2991,"title":{},"body":{"components/ListSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"additional-documentation/how-tos.html":{}}}],["opendataset",{"_index":2955,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["opendataset(url",{"_index":2973,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["openincombiview",{"_index":3421,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["openincombiview(opt",{"_index":3446,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["openinmail",{"_index":3206,"title":{},"body":{"components/PermalinkInMailComponent.html":{}}}],["openinnewwindow",{"_index":3218,"title":{},"body":{"components/PermalinkNewWindowComponent.html":{}}}],["openstreetmap",{"_index":485,"title":{},"body":{"classes/CachedMapComponent.html":{},"miscellaneous/variables.html":{}}}],["option",{"_index":64,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"classes/BufferedTime.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"classes/Dataset.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"classes/IdCache.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["option.color",{"_index":2208,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["option.gener",{"_index":1680,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["option.timestamp",{"_index":2171,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["option.vis",{"_index":2195,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["options'},{'nam",{"_index":204,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["options.aspointgeometri",{"_index":70,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["options.color",{"_index":1719,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["options.compon",{"_index":2689,"title":{},"body":{"modules/HelgolandModificationModule.html":{}}}],["options.component.html",{"_index":187,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/DragOptionsComponent.html":{}}}],["options.component.t",{"_index":181,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/DragOptionsComponent.html":{}}}],["options.component.ts:10",{"_index":193,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/DragOptionsComponent.html":{}}}],["options.component.ts:12",{"_index":194,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/DragOptionsComponent.html":{}}}],["options.countrycod",{"_index":76,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["options.countrycodes.join",{"_index":78,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["options.findindex((",{"_index":2185,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["options.foreach((opt",{"_index":2170,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["options.offset",{"_index":1802,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["options.t",{"_index":671,"title":{},"body":{"interfaces/D3GraphOptions.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/LayerOptions.html":{}}}],["options.vis",{"_index":3463,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["options/ax",{"_index":180,"title":{},"body":{"components/AxesOptionsComponent.html":{},"modules/HelgolandModificationModule.html":{}}}],["options/drag",{"_index":2058,"title":{},"body":{"components/DragOptionsComponent.html":{},"modules/HelgolandModificationModule.html":{}}}],["origin",{"_index":1411,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["osm_id",{"_index":53,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["osm_typ",{"_index":52,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["otherwis",{"_index":3807,"title":{},"body":{"injectables/StatusCheckService.html":{},"license.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["out",{"_index":1004,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/FilteredParameter.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/YScale.html":{},"license.html":{},"overview.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["outdir",{"_index":4542,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["outofrang",{"_index":1002,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["output",{"_index":189,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{}}}],["outsid",{"_index":491,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["outstand",{"_index":4266,"title":{},"body":{"license.html":{}}}],["overlap",{"_index":1349,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"injectables/Time.html":{},"interfaces/YScale.html":{}}}],["overlaps(timeinterv",{"_index":3887,"title":{},"body":{"injectables/Time.html":{}}}],["overlay",{"_index":2229,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["overlaymap",{"_index":424,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["overview",{"_index":213,"title":{"overview.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandFlotModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["overview_max",{"_index":1144,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["overview_min",{"_index":1145,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["overview_width",{"_index":1143,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["overviewtimespan",{"_index":686,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["overviewtimespaninterv",{"_index":1104,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["owner",{"_index":4247,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":4262,"title":{},"body":{"license.html":{}}}],["packag",{"_index":4076,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["pad",{"_index":2154,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["page",{"_index":4123,"title":{"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["pair",{"_index":1353,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["pan",{"_index":1387,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/PlotOptions.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["panendhandl",{"_index":1400,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["panmovehandl",{"_index":1388,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["panrang",{"_index":167,"title":{},"body":{"interfaces/AxesOptions.html":{}}}],["panstarthandl",{"_index":1382,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["param",{"_index":65,"title":{},"body":{"interfaces/Address.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetApiV2.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalStorage.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/Time.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{}}}],["param.head",{"_index":3013,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["param.headeraddit",{"_index":3014,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["paramet",{"_index":143,"title":{"interfaces/Parameter.html":{}},"body":{"classes/ApiInterface.html":{},"injectables/BasicAuthService.html":{},"classes/BufferedTime.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/Category.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/Dataset.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/Feature.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"classes/GeoSearch.html":{},"components/GeosearchControlComponent.html":{},"classes/HasLoadableContent.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/IDataset.html":{},"classes/IdCache.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"injectables/NotifierService.html":{},"interfaces/Offering.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/Procedure.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValue.html":{},"components/RefreshButtonComponent.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/SettingsService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/functions.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["parameterconstel",{"_index":1519,"title":{"classes/ParameterConstellation.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/ExtendedTimeseries.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{}}}],["parameterconstellation:16",{"_index":1850,"title":{},"body":{"classes/DatasetParameterConstellation.html":{}}}],["parameterconstellation:17",{"_index":1847,"title":{},"body":{"classes/DatasetParameterConstellation.html":{}}}],["parameterconstellation:18",{"_index":1846,"title":{},"body":{"classes/DatasetParameterConstellation.html":{}}}],["parameterconstellation:19",{"_index":1849,"title":{},"body":{"classes/DatasetParameterConstellation.html":{}}}],["parameterconstellation:20",{"_index":1848,"title":{},"body":{"classes/DatasetParameterConstellation.html":{}}}],["parameterconstellation:21",{"_index":1845,"title":{},"body":{"classes/DatasetParameterConstellation.html":{}}}],["parameterfilt",{"_index":1488,"title":{"interfaces/ParameterFilter.html":{}},"body":{"interfaces/DataParameterFilter.html":{},"interfaces/DatasetApiV2.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"interfaces/HttpRequestOptions.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"interfaces/ParameterFilter.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/UriParameterCoder.html":{}}}],["parameterlist",{"_index":2994,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["params).subscrib",{"_index":3004,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["params).subscribe((result",{"_index":3001,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["params.local",{"_index":4064,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["params.set('countrycod",{"_index":77,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["params.set('format",{"_index":74,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["params.set('lat",{"_index":104,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["params.set('limit",{"_index":67,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["params.set('lon",{"_index":106,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["params.set('polygon_geojson",{"_index":69,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["params.set('q",{"_index":72,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["params[key",{"_index":2123,"title":{},"body":{"injectables/EventingImplApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["parsedtimespanpreset",{"_index":338,"title":{"interfaces/ParsedTimespanPreset.html":{}},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["parsefloat(interval.low",{"_index":3853,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["parsefloat(interval.upp",{"_index":3850,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["parsefloat(result.lat",{"_index":102,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["parsefloat(result.lon",{"_index":101,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["parseint(preset.timespan.to",{"_index":3405,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["parsemomentexpress",{"_index":3307,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["parsemomentexpression(express",{"_index":3317,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["parsexml(r",{"_index":2895,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["part",{"_index":3356,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"license.html":{}}}],["parti",{"_index":4371,"title":{},"body":{"license.html":{}}}],["partial",{"_index":2134,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["particular",{"_index":4399,"title":{},"body":{"license.html":{}}}],["password",{"_index":303,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["patent",{"_index":4335,"title":{},"body":{"license.html":{}}}],["path",{"_index":1311,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"index.html":{}}}],["pattern",{"_index":1984,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["percent",{"_index":4264,"title":{},"body":{"license.html":{}}}],["perform",{"_index":4188,"title":{},"body":{"index.html":{},"license.html":{}}}],["permalink",{"_index":253,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandPermalinkModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/introduction.html":{}}}],["permalinkinmailcompon",{"_index":252,"title":{"components/PermalinkInMailComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandPermalinkModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["permalinknewwindowcompon",{"_index":255,"title":{"components/PermalinkNewWindowComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandPermalinkModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["permalinkservic",{"_index":3223,"title":{"classes/PermalinkService.html":{}},"body":{"classes/PermalinkService.html":{}}}],["permalinktoclipboardcompon",{"_index":257,"title":{"components/PermalinkToClipboardComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandPermalinkModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["permiss",{"_index":4271,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3352,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["perpetu",{"_index":4324,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":4365,"title":{},"body":{"license.html":{}}}],["phenomena",{"_index":3667,"title":{},"body":{"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{}}}],["phenomenon",{"_index":1489,"title":{"interfaces/Phenomenon.html":{}},"body":{"interfaces/DataParameterFilter.html":{},"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/IDataset.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/Phenomenon.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/UriParameterCoder.html":{}}}],["phenomenonlabel",{"_index":3542,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["picker",{"_index":2688,"title":{},"body":{"modules/HelgolandModificationModule.html":{},"dependencies.html":{}}}],["pink.css",{"_index":4660,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["pipe",{"_index":319,"title":{"pipes/DateProxyPipe.html":{}},"body":{"injectables/BasicAuthService.html":{},"injectables/CachingInterceptor.html":{},"pipes/DateProxyPipe.html":{},"overview.html":{}}}],["pipes/dateproxy/dateproxy.pip",{"_index":2582,"title":{},"body":{"modules/HelgolandCoreModule.html":{}}}],["pipetransform",{"_index":1989,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["place",{"_index":4367,"title":{},"body":{"license.html":{}}}],["place_id",{"_index":50,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["plaintoclass",{"_index":3895,"title":{},"body":{"injectables/Time.html":{}}}],["plaintoclass(timespan",{"_index":3916,"title":{},"body":{"injectables/Time.html":{}}}],["platform",{"_index":260,"title":{"interfaces/Platform.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/Dataset.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetParameterConstellation.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapSelectorModule.html":{},"interfaces/IDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValue.html":{},"components/RefreshButtonComponent.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"components/ZoomControlComponent.html":{}}}],["platformlabel",{"_index":3541,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["platformmapselectorcompon",{"_index":259,"title":{"components/PlatformMapSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["platformparamet",{"_index":1524,"title":{"interfaces/PlatformParameter.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["platformtyp",{"_index":1491,"title":{},"body":{"interfaces/DataParameterFilter.html":{},"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/Platform.html":{},"interfaces/PlatformParameter.html":{},"components/ProfileEntryComponent.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"miscellaneous/enumerations.html":{}}}],["platformtypes.mobileinsitu",{"_index":3466,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["pleas",{"_index":4608,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["plot",{"_index":725,"title":{"interfaces/Plot.html":{}},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Plot.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["plotli",{"_index":262,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandPlotlyModule.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/introduction.html":{}}}],["plotly.j",{"_index":2136,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"dependencies.html":{},"additional-documentation/introduction.html":{}}}],["plotly.newplot(this.plotlyarea",{"_index":2259,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["plotly.relayout(this.plotlyarea",{"_index":2271,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["plotlyarea",{"_index":2146,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["plotlyelem",{"_index":2145,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["plotlyprofilegraphcompon",{"_index":261,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandPlotlyModule.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["plotopt",{"_index":861,"title":{"interfaces/PlotOptions.html":{}},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/PlotOptions.html":{},"interfaces/YScale.html":{}}}],["point",{"_index":32,"title":{},"body":{"interfaces/Address.html":{},"interfaces/DataConst.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/HighlightDataset.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{}}}],["point.coordinates[0].tostr",{"_index":105,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["point.coordinates[1].tostr",{"_index":107,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["pointradiu",{"_index":789,"title":{},"body":{"interfaces/DataConst.html":{},"classes/DatasetOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{}}}],["posit",{"_index":1428,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["possibl",{"_index":3339,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["postcod",{"_index":16,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["power",{"_index":4256,"title":{},"body":{"license.html":{}}}],["pre",{"_index":4555,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["predefin",{"_index":265,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandTimeModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{}}}],["predefinedrang",{"_index":995,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["predefinedrange.max",{"_index":1006,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["predefinedrange.min",{"_index":1005,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["predefinedsrvc",{"_index":4004,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["predefinedtimespanselectorcompon",{"_index":264,"title":{"components/PredefinedTimespanSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandTimeModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["prefer",{"_index":4273,"title":{},"body":{"license.html":{}}}],["prepar",{"_index":940,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["prepareddata",{"_index":814,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["preparefilterparam",{"_index":2090,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["preparefilterparams(param",{"_index":2105,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["prepareparams(param",{"_index":4062,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["preparerange(from",{"_index":1770,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["preparetsdata(dataset",{"_index":942,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["present",{"_index":1907,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"classes/HttpCache.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/PresenterMessage.html":{},"additional-documentation/introduction.html":{}}}],["presenter.component.t",{"_index":1852,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"miscellaneous/variables.html":{}}}],["presenter.component.ts:119",{"_index":1883,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:121",{"_index":1878,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:126",{"_index":1887,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:128",{"_index":1876,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:130",{"_index":1884,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:132",{"_index":1886,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:134",{"_index":1885,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:136",{"_index":1880,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:138",{"_index":1879,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:27",{"_index":1889,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:30",{"_index":1892,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:33",{"_index":1893,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:36",{"_index":1890,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:37",{"_index":1872,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:40",{"_index":1891,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:43",{"_index":1895,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:46",{"_index":1897,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:49",{"_index":1896,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:52",{"_index":1894,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:54",{"_index":1871,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:56",{"_index":1875,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:58",{"_index":1870,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:59",{"_index":1874,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:60",{"_index":1869,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:73",{"_index":1882,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenter.component.ts:80",{"_index":1881,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["presenterhighlight",{"_index":2135,"title":{"interfaces/PresenterHighlight.html":{}},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["presentermessag",{"_index":1906,"title":{"interfaces/PresenterMessage.html":{}},"body":{"classes/DatasetPresenterComponent.html":{},"interfaces/PresenterMessage.html":{}}}],["presentermessagetyp",{"_index":3412,"title":{},"body":{"interfaces/PresenterMessage.html":{},"miscellaneous/enumerations.html":{}}}],["preset",{"_index":3316,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["preset.nam",{"_index":3394,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["prevent",{"_index":1119,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["prevfilt",{"_index":2434,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["previou",{"_index":1695,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["previous.referencevalu",{"_index":3788,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["previous.referencevalues.hasownproperty(key",{"_index":3789,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["previous.referencevalues[key].concat(current.referencevalues[key",{"_index":3791,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["previous.values.concat(current.valu",{"_index":3787,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["previoustimestamp",{"_index":642,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["previousvalu",{"_index":643,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["privat",{"_index":293,"title":{},"body":{"injectables/BasicAuthService.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"injectables/DefinedTimespanService.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"classes/IdCache.html":{},"injectables/LabelMapperService.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NotifierService.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/StatusCheckService.html":{},"injectables/Time.html":{},"interfaces/YScale.html":{}}}],["problem",{"_index":3371,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["procedur",{"_index":1522,"title":{"interfaces/Procedure.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Procedure.html":{},"classes/ReferenceValue.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/StatusInterval.html":{},"interfaces/SupportedMimeTypes.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/UriParameterCoder.html":{}}}],["procedurelabel",{"_index":3543,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["process",{"_index":991,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["processalldata",{"_index":1685,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["processdata",{"_index":2190,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["processdata(dataentri",{"_index":993,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["processdataforid(internalid",{"_index":1689,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["product",{"_index":4388,"title":{},"body":{"license.html":{}}}],["profil",{"_index":263,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandPlotlyModule.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{}}}],["profiledataentri",{"_index":759,"title":{"interfaces/ProfileDataEntry.html":{}},"body":{"interfaces/Data.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/IDataEntry.html":{},"interfaces/Layout.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValues.html":{},"interfaces/ScatterData.html":{},"interfaces/TimeValueEntry.html":{}}}],["profileentrycompon",{"_index":266,"title":{"components/ProfileEntryComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandDatasetlistModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["profiles.legend.go",{"_index":3476,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["profiletrajectorymapselectorcompon",{"_index":268,"title":{"components/ProfileTrajectoryMapSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":4163,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["projects/.../api",{"_index":4142,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../cach",{"_index":4457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../control.module.t",{"_index":4452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../d3",{"_index":4140,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../dataset",{"_index":4458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../defin",{"_index":4144,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../enums.t",{"_index":4143,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../favorite.module.t",{"_index":4449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../favorite.service.t",{"_index":4153,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../flot",{"_index":4447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../http.service.t",{"_index":4459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../intern",{"_index":4461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../label",{"_index":4448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../locate.service.t",{"_index":4463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../map.module.t",{"_index":4454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../mixin.decorator.t",{"_index":4155,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../module.t",{"_index":4453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../notifier.service.t",{"_index":4460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../permalink.module.t",{"_index":4450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../plotli",{"_index":4462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../present",{"_index":4145,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../test.t",{"_index":4456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../time.module.t",{"_index":4451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/auth/src/lib/bas",{"_index":291,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["projects/helgoland/auth/src/test.t",{"_index":4481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/caching/src/lib/cach",{"_index":566,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["projects/helgoland/caching/src/lib/caching.module.t",{"_index":2553,"title":{},"body":{"modules/HelgolandCachingModule.html":{}}}],["projects/helgoland/caching/src/lib/loc",{"_index":370,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{}}}],["projects/helgoland/caching/src/lib/model.t",{"_index":2744,"title":{},"body":{"classes/HttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["projects/helgoland/caching/src/lib/model.ts:13",{"_index":2747,"title":{},"body":{"classes/HttpCache.html":{}}}],["projects/helgoland/caching/src/lib/model.ts:18",{"_index":3191,"title":{},"body":{"classes/OnGoingHttpCache.html":{}}}],["projects/helgoland/caching/src/lib/model.ts:19",{"_index":3193,"title":{},"body":{"classes/OnGoingHttpCache.html":{}}}],["projects/helgoland/caching/src/lib/model.ts:20",{"_index":3192,"title":{},"body":{"classes/OnGoingHttpCache.html":{}}}],["projects/helgoland/caching/src/lib/model.ts:21",{"_index":3190,"title":{},"body":{"classes/OnGoingHttpCache.html":{}}}],["projects/helgoland/caching/src/lib/model.ts:8",{"_index":2746,"title":{},"body":{"classes/HttpCache.html":{}}}],["projects/helgoland/caching/src/test.t",{"_index":4477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/control/src/lib/bool",{"_index":339,"title":{},"body":{"components/BoolTogglerComponent.html":{}}}],["projects/helgoland/control/src/lib/control.module.t",{"_index":2563,"title":{},"body":{"modules/HelgolandControlModule.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/control/src/lib/refresh",{"_index":3616,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["projects/helgoland/control/src/lib/str",{"_index":3855,"title":{},"body":{"components/StringTogglerComponent.html":{}}}],["projects/helgoland/control/src/test.t",{"_index":4473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/core/src/lib/abstract",{"_index":133,"title":{},"body":{"classes/ApiInterface.html":{},"classes/DatasetService.html":{}}}],["projects/helgoland/core/src/lib/color/color.service.t",{"_index":660,"title":{},"body":{"injectables/ColorService.html":{}}}],["projects/helgoland/core/src/lib/color/color.service.ts:10",{"_index":664,"title":{},"body":{"injectables/ColorService.html":{}}}],["projects/helgoland/core/src/lib/color/color.service.ts:6",{"_index":663,"title":{},"body":{"injectables/ColorService.html":{}}}],["projects/helgoland/core/src/lib/core.module.t",{"_index":2575,"title":{},"body":{"modules/HelgolandCoreModule.html":{}}}],["projects/helgoland/core/src/lib/dataset",{"_index":1531,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusIntervalResolverService.html":{},"classes/UriParameterCoder.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/core/src/lib/language/languag",{"_index":2913,"title":{},"body":{"classes/LanguageChangNotifier.html":{}}}],["projects/helgoland/core/src/lib/language/local",{"_index":3029,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["projects/helgoland/core/src/lib/language/model/language.t",{"_index":2912,"title":{},"body":{"interfaces/Language.html":{}}}],["projects/helgoland/core/src/lib/loc",{"_index":3049,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["projects/helgoland/core/src/lib/model/dataset",{"_index":625,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Data.html":{},"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/Feature.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Identifiable.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/Offering.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValues.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"interfaces/StatusInterval.html":{},"interfaces/SupportedMimeTypes.html":{},"interfaces/TimeValueEntry.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"miscellaneous/enumerations.html":{}}}],["projects/helgoland/core/src/lib/model/internal/dataset",{"_index":1976,"title":{},"body":{"interfaces/DatasetTableData.html":{}}}],["projects/helgoland/core/src/lib/model/internal/filter.t",{"_index":2392,"title":{},"body":{"classes/Filter.html":{}}}],["projects/helgoland/core/src/lib/model/internal/filter.ts:4",{"_index":2397,"title":{},"body":{"classes/Filter.html":{}}}],["projects/helgoland/core/src/lib/model/internal/filter.ts:5",{"_index":2396,"title":{},"body":{"classes/Filter.html":{}}}],["projects/helgoland/core/src/lib/model/internal/filter.ts:6",{"_index":2395,"title":{},"body":{"classes/Filter.html":{}}}],["projects/helgoland/core/src/lib/model/internal/filter.ts:7",{"_index":2394,"title":{},"body":{"classes/Filter.html":{}}}],["projects/helgoland/core/src/lib/model/internal/http",{"_index":1486,"title":{},"body":{"interfaces/DataParameterFilter.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/ParameterFilter.html":{}}}],["projects/helgoland/core/src/lib/model/internal/id",{"_index":2774,"title":{},"body":{"classes/IdCache.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.t",{"_index":1823,"title":{},"body":{"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:16",{"_index":1830,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:17",{"_index":1828,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:18",{"_index":1837,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:19",{"_index":1832,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:20",{"_index":1834,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:21",{"_index":1838,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:22",{"_index":1829,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:23",{"_index":1836,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:24",{"_index":1833,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:25",{"_index":1831,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:26",{"_index":1827,"title":{},"body":{"classes/DatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:38",{"_index":3614,"title":{},"body":{"classes/ReferenceValueOption.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:39",{"_index":3613,"title":{},"body":{"classes/ReferenceValueOption.html":{}}}],["projects/helgoland/core/src/lib/model/internal/options.ts:48",{"_index":3971,"title":{},"body":{"classes/TimedDatasetOptions.html":{}}}],["projects/helgoland/core/src/lib/model/internal/provider.t",{"_index":2442,"title":{},"body":{"interfaces/FilteredProvider.html":{},"interfaces/Provider.html":{}}}],["projects/helgoland/core/src/lib/model/internal/resizablecomponent.t",{"_index":3651,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["projects/helgoland/core/src/lib/model/internal/resizablecomponent.ts:10",{"_index":3654,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["projects/helgoland/core/src/lib/model/internal/resizablecomponent.ts:6",{"_index":3657,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["projects/helgoland/core/src/lib/model/internal/timeinterval.t",{"_index":356,"title":{},"body":{"classes/BufferedTime.html":{},"classes/TimeInterval.html":{},"classes/Timespan.html":{}}}],["projects/helgoland/core/src/lib/model/internal/timeinterval.ts:27",{"_index":363,"title":{},"body":{"classes/BufferedTime.html":{}}}],["projects/helgoland/core/src/lib/model/internal/timeinterval.ts:28",{"_index":362,"title":{},"body":{"classes/BufferedTime.html":{}}}],["projects/helgoland/core/src/lib/model/internal/timeinterval.ts:7",{"_index":3998,"title":{},"body":{"classes/Timespan.html":{}}}],["projects/helgoland/core/src/lib/model/internal/timeinterval.ts:9",{"_index":3997,"title":{},"body":{"classes/Timespan.html":{}}}],["projects/helgoland/core/src/lib/model/mixins/ha",{"_index":2546,"title":{},"body":{"classes/HasLoadableContent.html":{}}}],["projects/helgoland/core/src/lib/model/mixins/mixin.decorator.t",{"_index":4156,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/helgoland/core/src/lib/model/settings/settings.t",{"_index":323,"title":{},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["projects/helgoland/core/src/lib/notifier/notifier.service.t",{"_index":3164,"title":{},"body":{"injectables/NotifierService.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/core/src/lib/notifier/notifier.service.ts:23",{"_index":3168,"title":{},"body":{"injectables/NotifierService.html":{}}}],["projects/helgoland/core/src/lib/notifier/notifier.service.ts:9",{"_index":3166,"title":{},"body":{"injectables/NotifierService.html":{}}}],["projects/helgoland/core/src/lib/pipes/dateproxy/dateproxy.pipe.t",{"_index":1981,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["projects/helgoland/core/src/lib/pipes/dateproxy/dateproxy.pipe.ts:15",{"_index":1985,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["projects/helgoland/core/src/lib/presenting/dataset",{"_index":1851,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/core/src/lib/presenting/present",{"_index":3409,"title":{},"body":{"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/helgoland/core/src/lib/settings/settings.service.t",{"_index":3753,"title":{},"body":{"classes/SettingsService.html":{}}}],["projects/helgoland/core/src/lib/settings/settings.service.ts:12",{"_index":3757,"title":{},"body":{"classes/SettingsService.html":{}}}],["projects/helgoland/core/src/lib/settings/settings.service.ts:16",{"_index":3759,"title":{},"body":{"classes/SettingsService.html":{}}}],["projects/helgoland/core/src/lib/settings/settings.service.ts:5",{"_index":3756,"title":{},"body":{"classes/SettingsService.html":{}}}],["projects/helgoland/core/src/lib/statu",{"_index":3801,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["projects/helgoland/core/src/lib/time/defin",{"_index":2006,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.t",{"_index":3863,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:15",{"_index":3875,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:22",{"_index":3892,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:29",{"_index":3894,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:36",{"_index":3888,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:44",{"_index":3877,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:57",{"_index":3880,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:64",{"_index":3890,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:68",{"_index":3886,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:76",{"_index":3884,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:83",{"_index":3882,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/lib/time/time.service.ts:9",{"_index":3873,"title":{},"body":{"injectables/Time.html":{}}}],["projects/helgoland/core/src/test.t",{"_index":4467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/d3/src/lib/d3",{"_index":676,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["projects/helgoland/d3/src/lib/d3.module.t",{"_index":2590,"title":{},"body":{"modules/HelgolandD3Module.html":{}}}],["projects/helgoland/d3/src/lib/model/d3",{"_index":669,"title":{},"body":{"interfaces/D3GraphOptions.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"miscellaneous/enumerations.html":{}}}],["projects/helgoland/d3/src/test.t",{"_index":4471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/depiction/src/lib/dataset",{"_index":2597,"title":{},"body":{"modules/HelgolandDatasetTableModule.html":{}}}],["projects/helgoland/depiction/src/lib/datasetlist/list",{"_index":2924,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["projects/helgoland/depiction/src/lib/datasetlist/module.t",{"_index":2609,"title":{},"body":{"modules/HelgolandDatasetlistModule.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/depiction/src/lib/datasetlist/profil",{"_index":3414,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["projects/helgoland/depiction/src/lib/datasetlist/timeseri",{"_index":3538,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["projects/helgoland/depiction/src/lib/datasetlist/trajectori",{"_index":4020,"title":{},"body":{"components/TrajectoryEntryComponent.html":{}}}],["projects/helgoland/depiction/src/lib/label",{"_index":2639,"title":{},"body":{"modules/HelgolandLabelMapperModule.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/depiction/src/test.t",{"_index":4475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/eventing/src/lib/ev",{"_index":2062,"title":{},"body":{"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["projects/helgoland/eventing/src/lib/eventing.module.t",{"_index":2127,"title":{},"body":{"modules/EventingModule.html":{}}}],["projects/helgoland/eventing/src/lib/model/request.t",{"_index":2081,"title":{},"body":{"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"interfaces/EventingSubscriptionFilter.html":{}}}],["projects/helgoland/eventing/src/lib/model/response.t",{"_index":628,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["projects/helgoland/eventing/src/test.t",{"_index":4479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/favorite/src/lib/favorit",{"_index":2368,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["projects/helgoland/favorite/src/lib/favorite.module.t",{"_index":2624,"title":{},"body":{"modules/HelgolandFavoriteModule.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.t",{"_index":2294,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:10",{"_index":2367,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:11",{"_index":2366,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:12",{"_index":2354,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:20",{"_index":2355,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:33",{"_index":2360,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:37",{"_index":2359,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:41",{"_index":2363,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:55",{"_index":2356,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:66",{"_index":2358,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:70",{"_index":2362,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:77",{"_index":2357,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:84",{"_index":2365,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/favorite.service.ts:89",{"_index":2361,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["projects/helgoland/favorite/src/lib/service/json",{"_index":2809,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["projects/helgoland/favorite/src/test.t",{"_index":4468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/flot/src/lib/flot",{"_index":2445,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/flot/src/lib/flot.module.t",{"_index":2632,"title":{},"body":{"modules/HelgolandFlotModule.html":{}}}],["projects/helgoland/flot/src/lib/model/axesoptions.t",{"_index":162,"title":{},"body":{"interfaces/AxesOptions.html":{}}}],["projects/helgoland/flot/src/lib/model/dataseries.t",{"_index":1495,"title":{},"body":{"interfaces/DataSeries.html":{},"interfaces/SeriesOptions.html":{}}}],["projects/helgoland/flot/src/lib/model/plot.t",{"_index":3285,"title":{},"body":{"interfaces/Plot.html":{}}}],["projects/helgoland/flot/src/lib/model/plot.ts:4",{"_index":3289,"title":{},"body":{"interfaces/Plot.html":{}}}],["projects/helgoland/flot/src/lib/model/plot.ts:5",{"_index":3287,"title":{},"body":{"interfaces/Plot.html":{}}}],["projects/helgoland/flot/src/lib/model/plotoptions.t",{"_index":3291,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["projects/helgoland/flot/src/test.t",{"_index":4470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/map/src/lib/base/cach",{"_index":393,"title":{},"body":{"classes/CachedMapComponent.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/map/src/lib/base/geocure/geocur",{"_index":2465,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["projects/helgoland/map/src/lib/base/geosearch/geosearch.t",{"_index":2507,"title":{},"body":{"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{}}}],["projects/helgoland/map/src/lib/base/geosearch/geosearch.ts:42",{"_index":2512,"title":{},"body":{"classes/GeoSearch.html":{}}}],["projects/helgoland/map/src/lib/base/geosearch/geosearch.ts:44",{"_index":2511,"title":{},"body":{"classes/GeoSearch.html":{}}}],["projects/helgoland/map/src/lib/base/geosearch/nominatim.service.t",{"_index":5,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts:103",{"_index":3162,"title":{},"body":{"injectables/NominatimGeoSearchService.html":{}}}],["projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts:50",{"_index":3161,"title":{},"body":{"injectables/NominatimGeoSearchService.html":{}}}],["projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts:56",{"_index":3163,"title":{},"body":{"injectables/NominatimGeoSearchService.html":{}}}],["projects/helgoland/map/src/lib/base/map",{"_index":2920,"title":{},"body":{"interfaces/LayerOptions.html":{},"injectables/MapCache.html":{}}}],["projects/helgoland/map/src/lib/base/map.module.t",{"_index":2662,"title":{},"body":{"modules/HelgolandMapModule.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/map/src/lib/control/extent/extent.component.t",{"_index":2286,"title":{},"body":{"components/ExtentControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/extent/extent.component.ts:12",{"_index":2290,"title":{},"body":{"components/ExtentControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/extent/extent.component.ts:15",{"_index":2289,"title":{},"body":{"components/ExtentControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/extent/extent.component.ts:21",{"_index":2291,"title":{},"body":{"components/ExtentControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.t",{"_index":2513,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:14",{"_index":2521,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:17",{"_index":2522,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:20",{"_index":2523,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:22",{"_index":2527,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:24",{"_index":2529,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:26",{"_index":2530,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:28",{"_index":2520,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:35",{"_index":2526,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:62",{"_index":2524,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:68",{"_index":2525,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/locate/locate.component.t",{"_index":3069,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/locate/locate.component.ts:13",{"_index":3076,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/locate/locate.component.ts:15",{"_index":3075,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/locate/locate.component.ts:21",{"_index":3077,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/locate/locate.service.t",{"_index":3082,"title":{},"body":{"injectables/LocateService.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/map/src/lib/control/locate/locate.service.ts:11",{"_index":3086,"title":{},"body":{"injectables/LocateService.html":{}}}],["projects/helgoland/map/src/lib/control/locate/locate.service.ts:17",{"_index":3090,"title":{},"body":{"injectables/LocateService.html":{}}}],["projects/helgoland/map/src/lib/control/locate/locate.service.ts:34",{"_index":3092,"title":{},"body":{"injectables/LocateService.html":{}}}],["projects/helgoland/map/src/lib/control/locate/locate.service.ts:41",{"_index":3088,"title":{},"body":{"injectables/LocateService.html":{}}}],["projects/helgoland/map/src/lib/control/module.t",{"_index":2651,"title":{},"body":{"modules/HelgolandMapControlModule.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/map/src/lib/control/zoom/zoom.component.t",{"_index":4067,"title":{},"body":{"components/ZoomControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/zoom/zoom.component.ts:12",{"_index":4071,"title":{},"body":{"components/ZoomControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/zoom/zoom.component.ts:18",{"_index":4072,"title":{},"body":{"components/ZoomControlComponent.html":{}}}],["projects/helgoland/map/src/lib/control/zoom/zoom.component.ts:22",{"_index":4073,"title":{},"body":{"components/ZoomControlComponent.html":{}}}],["projects/helgoland/map/src/lib/selector/model/trajectori",{"_index":4024,"title":{},"body":{"interfaces/TrajectoryResult.html":{}}}],["projects/helgoland/map/src/lib/selector/module.t",{"_index":2668,"title":{},"body":{"modules/HelgolandMapSelectorModule.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/map/src/lib/selector/platform",{"_index":3242,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["projects/helgoland/map/src/lib/selector/trajectori",{"_index":3479,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["projects/helgoland/map/src/lib/view/module.t",{"_index":2678,"title":{},"body":{"modules/HelgolandMapViewModule.html":{}}}],["projects/helgoland/map/src/test.t",{"_index":4464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/modification/src/lib/ax",{"_index":179,"title":{},"body":{"components/AxesOptionsComponent.html":{}}}],["projects/helgoland/modification/src/lib/color",{"_index":651,"title":{},"body":{"components/ColorSelectorComponent.html":{}}}],["projects/helgoland/modification/src/lib/drag",{"_index":2057,"title":{},"body":{"components/DragOptionsComponent.html":{}}}],["projects/helgoland/modification/src/lib/min",{"_index":3127,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["projects/helgoland/modification/src/lib/modification.module.t",{"_index":2686,"title":{},"body":{"modules/HelgolandModificationModule.html":{}}}],["projects/helgoland/modification/src/test.t",{"_index":4474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/permalink/src/lib/permalink",{"_index":3202,"title":{},"body":{"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{}}}],["projects/helgoland/permalink/src/lib/permalink.module.t",{"_index":2696,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/permalink/src/lib/services/permalink.service.t",{"_index":3224,"title":{},"body":{"classes/PermalinkService.html":{}}}],["projects/helgoland/permalink/src/lib/services/permalink.service.ts:11",{"_index":3231,"title":{},"body":{"classes/PermalinkService.html":{}}}],["projects/helgoland/permalink/src/lib/services/permalink.service.ts:3",{"_index":3230,"title":{},"body":{"classes/PermalinkService.html":{}}}],["projects/helgoland/permalink/src/lib/services/permalink.service.ts:7",{"_index":3233,"title":{},"body":{"classes/PermalinkService.html":{}}}],["projects/helgoland/permalink/src/lib/services/permalink.service.ts:9",{"_index":3232,"title":{},"body":{"classes/PermalinkService.html":{}}}],["projects/helgoland/permalink/src/test.t",{"_index":4476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/plotly/src/lib/plotli",{"_index":2132,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/plotly/src/lib/plotly.module.t",{"_index":2710,"title":{},"body":{"modules/HelgolandPlotlyModule.html":{}}}],["projects/helgoland/plotly/src/test.t",{"_index":4478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/selector/src/lib/dataset",{"_index":1580,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["projects/helgoland/selector/src/lib/list",{"_index":2951,"title":{},"body":{"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{}}}],["projects/helgoland/selector/src/lib/multi",{"_index":2400,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["projects/helgoland/selector/src/lib/selector.module.t",{"_index":2719,"title":{},"body":{"modules/HelgolandSelectorModule.html":{}}}],["projects/helgoland/selector/src/lib/servic",{"_index":3668,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{}}}],["projects/helgoland/selector/src/test.t",{"_index":4480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/helgoland/tim",{"_index":2739,"title":{},"body":{"modules/HelgolandTimeRangeSliderModule.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/time/src/lib/predefin",{"_index":3304,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["projects/helgoland/time/src/lib/tim",{"_index":3924,"title":{},"body":{"components/TimeListSelectorComponent.html":{}}}],["projects/helgoland/time/src/lib/time.module.t",{"_index":2728,"title":{},"body":{"modules/HelgolandTimeModule.html":{},"miscellaneous/variables.html":{}}}],["projects/helgoland/time/src/lib/timespan",{"_index":3999,"title":{},"body":{"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["projects/helgoland/time/src/test.t",{"_index":4469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promin",{"_index":4361,"title":{},"body":{"license.html":{}}}],["properti",{"_index":7,"title":{},"body":{"interfaces/Address.html":{},"interfaces/AxesOptions.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"classes/BufferedTime.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"interfaces/CollectionMetadata.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"injectables/DefinedTimespanService.html":{},"interfaces/DrawOptions.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseResult.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"interfaces/LayerOptions.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"classes/PermalinkService.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"interfaces/YScale.html":{},"index.html":{}}}],["protect",{"_index":57,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"classes/LocalSelectorComponent.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"classes/PermalinkService.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/Time.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{}}}],["provid",{"_index":2130,"title":{"interfaces/Provider.html":{}},"body":{"modules/EventingModule.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"interfaces/Provider.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["providedin",{"_index":2763,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["providerblacklist",{"_index":328,"title":{},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["providerlist",{"_index":2956,"title":{},"body":{"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{}}}],["proxyurl",{"_index":330,"title":{},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["public",{"_index":62,"title":{},"body":{"interfaces/Address.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/D3SelectionRange.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"classes/ParameterConstellation.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["publicis",{"_index":3406,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["publicli",{"_index":4332,"title":{},"body":{"license.html":{}}}],["publish",{"_index":4198,"title":{},"body":{"index.html":{}}}],["pure",{"_index":1993,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["purpos",{"_index":4255,"title":{},"body":{"license.html":{}}}],["push",{"_index":1351,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["put",{"_index":2745,"title":{},"body":{"classes/HttpCache.html":{},"injectables/LocalHttpCache.html":{}}}],["put(req",{"_index":388,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/HttpCache.html":{},"injectables/LocalHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["quantiti",{"_index":3663,"title":{},"body":{"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{},"miscellaneous/enumerations.html":{}}}],["quantityprofil",{"_index":4151,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["queryselectorclip",{"_index":1304,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["quickstart",{"_index":4504,"title":{},"body":{"additional-documentation/how-tos.html":{}}}],["quit",{"_index":4586,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["quot",{"_index":3367,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["r",{"_index":2153,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["random",{"_index":952,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["randomli",{"_index":4558,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["rang",{"_index":279,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["range'},{'nam",{"_index":247,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["range([buff",{"_index":1805,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["range([bufferxrang",{"_index":1187,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["range([this.height",{"_index":1250,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["range.compon",{"_index":2691,"title":{},"body":{"modules/HelgolandModificationModule.html":{}}}],["range.component.css",{"_index":3129,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.component.html",{"_index":3130,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.component.t",{"_index":3128,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.component.ts:11",{"_index":3142,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.component.ts:12",{"_index":3141,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.component.ts:15",{"_index":3136,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.component.ts:18",{"_index":3137,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.component.ts:20",{"_index":3138,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.component.ts:27",{"_index":3140,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.component.ts:33",{"_index":3139,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["range.max",{"_index":1246,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["range.min",{"_index":1244,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["range.t",{"_index":749,"title":{},"body":{"classes/D3SelectionRange.html":{}}}],["range.ts:2",{"_index":750,"title":{},"body":{"classes/D3SelectionRange.html":{}}}],["range.ts:3",{"_index":751,"title":{},"body":{"classes/D3SelectionRange.html":{}}}],["range/min",{"_index":2690,"title":{},"body":{"modules/HelgolandModificationModule.html":{},"components/MinMaxRangeComponent.html":{}}}],["range[0",{"_index":1796,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["range[1",{"_index":1795,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["rangefactor",{"_index":694,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["rangemax",{"_index":3131,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["rangemin",{"_index":3132,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["rangemod",{"_index":2230,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["rangeoffset",{"_index":1247,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["ratiotimestampdiagcoord",{"_index":1394,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["rawdata",{"_index":2137,"title":{"interfaces/RawData.html":{}},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["rawsvg",{"_index":817,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["re",{"_index":615,"title":{},"body":{"injectables/CachingInterceptor.html":{},"interfaces/DataConst.html":{},"interfaces/FilteredParameter.html":{},"interfaces/HighlightDataset.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/StatusCheckService.html":{},"interfaces/YScale.html":{}}}],["reachabl",{"_index":3735,"title":{},"body":{"components/ServiceSelectorComponent.html":{},"injectables/StatusCheckService.html":{}}}],["react",{"_index":4668,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["readabl",{"_index":4366,"title":{},"body":{"license.html":{}}}],["reader",{"_index":2844,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["reader.onerror",{"_index":2847,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["reader.onload",{"_index":2849,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["reader.readastext(files[0",{"_index":2846,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["reason",{"_index":3361,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"license.html":{}}}],["receiv",{"_index":4318,"title":{},"body":{"license.html":{}}}],["recipi",{"_index":4358,"title":{},"body":{"license.html":{}}}],["rect",{"_index":1047,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["rectangl",{"_index":1354,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["red",{"_index":1137,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["redistribut",{"_index":4355,"title":{},"body":{"license.html":{}}}],["redrawchart",{"_index":2270,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["ref",{"_index":986,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["refdataentri",{"_index":985,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["referencevalu",{"_index":753,"title":{"classes/ReferenceValue.html":{},"classes/ReferenceValues.html":{}},"body":{"interfaces/Data.html":{},"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/ExtendedTimeseries.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"interfaces/ProfileDataEntry.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValues.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"interfaces/StatusInterval.html":{},"interfaces/TimeValueEntry.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["referencevaluecolorcach",{"_index":2608,"title":{"injectables/ReferenceValueColorCache.html":{}},"body":{"modules/HelgolandDatasetlistModule.html":{},"injectables/ReferenceValueColorCache.html":{},"overview.html":{}}}],["referencevaluedata",{"_index":974,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["referencevalueid",{"_index":1523,"title":{},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["referencevalueopt",{"_index":1835,"title":{"classes/ReferenceValueOption.html":{}},"body":{"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["refid",{"_index":3607,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["refresh",{"_index":270,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandControlModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["refreshbuttoncompon",{"_index":269,"title":{"components/RefreshButtonComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandTimeModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["refreshdatainterv",{"_index":335,"title":{},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["refreshinterv",{"_index":3623,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["refvalcach",{"_index":3546,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["refvalid",{"_index":3564,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["refvalopt",{"_index":3594,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["refvaloption.color",{"_index":3599,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["refvalue.color",{"_index":988,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/YScale.html":{}}}],["refvalue.id",{"_index":987,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["refvalue.referencevalueid",{"_index":3563,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["refvalue.vis",{"_index":3566,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["regard",{"_index":4386,"title":{},"body":{"license.html":{}}}],["regex",{"_index":3333,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["regexp(/^moment\\(\\)(\\.(((add|subtract)\\(\\d",{"_index":3375,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["regextoken",{"_index":2906,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["regextoken.exec(sourc",{"_index":2910,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["regist",{"_index":3818,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["relat",{"_index":992,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["reloaddata",{"_index":886,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["remain",{"_index":4293,"title":{},"body":{"license.html":{}}}],["remov",{"_index":1133,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"injectables/StatusCheckService.html":{},"interfaces/YScale.html":{}}}],["removealldataset",{"_index":1947,"title":{},"body":{"classes/DatasetService.html":{}}}],["removeallfavorit",{"_index":2322,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["removebasemap",{"_index":415,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["removebasemap(layeropt",{"_index":459,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["removedataset",{"_index":1862,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["removedataset(internalid",{"_index":893,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["removedatasetopt",{"_index":3422,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["removedatasetoptions(opt",{"_index":3448,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["removedidx",{"_index":2183,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["removefavorit",{"_index":2353,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["removefavorite(favoriteid",{"_index":2311,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["removemark",{"_index":3083,"title":{},"body":{"injectables/LocateService.html":{}}}],["removemarker(map",{"_index":3087,"title":{},"body":{"injectables/LocateService.html":{}}}],["removeoldgeometri",{"_index":2517,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["removeoverlaymap",{"_index":416,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["removeoverlaymap(layeropt",{"_index":461,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["removeselectedid",{"_index":1863,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["removeselectedid(internalid",{"_index":911,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["removeurl",{"_index":3812,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["removeurl(url",{"_index":3827,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["renam",{"_index":4622,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["render",{"_index":1121,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["replac",{"_index":4589,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["repositori",{"_index":4176,"title":{},"body":{"index.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["repres",{"_index":4292,"title":{},"body":{"license.html":{},"additional-documentation/introduction.html":{}}}],["reproduc",{"_index":4331,"title":{},"body":{"license.html":{}}}],["reproduct",{"_index":4239,"title":{},"body":{"license.html":{}}}],["req",{"_index":578,"title":{},"body":{"injectables/CachingInterceptor.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["req.method",{"_index":591,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["request",{"_index":587,"title":{},"body":{"injectables/CachingInterceptor.html":{},"interfaces/DatasetApiV2.html":{},"classes/Filter.html":{},"interfaces/FilteredProvider.html":{},"classes/HttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Provider.html":{},"components/ServiceSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"classes/UriParameterCoder.html":{},"additional-documentation/introduction.html":{}}}],["requestapi",{"_index":2091,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["requestapi(url",{"_index":2107,"title":{},"body":{"injectables/EventingImplApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["requests.push(super.gettsdata(id",{"_index":3781,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["requests.push(this.docheckurl(url",{"_index":3839,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["requests.t",{"_index":1487,"title":{},"body":{"interfaces/DataParameterFilter.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/ParameterFilter.html":{}}}],["requests.ts:7",{"_index":3201,"title":{},"body":{"interfaces/ParameterFilter.html":{}}}],["requesturl",{"_index":158,"title":{},"body":{"classes/ApiInterface.html":{}}}],["requir",{"_index":4179,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["require('deep",{"_index":1909,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":4465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.address.c",{"_index":114,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.city_district",{"_index":116,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.counti",{"_index":120,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.countri",{"_index":117,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.country_cod",{"_index":119,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.house_numb",{"_index":122,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.neighbourhood",{"_index":123,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.postcod",{"_index":124,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.road",{"_index":125,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.st",{"_index":126,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.state_district",{"_index":128,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.address.suburb",{"_index":129,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.boundingbox",{"_index":130,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.display_nam",{"_index":113,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.foreach((entri",{"_index":2435,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["res.lat",{"_index":110,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["res.length",{"_index":3275,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["res.lon",{"_index":111,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["resarray.length",{"_index":84,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["resarray[0",{"_index":87,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["reset",{"_index":2268,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/Layout.html":{},"components/MinMaxRangeComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"overview.html":{}}}],["resetyaxisrang",{"_index":3133,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["resiz",{"_index":1134,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["resizablecompon",{"_index":1853,"title":{"classes/ResizableComponent.html":{}},"body":{"classes/DatasetPresenterComponent.html":{},"classes/ResizableComponent.html":{}}}],["resizablecomponent:10",{"_index":1888,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["resolv",{"_index":2792,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"additional-documentation/introduction.html":{}}}],["resolvedlabel",{"_index":2901,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["resolveinternalid",{"_index":2806,"title":{},"body":{"injectables/InternalIdHandler.html":{}}}],["resolveinternalid(internalid",{"_index":2798,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{}}}],["resolver.servic",{"_index":2580,"title":{},"body":{"modules/HelgolandCoreModule.html":{}}}],["resolver.service.t",{"_index":3843,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["resolver.service.ts:10",{"_index":3847,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["resolver.service.ts:6",{"_index":3845,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["resp",{"_index":389,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/HttpCache.html":{},"injectables/LocalHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["respons",{"_index":379,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/CachingInterceptor.html":{},"classes/HttpCache.html":{},"injectables/LocalHttpCache.html":{},"classes/OnGoingHttpCache.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["responsetyp",{"_index":2892,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["rest",{"_index":4224,"title":{},"body":{"index.html":{}}}],["restart",{"_index":4541,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["restrict",{"_index":4582,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["restuctur",{"_index":4617,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["result",{"_index":86,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/Feature.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Offering.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["result.bound",{"_index":2540,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["result.boundingbox",{"_index":92,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["result.boundingbox[0",{"_index":93,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["result.boundingbox[1",{"_index":95,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["result.boundingbox[2",{"_index":94,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["result.boundingbox[3",{"_index":96,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["result.display_nam",{"_index":89,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["result.foreach((entri",{"_index":1551,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["result.geojson",{"_index":99,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["result.t",{"_index":4025,"title":{},"body":{"interfaces/TrajectoryResult.html":{}}}],["result.valu",{"_index":1683,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["result.values.length",{"_index":1682,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"components/ProfileEntryComponent.html":{}}}],["resultgeometri",{"_index":2515,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["retain",{"_index":4363,"title":{},"body":{"license.html":{}}}],["return",{"_index":79,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"components/BoolTogglerComponent.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"classes/GeoSearch.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"classes/IdCache.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/Plot.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["revers",{"_index":108,"title":{},"body":{"interfaces/Address.html":{},"interfaces/ExtendedScatterData.html":{},"classes/GeoSearch.html":{},"interfaces/Layout.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["reverse(point",{"_index":103,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["revis",{"_index":4290,"title":{},"body":{"license.html":{}}}],["right",{"_index":838,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["risk",{"_index":4404,"title":{},"body":{"license.html":{}}}],["road",{"_index":17,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["root",{"_index":2764,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["rotat",{"_index":1255,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["row",{"_index":4629,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["royalti",{"_index":4329,"title":{},"body":{"license.html":{}}}],["run",{"_index":4181,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["rxj",{"_index":311,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"classes/EventingApiService.html":{},"injectables/EventingImplApiInterface.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"classes/UriParameterCoder.html":{},"dependencies.html":{}}}],["rxjs/add/observable/of",{"_index":579,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["rxjs/add/operator/map",{"_index":25,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["rxjs/add/operator/shar",{"_index":580,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["rxjs/observ",{"_index":35,"title":{},"body":{"interfaces/Address.html":{},"injectables/CachingInterceptor.html":{},"interfaces/DataConst.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"injectables/JsonFavoriteExporterService.html":{},"injectables/LabelMapperService.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"classes/OnGoingHttpCache.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/YScale.html":{}}}],["rxjs/oper",{"_index":312,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{}}}],["rxjs/operator/map",{"_index":2789,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{}}}],["s4",{"_index":532,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["safemomentexpress",{"_index":3374,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["safemomentexpression.test(express",{"_index":3388,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["same",{"_index":604,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["satisfi",{"_index":3401,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["save",{"_index":2794,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/LocalStorage.html":{}}}],["save(param",{"_index":3061,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["savefavorit",{"_index":2331,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["savest",{"_index":1948,"title":{},"body":{"classes/DatasetService.html":{}}}],["savetimespan",{"_index":3870,"title":{},"body":{"injectables/Time.html":{}}}],["savetimespan(param",{"_index":3889,"title":{},"body":{"injectables/Time.html":{}}}],["scale",{"_index":1183,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/PlotOptions.html":{},"interfaces/YScale.html":{}}}],["scalelinear",{"_index":1628,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["scatter",{"_index":2200,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["scatterdata",{"_index":2272,"title":{"interfaces/ScatterData.html":{}},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["scrollzoom",{"_index":2163,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["scss",{"_index":4613,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["search",{"_index":82,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"additional-documentation/introduction.html":{}}}],["searchterm",{"_index":2510,"title":{},"body":{"classes/GeoSearch.html":{},"components/GeosearchControlComponent.html":{},"injectables/NominatimGeoSearchService.html":{}}}],["searchterm(term",{"_index":63,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["section",{"_index":4243,"title":{},"body":{"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["secur",{"_index":3365,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["see",{"_index":595,"title":{},"body":{"injectables/CachingInterceptor.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["select",{"_index":748,"title":{},"body":{"classes/D3SelectionRange.html":{},"interfaces/DataConst.html":{},"interfaces/DataSeries.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/FilteredParameter.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"interfaces/PlotOptions.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["select(this.d3elem.nativeel",{"_index":1655,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["selectall('text",{"_index":1222,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["selectdataset",{"_index":4641,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["selectdataset(select",{"_index":4643,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["selecteddatasetid",{"_index":1865,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["selecteddatasetidschang",{"_index":1920,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["selecteddatasetidschanges.foreachaddeditem((addeditem",{"_index":1922,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["selecteddatasetidschanges.foreachremoveditem((removeditem",{"_index":1924,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["selecteddatasetidsdiff",{"_index":1857,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["selectedid",{"_index":4571,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["selectedservic",{"_index":3685,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selectedtimespan",{"_index":3297,"title":{},"body":{"interfaces/PlotOptions.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selectionend",{"_index":3937,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["selectionid",{"_index":3669,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["selectionstart",{"_index":3938,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["selector",{"_index":183,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/introduction.html":{}}}],["selector'},{'nam",{"_index":210,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["selector.compon",{"_index":2670,"title":{},"body":{"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"components/ListSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.html",{"_index":654,"title":{},"body":{"components/ColorSelectorComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/FilteredParameter.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["selector.component.scss",{"_index":1582,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["selector.component.t",{"_index":653,"title":{},"body":{"components/ColorSelectorComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{},"interfaces/FilteredParameter.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["selector.component.ts:10",{"_index":656,"title":{},"body":{"components/ColorSelectorComponent.html":{},"components/TimeListSelectorComponent.html":{}}}],["selector.component.ts:108",{"_index":3154,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:11",{"_index":4012,"title":{},"body":{"components/TimespanShiftSelectorComponent.html":{}}}],["selector.component.ts:111",{"_index":2968,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["selector.component.ts:112",{"_index":3159,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:116",{"_index":3489,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:122",{"_index":3491,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:13",{"_index":657,"title":{},"body":{"components/ColorSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/TimeListSelectorComponent.html":{}}}],["selector.component.ts:14",{"_index":4013,"title":{},"body":{"components/TimespanShiftSelectorComponent.html":{}}}],["selector.component.ts:15",{"_index":3670,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{},"components/TimeListSelectorComponent.html":{}}}],["selector.component.ts:16",{"_index":658,"title":{},"body":{"components/ColorSelectorComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{}}}],["selector.component.ts:17",{"_index":3690,"title":{},"body":{"components/ServiceSelectorComponent.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["selector.component.ts:18",{"_index":3309,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:19",{"_index":1591,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{}}}],["selector.component.ts:20",{"_index":3691,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:21",{"_index":3250,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:22",{"_index":1590,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:23",{"_index":3693,"title":{},"body":{"components/ServiceSelectorComponent.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["selector.component.ts:24",{"_index":2962,"title":{},"body":{"components/ListSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:25",{"_index":1592,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:26",{"_index":3692,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:27",{"_index":1598,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"components/ListSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["selector.component.ts:28",{"_index":3153,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:29",{"_index":1589,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:30",{"_index":2963,"title":{},"body":{"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:31",{"_index":3152,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["selector.component.ts:32",{"_index":3256,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:33",{"_index":2964,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["selector.component.ts:35",{"_index":1593,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:36",{"_index":2965,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["selector.component.ts:37",{"_index":3698,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:38",{"_index":2960,"title":{},"body":{"components/ListSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:39",{"_index":3487,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:40",{"_index":3157,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:41",{"_index":3312,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["selector.component.ts:42",{"_index":3488,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:44",{"_index":3158,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:45",{"_index":3494,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:46",{"_index":2972,"title":{},"body":{"components/ListSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:48",{"_index":3155,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:49",{"_index":3672,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:5",{"_index":2273,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["selector.component.ts:52",{"_index":3156,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:53",{"_index":3673,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:54",{"_index":3499,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:55",{"_index":3315,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["selector.component.ts:58",{"_index":3486,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:60",{"_index":1596,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{}}}],["selector.component.ts:65",{"_index":1597,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{}}}],["selector.component.ts:67",{"_index":3318,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["selector.component.ts:69",{"_index":3493,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:76",{"_index":2971,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["selector.component.ts:78",{"_index":3320,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["selector.component.ts:79",{"_index":3695,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:81",{"_index":3671,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:83",{"_index":3492,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selector.component.ts:84",{"_index":3697,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.component.ts:85",{"_index":3674,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["selector.component.ts:99",{"_index":2974,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["selector.dataset",{"_index":3730,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.phenomena",{"_index":3732,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.platform",{"_index":3726,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.servic",{"_index":2721,"title":{},"body":{"modules/HelgolandSelectorModule.html":{},"components/ListSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["selector.service.t",{"_index":3015,"title":{},"body":{"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/ServiceSelectorService.html":{}}}],["selector.service.ts:10",{"_index":3738,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["selector.service.ts:14",{"_index":3018,"title":{},"body":{"injectables/ListSelectorService.html":{}}}],["selector.service.ts:15",{"_index":3019,"title":{},"body":{"injectables/ListSelectorService.html":{}}}],["selector.service.ts:16",{"_index":3741,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["selector.service.ts:42",{"_index":3743,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["selector.st",{"_index":3724,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.t",{"_index":3030,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["selector.timeseri",{"_index":3728,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selector.ts:11",{"_index":3035,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["selector.ts:17",{"_index":3036,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["selector.ts:23",{"_index":3039,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["selector.ts:28",{"_index":3037,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["selector.ts:9",{"_index":3040,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["selector/color",{"_index":652,"title":{},"body":{"components/ColorSelectorComponent.html":{},"modules/HelgolandModificationModule.html":{}}}],["selector/dataset",{"_index":1581,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{},"modules/HelgolandSelectorModule.html":{}}}],["selector/list",{"_index":2720,"title":{},"body":{"modules/HelgolandSelectorModule.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{}}}],["selector/multi",{"_index":2401,"title":{},"body":{"interfaces/FilteredParameter.html":{},"modules/HelgolandSelectorModule.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["selector/platform",{"_index":2669,"title":{},"body":{"modules/HelgolandMapSelectorModule.html":{},"components/PlatformMapSelectorComponent.html":{}}}],["selector/predefin",{"_index":2729,"title":{},"body":{"modules/HelgolandTimeModule.html":{},"components/PredefinedTimespanSelectorComponent.html":{}}}],["selector/servic",{"_index":2722,"title":{},"body":{"modules/HelgolandSelectorModule.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{}}}],["selector/st",{"_index":2671,"title":{},"body":{"modules/HelgolandMapSelectorModule.html":{}}}],["selector/tim",{"_index":2730,"title":{},"body":{"modules/HelgolandTimeModule.html":{},"components/TimeListSelectorComponent.html":{}}}],["selector/timespan",{"_index":2732,"title":{},"body":{"modules/HelgolandTimeModule.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["selector/trajectori",{"_index":2672,"title":{},"body":{"modules/HelgolandMapSelectorModule.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["selectorid",{"_index":2957,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["selectservic",{"_index":3683,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selectservice(servic",{"_index":3696,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["selecttim",{"_index":3925,"title":{},"body":{"components/TimeListSelectorComponent.html":{}}}],["selecttime(timestamp",{"_index":3927,"title":{},"body":{"components/TimeListSelectorComponent.html":{}}}],["sell",{"_index":4337,"title":{},"body":{"license.html":{}}}],["semicolon",{"_index":3373,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["senddatatocloud",{"_index":2159,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["sensor",{"_index":4161,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["sent",{"_index":4308,"title":{},"body":{"license.html":{}}}],["separ",{"_index":4294,"title":{},"body":{"license.html":{}}}],["separateyaxi",{"_index":1825,"title":{},"body":{"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["seperatorafterthisitem",{"_index":337,"title":{},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["seri",{"_index":4223,"title":{},"body":{"index.html":{}}}],["seriesopt",{"_index":1496,"title":{"interfaces/SeriesOptions.html":{}},"body":{"interfaces/DataSeries.html":{},"interfaces/SeriesOptions.html":{}}}],["seriesparamet",{"_index":1503,"title":{},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["serv",{"_index":599,"title":{},"body":{"injectables/CachingInterceptor.html":{},"index.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["servic",{"_index":250,"title":{"interfaces/Service.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataParameterFilter.html":{},"classes/Dataset.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetParameterConstellation.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandSelectorModule.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/IDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValue.html":{},"components/RefreshButtonComponent.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"components/ZoomControlComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/introduction.html":{}}}],["service.apiurl",{"_index":3719,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service.id",{"_index":3717,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service.label",{"_index":3721,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service.quantities.dataset",{"_index":3731,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service.quantities.phenomena",{"_index":3733,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service.quantities.platform",{"_index":3727,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service.quantities.st",{"_index":3725,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service.quantities.timeseri",{"_index":3729,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service.typ",{"_index":3722,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service.vers",{"_index":3723,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["service/favorite.servic",{"_index":2379,"title":{},"body":{"components/FavoriteTogglerComponent.html":{},"modules/HelgolandFavoriteModule.html":{}}}],["service/json",{"_index":2625,"title":{},"body":{"modules/HelgolandFavoriteModule.html":{}}}],["servicefilterselectorcompon",{"_index":272,"title":{"components/ServiceFilterSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["serviceid",{"_index":324,"title":{},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["servicequant",{"_index":3666,"title":{"interfaces/ServiceQuantities.html":{}},"body":{"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{}}}],["services.map((servic",{"_index":3746,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["services/api",{"_index":134,"title":{},"body":{"classes/ApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["services/dataset.t",{"_index":1943,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:14",{"_index":1955,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:30",{"_index":1960,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:36",{"_index":1961,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:45",{"_index":1958,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:49",{"_index":1964,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:54",{"_index":1957,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:56",{"_index":1962,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:58",{"_index":1959,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:6",{"_index":1953,"title":{},"body":{"classes/DatasetService.html":{}}}],["services/dataset.ts:8",{"_index":1952,"title":{},"body":{"classes/DatasetService.html":{}}}],["serviceselectorcompon",{"_index":273,"title":{"components/ServiceSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["serviceselectorservic",{"_index":2718,"title":{"injectables/ServiceSelectorService.html":{}},"body":{"modules/HelgolandSelectorModule.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"overview.html":{}}}],["serviceurl",{"_index":58,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["set",{"_index":326,"title":{"interfaces/Settings.html":{}},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetApi.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"classes/IdCache.html":{},"injectables/LabelMapperService.html":{},"interfaces/Layout.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/RawData.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["set(id",{"_index":2780,"title":{},"body":{"classes/IdCache.html":{}}}],["set(req",{"_index":2750,"title":{},"body":{"classes/HttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["setcurrentlang",{"_index":3032,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["setdataext",{"_index":1003,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["setinterv",{"_index":3647,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["setitem",{"_index":3151,"title":{},"body":{"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["setitems(r",{"_index":2433,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["setlanguag",{"_index":3033,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["setlanguage(lang",{"_index":3038,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["setmap",{"_index":3119,"title":{},"body":{"injectables/MapCache.html":{}}}],["setmap(id",{"_index":3122,"title":{},"body":{"injectables/MapCache.html":{}}}],["setparamet",{"_index":3575,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["setselect",{"_index":3286,"title":{},"body":{"interfaces/Plot.html":{}}}],["setselectedid",{"_index":1864,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["setselectedid(internalid",{"_index":901,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["setselection(rang",{"_index":3288,"title":{},"body":{"interfaces/Plot.html":{}}}],["setset",{"_index":3755,"title":{},"body":{"classes/SettingsService.html":{}}}],["setsettings(set",{"_index":3758,"title":{},"body":{"classes/SettingsService.html":{}}}],["settimeout",{"_index":3187,"title":{},"body":{"injectables/NotifierService.html":{}}}],["settingsrvc",{"_index":3310,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["settingsservic",{"_index":2876,"title":{"classes/SettingsService.html":{}},"body":{"injectables/LabelMapperService.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"classes/SettingsService.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["settingssrvc",{"_index":2875,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["setview",{"_index":3108,"title":{},"body":{"injectables/LocateService.html":{}}}],["setyaxisrang",{"_index":3134,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["shall",{"_index":4242,"title":{},"body":{"license.html":{}}}],["shape",{"_index":3299,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["share",{"_index":612,"title":{},"body":{"injectables/CachingInterceptor.html":{},"license.html":{}}}],["share.subscribe((r",{"_index":614,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["sheet",{"_index":4656,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["shift",{"_index":284,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandTimeModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["short",{"_index":1623,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TimeRangeSliderComponent.html":{}}}],["shortcut",{"_index":3351,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["show",{"_index":1336,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"injectables/NotifierService.html":{},"interfaces/Plot.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["showaxi",{"_index":1240,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["showbottomindicatorlabel(item",{"_index":1779,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["showdiagramind",{"_index":1430,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["showgeometri",{"_index":3423,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{}}}],["showgeometry(opt",{"_index":3450,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["showlabelvalues(entri",{"_index":1448,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["showlabelvalues(item",{"_index":1775,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["showlegend",{"_index":2151,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["showlin",{"_index":2228,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["shown",{"_index":4218,"title":{},"body":{"index.html":{}}}],["showonmaxzoom",{"_index":2485,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["showonminzoom",{"_index":2484,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["showreferencevalu",{"_index":744,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"classes/DatasetOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/MinMaxRange.html":{},"interfaces/PlotOptions.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["showtimeindicatorlabel(item",{"_index":1455,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["showtip",{"_index":2162,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["showunresolvableservic",{"_index":3686,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["side",{"_index":1447,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["similar",{"_index":4587,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["simpl",{"_index":3804,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["simplechang",{"_index":454,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/LabelMapperComponent.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"classes/LocalSelectorComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeRangeSliderComponent.html":{}}}],["simpli",{"_index":1994,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["singlefav",{"_index":2300,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["singlefavorit",{"_index":2296,"title":{"interfaces/SingleFavorite.html":{}},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"injectables/JsonFavoriteExporterService.html":{},"interfaces/SingleFavorite.html":{},"miscellaneous/variables.html":{}}}],["size",{"_index":2210,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["skip",{"_index":588,"title":{},"body":{"injectables/CachingInterceptor.html":{},"additional-documentation/how-tos.html":{}}}],["slash",{"_index":157,"title":{},"body":{"classes/ApiInterface.html":{}}}],["slider",{"_index":3932,"title":{},"body":{"components/TimeRangeSliderComponent.html":{},"dependencies.html":{}}}],["slider'},{'nam",{"_index":280,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["slider.compon",{"_index":2742,"title":{},"body":{"modules/HelgolandTimeRangeSliderModule.html":{}}}],["slider.component.html",{"_index":3936,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.scss",{"_index":3949,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.scss,.../../../../node_modules/bootstrap",{"_index":3933,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.t",{"_index":3931,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.ts:22",{"_index":3941,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.ts:25",{"_index":3942,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.ts:28",{"_index":3943,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.ts:30",{"_index":3947,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.ts:31",{"_index":3946,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.ts:32",{"_index":3945,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.ts:33",{"_index":3940,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.component.ts:39",{"_index":3944,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.min.css",{"_index":3935,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider.module.t",{"_index":2741,"title":{},"body":{"modules/HelgolandTimeRangeSliderModule.html":{}}}],["slider.servic",{"_index":2743,"title":{},"body":{"modules/HelgolandTimeRangeSliderModule.html":{},"components/TimeRangeSliderComponent.html":{}}}],["slider.service.t",{"_index":3930,"title":{},"body":{"injectables/TimeRangeSliderCache.html":{}}}],["slider/dist/css/bootstrap",{"_index":3934,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["slider/src/lib/tim",{"_index":2740,"title":{},"body":{"modules/HelgolandTimeRangeSliderModule.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{}}}],["slider/src/test.t",{"_index":4472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["softwar",{"_index":4276,"title":{},"body":{"license.html":{}}}],["sole",{"_index":4400,"title":{},"body":{"license.html":{}}}],["solv",{"_index":4540,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["solvelabel",{"_index":329,"title":{},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["someth",{"_index":3398,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["somewher",{"_index":4640,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/Category.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"modules/EventingModule.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/Feature.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"modules/HelgolandCachingModule.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Offering.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Phenomenon.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/Procedure.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"index.html":{},"license.html":{}}}],["span",{"_index":1167,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["spec.t",{"_index":4547,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["spec\\.t",{"_index":4466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":4414,"title":{},"body":{"license.html":{}}}],["specif",{"_index":2796,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"additional-documentation/introduction.html":{}}}],["spliceidx",{"_index":895,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["split",{"_index":2799,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{}}}],["split.length",{"_index":2801,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{}}}],["split[0",{"_index":2803,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{}}}],["split[1",{"_index":2804,"title":{},"body":{"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{}}}],["splitteddatadatasetapiinterfac",{"_index":3761,"title":{"injectables/SplittedDataDatasetApiInterface.html":{}},"body":{"injectables/SplittedDataDatasetApiInterface.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["src/app/app.component.html",{"_index":4548,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["src/app/app.component.t",{"_index":4553,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["src/app/app.module.t",{"_index":4521,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["src/tsconfig.app.j",{"_index":4539,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["start",{"_index":1381,"title":{"index.html":{},"license.html":{}},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/Time.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/YScale.html":{},"index.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["start.isbefore(moment(timespan.to",{"_index":3777,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["startloc",{"_index":3084,"title":{},"body":{"injectables/LocateService.html":{}}}],["startlocate(id",{"_index":3089,"title":{},"body":{"injectables/LocateService.html":{}}}],["startof(str",{"_index":3343,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["startrefreshinterv",{"_index":3621,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["state",{"_index":18,"title":{},"body":{"interfaces/Address.html":{},"interfaces/DataConst.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/HighlightDataset.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["state_district",{"_index":19,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["statedistrict",{"_index":127,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["statement",{"_index":4377,"title":{},"body":{"license.html":{}}}],["static",{"_index":4189,"title":{},"body":{"index.html":{}}}],["station",{"_index":221,"title":{"classes/Station.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/Dataset.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetParameterConstellation.html":{},"components/DragOptionsComponent.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandSelectorModule.html":{},"interfaces/IDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValue.html":{},"components/RefreshButtonComponent.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"components/ZoomControlComponent.html":{}}}],["stationari",{"_index":4147,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stationmapselectorcompon",{"_index":274,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["stationproperti",{"_index":3797,"title":{"interfaces/StationProperties.html":{}},"body":{"classes/Station.html":{},"interfaces/StationProperties.html":{},"classes/TimeseriesCollection.html":{}}}],["statuscheckservic",{"_index":3800,"title":{"injectables/StatusCheckService.html":{}},"body":{"injectables/StatusCheckService.html":{}}}],["statusinterv",{"_index":1525,"title":{"interfaces/StatusInterval.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/ExtendedTimeseries.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{}}}],["statusintervalresolverservic",{"_index":2574,"title":{"injectables/StatusIntervalResolverService.html":{}},"body":{"modules/HelgolandCoreModule.html":{},"injectables/StatusIntervalResolverService.html":{},"overview.html":{}}}],["statusintervals.find((interv",{"_index":3848,"title":{},"body":{"injectables/StatusIntervalResolverService.html":{}}}],["step",{"_index":4503,"title":{},"body":{"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["stepback",{"_index":3871,"title":{},"body":{"injectables/Time.html":{}}}],["stepback(timespan",{"_index":3891,"title":{},"body":{"injectables/Time.html":{}}}],["stepforward",{"_index":3872,"title":{},"body":{"injectables/Time.html":{}}}],["stepforward(timespan",{"_index":3893,"title":{},"body":{"injectables/Time.html":{}}}],["stepwis",{"_index":4514,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["still",{"_index":605,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["stoploc",{"_index":3085,"title":{},"body":{"injectables/LocateService.html":{}}}],["stoplocate(id",{"_index":3091,"title":{},"body":{"injectables/LocateService.html":{}}}],["stoppag",{"_index":4422,"title":{},"body":{"license.html":{}}}],["stoprefreshinterv",{"_index":3622,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["storag",{"_index":3064,"title":{},"body":{"injectables/LocalStorage.html":{},"additional-documentation/introduction.html":{}}}],["storage.servic",{"_index":1967,"title":{},"body":{"classes/DatasetService.html":{},"modules/HelgolandCoreModule.html":{},"injectables/Time.html":{}}}],["storage.service.t",{"_index":3050,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["storage.service.ts:14",{"_index":3062,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["storage.service.ts:22",{"_index":3056,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["storage.service.ts:32",{"_index":3058,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["storage.service.ts:42",{"_index":3060,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["storage.service.ts:6",{"_index":3054,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["storage/loc",{"_index":1966,"title":{},"body":{"classes/DatasetService.html":{},"modules/HelgolandCoreModule.html":{},"injectables/LocalStorage.html":{},"injectables/Time.html":{}}}],["strategi",{"_index":4492,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["strict",{"_index":3354,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["string",{"_index":21,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"injectables/ColorService.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"pipes/DateProxyPipe.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandControlModule.html":{},"interfaces/HighlightDataset.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["stringtogglercompon",{"_index":275,"title":{"components/StringTogglerComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandTimeModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":1124,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["structur",{"_index":4506,"title":{},"body":{"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["style",{"_index":947,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"index.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["style('fil",{"_index":1079,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["style('font",{"_index":1085,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["style('opac",{"_index":1138,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["style('point",{"_index":1081,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["style('strok",{"_index":1074,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["style('text",{"_index":1223,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["styles.color",{"_index":953,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["styles.linewidth",{"_index":957,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["styles.pointradiu",{"_index":958,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["styles.scss```css",{"_index":4657,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["styles.showreferencevalues.foreach((refvalu",{"_index":984,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["styles.vis",{"_index":955,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["styles.yaxisrang",{"_index":961,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["styles.zerobasedyaxi",{"_index":960,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["styleurl",{"_index":681,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"components/ServiceSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/YScale.html":{}}}],["subject",{"_index":4322,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":4334,"title":{},"body":{"license.html":{}}}],["submiss",{"_index":4379,"title":{},"body":{"license.html":{}}}],["submit",{"_index":4301,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":932,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/YScale.html":{}}}],["subscribe((data",{"_index":3512,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["subscribe((geojson",{"_index":2505,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["subscribe((label",{"_index":2868,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["subscribe((r",{"_index":2893,"title":{},"body":{"injectables/LabelMapperService.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["subscribe((result",{"_index":1607,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"classes/ExtendedTimeseries.html":{}}}],["subscribe((st",{"_index":1602,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["subscript",{"_index":636,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["subsequ",{"_index":4319,"title":{},"body":{"license.html":{}}}],["substring(1",{"_index":537,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["subtract(numb",{"_index":3341,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["suburb",{"_index":20,"title":{},"body":{"interfaces/Address.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["such",{"_index":4259,"title":{},"body":{"license.html":{}}}],["suggest",{"_index":4216,"title":{},"body":{"index.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["super",{"_index":364,"title":{},"body":{"classes/BufferedTime.html":{},"classes/DatasetPresenterComponent.html":{},"injectables/EventingImplApiInterface.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"classes/TimeInterval.html":{},"classes/Timespan.html":{},"classes/UriParameterCoder.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["super(httpservic",{"_index":3771,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["super(internalid",{"_index":1842,"title":{},"body":{"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["super(internalidhandl",{"_index":3460,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["super(iterablediff",{"_index":867,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["super(mapcach",{"_index":3266,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["super(transl",{"_index":2407,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["super.gettsdata(id",{"_index":3792,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["super.ngonchanges(chang",{"_index":1650,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["super.onadd(map",{"_index":2488,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["supersed",{"_index":4384,"title":{},"body":{"license.html":{}}}],["support",{"_index":4222,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["supportedmimetyp",{"_index":3664,"title":{"interfaces/SupportedMimeTypes.html":{}},"body":{"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{}}}],["supportsfirstlatest",{"_index":3665,"title":{},"body":{"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{}}}],["supportst",{"_index":3687,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["suppos",{"_index":4508,"title":{},"body":{"additional-documentation/how-tos.html":{}}}],["sure",{"_index":3396,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"index.html":{}}}],["svg",{"_index":1116,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"modules.html":{}}}],["switch",{"_index":1708,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["syntax",{"_index":3336,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["system",{"_index":4309,"title":{},"body":{"license.html":{}}}],["t",{"_index":754,"title":{},"body":{"interfaces/Data.html":{},"interfaces/DatasetApiV2.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/IDataEntry.html":{},"classes/IdCache.html":{},"interfaces/Layout.html":{},"injectables/LocalStorage.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"classes/PermalinkService.html":{},"interfaces/ProfileDataEntry.html":{},"interfaces/RawData.html":{},"classes/ReferenceValues.html":{},"interfaces/ScatterData.html":{},"classes/SettingsService.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"interfaces/TimeValueEntry.html":{}}}],["tab",{"_index":2992,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["tabl",{"_index":1977,"title":{"additional-documentation/how-tos/integrate-a-table-component.html":{}},"body":{"interfaces/DatasetTableData.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["table'},{'nam",{"_index":223,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["table.compon",{"_index":2600,"title":{},"body":{"modules/HelgolandDatasetTableModule.html":{}}}],["table/module.t",{"_index":2598,"title":{},"body":{"modules/HelgolandDatasetTableModule.html":{}}}],["take",{"_index":1996,"title":{},"body":{"pipes/DateProxyPipe.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["temp",{"_index":2945,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["temp.push(",{"_index":1969,"title":{},"body":{"classes/DatasetService.html":{}}}],["temp.url",{"_index":2948,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["tempcolor",{"_index":3418,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["templat",{"_index":176,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/Id.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["templateurl",{"_index":186,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{}}}],["term",{"_index":73,"title":{},"body":{"interfaces/Address.html":{},"classes/GeoSearch.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"license.html":{}}}],["termin",{"_index":4354,"title":{},"body":{"license.html":{},"additional-documentation/how-tos.html":{}}}],["test",{"_index":949,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["test.t",{"_index":4546,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["text",{"_index":1231,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"injectables/LabelMapperService.html":{},"injectables/NotifierService.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["text('tim",{"_index":1237,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["text(entry.uom",{"_index":1259,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["text(options.uom",{"_index":1801,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["text(this.getxaxislabel",{"_index":1813,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["textnod",{"_index":3178,"title":{},"body":{"injectables/NotifierService.html":{}}}],["that'",{"_index":3364,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["themes/indigo",{"_index":4659,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["theori",{"_index":4407,"title":{},"body":{"license.html":{}}}],["therefor",{"_index":3384,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["thereof",{"_index":4297,"title":{},"body":{"license.html":{}}}],["third",{"_index":4370,"title":{},"body":{"license.html":{}}}],["this._differbasemap",{"_index":497,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this._differbasemaps.diff(this.basemap",{"_index":512,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this._differoverlaymap",{"_index":495,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this._differoverlaymaps.diff(this.overlaymap",{"_index":506,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.activepanel",{"_index":2985,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.addbasemap",{"_index":526,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.addbasemap(e.currentvalu",{"_index":514,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.addbasemap(entri",{"_index":525,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.adddata(geojson",{"_index":2506,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["this.adddataset(internalidobj.id",{"_index":1940,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.adddatasetbyinternalid(addeditem.item",{"_index":1917,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.addlinewidth",{"_index":907,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.addoverlaymap(e.currentvalu",{"_index":510,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.addoverlaymap(entri",{"_index":529,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.addparameterfilter(filterparamet",{"_index":2113,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["this.addparameterfilter(param",{"_index":2119,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["this.addreferencevaluedata(dataset.internalid",{"_index":971,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.addtimespan(filterparameter.timespan",{"_index":2114,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["this.api.getdata(dataset.id",{"_index":1679,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.api.getdata(id",{"_index":2173,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.api.getdata(internalid.id",{"_index":3469,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["this.api.getdataset(id",{"_index":891,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{}}}],["this.api.getplatform(this.dataset.parameters.platform.id",{"_index":3473,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{}}}],["this.api.getsingletimeseries(id",{"_index":888,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/YScale.html":{}}}],["this.apiinterface.getcategories(entry.url",{"_index":2428,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getcategories(this.serviceurl",{"_index":3679,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getdata(dataset.id",{"_index":3511,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.apiinterface.getdatasets(entry.url",{"_index":2430,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getdatasets(url",{"_index":3000,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.apiinterface.getfeatures(entry.url",{"_index":2427,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getfeatures(this.serviceurl",{"_index":3680,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getofferings(entry.url",{"_index":2419,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getofferings(this.serviceurl",{"_index":3676,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getphenomena(entry.url",{"_index":2425,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getphenomena(this.serviceurl",{"_index":3677,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getplatforms(entry.url",{"_index":2429,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getplatforms(this.serviceurl",{"_index":3271,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.apiinterface.getprocedures(entry.url",{"_index":2426,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getprocedures(this.serviceurl",{"_index":3678,"title":{},"body":{"components/ServiceFilterSelectorComponent.html":{}}}],["this.apiinterface.getservices(url",{"_index":3744,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["this.apiinterface.getsingletimeseries(id",{"_index":1606,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.apiinterface.getstation(this.station.properties.id",{"_index":1600,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.apiinterface.gettimeseries(url",{"_index":3003,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.apimapping.getapiversion(url).subscribe((apiversionid",{"_index":2998,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.area",{"_index":1660,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.background",{"_index":1050,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.background.node().getbbox().width",{"_index":1436,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.background.selectall('.handl",{"_index":1136,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.background.selectall('.overlay",{"_index":1132,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.background.selectall('.select",{"_index":1128,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.basemap",{"_index":521,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.basemaps.foreach((entri",{"_index":523,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.basemaps.s",{"_index":522,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.basevalu",{"_index":1686,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.basevalues.length",{"_index":1694,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.basevalues[idx",{"_index":1771,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.basevalues[to].tick",{"_index":1768,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.basicauthtoken",{"_index":321,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["this.bufferinterv",{"_index":368,"title":{},"body":{"classes/BufferedTime.html":{},"classes/TimeInterval.html":{},"classes/Timespan.html":{}}}],["this.buffersum",{"_index":1037,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.cache.get(apiurl",{"_index":1548,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["this.cache.get(id",{"_index":2783,"title":{},"body":{"classes/IdCache.html":{}}}],["this.cache.get(req",{"_index":598,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["this.cache.get(this.id).from",{"_index":3960,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.cache.get(this.id).to",{"_index":3962,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.cache.get(url",{"_index":2888,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["this.cache.has(apiurl",{"_index":1546,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["this.cache.has(id",{"_index":2782,"title":{},"body":{"classes/IdCache.html":{}}}],["this.cache.has(this.id",{"_index":3958,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.cache.has(url",{"_index":2887,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["this.cache.put(req",{"_index":616,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["this.cache.set(apiurl",{"_index":1554,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["this.cache.set(id",{"_index":2784,"title":{},"body":{"classes/IdCache.html":{}}}],["this.cache.set(this.id",{"_index":3967,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.cache.set(url",{"_index":2900,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["this.cache[req.urlwithparam",{"_index":382,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{}}}],["this.cache[req.urlwithparams].expirationtim",{"_index":383,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/LocalHttpCache.html":{}}}],["this.cache[req.urlwithparams].request",{"_index":3027,"title":{},"body":{"injectables/LocalOngoingHttpCache.html":{}}}],["this.cache[req.urlwithparams].respons",{"_index":386,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"injectables/LocalHttpCache.html":{}}}],["this.calculateheight",{"_index":1731,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.calculateoverviewrang",{"_index":730,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["this.calculatewidth",{"_index":1732,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.calcxvalu",{"_index":1721,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.categorylabel",{"_index":3583,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.cd.detectchang",{"_index":732,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["this.changeselectedids(changefals",{"_index":1287,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.changeselectedids(changetru",{"_index":1288,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.changetime(this.xaxisrangeorigin[0][0",{"_index":1412,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.changetime(this.xaxisrangepan[0",{"_index":1401,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.changetime(timebycoord[0",{"_index":1114,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.checkdataintimespan",{"_index":3552,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.chvislabel(entri",{"_index":1434,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.cleardata",{"_index":2192,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.clearlay",{"_index":2496,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["this.clearlayout",{"_index":2191,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.clearmap",{"_index":3504,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.clust",{"_index":3272,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.color",{"_index":1840,"title":{},"body":{"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["this.color.getcolor",{"_index":3601,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["this.colors[i",{"_index":4577,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["this.colorservice.getcolor",{"_index":954,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.confirmlabel(observ",{"_index":2885,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["this.confirmversion(observ",{"_index":1547,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["this.count",{"_index":1603,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.counterxaxi",{"_index":2221,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.counteryaxi",{"_index":2243,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.createbasicauthheader(options.basicauthtoken",{"_index":2116,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["this.createdataentry(internalid",{"_index":1697,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.creategeojson(entri",{"_index":3517,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.createrefvalid(e.referencevalueid",{"_index":3593,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.createrefvalid(refvalue.referencevalueid",{"_index":3565,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.createrequesttimespan(timespan",{"_index":2121,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["this.createrequesturl(apiurl",{"_index":2111,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["this.createtimespanofinterval(timeinterv",{"_index":3906,"title":{},"body":{"injectables/Time.html":{}}}],["this.createxaxis(dataentry.dataset",{"_index":2205,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.createyaxis(dataentry.dataset",{"_index":2202,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.currentlang",{"_index":3045,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["this.currenttimeid",{"_index":868,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.data",{"_index":3513,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.data.foreach((entri",{"_index":3506,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.data.push(entri",{"_index":3516,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.datalength",{"_index":1681,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.dataset",{"_index":2381,"title":{},"body":{"components/FavoriteTogglerComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["this.dataset.firstvalu",{"_index":3586,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.firstvalue.timestamp",{"_index":3611,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.label",{"_index":2388,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["this.dataset.lastvalu",{"_index":3588,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.lastvalue.timestamp",{"_index":3612,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.parameters.category.label",{"_index":3584,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.parameters.phenomenon.label",{"_index":3580,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.parameters.platform.label",{"_index":3577,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.parameters.procedure.label",{"_index":3582,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.platformtyp",{"_index":3465,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["this.dataset.referencevalu",{"_index":3591,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.referencevalues.foreach((",{"_index":3592,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.station.properties.label",{"_index":3578,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.uom",{"_index":3590,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.url",{"_index":3606,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.dataset.url).subscribe((platform",{"_index":3572,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.datasetapilist",{"_index":3700,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.datasetapilist.foreach((api",{"_index":3704,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.datasetapilist.length",{"_index":3701,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.datasetid",{"_index":2944,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["this.datasetidresolver.resolveinternalid(internalid",{"_index":1939,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.datasetids.foreach((entri",{"_index":4603,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["this.datasetids.foreach((id",{"_index":1687,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetids.indexof(internalid",{"_index":1968,"title":{},"body":{"classes/DatasetService.html":{}}}],["this.datasetids.length",{"_index":1273,"title":{},"body":{"interfaces/DataConst.html":{},"classes/DatasetService.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.datasetids.splice(datasetidx",{"_index":1972,"title":{},"body":{"classes/DatasetService.html":{}}}],["this.datasetidsdiff",{"_index":1910,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.datasetidsdiffer.diff(this.datasetid",{"_index":1915,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.datasetidsmultiple.foreach((entri",{"_index":4574,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["this.datasetmap.delete(internalid",{"_index":894,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.datasetmap.foreach((dataset",{"_index":920,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.datasetmap.foreach((datasetentri",{"_index":1734,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetmap.foreach((entri",{"_index":1664,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetmap.get(dataset.internalid).data",{"_index":933,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.datasetmap.get(internalid",{"_index":1692,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetmap.has(internalid",{"_index":917,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.datasetmap.set(dataset.internalid",{"_index":1668,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetopt",{"_index":1930,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.datasetoptions.clear",{"_index":1971,"title":{},"body":{"classes/DatasetService.html":{}}}],["this.datasetoptions.color",{"_index":4666,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["this.datasetoptions.delete(internalid",{"_index":1973,"title":{},"body":{"classes/DatasetService.html":{}}}],["this.datasetoptions.foreach((valu",{"_index":1932,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.datasetoptions.get(dataset.internalid",{"_index":948,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["this.datasetoptions.get(dataset.internalid).vis",{"_index":1676,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetoptions.get(id).color",{"_index":1741,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetoptions.get(id).vis",{"_index":1737,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetoptions.get(internalid).vis",{"_index":1690,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetoptions.get(key",{"_index":1936,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.datasetoptions.has(dataset.internalid",{"_index":1675,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetoptions.has(id",{"_index":1735,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.datasetoptions.set(entri",{"_index":4604,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["this.datasetoptions.set(internalid",{"_index":1974,"title":{},"body":{"classes/DatasetService.html":{}}}],["this.datasetoptions.showreferencevalues.find((o",{"_index":3595,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.datasetoptions.showreferencevalues.findindex((entri",{"_index":3562,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.datasetoptions.showreferencevalues.push",{"_index":3568,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.datasetoptions.showreferencevalues.splice(idx",{"_index":3567,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.datasetoptions.vis",{"_index":3560,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["this.datasetoptionschanged(key",{"_index":1937,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.datasetoptionsmultiple.set(entri",{"_index":4575,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["this.datasetoptionsmultiple.set(id",{"_index":4670,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["this.datayrang",{"_index":884,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.datayranges.foreach((obj",{"_index":1019,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.datayranges[newdatasetidx",{"_index":1012,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.datayranges[newdatasetidx].rang",{"_index":1017,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.defaultgraphopt",{"_index":1649,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.defaultselect",{"_index":1610,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.determinedlabel",{"_index":2869,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["this.differs.find({}).cr",{"_index":496,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.docheck(this.url",{"_index":3829,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["this.docheck(url",{"_index":3831,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["this.docheckurl(url",{"_index":3830,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["this.drag",{"_index":1403,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.dragendhandl",{"_index":1755,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.draggingmov",{"_index":1383,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.draghandl",{"_index":1753,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.dragmoverang",{"_index":1386,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.dragmoverange[0",{"_index":1393,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.dragmoverange[1",{"_index":1392,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.dragmovestart",{"_index":1384,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.dragstart",{"_index":1404,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.dragstart[0",{"_index":1415,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.dragstarthandl",{"_index":1751,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.drawchart",{"_index":2166,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.drawdots(this.basevalu",{"_index":1728,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.drawdragrectangl",{"_index":1407,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.drawgraph(entry.yscal",{"_index":1748,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.drawgraphline(entri",{"_index":1046,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.drawlinegraph",{"_index":1654,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.drawvalueline(this.basevalu",{"_index":1729,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.drawxaxis(this.buffersum",{"_index":1044,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.drawyaxis(datasetentry.drawopt",{"_index":1743,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.drawyaxis(entri",{"_index":1039,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.end",{"_index":3955,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.endpoint",{"_index":2418,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["this.erroronload",{"_index":2423,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["this.evaluterefresh",{"_index":3640,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["this.favoritesrvc.addfavorite(entry.favorit",{"_index":2854,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["this.favoritesrvc.removeallfavorit",{"_index":2843,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["this.favsrvc.addfavorite(this.dataset",{"_index":2389,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["this.favsrvc.hasfavorite(this.dataset",{"_index":2383,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["this.favsrvc.removefavorite(this.dataset.internalid",{"_index":2384,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["this.fetchdata(event.target",{"_index":2487,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["this.fetchdata(map",{"_index":2489,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["this.filt",{"_index":2989,"title":{},"body":{"components/ListSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{}}}],["this.filterlist.foreach((entri",{"_index":2414,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.findurl(label",{"_index":2886,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["this.firstvalu",{"_index":3585,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.fitbound",{"_index":530,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.focusg",{"_index":1064,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.focusg.append('svg:lin",{"_index":1067,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.focusg.append('svg:rect",{"_index":1078,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.focusg.append('svg:text",{"_index":1083,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.focusg.append('svg:text').attr('class",{"_index":1756,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.focusg.style('vis",{"_index":1423,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.focuslab",{"_index":1757,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.focuslabeltim",{"_index":1088,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.focuslabeltime.text(moment(item.timestamp).format('dd.mm.yi",{"_index":1778,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.focuslabeltime.text(moment(this.labeltimestamp[idxofmin]).format('dd.mm.yi",{"_index":1463,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.focuslabely.text('measur",{"_index":1782,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.focuslabely.text(item.dist",{"_index":1780,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.from",{"_index":365,"title":{},"body":{"classes/BufferedTime.html":{},"classes/TimeInterval.html":{},"classes/Timespan.html":{}}}],["this.generatepermalink",{"_index":3229,"title":{},"body":{"classes/PermalinkService.html":{}}}],["this.generateuuid",{"_index":500,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.geosearch.searchterm(this.searchterm",{"_index":2534,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.getdimensions(entry.focuslabel.node()).h",{"_index":1453,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.getdimensions(entry.focuslabel.node()).w",{"_index":1451,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.getdimensions(text.node()).h",{"_index":1262,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.getdimensions(this.focuslabeltime.node()).w",{"_index":1462,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.getdimensions(this.focuslabely.node()).w",{"_index":1784,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.getduration(timespan",{"_index":3901,"title":{},"body":{"injectables/Time.html":{}}}],["this.getduration(timespan).asmillisecond",{"_index":3897,"title":{},"body":{"injectables/Time.html":{}}}],["this.getfavorit",{"_index":2333,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.getfavoritegroup",{"_index":2335,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.getitemforx(coords[0",{"_index":1345,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.getitemforx(this.dragcurrent[0",{"_index":1766,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.getitemforx(this.dragstart[0",{"_index":1765,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.getrandomcolor",{"_index":665,"title":{},"body":{"injectables/ColorService.html":{}}}],["this.gettimestampbycoord(d3.event.selection[0",{"_index":1112,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.getxdomainbytimestamp",{"_index":1103,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.getyaxisrange(entry.uom",{"_index":1242,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.graph",{"_index":876,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.graph.append('g",{"_index":1065,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.graph.append('svg:g",{"_index":1219,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.graph.append('svg:path",{"_index":1724,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.graph.append('svg:rect",{"_index":1051,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.graph.append('text",{"_index":1232,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.graph.selectall('*').remov",{"_index":1733,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.graph.selectall('dot",{"_index":1717,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.graphbodi",{"_index":1309,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.graphbody.selectall('.dot",{"_index":1327,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.graphopt",{"_index":727,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{}}}],["this.graphoptions.axistyp",{"_index":1709,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.graphoptions.dot",{"_index":1727,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.graphoptions.overview",{"_index":728,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.graphoptions.selection.rang",{"_index":2461,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["this.graphoptionschanged(opt",{"_index":1929,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.groupcount",{"_index":2318,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.groupfav",{"_index":2338,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.groupfavs.clear",{"_index":2324,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.groupfavs.delete(favoriteid",{"_index":2315,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.groupfavs.has(favoriteid",{"_index":2314,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.groupfavs.set(entry.id",{"_index":2346,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.groupfavs.set(favorite.id",{"_index":2330,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.groupfavs.set(id",{"_index":2319,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.handl",{"_index":2769,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["this.handler.handle(req",{"_index":2770,"title":{},"body":{"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{}}}],["this.hasdata",{"_index":3609,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.height",{"_index":1053,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.hidediagramind",{"_index":1380,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.highlightfocu",{"_index":1066,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.highlightfocus.attr('x1",{"_index":1772,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.highlightline(entry.id",{"_index":1270,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.http.client().get",{"_index":80,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{}}}],["this.http.get(apiurl).subscribe((result",{"_index":1549,"title":{},"body":{"injectables/DatasetApiMapping.html":{}}}],["this.http.get(url",{"_index":318,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["this.httpclient.get(labelurl",{"_index":2891,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["this.httpclient.get(url).subscrib",{"_index":3835,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["this.httpservice.client(options).get(url",{"_index":2117,"title":{},"body":{"injectables/EventingImplApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["this.id",{"_index":3957,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.idxofpo",{"_index":1342,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.informationvis",{"_index":3554,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.init",{"_index":731,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["this.initlay",{"_index":3505,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.internalid",{"_index":1839,"title":{},"body":{"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{}}}],["this.internalidhandler.resolveinternalid(this.datasetid",{"_index":2946,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{}}}],["this.interv",{"_index":3646,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["this.intervals.get(intervaldescrib",{"_index":2056,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.has(intervaldescrib",{"_index":2055,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.current_month",{"_index":2043,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.current_week",{"_index":2037,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.current_year",{"_index":2049,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.last_month",{"_index":2046,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.last_week",{"_index":2040,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.last_year",{"_index":2052,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.lasthour",{"_index":2025,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.today",{"_index":2030,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.today_yesterday",{"_index":2036,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.intervals.set(definedtimespan.yesterday",{"_index":2033,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["this.iscontentloading(fals",{"_index":3284,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.iscontentloading(load",{"_index":735,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{}}}],["this.iscontentloading(tru",{"_index":3268,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.iscontentloadingd3(fals",{"_index":939,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.isequal(this.providerlist",{"_index":2979,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.isfavorit",{"_index":2382,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["this.ismobil",{"_index":3468,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["this.issafemomentexpression(express",{"_index":3400,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["this.issafemomentexpression(preset.timespan.from",{"_index":3391,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["this.issafemomentexpression(preset.timespan.to",{"_index":3392,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["this.issafetimespanpreset(",{"_index":3324,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["this.isserviceblacklisted(service.id",{"_index":3747,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["this.istoggl",{"_index":3079,"title":{},"body":{"components/LocateControlComponent.html":{},"components/StringTogglerComponent.html":{}}}],["this.item",{"_index":2413,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["this.items.find((elem",{"_index":2436,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.items.push(entri",{"_index":2441,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{}}}],["this.iterablediffers.find([]).cr",{"_index":1911,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.labelmappersrvc.getmappedlabel(this.label",{"_index":2867,"title":{},"body":{"components/LabelMapperComponent.html":{}}}],["this.labeltimestamp",{"_index":1343,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.labeltimestamp.findindex((elem",{"_index":1460,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.labeltimestamp[entryidx",{"_index":1456,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.languagechang",{"_index":2919,"title":{},"body":{"classes/LanguageChangNotifier.html":{}}}],["this.languagelist.find((",{"_index":3046,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["this.lastvalu",{"_index":3587,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.lay",{"_index":3523,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.layer.addlayer(geojson",{"_index":3519,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.layer.addto(this.map",{"_index":3521,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.layercontrol",{"_index":554,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.layercontrolopt",{"_index":556,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.layercontroloptions).addto(this.map",{"_index":561,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.layout",{"_index":2214,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.layout.hasownproperty(key",{"_index":2215,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.layout['xaxi",{"_index":2222,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.layout[('yaxi",{"_index":2244,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.layout[key",{"_index":2218,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.layout[key].domain",{"_index":2248,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.layout[key].posit",{"_index":2251,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.layout[key].rang",{"_index":2254,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.layout[key].titl",{"_index":2217,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.linefun",{"_index":1656,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.listselectorservice.cache.get(this.selectorid",{"_index":2982,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.listselectorservice.cache.has(this.selectorid",{"_index":2978,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.listselectorservice.cache.set(this.selectorid",{"_index":2986,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.listselectorservice.providerlist",{"_index":2980,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.load",{"_index":2415,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["this.loadaddeddataset(dataset",{"_index":892,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.loadaddeddataset(timeseri",{"_index":890,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.loaddata(dataset",{"_index":1669,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.loaddata(entry.dataset",{"_index":1666,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.loaddata(map.getbound",{"_index":2495,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["this.loaddata(this.datasetmap.get(internalid).dataset",{"_index":1673,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.loaddataset(dataset",{"_index":921,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.loaddataset(temp.id",{"_index":2947,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["this.loaddataset(this.datasetmap.get(internalid",{"_index":918,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.loadfavorit",{"_index":2303,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.loadingcount",{"_index":938,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["this.loaditem",{"_index":2408,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["this.localstorage.load(param",{"_index":3915,"title":{},"body":{"injectables/Time.html":{}}}],["this.localstorage.loadarray(cache_param_favorites_group",{"_index":2344,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.localstorage.loadarray(cache_param_favorites_singl",{"_index":2340,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.localstorage.save(cache_param_favorites_group",{"_index":2334,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.localstorage.save(cache_param_favorites_singl",{"_index":2332,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.localstorage.save(param",{"_index":3914,"title":{},"body":{"injectables/Time.html":{}}}],["this.localstorageen",{"_index":3065,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["this.locateservice.startlocate(this.mapid",{"_index":3080,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["this.locateservice.stoplocate(this.mapid",{"_index":3081,"title":{},"body":{"components/LocateControlComponent.html":{}}}],["this.maintimeinterval.from",{"_index":1153,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.maintimeinterval.to",{"_index":1155,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.map",{"_index":501,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.map.fitbounds(this.fitbound",{"_index":503,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.map.invalidates",{"_index":3283,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.map.remov",{"_index":515,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.map.removecontrol(this.layercontrol",{"_index":555,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.map.removecontrol(this.zoomcontrol",{"_index":563,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.map.removelayer(this.lay",{"_index":3524,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.map.removelayer(this.markerfeaturegroup",{"_index":3270,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.map.removelayer(this.oldbaselayer[layeroptions.label",{"_index":553,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.map.removelayer(this.oldoverlaylayer[layeroptions.label",{"_index":544,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.mapcache.get(id",{"_index":3125,"title":{},"body":{"injectables/MapCache.html":{}}}],["this.mapcache.getmap(id",{"_index":3098,"title":{},"body":{"injectables/LocateService.html":{}}}],["this.mapcache.getmap(this.mapid).fitbounds(result.bound",{"_index":2541,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.mapcache.getmap(this.mapid).fitbounds(this.ext",{"_index":2293,"title":{},"body":{"components/ExtentControlComponent.html":{}}}],["this.mapcache.getmap(this.mapid).fitbounds(this.resultgeometry.getbound",{"_index":2542,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.mapcache.getmap(this.mapid).zoomin",{"_index":4074,"title":{},"body":{"components/ZoomControlComponent.html":{}}}],["this.mapcache.getmap(this.mapid).zoomout",{"_index":4075,"title":{},"body":{"components/ZoomControlComponent.html":{}}}],["this.mapcache.set(id",{"_index":3126,"title":{},"body":{"injectables/MapCache.html":{}}}],["this.mapcache.setmap(this.mapid",{"_index":520,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.mapid",{"_index":498,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/GeosearchControlComponent.html":{}}}],["this.mapopt",{"_index":516,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.margin.bottom",{"_index":1235,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.margin.left",{"_index":880,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.margin.right",{"_index":1706,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.margin.top",{"_index":882,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.markerfeaturegroup",{"_index":3269,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.markerfeaturegroup.addlayer(mark",{"_index":3280,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.markerfeaturegroup.addto(this.map",{"_index":3281,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.maxlabelwidth",{"_index":881,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.mousedownbrush",{"_index":883,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.mousemovehandl",{"_index":1061,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.mouseouthandl",{"_index":1063,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.noresultsfound",{"_index":3267,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.notifier.notify(transl",{"_index":2387,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["this.notifiertimeout",{"_index":3186,"title":{},"body":{"injectables/NotifierService.html":{}}}],["this.oldbaselayer.hasownproperty(layeroptions.label",{"_index":552,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.oldbaselayer.hasownproperty[layeroptions.label",{"_index":550,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.oldbaselayer[layeroptions.label",{"_index":551,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.olddatasetopt",{"_index":1931,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.olddatasetoptions.get(key",{"_index":1934,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.olddatasetoptions.set(key",{"_index":1935,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.oldgraphopt",{"_index":1927,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.oldoverlaylay",{"_index":560,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.oldoverlaylayer.hasownproperty(layeroptions.label",{"_index":543,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.oldoverlaylayer.hasownproperty[layeroptions.label",{"_index":538,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.oldoverlaylayer[layeroptions.label",{"_index":539,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.onchangeyaxesvisibility.emit",{"_index":197,"title":{},"body":{"components/AxesOptionsComponent.html":{}}}],["this.oncompleteloadingdata",{"_index":936,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.oncontentloading.emit(load",{"_index":2551,"title":{},"body":{"classes/HasLoadableContent.html":{}}}],["this.ondatasetselection.emit(result",{"_index":3002,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.ondeletedataset.emit(tru",{"_index":2949,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["this.ondeletedatasetoptions.emit(opt",{"_index":3461,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["this.oneditoptions.emit(opt",{"_index":3462,"title":{},"body":{"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["this.oneditoptions.emit(this.datasetopt",{"_index":3570,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.onerror(error",{"_index":935,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.ongoingcache.clear(req",{"_index":618,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["this.ongoingcache.has(req",{"_index":606,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["this.ongoingcache.observe(req",{"_index":607,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["this.ongoingcache.set(req",{"_index":623,"title":{},"body":{"injectables/CachingInterceptor.html":{}}}],["this.onhighlight.emit",{"_index":2263,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.onhoverhighlight.emit(this.basevalues[idx].tick",{"_index":1760,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.onitemselected.emit(item",{"_index":2410,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["this.onopenincombiview.emit(opt",{"_index":3467,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["this.onopentimesettings.emit",{"_index":4016,"title":{},"body":{"components/TimespanShiftSelectorComponent.html":{}}}],["this.onrangechange.emit",{"_index":3149,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["this.onres",{"_index":3660,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["this.onresultchanged.emit(nul",{"_index":2544,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.onresultchanged.emit(result",{"_index":2536,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.onselectdataset.emit(this.select",{"_index":2950,"title":{},"body":{"classes/ListEntryComponent.html":{}}}],["this.onselectdate.emit(new",{"_index":3556,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.onselected.emit",{"_index":3528,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.onselected.emit(entri",{"_index":3279,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["this.onselectionchanged.emit(select",{"_index":1616,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.onselectionchangedfinished.emit",{"_index":1764,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.onselectionchangedfinished.emit(this.preparerange(this.basevalues[from].tick",{"_index":1767,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.onserviceselected.emit(servic",{"_index":3720,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.onshowgeometry.emit(platform.geometri",{"_index":3475,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{}}}],["this.onshowgeometry.emit(result.values[0].geometri",{"_index":3472,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["this.onshowgeometry.emit(this.dataset.station.geometri",{"_index":3571,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.ontimelistdetermined.emit(timelist",{"_index":3520,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.ontimeselected.emit(timestamp",{"_index":3928,"title":{},"body":{"components/TimeListSelectorComponent.html":{}}}],["this.ontimespanchange.emit(this.timespan",{"_index":3407,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["this.ontimespanchange.emit(this.timesrvc.stepback(this.timespan",{"_index":4014,"title":{},"body":{"components/TimespanShiftSelectorComponent.html":{}}}],["this.ontimespanchange.emit(this.timesrvc.stepforward(this.timespan",{"_index":4015,"title":{},"body":{"components/TimespanShiftSelectorComponent.html":{}}}],["this.ontimespanchanged.emit(timespan",{"_index":734,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["this.ontimespanselected.emit",{"_index":4010,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["this.ontimespanselected.emit(this.predefinedsrvc.getinterval(this.predefin",{"_index":4007,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["this.ontimespanselected.emit(this.timespanfunc",{"_index":4009,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["this.ontimespanselected.emit(timespan",{"_index":3968,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.ontoggled.emit(!this.valu",{"_index":354,"title":{},"body":{"components/BoolTogglerComponent.html":{}}}],["this.ontoggled.emit(this.opt",{"_index":3862,"title":{},"body":{"components/StringTogglerComponent.html":{}}}],["this.ontogglepanzoom.emit",{"_index":2060,"title":{},"body":{"components/DragOptionsComponent.html":{}}}],["this.ontriggered.emit",{"_index":3214,"title":{},"body":{"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{}}}],["this.onupdateoptions.emit(this.datasetopt",{"_index":3464,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["this.opendataset(entry.url",{"_index":2997,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.opt",{"_index":2486,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"components/StringTogglerComponent.html":{}}}],["this.options).subscrib",{"_index":2535,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.options.httpcli",{"_index":2502,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["this.options.showonmaxzoom",{"_index":2491,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["this.options.showonminzoom",{"_index":2493,"title":{},"body":{"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{}}}],["this.overlaymap",{"_index":527,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.overlaymaps.foreach((entri",{"_index":528,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.overviewtimespan",{"_index":738,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["this.panendhandl",{"_index":1101,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.panmovehandl",{"_index":1100,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.panstarthandl",{"_index":1098,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.paramet",{"_index":2981,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.parameters.findindex((entri",{"_index":2983,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.parameters[0].filterlist",{"_index":2987,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.parameters[0].isdis",{"_index":2993,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.parsedtimespanpreset",{"_index":3322,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["this.parsemomentexpression(e.timespan.from).gettim",{"_index":3328,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["this.parsemomentexpression(e.timespan.to).gettim",{"_index":3329,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["this.phenomenonlabel",{"_index":3579,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.platformlabel",{"_index":3576,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.plotgraph",{"_index":910,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.plotlyarea",{"_index":2164,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.plotlyarea.on('plotly_hov",{"_index":2261,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.plotlyelem.nativeel",{"_index":2165,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.plotoptions.generalizeallway",{"_index":930,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.plotoptions.grid",{"_index":1226,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.plotoptions.hover",{"_index":1059,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.plotoptions.overview",{"_index":1048,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.plotoptions.selected.includes(dataset.uom",{"_index":964,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.plotoptions.showreferencevalu",{"_index":928,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.plotoptions.togglepanzoom",{"_index":1089,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.plotoptions.yaxi",{"_index":1241,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.predefin",{"_index":4006,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["this.prepareddata",{"_index":981,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata.filter((entri",{"_index":982,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata.find((",{"_index":903,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata.findindex((",{"_index":945,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata.findindex((entri",{"_index":896,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata.foreach((entri",{"_index":1045,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata.length",{"_index":899,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata.push(dataentri",{"_index":970,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata.push(prepar",{"_index":2211,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.prepareddata.push(refdataentri",{"_index":990,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata.splice(spliceidx",{"_index":898,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.prepareddata[datasetidx",{"_index":969,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.preparefilterparams(filterparamet",{"_index":2112,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["this.prepareparams(param",{"_index":4061,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["this.preparetsdata(dataset).subscrib",{"_index":934,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.procedurelabel",{"_index":3581,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.processalldata",{"_index":1653,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.processdata",{"_index":2258,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.processdata(dataentri",{"_index":972,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.processdata(entri",{"_index":900,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.processdataforid(dataset.internalid",{"_index":1684,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.processdataforid(id",{"_index":1688,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.providerblacklist",{"_index":3699,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.providerlist",{"_index":2990,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.providerlist.map((entri",{"_index":2988,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.rang",{"_index":3144,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["this.range.max",{"_index":3148,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["this.range.min",{"_index":3146,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["this.rangefactor",{"_index":729,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["this.rangemax",{"_index":3147,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["this.rangemin",{"_index":3145,"title":{},"body":{"components/MinMaxRangeComponent.html":{}}}],["this.rawdata.delete(internalid",{"_index":2181,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawdata.foreach((dataentri",{"_index":2193,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawdata.get(dataset.internalid).datas.push(data.values[0",{"_index":2177,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawdata.get(dataset.internalid).options.push(opt",{"_index":2178,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawdata.get(internalid).datas.splice(removedidx",{"_index":2188,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawdata.get(internalid).options.findindex((opt",{"_index":2184,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawdata.get(internalid).options.splice(removedidx",{"_index":2187,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawdata.has(dataset.internalid",{"_index":2176,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawdata.s",{"_index":2257,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawdata.set(dataset.internalid",{"_index":2179,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.rawsvg",{"_index":870,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.rawsvg.node().height.baseval.valu",{"_index":1703,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.rawsvg.node().width.baseval.valu",{"_index":1705,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.redrawchart",{"_index":2189,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.refresh",{"_index":3643,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["this.refreshing.emit(tru",{"_index":3649,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["this.refreshinterv",{"_index":3637,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["this.refvalcache.get(refvalid).color",{"_index":3603,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.refvalcache.get(refvalid).vis",{"_index":3569,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.refvalcache.has(refvalid",{"_index":3600,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.refvalcache.set(refvalid",{"_index":3598,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.removebasemap(e.previousvalu",{"_index":513,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.removedataset(removeditem.item",{"_index":1919,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.removemarker(map",{"_index":3102,"title":{},"body":{"injectables/LocateService.html":{}}}],["this.removeoldgeometri",{"_index":2532,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.removeoverlaymap(e.previousvalu",{"_index":508,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.removeselectedid(obj.id",{"_index":1291,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.removeselectedid(removeditem.item",{"_index":1925,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.requestapi(url",{"_index":2115,"title":{},"body":{"injectables/EventingImplApiInterface.html":{}}}],["this.resetdrag",{"_index":1769,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.result",{"_index":2537,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.resultgeometri",{"_index":2538,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.resultgeometry.remov",{"_index":2545,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.s4",{"_index":1480,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.savefavorit",{"_index":2307,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.savest",{"_index":1970,"title":{},"body":{"classes/DatasetService.html":{}}}],["this.searchterm",{"_index":2533,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["this.select",{"_index":1652,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"classes/ListEntryComponent.html":{}}}],["this.selecteddatasetids.indexof(dataentry.dataset.internalid",{"_index":2196,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.selecteddatasetids.indexof(dataset.internalid",{"_index":965,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.selecteddatasetids.indexof(id",{"_index":1281,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.selecteddatasetids.indexof(obj.id",{"_index":1293,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.selecteddatasetids.splice(this.selecteddatasetids.findindex((entri",{"_index":1292,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.selecteddatasetidsdiff",{"_index":1912,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.selecteddatasetidsdiffer.diff(this.selecteddatasetid",{"_index":1921,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.selectedids.indexof(id",{"_index":4647,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["this.selectedids.push(id",{"_index":4644,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["this.selectedids.splice(this.selectedids.findindex((entri",{"_index":4645,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["this.selectedservic",{"_index":3715,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.selectedservice.apiurl",{"_index":3718,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.selectedservice.id",{"_index":3716,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.selectedtimespan",{"_index":3503,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.selectedtimespan.from",{"_index":3507,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.selection.from",{"_index":1698,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.selectionend",{"_index":3961,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.selectionstart",{"_index":3959,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.selectorid",{"_index":2977,"title":{},"body":{"components/ListSelectorComponent.html":{}}}],["this.servic",{"_index":3702,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.services.push(entri",{"_index":3709,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.services.sort((a",{"_index":3710,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.serviceselectorservice.fetchservicesofapi(api.url",{"_index":3705,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.serviceurl",{"_index":81,"title":{},"body":{"interfaces/Address.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.set",{"_index":2260,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"classes/SettingsService.html":{}}}],["this.setcurrentlang",{"_index":3043,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["this.setitems(r",{"_index":2421,"title":{},"body":{"interfaces/FilteredParameter.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{}}}],["this.setparamet",{"_index":3574,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.setselectedid(addeditem.item",{"_index":1923,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["this.setset",{"_index":4639,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["this.settings.getsettings().refreshdatainterv",{"_index":3638,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["this.settingsrvc.getsettings().timespanpreset",{"_index":3321,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["this.settingssrvc.getsettings().proxyurl",{"_index":2890,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["this.settingssrvc.getsettings().solvelabel",{"_index":2884,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["this.showbottomindicatorlabel(item",{"_index":1774,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.showdiagramindicator(entri",{"_index":1347,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.showdiagramindicator(idx",{"_index":1759,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.showlabelvalues(entri",{"_index":1441,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.showlabelvalues(item",{"_index":1773,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.showtimeindicatorlabel(item",{"_index":1442,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.showunresolvableservic",{"_index":3713,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.singlefav",{"_index":2337,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.singlefavs.clear",{"_index":2323,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.singlefavs.delete(favoriteid",{"_index":2313,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.singlefavs.has(dataset.internalid",{"_index":2305,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.singlefavs.has(favoriteid",{"_index":2312,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.singlefavs.set(dataset.internalid",{"_index":2306,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.singlefavs.set(entry.id",{"_index":2342,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.singlefavs.set(favorite.id",{"_index":2328,"title":{},"body":{"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"interfaces/GroupFavorite.html":{},"interfaces/SingleFavorite.html":{}}}],["this.start",{"_index":3953,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.startrefreshinterv",{"_index":3644,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["this.stat",{"_index":1599,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.station.properties.timeseri",{"_index":1604,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.station.properties.timeseries.hasownproperty(id",{"_index":1605,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.stoprefreshinterv",{"_index":3645,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["this.supportst",{"_index":3707,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.timeinterv",{"_index":1913,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"injectables/ReferenceValueColorCache.html":{}}}],["this.timeintervalchang",{"_index":1672,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{}}}],["this.timelist",{"_index":3952,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.timelist[0",{"_index":3954,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.timelist[this.timelist.length",{"_index":3956,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["this.timeserieslist.filter((entri",{"_index":1614,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.timeserieslist.push(t",{"_index":1611,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.timespan",{"_index":737,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["this.timespan.from",{"_index":1149,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.timespan.to",{"_index":1151,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.timespanfunc",{"_index":4008,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["this.timesrvc.createtimespanofinterval(this.timeinterv",{"_index":736,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/DatasetPresenterComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["this.timesrvc.getbufferedtimespan(this.timespan",{"_index":1677,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.timesrvc.getbufferedtimespan(timespan",{"_index":739,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["this.timesrvc.overlap",{"_index":3610,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.timestamp",{"_index":367,"title":{},"body":{"classes/BufferedTime.html":{},"classes/DatasetOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimeInterval.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timespan.html":{}}}],["this.to",{"_index":366,"title":{},"body":{"classes/BufferedTime.html":{},"classes/TimeInterval.html":{},"classes/Timespan.html":{}}}],["this.toggl",{"_index":3642,"title":{},"body":{"components/RefreshButtonComponent.html":{}}}],["this.toggleuomselection(obj.id",{"_index":3550,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.transl",{"_index":4063,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["this.translate.currentlang",{"_index":3048,"title":{},"body":{"classes/LocalSelectorComponent.html":{},"classes/UriParameterCoder.html":{}}}],["this.translate.get('favorite.notifier.add",{"_index":2390,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["this.translate.get('favorite.notifier.remov",{"_index":2385,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["this.translate.onlangchange.subscrib",{"_index":2918,"title":{},"body":{"classes/LanguageChangNotifier.html":{}}}],["this.translate.use(lang.cod",{"_index":3044,"title":{},"body":{"classes/LocalSelectorComponent.html":{}}}],["this.unresolvableservic",{"_index":3703,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.unresolvableservices.push(api",{"_index":3714,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["this.uom",{"_index":3589,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["this.updateaxi",{"_index":2212,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["this.updatelayercontrol",{"_index":511,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.updateselect",{"_index":1612,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.updatezoomcontrol",{"_index":505,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.url",{"_index":1601,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["this.urls.indexof(url",{"_index":3832,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["this.urls.push(url",{"_index":3833,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["this.urls.splice(index",{"_index":3834,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["this.uuidv4",{"_index":869,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.valu",{"_index":3861,"title":{},"body":{"components/StringTogglerComponent.html":{}}}],["this.width",{"_index":1052,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xaxisrange.from",{"_index":1191,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xaxisrange.to",{"_index":1186,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xaxisrangeorigin",{"_index":885,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xaxisrangeorigin.push([this.xaxisrange.from",{"_index":1405,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xaxisrangeorigin[0",{"_index":1409,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xaxisrangeorigin[0][1",{"_index":1413,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xaxisrangepan",{"_index":1397,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xaxisrangepan[0",{"_index":1398,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xaxisrangepan[1",{"_index":1399,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xscalebas",{"_index":1184,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.xscalebase(this.getxvalue(d",{"_index":1701,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.xscalebase.invert(x",{"_index":1786,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.yaxisgen",{"_index":1798,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.ypo",{"_index":1341,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.ypos.foreach((",{"_index":1355,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.ypos.push",{"_index":1454,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.yrangeseachuom",{"_index":914,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.yrangeseachuom.findindex((",{"_index":1022,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.yrangeseachuom[idx].rang",{"_index":1029,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.yrangeseachuom[idx].range.max",{"_index":1033,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.yrangeseachuom[idx].range.min",{"_index":1030,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.yscalebas",{"_index":1035,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.yscalebase(d.valu",{"_index":1699,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["this.zoomcontrol",{"_index":562,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.zoomcontrolopt",{"_index":517,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["this.zoomendhandl",{"_index":1096,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.zoomhandl",{"_index":1094,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.zoomstarthandl",{"_index":1092,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["this.zoomtomarkerbounds(this.layer.getbound",{"_index":3522,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["this.zoomtomarkerbounds(this.markerfeaturegroup.getbound",{"_index":3282,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{}}}],["those",{"_index":4340,"title":{},"body":{"license.html":{}}}],["threshold",{"_index":640,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["thresholdunit",{"_index":641,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["through",{"_index":1301,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["throw",{"_index":1670,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["tick",{"_index":1189,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"miscellaneous/enumerations.html":{}}}],["tickformat",{"_index":1227,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["tickformat((d",{"_index":1214,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ticks(10",{"_index":1811,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["ticks(5",{"_index":1275,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ticksiz",{"_index":1168,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ticksize(0",{"_index":1253,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["tickvalu",{"_index":1164,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["tickvalues(this.timetickvalues(timestr",{"_index":1213,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["time",{"_index":277,"title":{"injectables/Time.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"interfaces/Cache.html":{},"interfaces/CachedItem.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalHttpCache.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"additional-documentation/introduction.html":{}}}],["time/defin",{"_index":2583,"title":{},"body":{"modules/HelgolandCoreModule.html":{}}}],["time/time.servic",{"_index":1905,"title":{},"body":{"classes/DatasetPresenterComponent.html":{},"modules/HelgolandCoreModule.html":{}}}],["time_in_m",{"_index":3170,"title":{},"body":{"injectables/NotifierService.html":{},"miscellaneous/variables.html":{}}}],["timebycoord",{"_index":1111,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["timebycoord[1",{"_index":1115,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["timechang",{"_index":2447,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["timechanged(timespan",{"_index":2459,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{}}}],["timeddatasetopt",{"_index":1841,"title":{"classes/TimedDatasetOptions.html":{}},"body":{"classes/DatasetOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/MinMaxRange.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"classes/ReferenceValueOption.html":{},"interfaces/ScatterData.html":{},"classes/TimedDatasetOptions.html":{}}}],["timeformat",{"_index":1636,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["timeformat('%d.%m.%i",{"_index":1808,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["timeformatstr",{"_index":1195,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["timefram",{"_index":4594,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["timeinterv",{"_index":357,"title":{"classes/TimeInterval.html":{}},"body":{"classes/BufferedTime.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"classes/DatasetPresenterComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"classes/Timespan.html":{}}}],["timeintervalchang",{"_index":919,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["timelist",{"_index":3514,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{}}}],["timelist.push(entry.timestamp",{"_index":3518,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["timelistselectorcompon",{"_index":276,"title":{"components/TimeListSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandTimeModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["timeout",{"_index":3109,"title":{},"body":{"injectables/LocateService.html":{}}}],["timeperiod",{"_index":4489,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["timerang",{"_index":4583,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["timerangeslidercach",{"_index":2738,"title":{"injectables/TimeRangeSliderCache.html":{}},"body":{"modules/HelgolandTimeRangeSliderModule.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"overview.html":{}}}],["timerangeslidercompon",{"_index":278,"title":{"components/TimeRangeSliderComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"overview.html":{}}}],["timeseri",{"_index":214,"title":{"classes/Timeseries.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetParameterConstellation.html":{},"components/DragOptionsComponent.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFlotModule.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"interfaces/StatusInterval.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"classes/Timeseries.html":{},"classes/TimeseriesCollection.html":{},"interfaces/TimeseriesExtras.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["timeseries.component.html",{"_index":4662,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["timeseries.component.tsexport",{"_index":4663,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["timeseries.lastvalue.timestamp",{"_index":1622,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{}}}],["timeseries.lastvalue.valu",{"_index":1620,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{}}}],["timeseries.parameters.category.label",{"_index":1619,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{}}}],["timeseries.parameters.phenomenon.label",{"_index":1617,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{}}}],["timeseries.parameters.procedure.label",{"_index":1618,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{}}}],["timeseries.select",{"_index":1613,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["timeseries.uom",{"_index":1621,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{}}}],["timeseries:57",{"_index":2276,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:58",{"_index":2278,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:59",{"_index":2285,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:60",{"_index":2284,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:61",{"_index":2277,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:62",{"_index":2274,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:63",{"_index":2279,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:64",{"_index":2281,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:65",{"_index":2282,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:66",{"_index":2280,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:67",{"_index":2283,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseries:68",{"_index":2275,"title":{},"body":{"classes/ExtendedTimeseries.html":{}}}],["timeseriescollect",{"_index":3799,"title":{"classes/TimeseriesCollection.html":{}},"body":{"classes/Station.html":{},"interfaces/StationProperties.html":{},"classes/TimeseriesCollection.html":{}}}],["timeseriesentrycompon",{"_index":281,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandDatasetlistModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["timeseriesextra",{"_index":1527,"title":{"interfaces/TimeseriesExtras.html":{}},"body":{"classes/Dataset.html":{},"classes/DatasetParameterConstellation.html":{},"classes/FirstLastValue.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/UriParameterCoder.html":{}}}],["timeserieslist",{"_index":1584,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["timespan",{"_index":140,"title":{"classes/Timespan.html":{}},"body":{"classes/ApiInterface.html":{},"components/AxesOptionsComponent.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DatasetApi.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetPresenterComponent.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscriptionFilter.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandTimeModule.html":{},"interfaces/HighlightDataset.html":{},"interfaces/HttpRequestOptions.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"interfaces/Settings.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"injectables/TimeRangeSliderCache.html":{},"components/TimeRangeSliderComponent.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["timespan(dataset.firstvalue.timestamp",{"_index":3509,"title":{},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["timespan(event.value[0",{"_index":3965,"title":{},"body":{"components/TimeRangeSliderComponent.html":{}}}],["timespan(from",{"_index":2029,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"injectables/Time.html":{}}}],["timespan(new",{"_index":4568,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["timespan(option.timestamp",{"_index":2172,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["timespan(parseint(preset.timespan.from",{"_index":3404,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["timespan(start",{"_index":3920,"title":{},"body":{"injectables/Time.html":{}}}],["timespan(start.unix",{"_index":3779,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["timespan).subscribe((data",{"_index":2174,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["timespan).subscribe((result",{"_index":3471,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["timespan.from",{"_index":2462,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/Time.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["timespan.servic",{"_index":2584,"title":{},"body":{"modules/HelgolandCoreModule.html":{}}}],["timespan.service.t",{"_index":2007,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["timespan.service.ts:22",{"_index":2009,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["timespan.service.ts:77",{"_index":2012,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["timespan.to",{"_index":2463,"title":{},"body":{"components/FlotOverviewTimeseriesGraphComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"components/TimespanShiftSelectorComponent.html":{}}}],["timespan/timeinterv",{"_index":797,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["timespanbuttoncompon",{"_index":282,"title":{"components/TimespanButtonComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandTimeModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["timespanchang",{"_index":690,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{}}}],["timespanchanged(preset",{"_index":3319,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["timespanchanged(timespan",{"_index":718,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["timespanfunc",{"_index":4001,"title":{},"body":{"components/TimespanButtonComponent.html":{}}}],["timespanmomenttempl",{"_index":336,"title":{"interfaces/TimespanMomentTemplate.html":{}},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["timespanpreset",{"_index":331,"title":{"interfaces/TimespanPreset.html":{}},"body":{"interfaces/BlacklistedService.html":{},"interfaces/DatasetApi.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/Settings.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{}}}],["timespanshiftselectorcompon",{"_index":283,"title":{"components/TimespanShiftSelectorComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandTimeModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["timesrvc",{"_index":702,"title":{},"body":{"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"components/TimespanShiftSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["timestamp",{"_index":359,"title":{},"body":{"classes/BufferedTime.html":{},"interfaces/CollectionMetadata.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/FirstLastValue.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"interfaces/Layout.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/MinMaxRange.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"interfaces/ProfileDataEntry.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"classes/ReferenceValues.html":{},"interfaces/ScatterData.html":{},"interfaces/StatusInterval.html":{},"classes/TimeInterval.html":{},"components/TimeListSelectorComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{}}}],["timestampcr",{"_index":637,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["timestep",{"_index":1165,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["timestr",{"_index":1217,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["timetickvalues(tim",{"_index":1169,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["timevalueentri",{"_index":756,"title":{"interfaces/TimeValueEntry.html":{}},"body":{"interfaces/Data.html":{},"interfaces/IDataEntry.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/ProfileDataEntry.html":{},"classes/ReferenceValues.html":{},"interfaces/TimeValueEntry.html":{}}}],["timezon",{"_index":168,"title":{},"body":{"interfaces/AxesOptions.html":{}}}],["titl",{"_index":2224,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"license.html":{}}}],["to",{"_index":4497,"title":{"additional-documentation/how-tos.html":{}},"body":{"additional-documentation/how-tos.html":{}}}],["to```scss",{"_index":4625,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["today",{"_index":2016,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["today_yesterday",{"_index":2018,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["todo",{"_index":153,"title":{},"body":{"classes/ApiInterface.html":{},"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["toggl",{"_index":344,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/RefreshButtonComponent.html":{},"components/StringTogglerComponent.html":{},"additional-documentation/introduction.html":{}}}],["toggle(timeseri",{"_index":1594,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["toggleinform",{"_index":3553,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["togglepanzoom",{"_index":745,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"components/DragOptionsComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["toggler",{"_index":342,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/StringTogglerComponent.html":{}}}],["toggler'},{'nam",{"_index":207,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["toggler.compon",{"_index":2565,"title":{},"body":{"modules/HelgolandControlModule.html":{},"modules/HelgolandFavoriteModule.html":{}}}],["toggler.component.html",{"_index":343,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/StringTogglerComponent.html":{}}}],["toggler.component.t",{"_index":341,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/StringTogglerComponent.html":{}}}],["toggler.component.ts:10",{"_index":351,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/StringTogglerComponent.html":{}}}],["toggler.component.ts:13",{"_index":349,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/StringTogglerComponent.html":{}}}],["toggler.component.ts:14",{"_index":2376,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["toggler.component.ts:15",{"_index":2374,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["toggler.component.ts:16",{"_index":350,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/StringTogglerComponent.html":{}}}],["toggler.component.ts:19",{"_index":352,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/StringTogglerComponent.html":{}}}],["toggler.component.ts:21",{"_index":353,"title":{},"body":{"components/BoolTogglerComponent.html":{}}}],["toggler.component.ts:22",{"_index":3856,"title":{},"body":{"components/StringTogglerComponent.html":{}}}],["toggler.component.ts:23",{"_index":2377,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["toggler.component.ts:24",{"_index":3859,"title":{},"body":{"components/StringTogglerComponent.html":{}}}],["toggler.component.ts:26",{"_index":3857,"title":{},"body":{"components/StringTogglerComponent.html":{}}}],["toggler.component.ts:29",{"_index":2378,"title":{},"body":{"components/FavoriteTogglerComponent.html":{}}}],["toggler.component.ts:32",{"_index":3858,"title":{},"body":{"components/StringTogglerComponent.html":{}}}],["toggler/bool",{"_index":340,"title":{},"body":{"components/BoolTogglerComponent.html":{},"modules/HelgolandControlModule.html":{}}}],["toggler/favorit",{"_index":2369,"title":{},"body":{"components/FavoriteTogglerComponent.html":{},"modules/HelgolandFavoriteModule.html":{}}}],["toggler/str",{"_index":2568,"title":{},"body":{"modules/HelgolandControlModule.html":{},"components/StringTogglerComponent.html":{}}}],["togglereferencevalue(refvalu",{"_index":3561,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["toggleselect",{"_index":2927,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["toggleuomselect",{"_index":2928,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["toggleuomselection(id",{"_index":2938,"title":{},"body":{"classes/ListEntryComponent.html":{},"components/ProfileEntryComponent.html":{},"components/TrajectoryEntryComponent.html":{}}}],["togglevis",{"_index":3424,"title":{},"body":{"components/ProfileEntryComponent.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TrajectoryEntryComponent.html":{}}}],["togglevisibility(opt",{"_index":3452,"title":{},"body":{"components/ProfileEntryComponent.html":{}}}],["tohighlightdataset.foreach((obj",{"_index":1290,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["token",{"_index":313,"title":{},"body":{"injectables/BasicAuthService.html":{},"injectables/EventingImplApiInterface.html":{}}}],["tool",{"_index":4160,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{}}}],["toolbox",{"_index":4159,"title":{},"body":{"index.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["tooltip",{"_index":346,"title":{},"body":{"components/BoolTogglerComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeRangeSliderComponent.html":{}}}],["top",{"_index":836,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["tort",{"_index":4408,"title":{},"body":{"license.html":{}}}],["tostr",{"_index":2905,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["tostring(16",{"_index":536,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["total",{"_index":631,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["touch",{"_index":3294,"title":{},"body":{"interfaces/PlotOptions.html":{},"additional-documentation/how-tos.html":{}}}],["tozero",{"_index":2231,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["track",{"_index":4310,"title":{},"body":{"license.html":{}}}],["trade",{"_index":4387,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4364,"title":{},"body":{"license.html":{}}}],["trajectori",{"_index":218,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"additional-documentation/introduction.html":{}}}],["trajectoryentrycompon",{"_index":285,"title":{"components/TrajectoryEntryComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandDatasetlistModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["trajectoryresult",{"_index":3500,"title":{"interfaces/TrajectoryResult.html":{}},"body":{"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/TrajectoryResult.html":{}}}],["transfer",{"_index":4338,"title":{},"body":{"license.html":{}}}],["transform",{"_index":1982,"title":{},"body":{"pipes/DateProxyPipe.html":{},"injectables/Time.html":{},"dependencies.html":{},"license.html":{}}}],["transform(valu",{"_index":1983,"title":{},"body":{"pipes/DateProxyPipe.html":{}}}],["translat",{"_index":879,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"pipes/DateProxyPipe.html":{},"interfaces/DrawOptions.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"interfaces/HighlightDataset.html":{},"classes/LanguageChangNotifier.html":{},"classes/LocalSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["translate(0",{"_index":1220,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["translate/cor",{"_index":1992,"title":{},"body":{"pipes/DateProxyPipe.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandSelectorModule.html":{},"classes/LanguageChangNotifier.html":{},"classes/LocalSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{},"dependencies.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["translate/http",{"_index":4091,"title":{},"body":{"dependencies.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["translatehttpload",{"_index":4523,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["translatehttploader(http",{"_index":4536,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["translateload",{"_index":4522,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["translatemodul",{"_index":2599,"title":{},"body":{"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandSelectorModule.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["translatemodule.forroot",{"_index":4531,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["translateservic",{"_index":1990,"title":{},"body":{"pipes/DateProxyPipe.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"classes/LanguageChangNotifier.html":{},"classes/LocalSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["tree",{"_index":178,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["tri",{"_index":2001,"title":{},"body":{"pipes/DateProxyPipe.html":{},"injectables/LabelMapperService.html":{}}}],["trigger",{"_index":4642,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["triggersearch",{"_index":2518,"title":{},"body":{"components/GeosearchControlComponent.html":{}}}],["troubleshoot",{"_index":4228,"title":{},"body":{"index.html":{}}}],["true",{"_index":546,"title":{},"body":{"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"modules/HelgolandCachingModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"interfaces/Layout.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalStorage.html":{},"injectables/LocateService.html":{},"interfaces/MinMaxRange.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/SingleFavorite.html":{},"injectables/Time.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["ts",{"_index":1608,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["ts.select",{"_index":1609,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["ts2307",{"_index":4607,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["tsc/app",{"_index":4543,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["tscolor",{"_index":169,"title":{},"body":{"interfaces/AxesOptions.html":{}}}],["tsconfig.json",{"_index":4217,"title":{},"body":{"index.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["tsdata",{"_index":902,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["tsdata.bars.linewidth",{"_index":909,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["tsdata.lines.linewidth",{"_index":906,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["tsdata.lines.pointradiu",{"_index":908,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["tsdata.select",{"_index":905,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["tslint:dis",{"_index":2167,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/GeoReverseOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"interfaces/Layout.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["tslint:disable:max",{"_index":3331,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["tutori",{"_index":4510,"title":{},"body":{"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["two",{"_index":4618,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["type",{"_index":22,"title":{},"body":{"interfaces/Address.html":{},"classes/ApiInterface.html":{},"interfaces/AxesOptions.html":{},"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"components/BoolTogglerComponent.html":{},"classes/BufferedTime.html":{},"interfaces/CachedItem.html":{},"classes/CachedMapComponent.html":{},"injectables/CachingInterceptor.html":{},"interfaces/CollectionMetadata.html":{},"components/ColorSelectorComponent.html":{},"interfaces/D3GraphOptions.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/D3PlotOptions.html":{},"classes/D3SelectionRange.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"interfaces/DataParameterFilter.html":{},"interfaces/DataSeries.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"injectables/DatasetApiMapping.html":{},"interfaces/DatasetApiV2.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"classes/EventingApiService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventFilter.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingFilter.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/GeoReverseResult.html":{},"classes/GeoSearch.html":{},"interfaces/GeoSearchOptions.html":{},"interfaces/GeoSearchResult.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"interfaces/HttpRequestOptions.html":{},"injectables/HttpService.html":{},"interfaces/HttpServiceHandler.html":{},"interfaces/HttpServiceInterceptor.html":{},"interfaces/HttpServiceMetadata.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"interfaces/Identifiable.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Language.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/LayerOptions.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"interfaces/ListSelectorParameter.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"interfaces/MinMaxRange.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"interfaces/NominatimReverseResult.html":{},"interfaces/NominatimSearchResult.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"interfaces/Parameter.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParameterFilter.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/Platform.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/PlatformParameter.html":{},"interfaces/Plot.html":{},"interfaces/PlotOptions.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"interfaces/PresenterHighlight.html":{},"interfaces/PresenterMessage.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValueOption.html":{},"components/RefreshButtonComponent.html":{},"interfaces/ScatterData.html":{},"interfaces/SeriesOptions.html":{},"interfaces/Service.html":{},"components/ServiceFilterSelectorComponent.html":{},"interfaces/ServiceQuantities.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"classes/Station.html":{},"interfaces/StationProperties.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"interfaces/SupportedMimeTypes.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/Timespan.html":{},"components/TimespanButtonComponent.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/TrajectoryResult.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["type.t",{"_index":4141,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeof",{"_index":3063,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["types/bootstrap",{"_index":4094,"title":{},"body":{"dependencies.html":{}}}],["types/d3",{"_index":4096,"title":{},"body":{"dependencies.html":{}}}],["types/flot",{"_index":4098,"title":{},"body":{"dependencies.html":{}}}],["types/geojson",{"_index":4100,"title":{},"body":{"dependencies.html":{}}}],["types/jqueri",{"_index":4102,"title":{},"body":{"dependencies.html":{}}}],["types/leaflet",{"_index":4104,"title":{},"body":{"dependencies.html":{}}}],["types/leaflet.markerclust",{"_index":4106,"title":{},"body":{"dependencies.html":{}}}],["types/mo",{"_index":4108,"title":{},"body":{"dependencies.html":{}}}],["types/plotly.j",{"_index":4110,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":4610,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["typescript@~2.6",{"_index":4612,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["u",{"_index":1873,"title":{},"body":{"classes/DatasetPresenterComponent.html":{}}}],["ui",{"_index":4485,"title":{},"body":{"additional-documentation/introduction.html":{}}}],["undefin",{"_index":499,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"classes/DatasetPresenterComponent.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/HighlightDataset.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/LocalStorage.html":{},"components/MinMaxRangeComponent.html":{},"interfaces/YScale.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":4253,"title":{},"body":{"license.html":{}}}],["union",{"_index":4251,"title":{},"body":{"license.html":{}}}],["uniqu",{"_index":1300,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["unit",{"_index":644,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["unless",{"_index":4380,"title":{},"body":{"license.html":{}}}],["unnecessari",{"_index":1120,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["unresolvableservic",{"_index":3681,"title":{},"body":{"components/ServiceSelectorComponent.html":{}}}],["unus",{"_index":2182,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["uom",{"_index":170,"title":{},"body":{"interfaces/AxesOptions.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/DrawOptions.html":{},"classes/ExtendedTimeseries.html":{},"classes/FirstLastValue.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["uomo",{"_index":979,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["up",{"_index":4501,"title":{},"body":{"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["updat",{"_index":2748,"title":{},"body":{"classes/HttpCache.html":{},"classes/OnGoingHttpCache.html":{}}}],["updateaxi",{"_index":2247,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["updatedatasetopt",{"_index":1949,"title":{},"body":{"classes/DatasetService.html":{}}}],["updatedatasetoptions(opt",{"_index":1963,"title":{},"body":{"classes/DatasetService.html":{}}}],["updatelayercontrol",{"_index":417,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["updateopt",{"_index":4667,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["updateoptions(opt",{"_index":4669,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["updateselect",{"_index":1585,"title":{},"body":{"components/DatasetByStationSelectorComponent.html":{},"classes/ExtendedTimeseries.html":{}}}],["updatezoomcontrol",{"_index":418,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["upgrad",{"_index":4609,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["upload",{"_index":4193,"title":{},"body":{"index.html":{}}}],["upper",{"_index":1228,"title":{},"body":{"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/DrawOptions.html":{},"classes/FirstLastValue.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/YScale.html":{}}}],["uriparametercod",{"_index":2109,"title":{"classes/UriParameterCoder.html":{}},"body":{"injectables/EventingImplApiInterface.html":{},"classes/UriParameterCoder.html":{}}}],["url",{"_index":304,"title":{},"body":{"injectables/BasicAuthService.html":{},"interfaces/BlacklistedService.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetApi.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"interfaces/DrawOptions.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/ExtendedScatterData.html":{},"classes/ExtendedTimeseries.html":{},"classes/Filter.html":{},"interfaces/FilteredParameter.html":{},"interfaces/FilteredProvider.html":{},"classes/FirstLastValue.html":{},"classes/GeoCureGeoJSON.html":{},"interfaces/GeoCureGeoJSONOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"interfaces/InternalDatasetId.html":{},"injectables/InternalIdHandler.html":{},"injectables/LabelMapperService.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"classes/ParameterConstellation.html":{},"interfaces/ParsedTimespanPreset.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"classes/PermalinkService.html":{},"components/PermalinkToClipboardComponent.html":{},"interfaces/PlatformParameter.html":{},"components/ProfileEntryComponent.html":{},"interfaces/Provider.html":{},"interfaces/RawData.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"components/ServiceSelectorComponent.html":{},"injectables/ServiceSelectorService.html":{},"interfaces/Settings.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/TimespanMomentTemplate.html":{},"interfaces/TimespanPreset.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"additional-documentation/introduction.html":{}}}],["url).subscrib",{"_index":889,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["url).subscribe((dataset",{"_index":1667,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"components/ProfileEntryComponent.html":{},"interfaces/RawData.html":{},"injectables/ReferenceValueColorCache.html":{},"interfaces/ScatterData.html":{},"components/TrajectoryEntryComponent.html":{}}}],["url).subscribe((timeseri",{"_index":3573,"title":{},"body":{"injectables/ReferenceValueColorCache.html":{}}}],["url.indexof",{"_index":3234,"title":{},"body":{"classes/PermalinkService.html":{}}}],["url.substring(0",{"_index":3235,"title":{},"body":{"classes/PermalinkService.html":{}}}],["urls.foreach((url",{"_index":3838,"title":{},"body":{"injectables/StatusCheckService.html":{}}}],["us",{"_index":490,"title":{},"body":{"classes/CachedMapComponent.html":{},"injectables/LabelMapperService.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{},"index.html":{},"license.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["usableservic",{"_index":3745,"title":{},"body":{"injectables/ServiceSelectorService.html":{}}}],["usag",{"_index":4202,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":2557,"title":{},"body":{"modules/HelgolandCachingModule.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["usefactori",{"_index":4532,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["user",{"_index":649,"title":{},"body":{"interfaces/CollectionMetadata.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"interfaces/Id.html":{}}}],["usernam",{"_index":306,"title":{},"body":{"injectables/BasicAuthService.html":{}}}],["utc",{"_index":1204,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["utc+2",{"_index":1209,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["uuid",{"_index":1478,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["uuidv4",{"_index":1479,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["v",{"_index":3372,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["v0.0.1",{"_index":4225,"title":{},"body":{"index.html":{}}}],["v1",{"_index":1543,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"miscellaneous/enumerations.html":{}}}],["v1.10.2",{"_index":4227,"title":{},"body":{"index.html":{}}}],["v1.interfac",{"_index":1578,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["v2",{"_index":1544,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"miscellaneous/enumerations.html":{}}}],["v2.6",{"_index":4634,"title":{},"body":{"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["v2.interfac",{"_index":4047,"title":{},"body":{"classes/UriParameterCoder.html":{}}}],["v2.interface.t",{"_index":1558,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["v2.interface.ts:12",{"_index":1572,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["v2.interface.ts:15",{"_index":1570,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["v2.interface.ts:19",{"_index":1568,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["v2.interface.ts:22",{"_index":1566,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["v2.interface.ts:25",{"_index":1564,"title":{},"body":{"interfaces/DatasetApiV2.html":{}}}],["validateperamlink",{"_index":3228,"title":{},"body":{"classes/PermalinkService.html":{}}}],["valu",{"_index":347,"title":{},"body":{"components/BoolTogglerComponent.html":{},"classes/CachedMapComponent.html":{},"interfaces/CollectionMetadata.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/Data.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"interfaces/DatasetTableData.html":{},"pipes/DateProxyPipe.html":{},"injectables/DefinedTimespanService.html":{},"interfaces/EventingEvent.html":{},"interfaces/EventingEventResults.html":{},"injectables/EventingImplApiInterface.html":{},"interfaces/EventingSubscription.html":{},"interfaces/EventingSubscriptionResults.html":{},"interfaces/EventingTemplate.html":{},"classes/ExtendedTimeseries.html":{},"injectables/FavoriteService.html":{},"classes/FirstLastValue.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"interfaces/HighlightDataset.html":{},"injectables/HttpService.html":{},"interfaces/IDataEntry.html":{},"interfaces/IDataset.html":{},"interfaces/Id.html":{},"classes/IdCache.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"injectables/ListSelectorService.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"injectables/LocalStorage.html":{},"components/LocateControlComponent.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"injectables/MapCache.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NominatimGeoSearchService.html":{},"classes/ParameterConstellation.html":{},"classes/PermalinkService.html":{},"interfaces/PlatformParameter.html":{},"interfaces/ProfileDataEntry.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"classes/ReferenceValue.html":{},"classes/ReferenceValues.html":{},"components/ServiceSelectorComponent.html":{},"injectables/SplittedDataDatasetApiInterface.html":{},"injectables/StatusCheckService.html":{},"interfaces/StatusInterval.html":{},"injectables/StatusIntervalResolverService.html":{},"components/StringTogglerComponent.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/TimeValueEntry.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"classes/UriParameterCoder.html":{},"interfaces/YScale.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["values[0].dist",{"_index":1815,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["values[0].tick",{"_index":1820,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["values[0].timestamp",{"_index":1818,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["values[values.length",{"_index":1816,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["valuetyp",{"_index":1490,"title":{},"body":{"interfaces/DataParameterFilter.html":{},"interfaces/HttpRequestOptions.html":{},"interfaces/ParameterFilter.html":{},"miscellaneous/enumerations.html":{}}}],["var",{"_index":202,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["variabl",{"_index":4446,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["verbal",{"_index":4305,"title":{},"body":{"license.html":{}}}],["veri",{"_index":4500,"title":{},"body":{"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["versa",{"_index":3370,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["version",{"_index":1538,"title":{},"body":{"injectables/DatasetApiMapping.html":{},"injectables/JsonFavoriteExporterService.html":{},"interfaces/Service.html":{},"interfaces/ServiceQuantities.html":{},"interfaces/SupportedMimeTypes.html":{},"index.html":{},"license.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["verticalunit",{"_index":760,"title":{},"body":{"interfaces/Data.html":{},"interfaces/IDataEntry.html":{},"interfaces/LocatedProfileDataEntry.html":{},"interfaces/LocatedTimeValueEntry.html":{},"interfaces/ProfileDataEntry.html":{},"classes/ReferenceValues.html":{},"interfaces/TimeValueEntry.html":{}}}],["via",{"_index":1337,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["vice",{"_index":3369,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["view",{"_index":3478,"title":{},"body":{"components/ProfileEntryComponent.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["viewchild",{"_index":766,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["viewchild('d3timeseri",{"_index":803,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["viewchild('dthre",{"_index":1640,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["viewchild('plotli",{"_index":2144,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["viewencapsul",{"_index":767,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/YScale.html":{}}}],["viewencapsulation.non",{"_index":796,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"injectables/ReferenceValueColorCache.html":{},"components/TimeRangeSliderComponent.html":{},"interfaces/YScale.html":{}}}],["viewer'},{'nam",{"_index":236,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["viewer.compon",{"_index":2680,"title":{},"body":{"modules/HelgolandMapViewModule.html":{}}}],["viewer/geometri",{"_index":2679,"title":{},"body":{"modules/HelgolandMapViewModule.html":{}}}],["visibl",{"_index":545,"title":{},"body":{"classes/CachedMapComponent.html":{},"interfaces/DataConst.html":{},"classes/Dataset.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetOptions.html":{},"classes/DatasetParameterConstellation.html":{},"interfaces/DrawOptions.html":{},"classes/FirstLastValue.html":{},"interfaces/HighlightDataset.html":{},"interfaces/IDataset.html":{},"interfaces/LayerOptions.html":{},"interfaces/MinMaxRange.html":{},"classes/ParameterConstellation.html":{},"interfaces/PlatformParameter.html":{},"classes/ReferenceValue.html":{},"injectables/ReferenceValueColorCache.html":{},"classes/ReferenceValueOption.html":{},"interfaces/StatusInterval.html":{},"classes/TimedDatasetOptions.html":{},"classes/Timeseries.html":{},"interfaces/TimeseriesExtras.html":{},"interfaces/YScale.html":{}}}],["visual",{"_index":1166,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["void",{"_index":195,"title":{},"body":{"components/AxesOptionsComponent.html":{},"injectables/BasicAuthService.html":{},"components/BoolTogglerComponent.html":{},"classes/CachedMapComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"injectables/DatasetApiMapping.html":{},"components/DatasetByStationSelectorComponent.html":{},"interfaces/DatasetConstellation.html":{},"classes/DatasetPresenterComponent.html":{},"classes/DatasetService.html":{},"components/DragOptionsComponent.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/ExtentControlComponent.html":{},"interfaces/Favorite.html":{},"injectables/FavoriteService.html":{},"components/FavoriteTogglerComponent.html":{},"interfaces/FilteredParameter.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"classes/GeoCureGeoJSON.html":{},"components/GeosearchControlComponent.html":{},"interfaces/GroupFavorite.html":{},"classes/HasLoadableContent.html":{},"interfaces/HighlightDataset.html":{},"classes/HttpCache.html":{},"classes/IdCache.html":{},"injectables/InternalIdHandler.html":{},"injectables/JsonFavoriteExporterService.html":{},"components/LabelMapperComponent.html":{},"injectables/LabelMapperService.html":{},"classes/LanguageChangNotifier.html":{},"interfaces/Layout.html":{},"classes/ListEntryComponent.html":{},"components/ListSelectorComponent.html":{},"injectables/LocalHttpCache.html":{},"injectables/LocalOngoingHttpCache.html":{},"classes/LocalSelectorComponent.html":{},"components/LocateControlComponent.html":{},"injectables/LocateService.html":{},"injectables/MapCache.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"injectables/NotifierService.html":{},"classes/OnGoingHttpCache.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"interfaces/Plot.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/RawData.html":{},"components/RefreshButtonComponent.html":{},"classes/ResizableComponent.html":{},"interfaces/ScatterData.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"classes/SettingsService.html":{},"interfaces/SingleFavorite.html":{},"injectables/StatusCheckService.html":{},"components/StringTogglerComponent.html":{},"injectables/Time.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{}}}],["w",{"_index":1469,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["w@:%_\\+.~#?&\\/\\/=]+)/g",{"_index":2908,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["want",{"_index":4509,"title":{},"body":{"additional-documentation/how-tos.html":{}}}],["warranti",{"_index":4391,"title":{},"body":{"license.html":{}}}],["watch",{"_index":3107,"title":{},"body":{"injectables/LocateService.html":{}}}],["weeks').endof('isoweek').unix",{"_index":2042,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["weeks').startof('isoweek').unix",{"_index":2041,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["weight",{"_index":1086,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"interfaces/YScale.html":{}}}],["wherev",{"_index":4369,"title":{},"body":{"license.html":{}}}],["whether",{"_index":155,"title":{},"body":{"classes/ApiInterface.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"license.html":{}}}],["white",{"_index":1080,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["whole",{"_index":941,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{},"license.html":{}}}],["width",{"_index":834,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{}}}],["window",{"_index":3216,"title":{},"body":{"components/PermalinkNewWindowComponent.html":{}}}],["window'},{'nam",{"_index":256,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{}}}],["window.compon",{"_index":2702,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{}}}],["window.component.html",{"_index":3217,"title":{},"body":{"components/PermalinkNewWindowComponent.html":{}}}],["window.component.t",{"_index":3215,"title":{},"body":{"components/PermalinkNewWindowComponent.html":{}}}],["window.component.ts:10",{"_index":3219,"title":{},"body":{"components/PermalinkNewWindowComponent.html":{}}}],["window.component.ts:13",{"_index":3220,"title":{},"body":{"components/PermalinkNewWindowComponent.html":{}}}],["window.component.ts:15",{"_index":3221,"title":{},"body":{"components/PermalinkNewWindowComponent.html":{}}}],["window.location.href",{"_index":3211,"title":{},"body":{"components/PermalinkInMailComponent.html":{},"classes/PermalinkService.html":{}}}],["window.navigator.mssaveblob",{"_index":2823,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["window.navigator.mssaveblob(blob",{"_index":2829,"title":{},"body":{"injectables/JsonFavoriteExporterService.html":{}}}],["window.open(this.url",{"_index":3222,"title":{},"body":{"components/PermalinkNewWindowComponent.html":{}}}],["window/permalink",{"_index":2701,"title":{},"body":{"modules/HelgolandPermalinkModule.html":{},"components/PermalinkNewWindowComponent.html":{}}}],["window:res",{"_index":3653,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["window:resize(ev",{"_index":3656,"title":{},"body":{"classes/ResizableComponent.html":{}}}],["within",{"_index":4321,"title":{},"body":{"license.html":{}}}],["without",{"_index":4356,"title":{},"body":{"license.html":{}}}],["work",{"_index":492,"title":{},"body":{"classes/CachedMapComponent.html":{},"license.html":{},"additional-documentation/how-tos.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{},"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["workaround](https://github.com/angular/angular",{"_index":4213,"title":{},"body":{"index.html":{}}}],["worldwid",{"_index":4325,"title":{},"body":{"license.html":{}}}],["write",{"_index":4317,"title":{},"body":{"license.html":{}}}],["written",{"_index":4306,"title":{},"body":{"license.html":{}}}],["x",{"_index":823,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"components/GeosearchControlComponent.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["x((d",{"_index":1313,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["x(this.calcxvalu",{"_index":1657,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["x.push(entry.valu",{"_index":2198,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["xaxi",{"_index":2204,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/PlotOptions.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["xaxiscount",{"_index":2253,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["xaxisgen",{"_index":1211,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xaxisgen.tickformat((d",{"_index":1807,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["xaxisrang",{"_index":822,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xaxisrangeorigin",{"_index":825,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xaxisrangepan",{"_index":826,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xcoordmous",{"_index":1429,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xdiagcoord",{"_index":778,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xdiagmax",{"_index":775,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xdiagmin",{"_index":774,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xdomainrang",{"_index":1414,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xml",{"_index":2894,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["xml).find('preflabel').text",{"_index":2897,"title":{},"body":{"injectables/LabelMapperService.html":{}}}],["xscalebas",{"_index":843,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["xscalebase(d[0",{"_index":1316,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["y",{"_index":828,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["y((d",{"_index":1319,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["y(this.calcyvalu",{"_index":1658,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["y.push(entry.vert",{"_index":2199,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["y0(this.height",{"_index":1661,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["y1(this.calcyvalu",{"_index":1662,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["yarn",{"_index":4199,"title":{},"body":{"index.html":{}}}],["yax",{"_index":3295,"title":{},"body":{"interfaces/PlotOptions.html":{}}}],["yaxi",{"_index":746,"title":{},"body":{"interfaces/D3PlotOptions.html":{},"interfaces/DataConst.html":{},"interfaces/ExtendedScatterData.html":{},"interfaces/HighlightDataset.html":{},"interfaces/Layout.html":{},"interfaces/PlotOptions.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{},"interfaces/YScale.html":{}}}],["yaxiscount",{"_index":2250,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["yaxisgen",{"_index":1251,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["yaxisrang",{"_index":792,"title":{},"body":{"interfaces/DataConst.html":{},"classes/DatasetOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{}}}],["yaxisresult",{"_index":1038,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["yaxisresult.buff",{"_index":1041,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["yaxisresult.yscal",{"_index":1040,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ydiagcoord",{"_index":773,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ydiagmax",{"_index":777,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ydiagmin",{"_index":776,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ye",{"_index":149,"title":{},"body":{"classes/ApiInterface.html":{},"classes/CachedMapComponent.html":{},"interfaces/DatasetApiV2.html":{},"classes/DatasetService.html":{},"classes/EventingApiService.html":{},"injectables/FavoriteService.html":{},"classes/GeoCureGeoJSON.html":{},"classes/GeoSearch.html":{},"injectables/NominatimGeoSearchService.html":{},"classes/Timespan.html":{}}}],["year').asmillisecond",{"_index":3774,"title":{},"body":{"injectables/SplittedDataDatasetApiInterface.html":{}}}],["year(numb",{"_index":3345,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["years').endof('year').unix",{"_index":2054,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["years').startof('year').unix",{"_index":2053,"title":{},"body":{"injectables/DefinedTimespanService.html":{}}}],["years|y|quarters|q|months|m|weeks|w|days|d|hours|h|minutes|m|seconds|s|milliseconds|ms)['\"]\\))|((startof|endof)\\(['\"](year|month|quarter|week|isoweek|day|date|hour|minute|second)['\"]\\))|((year|month|date|hours|minutes|seconds|milliseconds)\\(\\d",{"_index":3376,"title":{},"body":{"components/PredefinedTimespanSelectorComponent.html":{}}}],["yellow",{"_index":4600,"title":{},"body":{"additional-documentation/how-tos/integrate-a-table-component.html":{}}}],["yesterday",{"_index":2017,"title":{},"body":{"injectables/DefinedTimespanService.html":{},"miscellaneous/enumerations.html":{}}}],["ymax",{"_index":1245,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ymin",{"_index":1243,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ypo",{"_index":831,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ypos.foreach((p",{"_index":1360,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ypos.sort((a",{"_index":1367,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ypos[c2",{"_index":1376,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ypos[c2].off",{"_index":1377,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ypos[i",{"_index":1362,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ypos[i].i",{"_index":1366,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["ypos[i].off",{"_index":1364,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["yrang",{"_index":783,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["yrangeobj",{"_index":1025,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["yrangeseachuom",{"_index":827,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["yscale",{"_index":780,"title":{"interfaces/YScale.html":{}},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["yscale(d[options.id",{"_index":1722,"title":{},"body":{"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{}}}],["yscalebas",{"_index":846,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/DatasetConstellation.html":{},"interfaces/DrawOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["yscalebase(d[1",{"_index":1320,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["zero",{"_index":4585,"title":{},"body":{"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["zerobas",{"_index":784,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["zerobasedyaxi",{"_index":794,"title":{},"body":{"interfaces/DataConst.html":{},"classes/DatasetOptions.html":{},"interfaces/HighlightDataset.html":{},"interfaces/MinMaxRange.html":{},"classes/ReferenceValueOption.html":{},"classes/TimedDatasetOptions.html":{},"interfaces/YScale.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["zerolin",{"_index":2225,"title":{},"body":{"interfaces/ExtendedScatterData.html":{},"interfaces/Layout.html":{},"interfaces/RawData.html":{},"interfaces/ScatterData.html":{}}}],["zone.j",{"_index":4136,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":287,"title":{},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"interfaces/DataConst.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandControlModule.html":{},"modules/HelgolandCoreModule.html":{},"modules/HelgolandD3Module.html":{},"modules/HelgolandDatasetTableModule.html":{},"modules/HelgolandDatasetlistModule.html":{},"modules/HelgolandFavoriteModule.html":{},"modules/HelgolandFlotModule.html":{},"modules/HelgolandLabelMapperModule.html":{},"modules/HelgolandMapControlModule.html":{},"modules/HelgolandMapModule.html":{},"modules/HelgolandMapSelectorModule.html":{},"modules/HelgolandMapViewModule.html":{},"modules/HelgolandModificationModule.html":{},"modules/HelgolandPermalinkModule.html":{},"modules/HelgolandPlotlyModule.html":{},"modules/HelgolandSelectorModule.html":{},"modules/HelgolandTimeModule.html":{},"modules/HelgolandTimeRangeSliderModule.html":{},"interfaces/HighlightDataset.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"interfaces/YScale.html":{},"components/ZoomControlComponent.html":{},"overview.html":{},"additional-documentation/introduction.html":{},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{}}}],["zoom.component.html",{"_index":4068,"title":{},"body":{"components/ZoomControlComponent.html":{}}}],["zoom/zoom.compon",{"_index":2657,"title":{},"body":{"modules/HelgolandMapControlModule.html":{}}}],["zoomcontrol",{"_index":406,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["zoomcontrolcompon",{"_index":286,"title":{"components/ZoomControlComponent.html":{}},"body":{"components/AxesOptionsComponent.html":{},"components/BoolTogglerComponent.html":{},"components/ColorSelectorComponent.html":{},"components/D3OverviewTimeseriesGraphComponent.html":{},"components/DatasetByStationSelectorComponent.html":{},"components/DragOptionsComponent.html":{},"components/ExtentControlComponent.html":{},"components/FavoriteTogglerComponent.html":{},"components/FlotOverviewTimeseriesGraphComponent.html":{},"components/GeosearchControlComponent.html":{},"modules/HelgolandMapControlModule.html":{},"components/LabelMapperComponent.html":{},"components/ListSelectorComponent.html":{},"components/LocateControlComponent.html":{},"components/MinMaxRangeComponent.html":{},"components/MultiServiceFilterSelectorComponent.html":{},"components/PermalinkInMailComponent.html":{},"components/PermalinkNewWindowComponent.html":{},"components/PermalinkToClipboardComponent.html":{},"components/PlatformMapSelectorComponent.html":{},"components/PredefinedTimespanSelectorComponent.html":{},"components/ProfileEntryComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{},"components/RefreshButtonComponent.html":{},"components/ServiceFilterSelectorComponent.html":{},"components/ServiceSelectorComponent.html":{},"components/StringTogglerComponent.html":{},"components/TimeListSelectorComponent.html":{},"components/TimeRangeSliderComponent.html":{},"components/TimespanButtonComponent.html":{},"components/TimespanShiftSelectorComponent.html":{},"components/TrajectoryEntryComponent.html":{},"components/ZoomControlComponent.html":{},"miscellaneous/variables.html":{}}}],["zoomcontrolopt",{"_index":425,"title":{},"body":{"classes/CachedMapComponent.html":{}}}],["zoomendhandl",{"_index":1408,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["zoomhandl",{"_index":1406,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["zoomin",{"_index":4069,"title":{},"body":{"components/ZoomControlComponent.html":{}}}],["zoomlimit",{"_index":808,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["zoomout",{"_index":4070,"title":{},"body":{"components/ZoomControlComponent.html":{}}}],["zoomstarthandl",{"_index":1402,"title":{},"body":{"interfaces/DataConst.html":{},"interfaces/HighlightDataset.html":{},"interfaces/YScale.html":{}}}],["zoomtoext",{"_index":2288,"title":{},"body":{"components/ExtentControlComponent.html":{}}}],["zoomtomarkerbound",{"_index":3246,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}],["zoomtomarkerbounds(bound",{"_index":3260,"title":{},"body":{"components/PlatformMapSelectorComponent.html":{},"components/ProfileTrajectoryMapSelectorComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address29\n                                \n                                \n                                        city\n                                \n                                \n                                        city_district\n                                \n                                \n                                        country\n                                \n                                \n                                        country_code\n                                \n                                \n                                        county\n                                \n                                \n                                        house_number\n                                \n                                \n                                        neighbourhood\n                                \n                                \n                                        postcode\n                                \n                                \n                                        road\n                                \n                                \n                                        state\n                                \n                                \n                                        state_district\n                                \n                                \n                                        suburb\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address29\n                                    \n                                \n                                \n                                    \n                                        address29:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city_district\n                                    \n                                \n                                \n                                    \n                                        city_district:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country_code\n                                    \n                                \n                                \n                                    \n                                        country_code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        county\n                                    \n                                \n                                \n                                    \n                                        county:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        house_number\n                                    \n                                \n                                \n                                    \n                                        house_number:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        neighbourhood\n                                    \n                                \n                                \n                                    \n                                        neighbourhood:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postcode\n                                    \n                                \n                                \n                                    \n                                        postcode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        road\n                                    \n                                \n                                \n                                    \n                                        road:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state_district\n                                    \n                                \n                                \n                                    \n                                        state_district:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suburb\n                                    \n                                \n                                \n                                    \n                                        suburb:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import 'rxjs/add/operator/map';\n\nimport { HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpService } from '@helgoland/core';\nimport { Point } from 'geojson';\nimport { Observable } from 'rxjs/Observable';\n\nimport { GeoReverseOptions, GeoReverseResult, GeoSearch, GeoSearchOptions, GeoSearchResult } from './geosearch';\n\ninterface NominatimSearchResult {\n    display_name: string;\n    geojson?: GeoJSON.GeoJsonObject;\n    lat: string;\n    lon: string;\n    boundingbox: number[];\n}\n\nexport interface Address {\n    address29: string;\n    house_number: string;\n    road: string;\n    neighbourhood: string;\n    suburb: string;\n    city_district: string;\n    city: string;\n    county: string;\n    state_district: string;\n    state: string;\n    postcode: string;\n    country: string;\n    country_code: string;\n}\n\nexport interface NominatimReverseResult {\n    place_id: string;\n    licence: string;\n    osm_type: string;\n    osm_id: string;\n    lat: string;\n    lon: string;\n    display_name: string;\n    address: Address;\n    boundingbox: string[];\n}\n\n@Injectable()\nexport class NominatimGeoSearchService implements GeoSearch {\n\n    protected serviceUrl = 'https://nominatim.openstreetmap.org/';\n\n    constructor(\n        protected http: HttpService\n    ) { }\n\n    public searchTerm(term: string, options?: GeoSearchOptions): Observable {\n        let params = new HttpParams();\n        params = params.set('limit', '1');\n        params = params.set('polygon_geojson', options.asPointGeometry ? '0' : '1');\n        params = params.set('q', term);\n        params = params.set('format', 'json');\n        if (options && options.countrycodes) { params = params.set('countrycodes', options.countrycodes.join(',')); }\n        return this.http.client().get(\n            this.serviceUrl + 'search',\n            { params }\n        ).map((resArray: NominatimSearchResult[]) => {\n            if (resArray.length === 1) {\n                const result = resArray[0];\n                const name = result.display_name;\n                let bounds: Array;\n                if (result.boundingbox) {\n                    bounds = [\n                        [\n                            result.boundingbox[0],\n                            result.boundingbox[2]\n                        ],\n                        [\n                            result.boundingbox[1],\n                            result.boundingbox[3]\n                        ]\n                    ];\n                } else {\n                    bounds = null;\n                }\n                let geometry;\n                if (result.geojson) {\n                    geometry = result.geojson;\n                } else {\n                    geometry = {\n                        type: 'Point',\n                        coordinates: [parseFloat(result.lon), parseFloat(result.lat)]\n                    };\n                }\n                return {\n                    name,\n                    geometry,\n                    bounds\n                };\n            }\n        });\n    }\n\n    public reverse(point: Point, options?: GeoReverseOptions): Observable {\n        let params = new HttpParams();\n        params = params.set('lat', point.coordinates[0].toString());\n        params = params.set('lon', point.coordinates[1].toString());\n        params = params.set('format', 'json');\n        return this.http.client().get(\n            this.serviceUrl + 'reverse',\n            { params }\n        ).map((res: NominatimReverseResult) => {\n            return {\n                lat: res.lat,\n                lon: res.lon,\n                displayName: res.display_name,\n                address: {\n                    city: res.address.city,\n                    cityDistrict: res.address.city_district,\n                    country: res.address.country,\n                    countryCode: res.address.country_code,\n                    county: res.address.county,\n                    houseNumber: res.address.house_number,\n                    neighbourhood: res.address.neighbourhood,\n                    postcode: res.address.postcode,\n                    road: res.address.road,\n                    state: res.address.state,\n                    stateDistrict: res.address.state_district,\n                    suburb: res.address.suburb\n                },\n                boundingbox: res.boundingbox\n            } as GeoReverseResult;\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiInterface.html":{"url":"classes/ApiInterface.html","title":"class - ApiInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/abstract-services/api-interface.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createRequestTimespan\n                            \n                            \n                                    Protected\n                                createRequestUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createRequestTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createRequestTimespan(timespan: Timespan)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/api-interface.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createRequestUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createRequestUrl(apiUrl: string, endpoint: string, id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/api-interface.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        endpoint\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import moment from 'moment';\n\nimport { Timespan } from '../model/internal/timeInterval';\n\nexport abstract class ApiInterface {\n\n    protected createRequestUrl(apiUrl: string, endpoint: string, id?: string) {\n        // TODO Check whether apiUrl ends with slash\n        let requestUrl = apiUrl + endpoint;\n        if (id) { requestUrl += '/' + id; }\n        return requestUrl;\n    }\n\n    protected createRequestTimespan(timespan: Timespan): string {\n        return encodeURI(moment(timespan.from).format() + '/' + moment(timespan.to).format());\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AxesOptions.html":{"url":"interfaces/AxesOptions.html","title":"interface - AxesOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AxesOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/flot/src/lib/model/axesOptions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        additionalWidth\n                                \n                                \n                                            Optional\n                                        hideLabel\n                                \n                                \n                                            Optional\n                                        internalIds\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        panRange\n                                \n                                \n                                            Optional\n                                        timezone\n                                \n                                \n                                            Optional\n                                        tsColors\n                                \n                                \n                                            Optional\n                                        uom\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        additionalWidth\n                                    \n                                \n                                \n                                    \n                                        additionalWidth:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideLabel\n                                    \n                                \n                                \n                                    \n                                        hideLabel:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        internalIds\n                                    \n                                \n                                \n                                    \n                                        internalIds:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        panRange\n                                    \n                                \n                                \n                                    \n                                        panRange:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timezone\n                                    \n                                \n                                \n                                    \n                                        timezone:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsColors\n                                    \n                                \n                                \n                                    \n                                        tsColors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uom\n                                    \n                                \n                                \n                                    \n                                        uom:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AxesOptions extends jquery.flot.axisOptions {\n    uom?: string;\n    label?: string;\n    hideLabel?: boolean;\n    internalIds?: string[];\n    tsColors?: string[];\n    timezone?: string;\n    additionalWidth?: number;\n    panRange?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AxesOptionsComponent.html":{"url":"components/AxesOptionsComponent.html","title":"component - AxesOptionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AxesOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/modification/src/lib/axes-options/axes-options.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-axes-options\n            \n\n\n\n\n            \n                templateUrl\n                ./axes-options.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeYAxesVisibility\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onChangeYAxesVisibility\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onChangeYAxesVisibility\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/axes-options/axes-options.component.ts:10\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeYAxesVisibility\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeYAxesVisibility()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/axes-options/axes-options.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'n52-axes-options',\n    templateUrl: './axes-options.component.html'\n})\nexport class AxesOptionsComponent {\n\n    @Output()\n    public onChangeYAxesVisibility: EventEmitter = new EventEmitter();\n\n    public changeYAxesVisibility() {\n        this.onChangeYAxesVisibility.emit();\n    }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AxesOptionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicAuthService.html":{"url":"injectables/BasicAuthService.html","title":"injectable - BasicAuthService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  BasicAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/auth/src/lib/basic-auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                basicAuthToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                clearToken\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                hasToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/auth/src/lib/basic-auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        auth(username: string, password: string, url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/auth/src/lib/basic-auth.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clearToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/auth/src/lib/basic-auth.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/auth/src/lib/basic-auth.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/auth/src/lib/basic-auth.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            basicAuthToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        basicAuthToken:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/auth/src/lib/basic-auth.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class BasicAuthService {\n\n  private basicAuthToken: string;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  public auth(username: string, password: string, url: string): Observable {\n    const token = 'Basic ' + btoa(username + ':' + password);\n    const headers = new HttpHeaders({ 'Authorization': token });\n    return this.http.get(url, { headers })\n      .pipe(\n        map(res => {\n          this.basicAuthToken = token;\n          return token;\n        })\n      );\n  }\n\n  public clearToken(): void {\n    this.basicAuthToken = null;\n  }\n\n  public hasToken(): boolean {\n    return this.basicAuthToken != null;\n  }\n\n  public getToken(): string {\n    return this.basicAuthToken;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlacklistedService.html":{"url":"interfaces/BlacklistedService.html","title":"interface - BlacklistedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BlacklistedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/settings/settings.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        apiUrl\n                                \n                                \n                                        serviceId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiUrl\n                                    \n                                \n                                \n                                    \n                                        apiUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceId\n                                    \n                                \n                                \n                                    \n                                        serviceId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timespan } from './../internal/timeInterval';\n\nexport interface Settings {\n    datasetApis?: DatasetApi[];\n    providerBlackList?: BlacklistedService[];\n    solveLabels?: boolean;\n    proxyUrl?: string;\n    timespanPresets?: TimespanPreset[];\n    colorList?: string[];\n    languages?: [{ label: string, code: string }];\n    refreshDataInterval?: number;\n}\n\nexport interface DatasetApi {\n    name: string;\n    url: string;\n}\n\nexport interface BlacklistedService {\n    serviceId: string;\n    apiUrl: string;\n}\n\nexport interface TimespanPreset {\n    name: string;\n    label: string;\n    timespan: TimespanMomentTemplate;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface ParsedTimespanPreset {\n    name: string;\n    label: string;\n    timespan: Timespan;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface TimespanMomentTemplate {\n    to: string;\n    from: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoolTogglerComponent.html":{"url":"components/BoolTogglerComponent.html","title":"component - BoolTogglerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoolTogglerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/control/src/lib/bool-toggler/bool-toggler.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-bool-toggler\n            \n\n\n\n\n            \n                templateUrl\n                ./bool-toggler.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                tooltip\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onToggled\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/bool-toggler/bool-toggler.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/bool-toggler/bool-toggler.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/bool-toggler/bool-toggler.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onToggled\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/bool-toggler/bool-toggler.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/bool-toggler/bool-toggler.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'n52-bool-toggler',\n    templateUrl: './bool-toggler.component.html'\n})\nexport class BoolTogglerComponent {\n\n    @Input()\n    public value: boolean;\n\n    @Input()\n    public icon: string;\n\n    @Input()\n    public tooltip: string;\n\n    @Output()\n    public onToggled: EventEmitter = new EventEmitter();\n\n    public toggle() {\n        this.onToggled.emit(!this.value);\n    }\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoolTogglerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BufferedTime.html":{"url":"classes/BufferedTime.html","title":"class - BufferedTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  BufferedTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/timeInterval.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeInterval\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bufferInterval\n                            \n                            \n                                    Public\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(timestamp: Date, bufferInterval: number)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/model/internal/timeInterval.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timestamp\n                                                  \n                                                        \n                                                                    Date\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        bufferInterval\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bufferInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bufferInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/timeInterval.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timestamp:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/timeInterval.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class TimeInterval {\n\n}\n\nexport class Timespan extends TimeInterval {\n\n    public from: number;\n\n    public to: number;\n\n    constructor(\n        from: number,\n        to?: number\n    ) {\n        super();\n        this.from = from;\n        if (to) {\n            this.to = to;\n        } else {\n            this.to = from;\n        }\n    }\n\n}\n\nexport class BufferedTime extends TimeInterval {\n    public timestamp: Date;\n    public bufferInterval: number;\n\n    constructor(\n        timestamp: Date,\n        bufferInterval: number\n    ) {\n        super();\n        this.timestamp = timestamp;\n        this.bufferInterval = bufferInterval;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cache.html":{"url":"interfaces/Cache.html","title":"interface - Cache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/caching/src/lib/local-http-cache.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [id: string]:    CachedItem\n\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/caching/src/lib/local-http-cache.ts:11\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { HttpCache } from './model';\n\ninterface CachedItem {\n    expirationTime: number;\n    response: HttpResponse;\n}\n\ninterface Cache {\n    [id: string]: CachedItem;\n}\n\n@Injectable()\nexport class LocalHttpCache extends HttpCache {\n\n    private cache: Cache = {};\n\n    public get(req: HttpRequest): HttpResponse {\n        if (this.cache[req.urlWithParams]) {\n            const expirationTime = this.cache[req.urlWithParams].expirationTime;\n            const currentTime = new Date().getTime();\n            if (expirationTime >= currentTime) {\n                return this.cache[req.urlWithParams].response;\n            } else {\n                delete this.cache[req.urlWithParams];\n            }\n        }\n        return null;\n    }\n\n    public put(req: HttpRequest, expirationTime: number | Date, resp: HttpResponse) {\n        let time;\n        if (expirationTime instanceof Date) {\n            time = expirationTime.getTime();\n        } else {\n            time = new Date().getTime() + expirationTime;\n        }\n        this.cache[req.urlWithParams] = {\n            expirationTime: time,\n            response: resp\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CachedItem.html":{"url":"interfaces/CachedItem.html","title":"interface - CachedItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CachedItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/caching/src/lib/local-http-cache.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expirationTime\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expirationTime\n                                    \n                                \n                                \n                                    \n                                        expirationTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     HttpResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { HttpCache } from './model';\n\ninterface CachedItem {\n    expirationTime: number;\n    response: HttpResponse;\n}\n\ninterface Cache {\n    [id: string]: CachedItem;\n}\n\n@Injectable()\nexport class LocalHttpCache extends HttpCache {\n\n    private cache: Cache = {};\n\n    public get(req: HttpRequest): HttpResponse {\n        if (this.cache[req.urlWithParams]) {\n            const expirationTime = this.cache[req.urlWithParams].expirationTime;\n            const currentTime = new Date().getTime();\n            if (expirationTime >= currentTime) {\n                return this.cache[req.urlWithParams].response;\n            } else {\n                delete this.cache[req.urlWithParams];\n            }\n        }\n        return null;\n    }\n\n    public put(req: HttpRequest, expirationTime: number | Date, resp: HttpResponse) {\n        let time;\n        if (expirationTime instanceof Date) {\n            time = expirationTime.getTime();\n        } else {\n            time = new Date().getTime() + expirationTime;\n        }\n        this.cache[req.urlWithParams] = {\n            expirationTime: time,\n            response: resp\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CachedMapComponent.html":{"url":"classes/CachedMapComponent.html","title":"class - CachedMapComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  CachedMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/cached-map-component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        OnChanges\n                        DoCheck\n                        OnDestroy\n                        OnInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseMaps\n                            \n                            \n                                    Private\n                                _differBaseMaps\n                            \n                            \n                                    Private\n                                _differOverlayMaps\n                            \n                            \n                                    Private\n                                _overlayMaps\n                            \n                            \n                                    Protected\n                                layerControl\n                            \n                            \n                                    Protected\n                                map\n                            \n                            \n                                    Protected\n                                oldBaseLayer\n                            \n                            \n                                    Protected\n                                oldOverlayLayer\n                            \n                            \n                                    Protected\n                                zoomControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addBaseMap\n                            \n                            \n                                    Private\n                                addOverlayMap\n                            \n                            \n                                    Protected\n                                createMap\n                            \n                            \n                                    Private\n                                generateUUID\n                            \n                            \n                                    Public\n                                ngDoCheck\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                removeBaseMap\n                            \n                            \n                                    Private\n                                removeOverlayMap\n                            \n                            \n                                    Private\n                                updateLayerControl\n                            \n                            \n                                    Private\n                                updateZoomControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                baseMaps\n                            \n                            \n                                fitBounds\n                            \n                            \n                                layerControlOptions\n                            \n                            \n                                mapId\n                            \n                            \n                                mapOptions\n                            \n                            \n                                overlayMaps\n                            \n                            \n                                zoomControlOptions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapCache: MapCache, differs: KeyValueDiffers)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapCache\n                                                  \n                                                        \n                                                                    MapCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        differs\n                                                  \n                                                        \n                                                                    KeyValueDiffers\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseMaps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseMaps:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _differBaseMaps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _differBaseMaps:     KeyValueDiffer\n\n                    \n                \n                    \n                        \n                            Type :     KeyValueDiffer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _differOverlayMaps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _differOverlayMaps:     KeyValueDiffer\n\n                    \n                \n                    \n                        \n                            Type :     KeyValueDiffer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _overlayMaps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _overlayMaps:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layerControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layerControl:     L.Control.Layers\n\n                    \n                \n                    \n                        \n                            Type :     L.Control.Layers\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     L.Map\n\n                    \n                \n                    \n                        \n                            Type :     L.Map\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:46\n                            \n                        \n\n                \n                    \n                        The map object.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            oldBaseLayer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldBaseLayer:     L.Control.LayersObject\n\n                    \n                \n                    \n                        \n                            Type :     L.Control.LayersObject\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            oldOverlayLayer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldOverlayLayer:     L.Control.LayersObject\n\n                    \n                \n                    \n                        \n                            Type :     L.Control.LayersObject\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            zoomControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zoomControl:     L.Control.Zoom\n\n                    \n                \n                    \n                        \n                            Type :     L.Control.Zoom\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:51\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addBaseMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addBaseMap(layerOptions?: LayerOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:148\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layerOptions\n                                                        \n                                                                    LayerOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addOverlayMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addOverlayMap(layerOptions: LayerOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layerOptions\n                                                        \n                                                                    LayerOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createMap()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            generateUUID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateUUID()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:123\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngDoCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngDoCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            removeBaseMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeBaseMap(layerOptions: LayerOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:166\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layerOptions\n                                                        \n                                                                    LayerOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            removeOverlayMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeOverlayMap(layerOptions: LayerOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:141\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layerOptions\n                                                        \n                                                                    LayerOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateLayerControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateLayerControl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:173\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateZoomControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateZoomControl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:186\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        baseMaps\n                    \n                    \n                            \n                            Type:    Map\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fitBounds\n                    \n                    \n                            \n                            Type:    L.LatLngBoundsExpression\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layerControlOptions\n                    \n                    \n                            \n                            Type:    L.Control.LayersOptions\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapOptions\n                    \n                    \n                            \n                            Type:    L.MapOptions\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        overlayMaps\n                    \n                    \n                            \n                            Type:    Map\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomControlOptions\n                    \n                    \n                            \n                            Type:    L.Control.ZoomOptions\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/cached-map-component.ts:38\n                            \n                        \n            \n        \n\n\n\n\n    \n\n\n    \n        import { DoCheck, Input, KeyValueDiffer, KeyValueDiffers, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport * as L from 'leaflet';\n\nimport { MapCache } from './map-cache.service';\nimport { LayerOptions } from './map-options';\n\nconst DEFAULT_BASE_LAYER_NAME = 'BaseLayer';\nconst DEFAULT_BASE_LAYER_URL = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\nconst DEFAULT_BASE_LAYER_ATTRIBUTION = '&copy; OpenStreetMap contributors';\n\nexport abstract class CachedMapComponent implements OnChanges, DoCheck, OnDestroy, OnInit {\n\n    /**\n     * @input A map with the given ID is created inside this component. This ID can be used outside of the component the\n     * work with the map.\n     *\n     * @memberof MapSelectorComponent\n     */\n    @Input()\n    public mapId: string;\n\n    @Input()\n    public mapOptions: L.MapOptions;\n\n    @Input()\n    public fitBounds: L.LatLngBoundsExpression;\n\n    @Input()\n    public overlayMaps: Map;\n\n    @Input()\n    public baseMaps: Map;\n\n    @Input()\n    public layerControlOptions: L.Control.LayersOptions;\n\n    @Input()\n    public zoomControlOptions: L.Control.ZoomOptions;\n\n    /**\n     * The map object.\n     *\n     * @protected\n     * @memberof MapSelectorComponent\n     */\n    protected map: L.Map;\n\n    protected oldOverlayLayer: L.Control.LayersObject = {};\n    protected oldBaseLayer: L.Control.LayersObject = {};\n    protected layerControl: L.Control.Layers;\n    protected zoomControl: L.Control.Zoom;\n\n    private _overlayMaps: Map;\n    private _differOverlayMaps: KeyValueDiffer;\n    private _baseMaps: Map;\n    private _differBaseMaps: KeyValueDiffer;\n\n    constructor(\n        protected mapCache: MapCache,\n        protected differs: KeyValueDiffers\n    ) {\n        this._differOverlayMaps = this.differs.find({}).create();\n        this._differBaseMaps = this.differs.find({}).create();\n    }\n\n    public ngOnInit(): void {\n        if (this.mapId === undefined || this.mapId === null) {\n            this.mapId = this.generateUUID();\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (this.map) {\n            if (changes.fitBounds) {\n                this.map.fitBounds(this.fitBounds);\n            }\n            if (changes.zoomControlOptions) {\n                this.updateZoomControl();\n            }\n        }\n    }\n\n    public ngDoCheck(): void {\n        if (this._differOverlayMaps) {\n            const changes = this._differOverlayMaps.diff(this.overlayMaps);\n            if (changes) {\n                changes.forEachRemovedItem((e) => this.removeOverlayMap(e.previousValue));\n                changes.forEachAddedItem((e) => this.addOverlayMap(e.currentValue));\n                this.updateLayerControl();\n            }\n        }\n        if (this._differBaseMaps) {\n            const changes = this._differBaseMaps.diff(this.baseMaps);\n            if (changes) {\n                changes.forEachRemovedItem((e) => this.removeBaseMap(e.previousValue));\n                changes.forEachAddedItem((e) => this.addBaseMap(e.currentValue));\n                this.updateLayerControl();\n            }\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.map.remove();\n    }\n\n    protected createMap(): void {\n        if (!this.mapOptions || this.zoomControlOptions) { this.mapOptions = { zoomControl: false }; }\n        this.map = L.map(this.mapId, this.mapOptions);\n        this.mapCache.setMap(this.mapId, this.map);\n        if (this.baseMaps && this.baseMaps.size > 0) {\n            this.baseMaps.forEach((entry, key) => this.addBaseMap(entry));\n        } else {\n            this.addBaseMap();\n        }\n        if (this.overlayMaps) { this.overlayMaps.forEach((entry, key) => this.addOverlayMap(entry)); }\n        this.updateZoomControl();\n        this.updateLayerControl();\n        if (this.fitBounds) {\n            this.map.fitBounds(this.fitBounds);\n        }\n    }\n\n    private generateUUID(): string {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n    }\n\n    private addOverlayMap(layerOptions: LayerOptions) {\n        if (this.map) {\n            if (!this.oldOverlayLayer.hasOwnProperty[layerOptions.label]) {\n                this.oldOverlayLayer[layerOptions.label] = layerOptions.layer;\n                if (layerOptions.visible) { layerOptions.layer.addTo(this.map); }\n            }\n        }\n    }\n\n    private removeOverlayMap(layerOptions: LayerOptions) {\n        if (this.oldOverlayLayer.hasOwnProperty(layerOptions.label)) {\n            this.map.removeLayer(this.oldOverlayLayer[layerOptions.label]);\n            delete this.oldOverlayLayer[layerOptions.label];\n        }\n    }\n\n    private addBaseMap(layerOptions?: LayerOptions) {\n        if (this.map) {\n            if (!this.baseMaps || this.baseMaps.size === 0) {\n                layerOptions = {\n                    label: DEFAULT_BASE_LAYER_NAME,\n                    visible: true,\n                    layer: L.tileLayer(DEFAULT_BASE_LAYER_URL, {\n                        attribution: DEFAULT_BASE_LAYER_ATTRIBUTION\n                    })\n                };\n            }\n            if (!this.oldBaseLayer.hasOwnProperty[layerOptions.label]) {\n                this.oldBaseLayer[layerOptions.label] = layerOptions.layer;\n                if (layerOptions.visible) { layerOptions.layer.addTo(this.map); }\n            }\n        }\n    }\n\n    private removeBaseMap(layerOptions: LayerOptions) {\n        if (this.oldBaseLayer.hasOwnProperty(layerOptions.label)) {\n            this.map.removeLayer(this.oldBaseLayer[layerOptions.label]);\n            delete this.oldBaseLayer[layerOptions.label];\n        }\n    }\n\n    private updateLayerControl() {\n        if (this.map) {\n            if (this.layerControl) {\n                this.map.removeControl(this.layerControl);\n            }\n            if (this.layerControlOptions\n                && (Object.keys(this.oldBaseLayer).length > 1 || Object.keys(this.oldOverlayLayer).length > 0)) {\n                this.layerControl =\n                    L.control.layers(this.oldBaseLayer, this.oldOverlayLayer, this.layerControlOptions).addTo(this.map);\n            }\n        }\n    }\n\n    private updateZoomControl() {\n        if (this.zoomControl) { this.map.removeControl(this.zoomControl); }\n        if (this.zoomControlOptions) {\n            this.zoomControl = L.control.zoom(this.zoomControlOptions).addTo(this.map);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CachingInterceptor.html":{"url":"injectables/CachingInterceptor.html","title":"injectable - CachingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CachingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/caching/src/lib/cache-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: HttpCache, ongoingCache: OnGoingHttpCache)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/caching/src/lib/cache-interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                    HttpCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ongoingCache\n                                                  \n                                                        \n                                                                    OnGoingHttpCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, metadata: HttpServiceMetadata, next: HttpServiceHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/cache-interceptor.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        metadata\n                                                        \n                                                                    HttpServiceMetadata\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpServiceHandler\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/share';\n\nimport { HttpEvent, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpServiceHandler, HttpServiceInterceptor, HttpServiceMetadata } from '@helgoland/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { HttpCache, OnGoingHttpCache } from './model';\n\n@Injectable()\nexport class CachingInterceptor implements HttpServiceInterceptor {\n    constructor(\n        protected cache: HttpCache,\n        protected ongoingCache: OnGoingHttpCache\n    ) { }\n\n    public intercept(\n        req: HttpRequest, metadata: HttpServiceMetadata, next: HttpServiceHandler\n    ): Observable> {\n\n        // Before doing anything, it's important to only cache GET requests.\n        // Skip this interceptor if the request method isn't GET.\n        if (req.method !== 'GET') {\n            return next.handle(req, metadata);\n        }\n\n        if (metadata.forceUpdate) {\n            return next.handle(req, metadata);\n        }\n\n        // First, check the cache to see if this request exists.\n        const cachedResponse = this.cache.get(req);\n        if (cachedResponse) {\n            // A cached response exists. Serve it instead of forwarding\n            // the request to the next handler.\n            return Observable.of(cachedResponse);\n        }\n\n        // check if the same request is still in the pipe\n        if (this.ongoingCache.has(req)) {\n            return this.ongoingCache.observe(req);\n        } else {\n            // No cached response exists. Go to the network, and cache\n            // the response when it arrives.\n            return new Observable>((observer: Observer>) => {\n                const share = next.handle(req, metadata).share();\n                share.subscribe((res) => {\n                    if (res instanceof HttpResponse) {\n                        this.cache.put(req, metadata.expirationTime, res);\n                        this.ongoingCache.clear(req);\n                        observer.next(res);\n                        observer.complete();\n                    }\n                }, (error) => {\n                    observer.error(error);\n                    observer.complete();\n                });\n                this.ongoingCache.set(req, share);\n            });\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/category.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\n\nexport interface Category extends Parameter {\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CollectionMetadata.html":{"url":"interfaces/CollectionMetadata.html","title":"interface - CollectionMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CollectionMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/response.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        limit\n                                \n                                \n                                        offset\n                                \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Id {\n    id: string;\n    href: string;\n}\n\nexport interface EventingEvent extends Id {\n    label: string;\n    eventType: Id;\n    notificationLevel: Id;\n    publication: Id;\n    subscription: Id;\n    timestamp: number;\n    timestampCreated: number;\n    data?: {\n        eventTrigger: {\n            code: number;\n            label: string;\n            threshold: number;\n            thresholdUnit: string;\n        }\n        previousTimestamp: number;\n        previousValue: number;\n        unit: string;\n        value: number;\n    };\n}\n\nexport interface EventingEventResults {\n    data: EventingEvent[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingSubscription extends Id {\n    deliveryMethod: Id;\n    template: EventingTemplate;\n    user: Id;\n}\n\nexport interface EventingSubscriptionResults {\n    data: EventingSubscription[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingTemplate extends Id {\n    label: string;\n    publication: Id;\n}\n\nexport interface CollectionMetadata {\n    limit: number;\n    offset: number;\n    total: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorSelectorComponent.html":{"url":"components/ColorSelectorComponent.html","title":"component - ColorSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/modification/src/lib/color-selector/color-selector.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-color-selector\n            \n\n\n\n\n            \n                templateUrl\n                ./color-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                colorList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onColorChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/color-selector/color-selector.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        colorList\n                    \n                    \n                            \n                            Type:    string[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/color-selector/color-selector.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onColorChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/color-selector/color-selector.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'n52-color-selector',\n    templateUrl: './color-selector.component.html'\n})\nexport class ColorSelectorComponent {\n\n    @Input()\n    public color: string;\n\n    @Input()\n    public colorList: string[];\n\n    @Output()\n    public onColorChange: EventEmitter = new EventEmitter();\n\n}\n\n    \n\n    \n        \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ColorService.html":{"url":"injectables/ColorService.html","title":"injectable - ColorService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ColorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/color/color.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getColor\n                            \n                            \n                                    Private\n                                getRandomColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getColor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/color/color.service.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getRandomColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRandomColor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/color/color.service.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ColorService {\n\n    public getColor(): string {\n        return this.getRandomColor();\n    }\n\n    private getRandomColor(): string {\n        const letters = '0123456789ABCDEF';\n        let color = '#';\n        for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/D3GraphOptions.html":{"url":"interfaces/D3GraphOptions.html","title":"interface - D3GraphOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  D3GraphOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/d3/src/lib/model/d3-graph-options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        axisType\n                                \n                                \n                                        dotted\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        axisType\n                                    \n                                \n                                \n                                    \n                                        axisType:     D3AxisType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     D3AxisType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dotted\n                                    \n                                \n                                \n                                    \n                                        dotted:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { D3AxisType } from './d3-axis-type';\n\nexport interface D3GraphOptions {\n    axisType: D3AxisType;\n    dotted: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/D3OverviewTimeseriesGraphComponent.html":{"url":"components/D3OverviewTimeseriesGraphComponent.html","title":"component - D3OverviewTimeseriesGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  D3OverviewTimeseriesGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n                AfterViewInit\n                HasLoadableContent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-d3-overview-timeseries-graph\n            \n\n            \n                styleUrls\n                d3-overview-timeseries-graph.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./d3-overview-timeseries-graph.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Public\n                                isContentLoading\n                            \n                            \n                                    Public\n                                overviewTimespan\n                            \n                            \n                                    Public\n                                timespan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateOverviewRange\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                onGraphLoading\n                            \n                            \n                                    Public\n                                timeSpanChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                datasetIds\n                            \n                            \n                                datasetOptions\n                            \n                            \n                                graphOptions\n                            \n                            \n                                rangefactor\n                            \n                            \n                                timeInterval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onContentLoading\n                            \n                            \n                                onLoading\n                            \n                            \n                                onTimespanChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(timeSrvc: Time, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeSrvc\n                                                  \n                                                        \n                                                                    Time\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        datasetIds\n                    \n                    \n                            \n                            Type:    string[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        datasetOptions\n                    \n                    \n                            \n                            Type:    Map\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        graphOptions\n                    \n                    \n                            \n                            Type:    D3PlotOptions\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rangefactor\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        timeInterval\n                    \n                    \n                            \n                            Type:    TimeInterval\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onContentLoading\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLoading\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onTimespanChanged\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            calculateOverviewRange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calculateOverviewRange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onGraphLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onGraphLoading(loading: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeSpanChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        timeSpanChanged(timespan: Timespan)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        init:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isContentLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isContentLoading:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            overviewTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        overviewTimespan:     Timespan\n\n                    \n                \n                    \n                        \n                            Type :     Timespan\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timespan:     Timespan\n\n                    \n                \n                    \n                        \n                            Type :     Timespan\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/d3-overview-timeseries-graph/d3-overview-timeseries-graph.component.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { DatasetOptions, HasLoadableContent, Mixin, Time, TimeInterval, Timespan } from '@helgoland/core';\n\nimport { D3PlotOptions } from '../model/d3-plot-options';\n\n@Component({\n    selector: 'n52-d3-overview-timeseries-graph',\n    templateUrl: './d3-overview-timeseries-graph.component.html',\n    styleUrls: ['./d3-overview-timeseries-graph.component.scss']\n})\n@Mixin([HasLoadableContent])\nexport class D3OverviewTimeseriesGraphComponent implements OnChanges, AfterViewInit, HasLoadableContent {\n\n    @Input()\n    public datasetIds: string[];\n\n    @Input()\n    public datasetOptions: Map;\n\n    @Input()\n    public graphOptions: D3PlotOptions;\n\n    @Input()\n    public timeInterval: TimeInterval;\n\n    @Input()\n    public rangefactor: number;\n\n    @Output()\n    public onTimespanChanged: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onLoading: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onContentLoading: EventEmitter = new EventEmitter();\n\n    public isContentLoading: (loading: boolean) => void;\n\n    public overviewTimespan: Timespan;\n    public timespan: Timespan;\n\n    private init = false;\n\n    constructor(\n        protected timeSrvc: Time,\n        protected cd: ChangeDetectorRef\n    ) {\n        if (this.graphOptions) {\n            this.graphOptions.overview = true;\n        } else {\n            this.graphOptions = { overview: true };\n        }\n    }\n\n    public ngAfterViewInit(): void {\n        this.rangefactor = this.rangefactor || 1;\n        this.calculateOverviewRange();\n        this.init = true;\n        this.cd.detectChanges();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.timeInterval && this.init) {\n            this.calculateOverviewRange();\n        }\n    }\n\n    public timeSpanChanged(timespan: Timespan) {\n        this.onTimespanChanged.emit(timespan);\n    }\n\n    public onGraphLoading(loading: boolean) {\n        this.isContentLoading(loading);\n    }\n\n    private calculateOverviewRange() {\n        const timespan = this.timeSrvc.createTimespanOfInterval(this.timeInterval);\n        this.timespan = timespan;\n        this.overviewTimespan = this.timeSrvc.getBufferedTimespan(timespan, this.rangefactor);\n    }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'D3OverviewTimeseriesGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/D3PlotOptions.html":{"url":"interfaces/D3PlotOptions.html","title":"interface - D3PlotOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  D3PlotOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/d3/src/lib/model/d3-plot-options.ts\n        \n\n            \n                Description\n            \n            \n                Plot options for D3 component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        generalizeAllways\n                                \n                                \n                                            Optional\n                                        grid\n                                \n                                \n                                            Optional\n                                        hoverable\n                                \n                                \n                                            Optional\n                                        overview\n                                \n                                \n                                            Optional\n                                        showReferenceValues\n                                \n                                \n                                            Optional\n                                        togglePanZoom\n                                \n                                \n                                            Optional\n                                        yaxis\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        generalizeAllways\n                                    \n                                \n                                \n                                    \n                                        generalizeAllways:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grid\n                                    \n                                \n                                \n                                    \n                                        grid:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hoverable\n                                    \n                                \n                                \n                                    \n                                        hoverable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overview\n                                    \n                                \n                                \n                                    \n                                        overview:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showReferenceValues\n                                    \n                                \n                                \n                                    \n                                        showReferenceValues:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        togglePanZoom\n                                    \n                                \n                                \n                                    \n                                        togglePanZoom:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yaxis\n                                    \n                                \n                                \n                                    \n                                        yaxis:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface D3PlotOptions {\n    showReferenceValues?: boolean;\n    generalizeAllways?: boolean;\n    togglePanZoom?: boolean;\n    yaxis?: boolean;\n    grid?: boolean;\n    hoverable?: boolean;\n    overview?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/D3SelectionRange.html":{"url":"classes/D3SelectionRange.html","title":"class - D3SelectionRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  D3SelectionRange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/d3/src/lib/model/d3-selection-range.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                from\n                            \n                            \n                                    Public\n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            from\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        from:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/model/d3-selection-range.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            to\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        to:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/d3/src/lib/model/d3-selection-range.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class D3SelectionRange {\n    public from: number;\n    public to: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        referenceValues\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        referenceValues\n                                    \n                                \n                                \n                                    \n                                        referenceValues:     ReferenceValues\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ReferenceValues\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IDataEntry { }\n\nexport interface Data {\n    values: T[];\n    referenceValues: ReferenceValues;\n}\n\nexport class ReferenceValues {\n    [key: string]: T[];\n}\n\nexport interface TimeValueEntry extends IDataEntry {\n    timestamp: number;\n    value: number;\n}\n\nexport interface LocatedTimeValueEntry extends TimeValueEntry {\n    geometry: GeoJSON.Point;\n}\n\nexport interface ProfileDataEntry extends IDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n}\n\nexport interface LocatedProfileDataEntry extends ProfileDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n    geometry: GeoJSON.GeoJsonObject;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataConst.html":{"url":"interfaces/DataConst.html","title":"interface - DataConst","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataConst\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/d3/src/lib/d3-timeseries-graph/d3-timeseries-graph.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    IDataset\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     Data<>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Data<>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    IterableDiffers,\n    Output,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    ColorService,\n    Data,\n    DatasetApiInterface,\n    DatasetOptions,\n    DatasetPresenterComponent,\n    IDataset,\n    InternalIdHandler,\n    MinMaxRange,\n    Time,\n    Timeseries,\n    Timespan,\n} from '@helgoland/core';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { D3PlotOptions } from '../model/d3-plot-options';\n\ninterface DataEntry {\n    yDiagCoord?: number;\n    timestamp?: number;\n    xDiagMin?: number;\n    xDiagMax?: number;\n    yDiagMin?: number;\n    yDiagMax?: number;\n    xDiagCoord?: number;\n}\n\ninterface HighlightDataset {\n    id: string;\n    change: boolean;\n}\n\ninterface YScale {\n    buffer: number;\n    yScale: d3.ScaleLinear;\n}\n\ninterface YRanges {\n    uom: string;\n    range: MinMaxRange;\n    zeroBased: boolean;\n    ids: string[];\n    first?: boolean;\n    yScale?: d3.ScaleLinear;\n    offset?: number;\n}\n\ninterface InternalDataEntry {\n    internalId: string;\n    color: string;\n    data: [number, number][];\n    points: {\n        fillColor: string\n    };\n    lines: {\n        lineWidth: number;\n        pointRadius: number;\n    };\n    bars: {\n        lineWidth: number;\n    };\n    axisOptions: {\n        uom: string;\n        label: string;\n        zeroBased: boolean;\n        yAxisRange: MinMaxRange;\n    };\n    visible: boolean;\n}\n\ninterface DataYRange {\n    uom: string;\n    range?: MinMaxRange;\n    id: string;\n    zeroBasedYAxis: boolean;\n}\n\ninterface DataConst extends IDataset {\n    data?: Data;\n}\n\n@Component({\n    selector: 'n52-d3-timeseries-graph',\n    templateUrl: './d3-timeseries-graph.component.html',\n    styleUrls: ['./d3-timeseries-graph.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class D3TimeseriesGraphComponent\n    extends DatasetPresenterComponent\n    implements AfterViewInit {\n\n    @Input()\n    // difference to timespan/timeInterval --> if brush, then this is the timespan of the main-diagram\n    public mainTimeInterval: Timespan;\n\n    @Output()\n    public onSelectId: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onContentLoading: EventEmitter = new EventEmitter();\n\n    @ViewChild('d3timeseries')\n    public d3Elem: ElementRef;\n\n    // set zoom limit --> can be adapted to needs\n    private config = {\n        time: {\n            zoomLimit: 10800000  // 3 hour ((3 * 3600) * 1000) limitation\n        }\n    };\n\n    private preparedData = Array(); // : DataSeries[]\n    private mousedownBrush: boolean;\n    private rawSvg: any; // d3.Selection;\n    private graph: any;\n    private graphBody: any;\n    private dragRect: any;\n    private dragRectG: any;\n    private xAxisRange: Timespan; // x domain range\n    private xAxisRangeOrigin: any; // x domain range\n    private xAxisRangePan: [number, number]; // x domain range\n    private yRangesEachUom: YRanges[]; // y array of objects containing ranges for each uom\n    private dataYranges: DataYRange[]; // y array of objects containing ranges of all datasets\n    private ypos: any; // y array of objects containing ranges of all datasets\n    private idxOfPos = 0;\n\n    private height: number;\n    private width: number;\n    private margin = {\n        top: 10,\n        right: 10,\n        bottom: 40,\n        left: 40\n    };\n    private maxLabelwidth = 0;\n    private xScaleBase: d3.ScaleLinear; // calculate diagram coord of x value\n    private yScaleBase: d3.ScaleLinear; // calculate diagram coord of y value\n    private background: any;\n    private focusG: any;\n    private highlightFocus: any;\n    private focuslabelTime: any;\n    private bufferSum: number;\n    private labelTimestamp: number[];\n\n    private dragging: boolean;\n    private dragStart: [number, number];\n    private dragCurrent: [number, number];\n\n    private draggingMove: boolean;\n    private dragMoveStart: [number, number];\n    private dragMoveRange: [number, number];\n\n    private addLineWidth = 2; // value added to linewidth\n\n    // default plot options\n    private plotOptions: D3PlotOptions = {\n        showReferenceValues: false,\n        generalizeAllways: true,\n        togglePanZoom: true,\n        hoverable: true,\n        grid: true,\n        yaxis: true,\n        overview: false\n    };\n\n    private datasetMap: Map = new Map();\n\n    private loadingCounter = 0;\n    private currentTimeId: string;\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time,\n        private colorService: ColorService\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc);\n    }\n\n    public ngAfterViewInit(): void {\n        this.currentTimeId = this.uuidv4();\n\n        this.rawSvg = d3.select(this.d3Elem.nativeElement)\n            .append('svg')\n            .attr('width', '100%')\n            .attr('height', '100%');\n\n        this.graph = this.rawSvg\n            .append('g')\n            .attr('transform', 'translate(' + (this.margin.left + this.maxLabelwidth) + ',' + this.margin.top + ')');\n\n        this.mousedownBrush = false;\n        this.dataYranges = [];\n        this.xAxisRangeOrigin = [];\n    }\n\n    public reloadData(): void {\n        // not implemented yet\n    }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getSingleTimeseries(id, url).subscribe(\n            (timeseries) => this.loadAddedDataset(timeseries),\n            (error) => {\n                this.api.getDataset(id, url).subscribe(\n                    (dataset) => this.loadAddedDataset(dataset),\n                );\n            }\n        );\n    }\n    protected removeDataset(internalId: string): void {\n        this.dataYranges = [];\n        this.xAxisRangeOrigin = [];\n        this.datasetMap.delete(internalId);\n        let spliceIdx = this.preparedData.findIndex((entry) => entry.internalId === internalId);\n        if (spliceIdx >= 0) {\n            this.preparedData.splice(spliceIdx, 1);\n            if (this.preparedData.length  {\n                    this.processData(entry);\n                });\n            }\n        }\n    }\n    protected setSelectedId(internalId: string): void {\n        const tsData = this.preparedData.find((e) => e.internalId === internalId);\n        if (!tsData.selected || tsData.selected === undefined) {\n            tsData.selected = true;\n            tsData.lines.lineWidth += this.addLineWidth;\n            tsData.lines.pointRadius += this.addLineWidth;\n            tsData.bars.lineWidth += this.addLineWidth;\n        }\n        this.plotGraph();\n    }\n    protected removeSelectedId(internalId: string): void {\n        const tsData = this.preparedData.find((e) => e.internalId === internalId);\n        if (tsData.selected || tsData.selected === undefined) {\n            tsData.selected = false;\n            tsData.lines.lineWidth -= this.addLineWidth;\n            tsData.lines.pointRadius -= this.addLineWidth;\n            tsData.bars.lineWidth -= this.addLineWidth;\n        }\n        this.plotGraph();\n    }\n    protected graphOptionsChanged(options: D3PlotOptions): void {\n\n        Object.assign(this.plotOptions, options);\n        if (this.rawSvg && this.yRangesEachUom) {\n            this.plotGraph();\n        }\n    }\n    protected datasetOptionsChanged(internalId: string, options: DatasetOptions, firstChange: boolean) {\n        if (!firstChange && this.datasetMap.has(internalId)) {\n            this.loadDataset(this.datasetMap.get(internalId));\n        }\n    }\n    protected timeIntervalChanges(): void {\n        this.datasetMap.forEach((dataset) => {\n            this.loadDataset(dataset);\n        });\n    }\n    protected onResize(): void {\n        this.plotGraph();\n    }\n\n    private changeTime(from: number, to: number) {\n        if (to - from (dataset.id, dataset.url, buffer,\n                {\n                    format: 'flot',\n                    expanded: this.plotOptions.showReferenceValues === true,\n                    generalize: this.plotOptions.generalizeAllways || datasetOptions.generalize\n                }\n            ).subscribe(\n                (result) => {\n                    this.datasetMap.get(dataset.internalId).data = result;\n                    this.prepareTsData(dataset).subscribe(() => {\n                    });\n                },\n                (error) => this.onError(error),\n                () => {\n                    this.onCompleteLoadingData();\n                }\n            );\n        }\n    }\n\n    private onCompleteLoadingData() {\n        this.loadingCounter--;\n        if (this.loadingCounter === 0) { this.isContentLoadingD3(false); }\n    }\n\n    /**\n     * Function to prepare each dataset for the graph and adding it to an array of datasets.\n     * @param dataset {IDataset} Object of the whole dataset\n     */\n    private prepareTsData(dataset: IDataset): Observable { // , data: Data\n        return Observable.create((observer: Observer) => {\n            const datasetIdx = this.preparedData.findIndex((e) => e.internalId === dataset.internalId);\n            const styles = this.datasetOptions.get(dataset.internalId);\n            const data = this.datasetMap.get(dataset.internalId).data;\n\n            // TODO: change uom for testing\n            // if (this.preparedData.length > 0) {\n            //     dataset.uom = 'mc';\n            // }\n\n            // generate random color, if color is not defined\n            if (styles.color === undefined) {\n                styles.color = this.colorService.getColor();\n            }\n\n\n            // end of check for datasets\n            const dataEntry: InternalDataEntry = {\n                internalId: dataset.internalId,\n                color: styles.color,\n                data: styles.visible ? data.values : [],\n                points: {\n                    fillColor: styles.color\n                },\n                lines: {\n                    lineWidth: styles.lineWidth,\n                    pointRadius: styles.pointRadius\n                },\n                bars: {\n                    lineWidth: styles.lineWidth\n                },\n                axisOptions: {\n                    uom: dataset.uom,\n                    label: dataset.label,\n                    zeroBased: styles.zeroBasedYAxis,\n                    yAxisRange: styles.yAxisRange\n                },\n                visible: styles.visible\n            };\n            // alternative linewWidth = this.plotOptions.selected.includes(dataset.uom)\n            if (this.selectedDatasetIds.indexOf(dataset.internalId) >= 0) {\n                dataEntry.lines.lineWidth += this.addLineWidth;\n                dataEntry.lines.pointRadius += this.addLineWidth;\n                dataEntry.bars.lineWidth += this.addLineWidth;\n            }\n\n            if (datasetIdx >= 0) {\n                this.preparedData[datasetIdx] = dataEntry;\n            } else {\n                this.preparedData.push(dataEntry);\n            }\n            this.addReferenceValueData(dataset.internalId, styles, data, dataset.uom);\n            this.processData(dataEntry);\n            this.plotGraph();\n        });\n    }\n\n    /**\n     * Function to add referencevaluedata to the dataset (e.g. mean).\n     * @param internalId {String} String with the id of a dataset\n     * @param styles {DatasetOptions} Object containing information for dataset styling\n     * @param data {Data} Array of Arrays containing the measurement-data of the dataset\n     * @param uomO {String} String with the uom of a dataset\n     */\n    private addReferenceValueData(internalId: string, styles: DatasetOptions, data: Data, uomO: string) {\n        this.preparedData = this.preparedData.filter((entry) => {\n            return !entry.internalId.startsWith('ref' + internalId);\n        });\n        if (this.plotOptions.showReferenceValues) {\n            styles.showReferenceValues.forEach((refValue) => {\n                const refDataEntry = {\n                    internalId: 'ref' + internalId + refValue.id,\n                    color: refValue.color,\n                    data: data.referenceValues[refValue.id],\n                    points: {\n                        fillColor: refValue.color\n                    },\n                    lines: {\n                        lineWidth: 1\n                    },\n                    axisOptions: {\n                        uom: uomO\n                    }\n                };\n                this.preparedData.push(refDataEntry);\n            });\n        }\n    }\n\n    /**\n     * Function that processes the data to calculate y axis range of each dataset.\n     * @param dataEntry {DataEntry} Object containing dataset related data.\n     * @param internalId {String} String with the ID of a dataset.\n     */\n    private processData(dataEntry: InternalDataEntry) {\n        let calculatedRange: MinMaxRange;\n        let predefinedRange = dataEntry.axisOptions.yAxisRange;\n\n        // get min and max value of data\n        const dataExtent = d3.extent(dataEntry.data, (datum, index, array) => {\n            return datum[1]; // datum[0] = timestamp -- datum[1] = value\n        });\n\n        // let outOfrange = false;\n        let setDataExtent = false;\n\n        // calculate out of predefined range\n        if (predefinedRange && !this.graphOptions.overview) {\n            if (predefinedRange.min > predefinedRange.max) {\n                calculatedRange = { min: predefinedRange.max, max: predefinedRange.min };\n            } else {\n                calculatedRange = predefinedRange;\n            }\n            if (predefinedRange.min > dataExtent[1] || predefinedRange.max = 0) {\n                calculatedRange.min = 0;\n            }\n        }\n\n        const newDatasetIdx = this.preparedData.findIndex((e) => e.internalId === dataEntry.internalId);\n\n        // set range, uom and id for each dataset\n        if (dataEntry.visible) {\n            this.dataYranges[newDatasetIdx] = {\n                uom: dataEntry.axisOptions.uom,\n                id: dataEntry.internalId,\n                zeroBasedYAxis: dataEntry.axisOptions.zeroBased\n            };\n            if (isFinite(calculatedRange.min) && isFinite(calculatedRange.max)) {\n                this.dataYranges[newDatasetIdx].range = calculatedRange;\n            }\n        } else {\n            this.dataYranges[newDatasetIdx] = null;\n        }\n\n        // set range and array of IDs for each uom to generate y-axis later on\n        this.yRangesEachUom = [];\n        this.dataYranges.forEach((obj) => {\n            if (obj !== null) {\n                let idx = this.yRangesEachUom.findIndex((e) => e.uom === obj.uom);\n                let yrangeObj: YRanges = {\n                    uom: obj.uom,\n                    range: obj.range,\n                    ids: [obj.id],\n                    zeroBased: obj.zeroBasedYAxis\n                };\n\n                if (idx >= 0) {\n                    if (this.yRangesEachUom[idx].range) {\n                        if (obj.range) {\n                            if (this.yRangesEachUom[idx].range.min > obj.range.min && !isNaN(obj.range.min)) {\n                                this.yRangesEachUom[idx].range.min = obj.range.min;\n                            }\n                            if (this.yRangesEachUom[idx].range.max  {\n            entry.first = (this.yScaleBase === null);\n            entry.offset = this.bufferSum;\n\n            let yAxisResult = this.drawYaxis(entry);\n            if (this.yScaleBase === null) {\n                this.yScaleBase = yAxisResult.yScale;\n            } else {\n                this.bufferSum = yAxisResult.buffer;\n            }\n            entry.yScale = yAxisResult.yScale;\n        });\n\n        if (!this.yScaleBase) {\n            return;\n        }\n\n        // draw x and y axis\n        this.drawXaxis(this.bufferSum);\n        this.preparedData.forEach((entry) => {\n            this.drawGraphLine(entry);\n        });\n\n        // #####################################################\n        // create background rect\n        if (!this.plotOptions.overview) {\n            // execute when it is not an overview diagram\n            this.background = this.graph.append('svg:rect')\n                .attr('width', this.width - this.bufferSum)\n                .attr('height', this.height)\n                .attr('fill', 'none')\n                .attr('stroke', 'none')\n                .attr('pointer-events', 'all')\n                .attr('transform', 'translate(' + this.bufferSum + ', 0)');\n\n            // mouse events hovering\n            if (this.plotOptions.hoverable) {\n                this.background\n                    .on('mousemove.focus', this.mousemoveHandler)\n                    .on('mouseout.focus', this.mouseoutHandler);\n\n                // line inside graph\n                this.focusG = this.graph.append('g');\n                this.highlightFocus = this.focusG.append('svg:line')\n                    .attr('class', 'mouse-focus-line')\n                    .attr('x2', '0')\n                    .attr('y2', '0')\n                    .attr('x1', '0')\n                    .attr('y1', '0')\n                    .style('stroke', 'black')\n                    .style('stroke-width', '1px');\n\n                this.preparedData.forEach((entry) => {\n                    // label inside graph\n                    entry.focusLabelRect = this.focusG.append('svg:rect')\n                        .attr('class', 'mouse-focus-label')\n                        .style('fill', 'white')\n                        .style('stroke', 'none')\n                        .style('pointer-events', 'none');\n                    entry.focusLabel = this.focusG.append('svg:text')\n                        .attr('class', 'mouse-focus-label')\n                        .style('pointer-events', 'none')\n                        .style('fill', entry.color)\n                        .style('font-weight', 'lighter');\n\n                    this.focuslabelTime = this.focusG.append('svg:text')\n                        .style('pointer-events', 'none')\n                        .attr('class', 'mouse-focus-time');\n                });\n            }\n\n            if (this.plotOptions.togglePanZoom === false) {\n                this.background\n                    .call(d3.zoom()\n                        .on('start', this.zoomStartHandler)\n                        .on('zoom', this.zoomHandler)\n                        .on('end', this.zoomEndHandler)\n                    );\n            } else {\n                this.background\n                    .call(d3.drag()\n                        .on('start', this.panStartHandler)\n                        .on('drag', this.panMoveHandler)\n                        .on('end', this.panEndHandler));\n            }\n        } else {\n            // execute when it is overview diagram\n            let interval = this.getXDomainByTimestamp();\n            let overviewTimespanInterval = [interval[0], interval[1]];\n\n            // create brush\n            let brush = d3.brushX()\n                .extent([[0, 0], [this.width, this.height]])\n                .on('end', () => {\n                    // on mouseclick change time after brush was moved\n                    if (this.mousedownBrush) {\n                        let timeByCoord = this.getTimestampByCoord(d3.event.selection[0], d3.event.selection[1]);\n                        this.changeTime(timeByCoord[0], timeByCoord[1]);\n                    }\n                    this.mousedownBrush = false;\n                });\n\n            // add brush to svg\n            this.background = this.graph.append('g')\n                .attr('width', this.width)\n                .attr('height', this.height)\n                .attr('pointer-events', 'all')\n                .attr('class', 'brush')\n                .call(brush)\n                .call(brush.move, overviewTimespanInterval);\n\n            /**\n             * add event to selection to prevent unnecessary re-rendering of brush\n             * add style of brush selection here\n             * e.g. 'fill' for color,\n             * 'stroke' for borderline-color,\n             * 'stroke-dasharray' for customizing borderline-style\n             */\n            this.background.selectAll('.selection')\n                .attr('stroke', 'none')\n                .on('mousedown', () => {\n                    this.mousedownBrush = true;\n                });\n\n            // do not allow clear selection\n            this.background.selectAll('.overlay')\n                .remove();\n\n            // add event to resizing handle to allow change time on resize\n            this.background.selectAll('.handle')\n                .style('fill', 'red')\n                .style('opacity', 0.3)\n                .attr('stroke', 'none')\n                .on('mousedown', () => {\n                    this.mousedownBrush = true;\n                });\n        }\n    }\n\n    /**\n     * Function that calculates and returns the x diagram coordinate for the brush range\n     * for the overview diagram by the selected time interval of the main diagram.\n     * Calculate to get brush extent when main diagram time interval changes.\n     */\n    private getXDomainByTimestamp() {\n        /**\n         * calculate range of brush with timestamp and not diagram coordinates\n         * formula:\n         * brush_min =\n         * (overview_width / (overview_max - overview_min)) * (brush_min - overview_min)\n         * brus_max =\n         * (overview_width / (overview_max - overview_min)) * (brush_max - overview_min)\n         */\n\n        let minOverviewTimeInterval = this.timespan.from;\n        let maxOverviewTimeInterval = this.timespan.to;\n        let minDiagramTimestamp = this.mainTimeInterval.from;\n        let maxDiagramTimestamp = this.mainTimeInterval.to;\n        let diagramWidth = this.width;\n\n        let diffOverviewTimeInterval = maxOverviewTimeInterval - minOverviewTimeInterval;\n        let divOverviewTimeWidth = diagramWidth / diffOverviewTimeInterval;\n        let minCalcBrush = divOverviewTimeWidth * (minDiagramTimestamp - minOverviewTimeInterval);\n        let maxCalcBrush = divOverviewTimeWidth * (maxDiagramTimestamp - minOverviewTimeInterval);\n\n        return [minCalcBrush, maxCalcBrush];\n    }\n\n    /**\n     * Function that calculates and returns the timestamp for the main diagram calculated\n     * by the selected coordinate of the brush range.\n     * @param minCalcBrush {Number} Number with the minimum coordinate of the selected brush range.\n     * @param maxCalcBrush {Number} Number with the maximum coordinate of the selected brush range.\n     */\n    private getTimestampByCoord(minCalcBrush, maxCalcBrush) {\n        /**\n         * calculate range of brush with timestamp and not diagram coordinates\n         * formula:\n         * minDiagramTimestamp =\n         * ((minCalcBrush / overview_width) * (overview_max - overview_min)) + overview_min\n         * maxDiagramTimestamp =\n         * ((maxCalcBrush / overview_width) * (overview_max - overview_min)) + overview_min\n         */\n\n        let minOverviewTimeInterval = this.timespan.from;\n        let maxOverviewTimeInterval = this.timespan.to;\n        let diagramWidth = this.width;\n\n        let diffOverviewTimeInterval = maxOverviewTimeInterval - minOverviewTimeInterval;\n        let minDiagramTimestamp = ((minCalcBrush / diagramWidth) * diffOverviewTimeInterval) + minOverviewTimeInterval;\n        let maxDiagramTimestamp = ((maxCalcBrush / diagramWidth) * diffOverviewTimeInterval) + minOverviewTimeInterval;\n\n        return [minDiagramTimestamp, maxDiagramTimestamp];\n    }\n\n    /**\n     * Function that returns the tickvalues for the x axis related to the timestep.\n     * @param time {String} String with the information how the time should be visualized in the x axis.\n     * @param range {Array} Array containing the minimum and maximum range.\n     * @param span {Number} Number with the ticksize for the axis generation.\n     */\n    private timeTickValues(time: String, range: any, span: number) {\n        if (time === 'minly') {\n            return d3.timeMinutes(range, new Date(this.xAxisRange.to), span);\n        }\n        if (time === 'hourly') {\n            return d3.timeHours(range, new Date(this.xAxisRange.to), span);\n        }\n        if (time === 'daily') {\n            return d3.timeDay.range(range, new Date(this.xAxisRange.to), span);\n        }\n    }\n\n    /**\n     * Function that draws the x axis to the svg element.\n     * @param bufferXrange {Number} Number with the distance between left edge and the beginning of the graph.\n     */\n    private drawXaxis(bufferXrange: number) {\n        // range for x axis scale\n        this.xScaleBase = d3.scaleLinear()\n            .domain([this.xAxisRange.from, this.xAxisRange.to])\n            .range([bufferXrange, this.width]);\n\n        // calculate range for about 7 ticks on x axis\n        let calcTicks = (((this.xAxisRange.to - this.xAxisRange.from) / 1000) / 7);\n        let hourly = Math.ceil(calcTicks / 3600);\n        let daily = Math.ceil(calcTicks / (3600 * 48));\n\n        if ((calcTicks / 3600)  11) {\n            timeFormatString = '%d %b %H:%M';\n        }\n\n        if (hourly > 47) {\n            timeFormatString = '%d %B';\n            tickSize = (Math.max(1, Math.round(hourly / 12))) * 12;\n        }\n\n        // calculate minimum range dependent on tickSize for UTC // 7200000 (e.g. tickSize = 4 --> every 4 hours)\n        let minRange = this.xAxisRange.from + ((3600000 * tickSize) - (this.xAxisRange.from % (3600000 * tickSize)));\n        // minimum range for UTC+2\n        let minRangeGer = minRange + 3600000 * (tickSize / 2);\n        if ((minRange - 3600000 * (tickSize / 2)) >= this.xAxisRange.from) {\n            minRangeGer = minRange - 3600000 * (tickSize / 2);\n        }\n\n        // calculate tickvalues dependent on tickSize for UTC+2\n        let xAxisGen;\n        if (tickSize >= 1) {\n            xAxisGen = d3.axisBottom(this.xScaleBase)\n                .tickValues(this.timeTickValues(timeString, minRangeGer, tickSize))\n                .tickFormat((d) => {\n                    return d3.timeFormat(timeFormatString)(new Date(d.valueOf()));\n                });\n        } else {\n            timeString = 'minly';\n            xAxisGen = d3.axisBottom(this.xScaleBase)\n                .tickValues(this.timeTickValues(timeString, minRangeGer, 30))\n                .tickFormat((d) => {\n                    return d3.timeFormat(timeFormatString)(new Date(d.valueOf()));\n                });\n        }\n\n        // draw x axis\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(xAxisGen)\n            .selectAll('text')\n            .style('text-anchor', 'middle');\n\n        if (this.plotOptions.grid) {\n            // draw the x grid lines\n            this.graph.append('svg:g')\n                .attr('class', 'grid')\n                .attr('transform', 'translate(0,' + this.height + ')')\n                .call(xAxisGen\n                    .tickSize(-this.height)\n                    .tickFormat(() => '')\n                );\n        }\n\n        // draw upper axis as border\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .call(d3.axisTop(this.xScaleBase).ticks(0).tickSize(0));\n\n        // text label for the x axis\n        this.graph.append('text')\n            .attr('x', (this.width + bufferXrange) / 2)\n            .attr('y', this.height + this.margin.bottom - 5)\n            .style('text-anchor', 'middle')\n            .text('time');\n    }\n\n    /**\n     * Function to draw the y axis for each dataset.\n     * Each uom has its own axis.\n     * @param entry {DataEntry} Object containing a dataset.\n     */\n    private drawYaxis(entry): YScale {\n        let showAxis = (this.plotOptions.yaxis === undefined ? true : this.plotOptions.yaxis);\n        const range = this.getyAxisRange(entry.uom);\n\n        let yMin = range.min;\n        let yMax = range.max;\n\n        // range for y axis scale\n        const rangeOffset = (yMax - yMin) * 0.10;\n        const yScale = d3.scaleLinear()\n            .domain([yMin - rangeOffset, yMax + rangeOffset])\n            .range([this.height, 0]);\n\n        let yAxisGen = d3.axisLeft(yScale).ticks(5);\n        let buffer = 0;\n\n        // only if yAxis should not be visible\n        if (!showAxis) {\n            yAxisGen\n                .tickFormat(() => '')\n                .tickSize(0);\n        }\n\n        // draw y axis\n        const axis = this.graph.append('svg:g')\n            .attr('class', 'y axis')\n            .call(yAxisGen);\n\n        // only if yAxis should be visible\n        if (showAxis) {\n            // draw y axis label\n            const text = this.graph.append('text')\n                .attr('transform', 'rotate(-90)')\n                .attr('dy', '1em')\n                .style('text-anchor', 'middle')\n                .style('fill', 'black')\n                .text(entry.uom);\n\n            const axisWidth = axis.node().getBBox().width + 5 + this.getDimensions(text.node()).h;\n            // if yAxis should not be visible, buffer will be set to 0\n            buffer = (showAxis ? entry.offset + (axisWidth  {\n                    d3.select(k[0])\n                        .attr('fill', 'grey')\n                        .attr('opacity', 0.4);\n                })\n                .on('mouseout', (d, i, k) => {\n                    d3.select(k[0])\n                        .attr('fill', 'white')\n                        .attr('opacity', 0);\n                })\n                .on('mouseup', () => {\n                    this.highlightLine(entry.ids, entry.uom);\n                });\n\n            if (!entry.first) {\n                axisDiv\n                    .attr('x', entry.offset)\n                    .attr('y', 0);\n            } else {\n                axisDiv\n                    .attr('x', 0 - this.margin.left - this.maxLabelwidth)\n                    .attr('y', 0);\n            }\n\n        }\n\n        // draw the y grid lines\n        if (this.datasetIds.length === 1) {\n            this.graph.append('svg:g')\n                .attr('class', 'grid')\n                .call(d3.axisLeft(yScale)\n                    .ticks(5)\n                    .tickSize(-this.width)\n                    .tickFormat(() => '')\n                );\n        }\n\n        return {\n            buffer,\n            yScale\n        };\n    }\n\n    /**\n     * Function to set selected Ids that should be highlighted.\n     * @param ids {Array} Array of Strings containing the Ids.\n     * @param uom {String} String with the uom for the selected Ids\n     */\n    private highlightLine(ids, uom) {\n        let changeFalse: HighlightDataset[] = [];\n        let changeTrue: HighlightDataset[] = [];\n        ids.forEach((ID) => {\n            if (this.selectedDatasetIds.indexOf(ID) >= 0) {\n                changeFalse.push({ id: ID, change: false });\n            }\n            changeTrue.push({ id: ID, change: true });\n        });\n\n        let changeAll = true;\n        if (ids.length === changeFalse.length) {\n            this.changeSelectedIds(changeFalse, true);\n        } else {\n            this.changeSelectedIds(changeTrue, false);\n        }\n    }\n\n    /**\n     * Function that changes state of selected Ids.\n     */\n    private changeSelectedIds(toHighlightDataset: HighlightDataset[], change: boolean) {\n        if (change) {\n            toHighlightDataset.forEach((obj) => {\n                this.removeSelectedId(obj.id);\n                this.selectedDatasetIds.splice(this.selectedDatasetIds.findIndex((entry) => entry === obj.id), 1);\n            });\n        } else {\n            toHighlightDataset.forEach((obj) => {\n                if (this.selectedDatasetIds.indexOf(obj.id)  {\n            if (obj.uom === entry.axisOptions.uom) {\n                return true;\n            } // uom does exist in this.yRangesEachUom\n        });\n\n        if (entry.data.length > 0) {\n            let xScaleBase = this.xScaleBase;\n            if (getYaxisRange !== undefined) {\n                let yScaleBase = getYaxisRange.yScale;\n\n                // #####################################################\n                // create body to clip graph\n                // unique ID generated through the current time (current time when initialized)\n                let querySelectorClip = 'clip' + this.currentTimeId;\n\n                this.graph\n                    .append('svg:clipPath')\n                    .attr('id', querySelectorClip)\n                    .append('svg:rect')\n                    .attr('x', this.bufferSum)\n                    .attr('y', 0)\n                    .attr('width', this.width - this.bufferSum)\n                    .attr('height', this.height);\n\n                // draw grah line\n                this.graphBody = this.graph\n                    .append('g')\n                    .attr('clip-path', 'url(#' + querySelectorClip + ')');\n\n                // create graph line\n                let line = d3.line()\n                    .x((d) => {\n                        d.timestamp = d[0];\n                        const xDiagCoord = xScaleBase(d[0]);\n                        if (xDiagCoord !== NaN) {\n                            d.xDiagCoord = xDiagCoord;\n                            return xDiagCoord;\n                        }\n                    })\n                    .y((d) => {\n                        const yDiagCoord = yScaleBase(d[1]);\n                        if (yDiagCoord !== NaN) {\n                            d.yDiagCoord = yDiagCoord;\n                            return yDiagCoord;\n                        }\n                    })\n                    .curve(d3.curveLinear);\n\n                this.graphBody\n                    .append('svg:path')\n                    .datum(entry.data)\n                    .attr('class', 'line')\n                    .attr('fill', 'none')\n                    .attr('stroke', entry.color)\n                    .attr('stroke-width', entry.lines.lineWidth)\n                    .attr('d', line);\n\n                this.graphBody.selectAll('.dot')\n                    .data(entry.data.filter((d) => d))\n                    .enter().append('circle')\n                    .attr('class', 'dot')\n                    .attr('stroke', entry.color)\n                    .attr('fill', entry.color)\n                    .attr('cx', line.x())\n                    .attr('cy', line.y())\n                    .attr('r', entry.lines.pointRadius);\n            }\n        }\n    }\n\n    /**\n     * Function that shows labeling via mousmove.\n     */\n    private mousemoveHandler = () => {\n        const coords = d3.mouse(this.background.node());\n        this.ypos = [];\n        this.idxOfPos = 0;\n        this.labelTimestamp = [];\n        this.preparedData.forEach((entry, entryIdx) => {\n            const idx = this.getItemForX(coords[0] + this.bufferSum, entry.data);\n            this.showDiagramIndicator(entry, idx, coords[0], entryIdx);\n        });\n        // focus do not overlap each other\n        if (this.ypos !== undefined) {\n            let firstLabel = [];\n            // only push one of the pairs of objects (rectangle and label)\n            this.ypos.forEach((e, i) => {\n                if (i % 2 === 0) {\n                    firstLabel.push(e);\n                }\n            });\n            let yPos = firstLabel.sort((a, b) => a.y - b.y);\n            yPos.forEach((p, i) => {\n                if (i > 0) {\n                    let last = yPos[i - 1].y;\n                    yPos[i].off = Math.max(0, (last + 30) - yPos[i].y);\n                    yPos[i].y += yPos[i].off;\n                }\n            });\n            yPos.sort((a, b) => a.idx - b.idx);\n\n            let c1 = 0;\n            let c2 = 0;\n\n            // d3.selectAll('.mouse-focus-label')\n            d3.selectAll('.focus-visibility')\n                .attr('transform', (d, i) => {\n                    // pairs of 2 objects (rectangle (equal) and label (odd))\n                    if (i > 0) {\n                        c1 = (i - 1) % 2;\n                    }\n                    c2 += c1;\n                    if (yPos[c2] && yPos[c2].off) {\n                        return 'translate(0,' + (5 + yPos[c2].off) + ')';\n                    }\n                });\n        }\n    }\n\n    /**\n     * Function that hides the labeling inside the graph.\n     */\n    private mouseoutHandler = () => {\n        this.hideDiagramIndicator();\n    }\n\n    /**\n     * Function starting the drag handling for the diagram.\n     */\n    private panStartHandler = () => {\n        this.draggingMove = false;\n        this.dragMoveStart = d3.event.x;\n        this.dragMoveRange = [this.xAxisRange.from, this.xAxisRange.to];\n    }\n\n    /**\n     * Function that controlls the panning (dragging) of the graph.\n     */\n    private panMoveHandler = () => {\n        this.draggingMove = true;\n        if (this.dragMoveStart && this.draggingMove) {\n            let diff = -(d3.event.x - d3.event.subject.x);\n            let amountTimestamp = this.dragMoveRange[1] - this.dragMoveRange[0];\n            let ratioTimestampDiagCoord = amountTimestamp / this.width;\n            let newTimeMin = this.dragMoveRange[0] + (ratioTimestampDiagCoord * diff);\n            let newTimeMax = this.dragMoveRange[1] + (ratioTimestampDiagCoord * diff);\n\n            this.xAxisRangePan = [newTimeMin, newTimeMax];\n            this.timespan = { from: this.xAxisRangePan[0], to: this.xAxisRangePan[1] };\n            this.plotGraph();\n        }\n    }\n\n    /**\n     * Function that ends the dragging control.\n     */\n    private panEndHandler = () => {\n        this.changeTime(this.xAxisRangePan[0], this.xAxisRangePan[1]);\n        this.plotGraph();\n        this.dragMoveStart = null;\n        this.draggingMove = false;\n    }\n\n    /**\n     * Function that starts the zoom handling.\n     */\n    private zoomStartHandler = () => {\n        this.dragging = false;\n        this.dragStart = d3.mouse(this.background.node());\n        this.xAxisRangeOrigin.push([this.xAxisRange.from, this.xAxisRange.to]);\n    }\n\n    /**\n     * Function that draws a rectangle when zoom is started and the mouse is moving.\n     */\n    private zoomHandler = () => {\n        this.dragging = true;\n        this.drawDragRectangle();\n    }\n\n    /**\n     * Function that ends the zoom handling and calculates the via zoom selected time interval.\n     */\n    private zoomEndHandler = () => {\n        if (!this.dragStart || !this.dragging) {\n            if (this.xAxisRangeOrigin[0]) {\n                // back to origin range (from - to)\n                this.changeTime(this.xAxisRangeOrigin[0][0], this.xAxisRangeOrigin[0][1]);\n                this.xAxisRangeOrigin = [];\n                this.plotGraph();\n            }\n        } else {\n            let xDomainRange;\n            if (this.dragStart[0]  {\n            domMinArr.push(entry.data.find((elem, index, array) => {\n                if (elem.xDiagCoord) {\n                    if (elem.xDiagCoord >= start) {\n                        return array[index];\n                    }\n                }\n            }));\n            domMaxArr.push(entry.data.find((elem, index, array) => {\n                if (elem.xDiagCoord >= end) {\n                    return array[index];\n                }\n            }));\n        });\n\n        for (let i = 0; i  {\n            return d[0];\n        }).left;\n        return bisectDate(data, index);\n    }\n\n    /**\n     * Function that disables the labeling.\n     */\n    private hideDiagramIndicator() {\n        this.focusG.style('visibility', 'hidden');\n        d3.selectAll('.focus-visibility')\n            .attr('visibility', 'hidden');\n    }\n\n    /**\n     * Function that enables the lableing of each dataset entry.\n     * @param entry {DataEntry} Object containing the dataset.\n     * @param idx {Number} Number with the position of the dataset entry in the data array.\n     * @param xCoordMouse {Number} Number of the x coordinate of the mouse.\n     * @param entryIdx {Number} Number of the index of the entry.\n     */\n    private showDiagramIndicator = (entry, idx: number, xCoordMouse: number, entryIdx: number) => {\n        const item = entry.data[idx];\n        if (item !== undefined) {\n            // create line where mouse is\n            this.focusG.style('visibility', 'visible');\n            // show label if data available for time\n            this.chVisLabel(entry, true);\n\n            let onLeftSide = false;\n            if ((this.background.node().getBBox().width + this.bufferSum) / 2 > item.xDiagCoord) { onLeftSide = true; }\n\n            let labelBuffer = ((this.timespan.from / (this.timespan.to - this.timespan.from)) * 0.0001)\n                * ((this.timespan.from / (this.timespan.to - this.timespan.from)) * 0.0001);\n\n            labelBuffer = Math.max(4, labelBuffer);\n\n            this.showLabelValues(entry, item, onLeftSide);\n            this.showTimeIndicatorLabel(item, onLeftSide, entryIdx);\n\n            if ((xCoordMouse) > (item.xDiagCoord + labelBuffer) || (xCoordMouse) = xCoordMouse) {\n                    this.showLabelValues(entry, entry.data[idx - 1], onLeftSide);\n                    this.showTimeIndicatorLabel(item, onLeftSide, entryIdx);\n\n                    this.chVisLabel(entry, true);\n                }\n            }\n        } else {\n            // hide label if no data available for time\n            this.chVisLabel(entry, false);\n        }\n    }\n\n    /**\n     * Function to change visibility of label and white rectangle inside graph (next to mouse-cursor line).\n     * @param entry {DataEntry} Object containing the dataset.\n     * @param visible {Boolean} Boolean giving information about visibility of a label.\n     */\n    private chVisLabel(entry, visible: boolean) {\n        if (visible) {\n            entry.focusLabel\n                .attr('visibility', 'visible')\n                .attr('class', 'focus-visibility');\n            entry.focusLabelRect\n                .attr('visibility', 'visible')\n                .attr('class', 'focus-visibility');\n        } else {\n            entry.focusLabel\n                .attr('visibility', 'hidden');\n            entry.focusLabelRect\n                .attr('visibility', 'hidden');\n        }\n    }\n\n    /**\n     * Function to show the labeling inside the graph.\n     * @param entry {DataEntry} Object containg the dataset.\n     * @param item {DataEntry} Object of the entry in the dataset.\n     * @param onLeftSide {Boolean} Boolean giving information if the mouse is on left side of the diagram.\n     */\n    private showLabelValues(entry, item: DataEntry, onLeftSide: boolean) {\n        let id = 1;\n        if (entry.focusLabel) {\n            entry.focusLabel.text(item[id] + (entry.axisOptions.uom ? entry.axisOptions.uom : ''));\n            const entryX = onLeftSide ?\n                item.xDiagCoord + 4 : item.xDiagCoord - this.getDimensions(entry.focusLabel.node()).w + 4;\n            entry.focusLabel\n                .attr('x', entryX)\n                .attr('y', item.yDiagCoord);\n            entry.focusLabelRect\n                .attr('x', entryX)\n                .attr('y', item.yDiagCoord - this.getDimensions(entry.focusLabel.node()).h + 3)\n                .attr('width', this.getDimensions(entry.focusLabel.node()).w)\n                .attr('height', this.getDimensions(entry.focusLabel.node()).h);\n            this.ypos.push({ idx: this.idxOfPos++, y: item.yDiagCoord, off: 0 });\n        }\n    }\n\n    /**\n     * Function to show the time labeling inside the graph.\n     * @param item {DataEntry} Object of the entry in the dataset.\n     * @param onLeftSide {Boolean} Boolean giving information if the mouse is on left side of the diagram.\n     * @param entryIdx {Number} Number of the index of the entry.\n     */\n    private showTimeIndicatorLabel(item: DataEntry, onLeftSide: boolean, entryIdx: number) {\n        // timestamp is the time where the mouse-cursor is\n        this.labelTimestamp[entryIdx] = item.timestamp;\n        let min = d3.min(this.labelTimestamp);\n        let idxOfMin = this.labelTimestamp.findIndex((elem) => elem === min);\n        let right = item.xDiagCoord + 2;\n        let left = item.xDiagCoord - this.getDimensions(this.focuslabelTime.node()).w - 2;\n        this.focuslabelTime.text(moment(this.labelTimestamp[idxOfMin]).format('DD.MM.YY HH:mm'));\n        this.focuslabelTime\n            .attr('x', onLeftSide ? right : left)\n            .attr('y', 13);\n        if (item.timestamp === min) {\n            this.highlightFocus\n                .attr('x1', item.xDiagCoord)\n                .attr('y1', 0)\n                .attr('x2', item.xDiagCoord)\n                .attr('y2', this.height)\n                .classed('hidden', false);\n        }\n    }\n\n    /**\n     * Function that returns the boundings of a html element.\n     * @param el {Object} Object of the html element.\n     */\n    private getDimensions(el: any): { w: number, h: number } {\n        let w = 0;\n        let h = 0;\n        if (el) {\n            const dimensions = el.getBBox();\n            w = dimensions.width;\n            h = dimensions.height;\n        } else {\n            console.log('error: getDimensions() ' + el + ' not found.');\n        }\n        return {\n            w,\n            h\n        };\n    }\n\n    /**\n     * Function to generate uuid for a diagram\n     */\n    private uuidv4(): string {\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + this.s4();\n    }\n\n    /**\n     * Function to generate components of the uuid for a diagram\n     */\n    private s4(): string {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n\n    /**\n     * Function that logs the error in the console.\n     * @param error {Object} Object with the error.\n     */\n    private onError(error: any) {\n        console.error(error);\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataParameterFilter.html":{"url":"interfaces/DataParameterFilter.html","title":"interface - DataParameterFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataParameterFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/http-requests.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ParameterFilter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        format\n                                \n                                \n                                            Optional\n                                        generalize\n                                \n                                \n                                            Optional\n                                        timespan\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        generalize\n                                    \n                                \n                                \n                                    \n                                        generalize:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timespan\n                                    \n                                \n                                \n                                    \n                                        timespan:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ParameterFilter {\n    service?: string;\n    phenomenon?: string;\n    valueTypes?: string;\n    platformTypes?: string;\n    expanded?: boolean;\n    lang?: string;\n    [key: string]: any;\n}\n\nexport interface DataParameterFilter extends ParameterFilter {\n    format?: string;\n    timespan?: string;\n    generalize?: boolean;\n}\n\nexport interface HttpRequestOptions {\n    forceUpdate?: boolean;\n    basicAuthToken?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSeries.html":{"url":"interfaces/DataSeries.html","title":"interface - DataSeries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataSeries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/flot/src/lib/model/dataSeries.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        internalId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        internalId\n                                    \n                                \n                                \n                                    \n                                        internalId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SeriesOptions extends jquery.flot.seriesOptions {\n    selected?: boolean;\n}\n\nexport interface DataSeries extends jquery.flot.dataSeries, SeriesOptions {\n    internalId: string;\n    data: any[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Dataset.html":{"url":"classes/Dataset.html","title":"class - Dataset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Dataset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IDataset\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                datasetType\n                            \n                            \n                                    Public\n                                firstValue\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                internalId\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                lastValue\n                            \n                            \n                                    Public\n                                parameters\n                            \n                            \n                                    Public\n                                platformType\n                            \n                            \n                                    Public\n                                referenceValues\n                            \n                            \n                                    Public\n                                    Optional\n                                seriesParameters\n                            \n                            \n                                    Public\n                                uom\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datasetType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        datasetType:     DatasetTypes\n\n                    \n                \n                    \n                        \n                            Type :     DatasetTypes\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstValue:     FirstLastValue\n\n                    \n                \n                    \n                        \n                            Type :     FirstLastValue\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            internalId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        internalId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastValue:     FirstLastValue\n\n                    \n                \n                    \n                        \n                            Type :     FirstLastValue\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parameters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parameters:     DatasetParameterConstellation\n\n                    \n                \n                    \n                        \n                            Type :     DatasetParameterConstellation\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platformType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platformType:     PlatformTypes\n\n                    \n                \n                    \n                        \n                            Type :     PlatformTypes\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            referenceValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        referenceValues:     ReferenceValue[]\n\n                    \n                \n                    \n                        \n                            Type :     ReferenceValue[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            seriesParameters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seriesParameters:     DatasetParameterConstellation\n\n                    \n                \n                    \n                        \n                            Type :     DatasetParameterConstellation\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uom:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatasetApi.html":{"url":"interfaces/DatasetApi.html","title":"interface - DatasetApi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatasetApi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/settings/settings.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timespan } from './../internal/timeInterval';\n\nexport interface Settings {\n    datasetApis?: DatasetApi[];\n    providerBlackList?: BlacklistedService[];\n    solveLabels?: boolean;\n    proxyUrl?: string;\n    timespanPresets?: TimespanPreset[];\n    colorList?: string[];\n    languages?: [{ label: string, code: string }];\n    refreshDataInterval?: number;\n}\n\nexport interface DatasetApi {\n    name: string;\n    url: string;\n}\n\nexport interface BlacklistedService {\n    serviceId: string;\n    apiUrl: string;\n}\n\nexport interface TimespanPreset {\n    name: string;\n    label: string;\n    timespan: TimespanMomentTemplate;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface ParsedTimespanPreset {\n    name: string;\n    label: string;\n    timespan: Timespan;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface TimespanMomentTemplate {\n    to: string;\n    from: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatasetApiMapping.html":{"url":"injectables/DatasetApiMapping.html","title":"injectable - DatasetApiMapping","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DatasetApiMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/api-mapping.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                confirmVersion\n                            \n                            \n                                    Public\n                                getApiVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/dataset-api/api-mapping.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            confirmVersion\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        confirmVersion(observer: Observer, version: DatasetApiVersion)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/api-mapping.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observer\n                                                        \n                                                                    Observer\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        version\n                                                        \n                                                                    DatasetApiVersion\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getApiVersion\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getApiVersion(apiUrl: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/api-mapping.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cache:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/api-mapping.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nexport enum DatasetApiVersion {\n    V1,\n    V2\n}\n\n@Injectable()\nexport class DatasetApiMapping {\n\n    private cache: Map = new Map();\n\n    constructor(\n        protected http: HttpClient\n    ) { }\n\n    public getApiVersion(apiUrl: string): Observable {\n        return new Observable((observer: Observer) => {\n            if (this.cache.has(apiUrl)) {\n                this.confirmVersion(observer, this.cache.get(apiUrl));\n            } else {\n                this.http.get(apiUrl).subscribe((result) => {\n                    let version = DatasetApiVersion.V1;\n                    result.forEach((entry) => {\n                        if (entry.id === 'platforms') {\n                            version = DatasetApiVersion.V2;\n                        }\n                    });\n                    this.cache.set(apiUrl, version);\n                    this.confirmVersion(observer, version);\n                });\n            }\n        });\n    }\n\n    private confirmVersion(observer: Observer, version: DatasetApiVersion) {\n        observer.next(version);\n        observer.complete();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatasetApiV2.html":{"url":"interfaces/DatasetApiV2.html","title":"interface - DatasetApiV2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatasetApiV2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/interfaces/api-v2.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DatasetApiV1\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getData\n                                \n                                \n                                    getDataset\n                                \n                                \n                                    getDatasets\n                                \n                                \n                                    getPlatform\n                                \n                                \n                                    getPlatforms\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetData(id: string, apiUrl: string, timespan: Timespan, params?: DataParameterFilter, options?: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/interfaces/api-v2.interface.ts:25\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    DataParameterFilter\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDataset(id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/interfaces/api-v2.interface.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    ParameterFilter\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDatasets\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDatasets(apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/interfaces/api-v2.interface.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    ParameterFilter\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlatform\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlatform(id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/interfaces/api-v2.interface.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    ParameterFilter\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlatforms\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlatforms(apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/interfaces/api-v2.interface.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    ParameterFilter\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nimport { Data } from '../../model/dataset-api/data';\nimport { Dataset } from '../../model/dataset-api/dataset';\nimport { Platform } from '../../model/dataset-api/platform';\nimport { DataParameterFilter, HttpRequestOptions, ParameterFilter } from '../../model/internal/http-requests';\nimport { Timespan } from '../../model/internal/timeInterval';\nimport { DatasetApiV1 } from './api-v1.interface';\n\nexport interface DatasetApiV2 extends DatasetApiV1 {\n\n    getPlatforms(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    getPlatform(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n\n    getDatasets(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    getDataset(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    getData(\n        id: string, apiUrl: string, timespan: Timespan, params?: DataParameterFilter, options?: HttpRequestOptions\n    ): Observable>;\n\n    // getGeometries(id: string, apiUrl: string, params?): Observable<>;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatasetByStationSelectorComponent.html":{"url":"components/DatasetByStationSelectorComponent.html","title":"component - DatasetByStationSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatasetByStationSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-dataset-by-station-selector\n            \n\n            \n                styleUrls\n                dataset-by-station-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dataset-by-station-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                counter\n                            \n                            \n                                    Public\n                                timeseriesList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Private\n                                updateSelection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                defaultSelected\n                            \n                            \n                                station\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onSelectionChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiInterface: DatasetApiInterface)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiInterface\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        defaultSelected\n                    \n                    \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        station\n                    \n                    \n                            \n                            Type:    Station\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onSelectionChanged\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(timeseries: ExtendedTimeseries)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeseries\n                                                        \n                                                                    ExtendedTimeseries\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateSelection()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            counter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        counter:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeseriesList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeseriesList:     ExtendedTimeseries[]\n\n                    \n                \n                    \n                        \n                            Type :     ExtendedTimeseries[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { DatasetApiInterface, Station, Timeseries } from '@helgoland/core';\n\nexport class ExtendedTimeseries extends Timeseries {\n    public selected: boolean;\n}\n\n@Component({\n    selector: 'n52-dataset-by-station-selector',\n    templateUrl: './dataset-by-station-selector.component.html',\n    styleUrls: ['./dataset-by-station-selector.component.scss']\n})\nexport class DatasetByStationSelectorComponent implements OnInit {\n\n    @Input()\n    public station: Station;\n\n    @Input()\n    public url: string;\n\n    @Input()\n    public defaultSelected = false;\n\n    @Output()\n    public onSelectionChanged: EventEmitter = new EventEmitter();\n\n    public timeseriesList: ExtendedTimeseries[] = [];\n\n    public counter: number;\n\n    constructor(\n        protected apiInterface: DatasetApiInterface\n    ) { }\n\n    public ngOnInit() {\n        if (this.station) {\n            this.apiInterface.getStation(this.station.properties.id, this.url)\n                .subscribe((station) => {\n                    this.station = station;\n                    this.counter = 0;\n                    for (const id in this.station.properties.timeseries) {\n                        if (this.station.properties.timeseries.hasOwnProperty(id)) {\n                            this.counter++;\n                            this.apiInterface.getSingleTimeseries(id, this.url)\n                                .subscribe((result) => {\n                                    const ts = result as ExtendedTimeseries;\n                                    ts.selected = this.defaultSelected;\n                                    this.timeseriesList.push(ts);\n                                    this.updateSelection();\n                                    this.counter--;\n                                }, (error) => {\n                                    this.counter--;\n                                });\n                        }\n                    }\n                });\n        }\n    }\n\n    public toggle(timeseries: ExtendedTimeseries) {\n        timeseries.selected = !timeseries.selected;\n        this.updateSelection();\n    }\n\n    private updateSelection() {\n        const selection = this.timeseriesList.filter((entry) => entry.selected);\n        this.onSelectionChanged.emit(selection);\n    }\n\n}\n\n    \n\n    \n        \n    \n        {{counter}} timeseries are loading...\n    \n    \n        \n            {{timeseries.parameters.phenomenon.label}}\n        \n        {{timeseries.parameters.procedure.label}}\n        ({{timeseries.parameters.category.label}})\n        \n            {{timeseries.lastValue.value}}\n            {{timeseries.uom}}\n            ({{timeseries.lastValue.timestamp| date: 'short'}})\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{counter}} timeseries are loading...                            {{timeseries.parameters.phenomenon.label}}                {{timeseries.parameters.procedure.label}}        ({{timeseries.parameters.category.label}})                    {{timeseries.lastValue.value}}            {{timeseries.uom}}            ({{timeseries.lastValue.timestamp| date: \\'short\\'}})            '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DatasetByStationSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatasetConstellation.html":{"url":"interfaces/DatasetConstellation.html","title":"interface - DatasetConstellation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatasetConstellation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/d3/src/lib/d3-trajectory-graph/d3-trajectory-graph.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        dataset\n                                \n                                \n                                            Optional\n                                        drawOptions\n                                \n                                \n                                            Optional\n                                        focusLabel\n                                \n                                \n                                            Optional\n                                        focusLabelRect\n                                \n                                \n                                            Optional\n                                        yScale\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     LocatedTimeValueEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LocatedTimeValueEntry[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataset\n                                    \n                                \n                                \n                                    \n                                        dataset:     IDataset\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IDataset\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        drawOptions\n                                    \n                                \n                                \n                                    \n                                        drawOptions:     DrawOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DrawOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        focusLabel\n                                    \n                                \n                                \n                                    \n                                        focusLabel:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        focusLabelRect\n                                    \n                                \n                                \n                                    \n                                        focusLabelRect:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yScale\n                                    \n                                \n                                \n                                    \n                                        yScale:     ScaleLinear\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ScaleLinear\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    IterableDiffers,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    DatasetApiInterface,\n    DatasetOptions,\n    DatasetPresenterComponent,\n    IDataset,\n    InternalIdHandler,\n    LocatedTimeValueEntry,\n    Time,\n} from '@helgoland/core';\nimport {\n    area,\n    axisBottom,\n    axisLeft,\n    axisRight,\n    axisTop,\n    bisector,\n    curveLinear,\n    extent,\n    line,\n    mouse,\n    ScaleLinear,\n    scaleLinear,\n    select,\n    timeFormat,\n} from 'd3';\nimport moment from 'moment';\n\nimport { D3AxisType } from '../model/d3-axis-type';\nimport { D3GraphOptions } from '../model/d3-graph-options';\nimport { D3SelectionRange } from '../model/d3-selection-range';\n\ninterface DataEntry extends LocatedTimeValueEntry {\n    dist: number;\n    tick: number;\n    x: number;\n    y: number;\n    xDiagCoord?: number;\n    [id: string]: any;\n}\n\ninterface DatasetConstellation {\n    dataset?: IDataset;\n    data?: LocatedTimeValueEntry[];\n    yScale?: ScaleLinear;\n    drawOptions?: DrawOptions;\n    focusLabelRect?: any;\n    focusLabel?: any;\n}\n\ninterface DrawOptions {\n    uom: string;\n    id: string;\n    color: string;\n    first: boolean;\n    offset: number;\n}\n\n@Component({\n    selector: 'n52-d3-trajectory-graph',\n    templateUrl: './d3-trajectory-graph.component.html',\n    styleUrls: ['./d3-trajectory-graph.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class D3TrajectoryGraphComponent\n    extends DatasetPresenterComponent\n    implements AfterViewInit, OnChanges {\n\n    @Input()\n    public selection: D3SelectionRange;\n\n    @Output()\n    public onSelectionChangedFinished: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onSelectionChanged: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onHoverHighlight: EventEmitter = new EventEmitter();\n\n    @ViewChild('dthree')\n    public d3Elem: ElementRef;\n\n    private datasetMap: Map = new Map();\n    private rawSvg: any;\n    private graph: any;\n    private height: number;\n    private width: number;\n    private margin = {\n        top: 10,\n        right: 10,\n        bottom: 40,\n        left: 40\n    };\n    private maxLabelwidth = 0;\n    private lineFun: d3.Line;\n    private area: d3.Area;\n    private xScaleBase: d3.ScaleLinear;\n    private yScaleBase: d3.ScaleLinear;\n    private background: any;\n    private focusG: any;\n    private highlightFocus: any;\n    private focuslabelTime: any;\n    private focuslabelY: any;\n    private yAxisGen: d3.Axis;\n    private baseValues: DataEntry[] = [];\n    private dragging: boolean;\n    private dragStart: [number, number];\n    private dragCurrent: [number, number];\n    private dragRect: any;\n    private dragRectG: any;\n    private bufferSum: number;\n    private dataLength: number;\n\n    private defaultGraphOptions: D3GraphOptions = {\n        axisType: D3AxisType.Distance,\n        dotted: false\n    };\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc);\n        this.graphOptions = this.defaultGraphOptions;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        super.ngOnChanges(changes);\n        if (changes.selection && this.selection) {\n            this.processAllData();\n            this.drawLineGraph();\n        }\n    }\n\n    public ngAfterViewInit(): void {\n        this.rawSvg = select(this.d3Elem.nativeElement)\n            .append('svg')\n            .attr('width', '100%')\n            .attr('height', '100%');\n\n        this.graph = this.rawSvg\n            .append('g')\n            .attr('transform', 'translate(' + (this.margin.left + this.maxLabelwidth) + ',' + this.margin.top + ')');\n\n        this.lineFun = line()\n            .x(this.calcXValue)\n            .y(this.calcYValue)\n            .curve(curveLinear);\n\n        this.area = area()\n            .x(this.calcXValue)\n            .y0(this.height)\n            .y1(this.calcYValue)\n            .curve(curveLinear);\n\n        this.drawLineGraph();\n    }\n\n    public reloadData(): void {\n        console.log('reload data at ' + new Date());\n    }\n\n    protected timeIntervalChanges(): void {\n        this.datasetMap.forEach((entry) => {\n            if (entry.dataset) {\n                this.loadData(entry.dataset);\n            }\n        });\n    }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getDataset(id, url).subscribe((dataset) => {\n            this.datasetMap.set(dataset.internalId, { dataset });\n            this.loadData(dataset);\n        });\n    }\n\n    protected removeDataset(internalId: string): void {\n        this.datasetMap.delete(internalId);\n        this.processAllData();\n        this.drawLineGraph();\n    }\n\n    protected setSelectedId(internalId: string): void {\n        throw new Error('Method not implemented.');\n    }\n\n    protected removeSelectedId(internalId: string): void {\n        throw new Error('Method not implemented.');\n    }\n\n    protected graphOptionsChanged(options: D3GraphOptions): void {\n        this.timeIntervalChanges();\n    }\n\n    protected datasetOptionsChanged(internalId: string, options: DatasetOptions, firstChange: boolean): void {\n        if (!firstChange && this.datasetMap.has(internalId)) {\n            this.loadData(this.datasetMap.get(internalId).dataset);\n        }\n    }\n\n    protected onResize(): void {\n        this.drawLineGraph();\n    }\n\n    private loadData(dataset: IDataset) {\n        if (this.timespan &&\n            this.datasetOptions.has(dataset.internalId) &&\n            this.datasetOptions.get(dataset.internalId).visible) {\n            const buffer = this.timeSrvc.getBufferedTimespan(this.timespan, 0.2);\n            const option = this.datasetOptions.get(dataset.internalId);\n            this.api.getData(dataset.id, dataset.url, buffer,\n                {\n                    generalize: option.generalize\n                })\n                .subscribe((result) => {\n                    this.dataLength = result.values.length;\n                    this.datasetMap.get(dataset.internalId).data = result.values;\n                    this.processDataForId(dataset.internalId);\n                    this.drawLineGraph();\n                });\n        } else {\n            this.drawLineGraph();\n        }\n    }\n\n    private processAllData() {\n        this.baseValues = [];\n        this.datasetIds.forEach((id) => this.processDataForId(id));\n    }\n\n    private processDataForId(internalId: string) {\n        if (this.datasetOptions.get(internalId).visible) {\n            const datasetEntry = this.datasetMap.get(internalId);\n            const firstEntry = this.baseValues.length === 0;\n            let previous: DataEntry = null;\n            datasetEntry.data.forEach((elem, idx) => {\n                if (firstEntry) {\n                    const entry = this.createDataEntry(internalId, elem, previous, idx);\n                    if (this.selection) {\n                        if (idx >= this.selection.from && idx = this.selection.from && idx  {\n        return this.yScaleBase(d.value);\n    }\n\n    private calcXValue = (d: DataEntry, i: number) => {\n        const xDiagCoord = this.xScaleBase(this.getXValue(d));\n        d.xDiagCoord = xDiagCoord;\n        return xDiagCoord;\n    }\n\n    private calculateHeight(): number {\n        return this.rawSvg.node().height.baseVal.value - this.margin.top - this.margin.bottom;\n    }\n\n    private calculateWidth(): number {\n        return this.rawSvg.node().width.baseVal.value - this.margin.left - this.margin.right - this.maxLabelwidth;\n    }\n\n    private getXValue(data: DataEntry) {\n        switch (this.graphOptions.axisType) {\n            case D3AxisType.Distance:\n                return data.dist;\n            case D3AxisType.Time:\n                return data.timestamp;\n            case D3AxisType.Ticks:\n                return data.tick;\n            default:\n                return data.tick;\n        }\n    }\n\n    private drawDots(values: DataEntry[], yScale: d3.ScaleLinear, options: DrawOptions) {\n        this.graph.selectAll('dot')\n            .data(values)\n            .enter().append('circle')\n            .attr('stroke', options.color)\n            .attr('r', 1.5)\n            .attr('fill', options.color)\n            .attr('cx', this.calcXValue)\n            .attr('cy', (d: DataEntry) => yScale(d[options.id]));\n    }\n\n    private drawValueLine(values: DataEntry[], yScale: d3.ScaleLinear, options: DrawOptions) {\n        this.graph.append('svg:path')\n            .datum(values)\n            .attr('class', 'line')\n            .attr('fill', 'none')\n            .attr('stroke', options.color)\n            .attr('stroke-width', 1)\n            .attr('d', line()\n                .x(this.calcXValue)\n                .y((d: DataEntry) => yScale(d[options.id]))\n                .curve(curveLinear));\n    }\n\n    private drawGraph(yScale: d3.ScaleLinear, options: DrawOptions) {\n        if (this.graphOptions.dotted) {\n            this.drawDots(this.baseValues, yScale, options);\n        } else {\n            this.drawValueLine(this.baseValues, yScale, options);\n        }\n    }\n\n    private drawLineGraph() {\n        if (!this.baseValues || this.baseValues.length === 0 || !this.graph) {\n            return;\n        }\n\n        this.height = this.calculateHeight();\n        this.width = this.calculateWidth();\n\n        this.graph.selectAll('*').remove();\n\n        this.bufferSum = 0;\n\n        this.yScaleBase = null;\n\n        this.datasetMap.forEach((datasetEntry, id) => {\n            if (this.datasetOptions.has(id) && datasetEntry.data && this.datasetOptions.get(id).visible) {\n                datasetEntry.drawOptions = {\n                    uom: datasetEntry.dataset.uom,\n                    id: datasetEntry.dataset.internalId,\n                    color: this.datasetOptions.get(id).color,\n                    first: this.yScaleBase === null,\n                    offset: this.bufferSum\n                };\n                const axisResult = this.drawYAxis(datasetEntry.drawOptions);\n                if (this.yScaleBase === null) {\n                    this.yScaleBase = axisResult.yScale;\n                } else {\n                    this.bufferSum = axisResult.buffer;\n                }\n                datasetEntry.yScale = axisResult.yScale;\n            }\n        });\n\n        if (!this.yScaleBase) {\n            return;\n        }\n\n        // draw right axis as border\n        this.graph.append('svg:g')\n            .attr('class', 'y axis')\n            .attr('transform', 'translate(' + this.width + ', 0)')\n            .call(axisRight(this.yScaleBase).tickSize(0).ticks(0));\n\n        this.drawXAxis(this.bufferSum);\n\n        this.datasetMap.forEach((entry, id) => {\n            if (this.datasetOptions.has(id) && this.datasetOptions.get(id).visible && entry.data) {\n                this.drawGraph(entry.yScale, entry.drawOptions);\n            }\n        });\n\n        this.background = this.graph.append('svg:rect')\n            .attr('width', this.width - this.bufferSum)\n            .attr('height', this.height)\n            .attr('fill', 'none')\n            .attr('stroke', 'none')\n            .attr('pointer-events', 'all')\n            .attr('transform', 'translate(' + this.bufferSum + ', 0)')\n            .on('mousemove.focus', this.mousemoveHandler)\n            .on('mouseout.focus', this.mouseoutHandler)\n            .on('mousedown.drag', this.dragStartHandler)\n            .on('mousemove.drag', this.dragHandler)\n            .on('mouseup.drag', this.dragEndHandler);\n\n        this.focusG = this.graph.append('g');\n        this.highlightFocus = this.focusG.append('svg:line')\n            .attr('class', 'mouse-focus-line')\n            .attr('x2', '0')\n            .attr('y2', '0')\n            .attr('x1', '0')\n            .attr('y1', '0')\n            .style('stroke', 'black')\n            .style('stroke-width', '1px');\n\n        this.datasetMap.forEach((entry, id) => {\n            if (this.datasetOptions.has(id) && this.datasetOptions.get(id).visible && entry.data) {\n                entry.focusLabelRect = this.focusG.append('svg:rect')\n                    .style('fill', 'white')\n                    .style('stroke', 'none')\n                    .style('pointer-events', 'none');\n                entry.focusLabel = this.focusG.append('svg:text').attr('class', 'mouse-focus-label-x')\n                    .style('pointer-events', 'none')\n                    .style('fill', this.datasetOptions.get(id).color)\n                    .style('font-weight', 'lighter');\n            }\n        });\n\n        this.focuslabelTime = this.focusG.append('svg:text')\n            .style('pointer-events', 'none')\n            .attr('class', 'mouse-focus-label-x');\n        this.focuslabelY = this.focusG.append('svg:text')\n            .style('pointer-events', 'none')\n            .attr('class', 'mouse-focus-label-y');\n    }\n\n    private mousemoveHandler = () => {\n        if (!this.baseValues || this.baseValues.length === 0) {\n            return;\n        }\n        const coords = mouse(this.background.node());\n        const idx = this.getItemForX(coords[0] + this.bufferSum, this.baseValues);\n        this.showDiagramIndicator(idx);\n        this.onHoverHighlight.emit(this.baseValues[idx].tick);\n    }\n\n    private mouseoutHandler = () => {\n        this.hideDiagramIndicator();\n    }\n\n    private dragStartHandler = () => {\n        this.dragging = false;\n        this.dragStart = mouse(this.background.node());\n    }\n\n    private dragHandler = () => {\n        this.dragging = true;\n        this.drawDragRectangle();\n    }\n\n    private dragEndHandler = () => {\n        if (!this.dragStart || !this.dragging) {\n            this.onSelectionChangedFinished.emit({ from: 0, to: this.dataLength });\n        } else {\n            const from = this.getItemForX(this.dragStart[0] + this.bufferSum, this.baseValues);\n            const to = this.getItemForX(this.dragCurrent[0] + this.bufferSum, this.baseValues);\n            this.onSelectionChangedFinished.emit(this.prepareRange(this.baseValues[from].tick, this.baseValues[to].tick));\n        }\n        this.dragStart = null;\n        this.dragging = false;\n        this.resetDrag();\n    }\n\n    private prepareRange(from: number, to: number): D3SelectionRange {\n        if (from  {\n        const item = this.baseValues[idx];\n        this.focusG.style('visibility', 'visible');\n        this.highlightFocus.attr('x1', item.xDiagCoord)\n            .attr('y1', 0)\n            .attr('x2', item.xDiagCoord)\n            .attr('y2', this.height)\n            .classed('hidden', false);\n\n        let onLeftSide = false;\n        if ((this.background.node().getBBox().width + this.bufferSum) / 2 > item.xDiagCoord) { onLeftSide = true; }\n\n        this.showLabelValues(item, onLeftSide);\n        this.showTimeIndicatorLabel(item, onLeftSide);\n        this.showBottomIndicatorLabel(item, onLeftSide);\n    }\n\n    private showLabelValues(item: DataEntry, onLeftSide: boolean) {\n        this.datasetMap.forEach((entry, id) => {\n            if (this.datasetOptions.get(id).visible) {\n                if (entry.focusLabel) {\n                    entry.focusLabel.text(item[id] + (entry.dataset.uom ? entry.dataset.uom : ''));\n                    const entryX = onLeftSide ?\n                        item.xDiagCoord + 2 : item.xDiagCoord - this.getDimensions(entry.focusLabel.node()).w;\n                    entry.focusLabel\n                        .attr('x', entryX)\n                        .attr('y', entry.yScale(item[id]) + this.getDimensions(entry.focusLabel.node()).h - 3);\n                    entry.focusLabelRect\n                        .attr('x', entryX)\n                        .attr('y', entry.yScale(item[id]))\n                        .attr('width', this.getDimensions(entry.focusLabel.node()).w)\n                        .attr('height', this.getDimensions(entry.focusLabel.node()).h);\n                }\n            }\n        });\n    }\n\n    private showTimeIndicatorLabel(item: DataEntry, onLeftSide: boolean) {\n        this.focuslabelTime.text(moment(item.timestamp).format('DD.MM.YY HH:mm'));\n        this.focuslabelTime\n            .attr('x', onLeftSide ? item.xDiagCoord + 2 : item.xDiagCoord - this.getDimensions(this.focuslabelTime.node()).w)\n            .attr('y', 13);\n    }\n\n    private showBottomIndicatorLabel(item: DataEntry, onLeftSide: boolean) {\n        if (this.graphOptions.axisType === D3AxisType.Distance) {\n            this.focuslabelY.text(item.dist + ' km');\n        }\n        if (this.graphOptions.axisType === D3AxisType.Ticks) {\n            this.focuslabelY.text('Measurement: ' + item.tick);\n        }\n        this.focuslabelY\n            .attr('y', this.calculateHeight() - 5)\n            .attr('x', onLeftSide ? item.xDiagCoord + 2 : item.xDiagCoord - this.getDimensions(this.focuslabelY.node()).w);\n    }\n\n    private getDimensions(el: any) {\n        let w = 0;\n        let h = 0;\n        if (el) {\n            const dimensions = el.getBBox();\n            w = dimensions.width;\n            h = dimensions.height;\n        } else {\n            console.log('error: getDimensions() ' + el + ' not found.');\n        }\n        return {\n            w,\n            h\n        };\n    }\n\n    private getItemForX(x: number, data: DataEntry[]) {\n        const index = this.xScaleBase.invert(x);\n        const bisectDate = bisector((d: DataEntry) => {\n            switch (this.graphOptions.axisType) {\n                case D3AxisType.Distance:\n                    return d.dist;\n                case D3AxisType.Time:\n                    return d.timestamp;\n                case D3AxisType.Ticks:\n                default:\n                    return d.tick;\n            }\n        }).left;\n        return bisectDate(this.baseValues, index);\n    }\n\n    private drawYAxis(options: DrawOptions): any {\n        const range = extent(this.baseValues, (datum, index, array) => {\n            return datum[options.id]; // here with ID\n        });\n        const rangeOffset = (range[1] - range[0]) * 0.10;\n        const yScale = scaleLinear()\n            .domain([range[0] - rangeOffset, range[1] + rangeOffset])\n            .range([this.height, 0]);\n\n        this.yAxisGen = axisLeft(yScale).ticks(5);\n\n        // draw y axis\n        const axis = this.graph.append('svg:g')\n            .attr('class', 'y axis')\n            .call(this.yAxisGen);\n\n        // draw y axis label\n        const text = this.graph.append('text')\n            .attr('transform', 'rotate(-90)')\n            .attr('dy', '1em')\n            .style('text-anchor', 'middle')\n            .style('fill', options.color)\n            .text(options.uom);\n\n        const axisWidth = axis.node().getBBox().width + 5 + this.getDimensions(text.node()).h;\n        const buffer = options.offset + (axisWidth  '')\n                );\n        }\n\n        return {\n            buffer,\n            yScale\n        };\n    }\n\n    private drawXAxis(buffer: number) {\n        this.xScaleBase = scaleLinear()\n            .domain(this.getXDomain(this.baseValues))\n            .range([buffer, this.width]);\n\n        const xAxisGen = axisBottom(this.xScaleBase).ticks(5);\n\n        if (this.graphOptions.axisType === D3AxisType.Time) {\n            xAxisGen.tickFormat((d) => {\n                return timeFormat('%d.%m.%Y %H:%M:%S')(new Date(d.valueOf()));\n            });\n        }\n\n        // draw x axis\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(xAxisGen);\n\n        // draw the x grid lines\n        this.graph.append('svg:g')\n            .attr('class', 'grid')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(axisBottom(this.xScaleBase)\n                .ticks(10)\n                .tickSize(-this.height)\n                .tickFormat(() => '')\n            );\n\n        // draw upper axis as border\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .call(axisTop(this.xScaleBase).ticks(0).tickSize(0));\n\n        // text label for the x axis\n        this.graph.append('text')\n            .attr('x', (this.width + buffer) / 2)\n            .attr('y', this.height + this.margin.bottom - 5)\n            .style('text-anchor', 'middle')\n            .text(this.getXAxisLabel());\n    }\n\n    private getXDomain(values: DataEntry[]) {\n        switch (this.graphOptions.axisType) {\n            case D3AxisType.Distance:\n                return [values[0].dist, values[values.length - 1].dist];\n            case D3AxisType.Time:\n                return [values[0].timestamp, values[values.length - 1].timestamp];\n            default:\n                return [values[0].tick, values[values.length - 1].tick];\n        }\n    }\n\n    private getXAxisLabel() {\n        switch (this.graphOptions.axisType) {\n            case D3AxisType.Distance:\n                return 'Distance';\n            case D3AxisType.Time:\n                return 'Time';\n            default:\n                return 'Ticks';\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatasetOptions.html":{"url":"classes/DatasetOptions.html","title":"class - DatasetOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatasetOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/options.ts\n        \n\n            \n                Description\n            \n            \n                Options for each Dataset.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                color\n                            \n                            \n                                    Public\n                                    Optional\n                                generalize\n                            \n                            \n                                    Public\n                                internalId\n                            \n                            \n                                    Public\n                                lineWidth\n                            \n                            \n                                    Public\n                                    Optional\n                                loading\n                            \n                            \n                                    Public\n                                pointRadius\n                            \n                            \n                                    Public\n                                    Optional\n                                separateYAxis\n                            \n                            \n                                    Public\n                                showReferenceValues\n                            \n                            \n                                    Public\n                                visible\n                            \n                            \n                                    Public\n                                    Optional\n                                yAxisRange\n                            \n                            \n                                    Public\n                                    Optional\n                                zeroBasedYAxis\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(internalId: string, color: string)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/model/internal/options.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        color\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            color\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        color:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            generalize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        generalize:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            internalId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        internalId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lineWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lineWidth:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pointRadius\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pointRadius:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            separateYAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        separateYAxis:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showReferenceValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showReferenceValues:     ReferenceValueOption[]\n\n                    \n                \n                    \n                        \n                            Type :     ReferenceValueOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            yAxisRange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        yAxisRange:     MinMaxRange\n\n                    \n                \n                    \n                        \n                            Type :     MinMaxRange\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            zeroBasedYAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zeroBasedYAxis:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DatasetOptions {\n    public internalId: string;\n    public color: string;\n    public visible = true;\n    public loading?: boolean;\n    public separateYAxis?: boolean = false;\n    public zeroBasedYAxis?: boolean = false;\n    public generalize?: boolean = false;\n    public showReferenceValues: ReferenceValueOption[] = [];\n    public pointRadius = 0;\n    public lineWidth = 1;\n    public yAxisRange?: MinMaxRange;\n\n    constructor(\n        internalId: string,\n        color: string\n    ) {\n        this.internalId = internalId;\n        this.color = color;\n    }\n}\n\nexport class ReferenceValueOption {\n    public id: string;\n    public color: string;\n}\n\nexport interface MinMaxRange {\n    min: number;\n    max: number;\n}\n\nexport class TimedDatasetOptions extends DatasetOptions {\n    public timestamp: number;\n\n    constructor(\n        internalId: string,\n        color: string,\n        timestamp: number\n    ) {\n        super(internalId, color);\n        this.timestamp = timestamp;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatasetParameterConstellation.html":{"url":"classes/DatasetParameterConstellation.html","title":"class - DatasetParameterConstellation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatasetParameterConstellation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ParameterConstellation\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                platform\n                            \n                            \n                                    Public\n                                category\n                            \n                            \n                                    Public\n                                feature\n                            \n                            \n                                    Public\n                                offering\n                            \n                            \n                                    Public\n                                phenomenon\n                            \n                            \n                                    Public\n                                procedure\n                            \n                            \n                                    Public\n                                service\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platform:     PlatformParameter\n\n                    \n                \n                    \n                        \n                            Type :     PlatformParameter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            category\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        category:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ParameterConstellation\n\n                                \n                            \n                        \n                            \n                                    Defined in ParameterConstellation:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            feature\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        feature:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ParameterConstellation\n\n                                \n                            \n                        \n                            \n                                    Defined in ParameterConstellation:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offering\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        offering:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ParameterConstellation\n\n                                \n                            \n                        \n                            \n                                    Defined in ParameterConstellation:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            phenomenon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        phenomenon:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ParameterConstellation\n\n                                \n                            \n                        \n                            \n                                    Defined in ParameterConstellation:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            procedure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        procedure:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ParameterConstellation\n\n                                \n                            \n                        \n                            \n                                    Defined in ParameterConstellation:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ParameterConstellation\n\n                                \n                            \n                        \n                            \n                                    Defined in ParameterConstellation:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatasetPresenterComponent.html":{"url":"classes/DatasetPresenterComponent.html","title":"class - DatasetPresenterComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatasetPresenterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ResizableComponent\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        DoCheck\n                        HasLoadableContent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                datasetIdsDiffer\n                            \n                            \n                                    Public\n                                isContentLoading\n                            \n                            \n                                    Public\n                                oldDatasetOptions\n                            \n                            \n                                    Private\n                                oldGraphOptions\n                            \n                            \n                                    Private\n                                selectedDatasetIdsDiffer\n                            \n                            \n                                    Protected\n                                timespan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    \n                                addDataset\n                            \n                            \n                                    Protected\n                                addDatasetByInternalId\n                            \n                            \n                                    Protected\n                                    \n                                datasetOptionsChanged\n                            \n                            \n                                    Protected\n                                    \n                                graphOptionsChanged\n                            \n                            \n                                    Public\n                                ngDoCheck\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                    \n                                reloadData\n                            \n                            \n                                    Protected\n                                    \n                                removeDataset\n                            \n                            \n                                    Protected\n                                    \n                                removeSelectedId\n                            \n                            \n                                    Protected\n                                    \n                                setSelectedId\n                            \n                            \n                                    Protected\n                                    \n                                timeIntervalChanges\n                            \n                            \n                                    Protected\n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                datasetIds\n                            \n                            \n                                datasetOptions\n                            \n                            \n                                graphOptions\n                            \n                            \n                                selectedDatasetIds\n                            \n                            \n                                timeInterval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onContentLoading\n                            \n                            \n                                onDatasetSelected\n                            \n                            \n                                onMessageThrown\n                            \n                            \n                                onTimespanChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(iterableDiffers: IterableDiffers, api: DatasetApiInterface, datasetIdResolver: InternalIdHandler, timeSrvc: Time)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iterableDiffers\n                                                  \n                                                        \n                                                                    IterableDiffers\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        datasetIdResolver\n                                                  \n                                                        \n                                                                    InternalIdHandler\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeSrvc\n                                                  \n                                                        \n                                                                    Time\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            datasetIdsDiffer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        datasetIdsDiffer:     IterableDiffer\n\n                    \n                \n                    \n                        \n                            Type :     IterableDiffer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isContentLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isContentLoading:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            oldDatasetOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldDatasetOptions:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            oldGraphOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldGraphOptions:     U\n\n                    \n                \n                    \n                        \n                            Type :     U\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedDatasetIdsDiffer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedDatasetIdsDiffer:     IterableDiffer\n\n                    \n                \n                    \n                        \n                            Type :     IterableDiffer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            timespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timespan:     Timespan\n\n                    \n                \n                    \n                        \n                            Type :     Timespan\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:56\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            addDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addDataset(id: string, url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            addDatasetByInternalId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addDatasetByInternalId(internalId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            datasetOptionsChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        datasetOptionsChanged(internalId: string, options: T, firstChange: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:138\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstChange\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            graphOptionsChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        graphOptionsChanged(options: U)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:136\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    U\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngDoCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngDoCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            reloadData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reloadData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            removeDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeDataset(internalId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:130\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            removeSelectedId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeSelectedId(internalId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            setSelectedId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setSelectedId(internalId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            timeIntervalChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        timeIntervalChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:126\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            onResize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onResize()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResizableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResizableComponent:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        datasetIds\n                    \n                    \n                            \n                            Type:    string[]\n\n                            \n                        \n                            Default value: []\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        datasetOptions\n                    \n                    \n                            \n                            Type:    Map\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        graphOptions\n                    \n                    \n                            \n                            Type:    U\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedDatasetIds\n                    \n                    \n                            \n                            Type:    string[]\n\n                            \n                        \n                            Default value: []\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        timeInterval\n                    \n                    \n                            \n                            Type:    TimeInterval\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:33\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        onContentLoading\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onDatasetSelected\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMessageThrown\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onTimespanChanged\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts:46\n                            \n                        \n            \n        \n\n\n\n    \n\n\n    \n        import {\n    DoCheck,\n    EventEmitter,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\n\nimport { DatasetApiInterface } from '../dataset-api/api-interface';\nimport { InternalIdHandler } from '../dataset-api/internal-id-handler.service';\nimport { DatasetOptions } from '../model/internal/options';\nimport { ResizableComponent } from '../model/internal/ResizableComponent';\nimport { TimeInterval, Timespan } from '../model/internal/timeInterval';\nimport { HasLoadableContent } from '../model/mixins/has-loadable-content';\nimport { Time } from '../time/time.service';\nimport { PresenterMessage } from './presenter-message';\n\nconst equal = require('deep-equal');\n\nexport abstract class DatasetPresenterComponent\n    extends ResizableComponent implements OnChanges, DoCheck, HasLoadableContent {\n\n    @Input()\n    public datasetIds: string[] = [];\n\n    @Input()\n    public selectedDatasetIds: string[] = [];\n\n    @Input()\n    public timeInterval: TimeInterval;\n\n    @Input()\n    public datasetOptions: Map;\n    public oldDatasetOptions: Map;\n\n    @Input()\n    public graphOptions: U;\n\n    @Output()\n    public onDatasetSelected: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onTimespanChanged: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onMessageThrown: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onContentLoading: EventEmitter = new EventEmitter();\n\n    public isContentLoading: (loading: boolean) => void;\n\n    protected timespan: Timespan;\n\n    private datasetIdsDiffer: IterableDiffer;\n    private selectedDatasetIdsDiffer: IterableDiffer;\n    private oldGraphOptions: U;\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time\n    ) {\n        super();\n        this.datasetIdsDiffer = this.iterableDiffers.find([]).create();\n        this.selectedDatasetIdsDiffer = this.iterableDiffers.find([]).create();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.timeInterval && this.timeInterval) {\n            this.timespan = this.timeSrvc.createTimespanOfInterval(this.timeInterval);\n            this.timeIntervalChanges();\n        }\n    }\n\n    public ngDoCheck(): void {\n        const datasetIdsChanges = this.datasetIdsDiffer.diff(this.datasetIds);\n        if (datasetIdsChanges) {\n            datasetIdsChanges.forEachAddedItem((addedItem) => {\n                this.addDatasetByInternalId(addedItem.item);\n            });\n            datasetIdsChanges.forEachRemovedItem((removedItem) => {\n                this.removeDataset(removedItem.item);\n            });\n        }\n\n        const selectedDatasetIdsChanges = this.selectedDatasetIdsDiffer.diff(this.selectedDatasetIds);\n        if (selectedDatasetIdsChanges) {\n            selectedDatasetIdsChanges.forEachAddedItem((addedItem) => {\n                this.setSelectedId(addedItem.item);\n            });\n            selectedDatasetIdsChanges.forEachRemovedItem((removedItem) => {\n                this.removeSelectedId(removedItem.item);\n            });\n        }\n\n        if (!equal(this.oldGraphOptions, this.graphOptions)) {\n            this.oldGraphOptions = Object.assign({}, this.graphOptions);\n            const options = Object.assign({}, this.graphOptions);\n            this.graphOptionsChanged(options);\n        }\n\n        if (this.datasetOptions) {\n            const firstChange = this.oldDatasetOptions === undefined;\n            if (firstChange) { this.oldDatasetOptions = new Map(); }\n            this.datasetOptions.forEach((value, key) => {\n                if (!equal(value, this.oldDatasetOptions.get(key))) {\n                    this.oldDatasetOptions.set(key, Object.assign({}, this.datasetOptions.get(key)));\n                    this.datasetOptionsChanged(key, value, firstChange);\n                }\n            });\n        }\n    }\n\n    public abstract reloadData(): void;\n\n    protected addDatasetByInternalId(internalId: string) {\n        const internalIdObj = this.datasetIdResolver.resolveInternalId(internalId);\n        this.addDataset(internalIdObj.id, internalIdObj.url);\n    }\n\n    protected abstract timeIntervalChanges(): void;\n\n    protected abstract addDataset(id: string, url: string): void;\n\n    protected abstract removeDataset(internalId: string): void;\n\n    protected abstract setSelectedId(internalId: string): void;\n\n    protected abstract removeSelectedId(internalId: string): void;\n\n    protected abstract graphOptionsChanged(options: U): void;\n\n    protected abstract datasetOptionsChanged(internalId: string, options: T, firstChange: boolean): void;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatasetService.html":{"url":"classes/DatasetService.html","title":"class - DatasetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatasetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/abstract-services/dataset.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                datasetIds\n                            \n                            \n                                    Public\n                                datasetOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addDataset\n                            \n                            \n                                    Protected\n                                    \n                                createStyles\n                            \n                            \n                                    Public\n                                hasDatasets\n                            \n                            \n                                    Protected\n                                    \n                                loadState\n                            \n                            \n                                    Public\n                                removeAllDatasets\n                            \n                            \n                                    Public\n                                removeDataset\n                            \n                            \n                                    Protected\n                                    \n                                saveState\n                            \n                            \n                                    Public\n                                updateDatasetOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorage\n                                                  \n                                                        \n                                                                    LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datasetIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        datasetIds:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datasetOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        datasetOptions:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addDataset(internalId: string, options?: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            createStyles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createStyles(internalId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasDatasets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasDatasets()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            loadState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadState()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeAllDatasets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeAllDatasets()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeDataset(internalId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            saveState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveState()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateDatasetOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateDatasetOptions(options: T, internalId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/abstract-services/dataset.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { LocalStorage } from '../local-storage/local-storage.service';\nimport { DatasetOptions } from '../model/internal/options';\n\nexport abstract class DatasetService {\n\n    public datasetIds: string[] = [];\n\n    public datasetOptions: Map = new Map();\n\n    constructor(\n        protected localStorage: LocalStorage\n    ) { }\n\n    public addDataset(internalId: string, options?: T) {\n        if (this.datasetIds.indexOf(internalId)  temp.push(e));\n            this.saveState();\n        }\n    }\n\n    public removeAllDatasets() {\n        this.datasetIds.length = 0;\n        this.datasetOptions.clear();\n        this.saveState();\n    }\n\n    public removeDataset(internalId: string) {\n        const datasetIdx = this.datasetIds.indexOf(internalId);\n        if (datasetIdx > -1) {\n            this.datasetIds.splice(datasetIdx, 1);\n            this.datasetOptions.delete(internalId);\n        }\n        this.saveState();\n    }\n\n    public hasDatasets(): boolean {\n        return this.datasetIds.length > 0;\n    }\n\n    public updateDatasetOptions(options: T, internalId: string) {\n        this.datasetOptions.set(internalId, options);\n        this.saveState();\n    }\n\n    protected abstract createStyles(internalId: string): T;\n\n    protected abstract saveState(): void;\n\n    protected abstract loadState(): void;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatasetTableData.html":{"url":"interfaces/DatasetTableData.html","title":"interface - DatasetTableData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatasetTableData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/dataset-table-data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        datetime\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datetime\n                                    \n                                \n                                \n                                    \n                                        datetime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DatasetTableData {\n    datetime: number;\n    values: number[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DateProxyPipe.html":{"url":"pipes/DateProxyPipe.html","title":"pipe - DateProxyPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  DateProxyPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/pipes/dateproxy/dateproxy.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        date\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        transform(value: any, pattern: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/pipes/dateproxy/dateproxy.pipe.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        pattern\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'mediumDate'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Pipe({\n    name: 'date',\n    pure: false\n})\nexport class DateProxyPipe implements PipeTransform {\n\n    constructor(\n        protected translate: TranslateService\n    ) { }\n\n    public transform(value: any, pattern: string = 'mediumDate'): any {\n        // simply forward to built-in pipe, but take into account the current language\n        const builtinDatePipe = new DatePipe(this.translate.currentLang || 'en');\n        try {\n            return builtinDatePipe.transform(value, pattern);\n        } catch (error) {\n            console.error(error);\n            return new DatePipe('en').transform(value, pattern);\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DefinedTimespanService.html":{"url":"injectables/DefinedTimespanService.html","title":"injectable - DefinedTimespanService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DefinedTimespanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/time/defined-timespan.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                intervals\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getInterval\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/time/defined-timespan.service.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getInterval(intervalDescriber: DefinedTimespan)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/defined-timespan.service.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        intervalDescriber\n                                                        \n                                                                    DefinedTimespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Timespan\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            intervals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        intervals:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/defined-timespan.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport moment from 'moment';\n\nimport { Timespan } from '../model/internal/timeInterval';\n\nexport enum DefinedTimespan {\n    LASTHOUR = 'last_hour',\n    TODAY = 'today',\n    YESTERDAY = 'yesterday',\n    TODAY_YESTERDAY = 'today_yesterday',\n    CURRENT_WEEK = 'current_week',\n    LAST_WEEK = 'last_week',\n    CURRENT_MONTH = 'current_month',\n    LAST_MONTH = 'last_month',\n    CURRENT_YEAR = 'current_year',\n    LAST_YEAR = 'last_year'\n}\n\n@Injectable()\nexport class DefinedTimespanService {\n\n    private intervals: Map Timespan> = new Map();\n\n    constructor() {\n        this.intervals.set(DefinedTimespan.LASTHOUR, () => {\n            const from = moment().subtract(1, 'hours').unix() * 1000;\n            const to = moment().unix() * 1000;\n            return new Timespan(from, to);\n        });\n        this.intervals.set(DefinedTimespan.TODAY, () => {\n            const from = moment().startOf('day').unix() * 1000;\n            const to = moment().endOf('day').unix() * 1000;\n            return new Timespan(from, to);\n        });\n        this.intervals.set(DefinedTimespan.YESTERDAY, () => {\n            const from = moment().subtract(1, 'days').startOf('day').unix() * 1000;\n            const to = moment().subtract(1, 'days').endOf('day').unix() * 1000;\n            return new Timespan(from, to);\n        });\n        this.intervals.set(DefinedTimespan.TODAY_YESTERDAY, () => {\n            const from = moment().subtract(1, 'days').startOf('day').unix() * 1000;\n            const to = moment().endOf('day').unix() * 1000;\n            return new Timespan(from, to);\n        });\n        this.intervals.set(DefinedTimespan.CURRENT_WEEK, () => {\n            const from = moment().startOf('isoWeek').unix() * 1000;\n            const to = moment().endOf('isoWeek').unix() * 1000;\n            return new Timespan(from, to);\n        });\n        this.intervals.set(DefinedTimespan.LAST_WEEK, () => {\n            const from = moment().subtract(1, 'weeks').startOf('isoWeek').unix() * 1000;\n            const to = moment().subtract(1, 'weeks').endOf('isoWeek').unix() * 1000;\n            return new Timespan(from, to);\n        });\n        this.intervals.set(DefinedTimespan.CURRENT_MONTH, () => {\n            const from = moment().startOf('month').unix() * 1000;\n            const to = moment().endOf('month').unix() * 1000;\n            return new Timespan(from, to);\n        });\n        this.intervals.set(DefinedTimespan.LAST_MONTH, () => {\n            const from = moment().subtract(1, 'months').startOf('month').unix() * 1000;\n            const to = moment().subtract(1, 'months').endOf('month').unix() * 1000;\n            return new Timespan(from, to);\n        });\n        this.intervals.set(DefinedTimespan.CURRENT_YEAR, () => {\n            const from = moment().startOf('year').unix() * 1000;\n            const to = moment().endOf('year').unix() * 1000;\n            return new Timespan(from, to);\n        });\n        this.intervals.set(DefinedTimespan.LAST_YEAR, () => {\n            const from = moment().subtract(1, 'years').startOf('year').unix() * 1000;\n            const to = moment().subtract(1, 'years').endOf('year').unix() * 1000;\n            return new Timespan(from, to);\n        });\n    }\n\n    public getInterval(intervalDescriber: DefinedTimespan): Timespan {\n        if (this.intervals.has(intervalDescriber)) {\n            return this.intervals.get(intervalDescriber)();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DragOptionsComponent.html":{"url":"components/DragOptionsComponent.html","title":"component - DragOptionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DragOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/modification/src/lib/drag-options/drag-options.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-drag-options\n            \n\n\n\n\n            \n                templateUrl\n                ./drag-options.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                togglePanZoom\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTogglePanZoom\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTogglePanZoom\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/drag-options/drag-options.component.ts:10\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            togglePanZoom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        togglePanZoom()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/drag-options/drag-options.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n    selector: 'n52-drag-options',\n    templateUrl: './drag-options.component.html'\n})\nexport class DragOptionsComponent {\n\n    @Output()\n    public onTogglePanZoom: EventEmitter = new EventEmitter();\n\n    public togglePanZoom() {\n        this.onTogglePanZoom.emit();\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DragOptionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawOptions.html":{"url":"interfaces/DrawOptions.html","title":"interface - DrawOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/d3/src/lib/d3-trajectory-graph/d3-trajectory-graph.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        color\n                                \n                                \n                                        first\n                                \n                                \n                                        id\n                                \n                                \n                                        offset\n                                \n                                \n                                        uom\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                    \n                                \n                                \n                                    \n                                        first:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uom\n                                    \n                                \n                                \n                                    \n                                        uom:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    IterableDiffers,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    DatasetApiInterface,\n    DatasetOptions,\n    DatasetPresenterComponent,\n    IDataset,\n    InternalIdHandler,\n    LocatedTimeValueEntry,\n    Time,\n} from '@helgoland/core';\nimport {\n    area,\n    axisBottom,\n    axisLeft,\n    axisRight,\n    axisTop,\n    bisector,\n    curveLinear,\n    extent,\n    line,\n    mouse,\n    ScaleLinear,\n    scaleLinear,\n    select,\n    timeFormat,\n} from 'd3';\nimport moment from 'moment';\n\nimport { D3AxisType } from '../model/d3-axis-type';\nimport { D3GraphOptions } from '../model/d3-graph-options';\nimport { D3SelectionRange } from '../model/d3-selection-range';\n\ninterface DataEntry extends LocatedTimeValueEntry {\n    dist: number;\n    tick: number;\n    x: number;\n    y: number;\n    xDiagCoord?: number;\n    [id: string]: any;\n}\n\ninterface DatasetConstellation {\n    dataset?: IDataset;\n    data?: LocatedTimeValueEntry[];\n    yScale?: ScaleLinear;\n    drawOptions?: DrawOptions;\n    focusLabelRect?: any;\n    focusLabel?: any;\n}\n\ninterface DrawOptions {\n    uom: string;\n    id: string;\n    color: string;\n    first: boolean;\n    offset: number;\n}\n\n@Component({\n    selector: 'n52-d3-trajectory-graph',\n    templateUrl: './d3-trajectory-graph.component.html',\n    styleUrls: ['./d3-trajectory-graph.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class D3TrajectoryGraphComponent\n    extends DatasetPresenterComponent\n    implements AfterViewInit, OnChanges {\n\n    @Input()\n    public selection: D3SelectionRange;\n\n    @Output()\n    public onSelectionChangedFinished: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onSelectionChanged: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onHoverHighlight: EventEmitter = new EventEmitter();\n\n    @ViewChild('dthree')\n    public d3Elem: ElementRef;\n\n    private datasetMap: Map = new Map();\n    private rawSvg: any;\n    private graph: any;\n    private height: number;\n    private width: number;\n    private margin = {\n        top: 10,\n        right: 10,\n        bottom: 40,\n        left: 40\n    };\n    private maxLabelwidth = 0;\n    private lineFun: d3.Line;\n    private area: d3.Area;\n    private xScaleBase: d3.ScaleLinear;\n    private yScaleBase: d3.ScaleLinear;\n    private background: any;\n    private focusG: any;\n    private highlightFocus: any;\n    private focuslabelTime: any;\n    private focuslabelY: any;\n    private yAxisGen: d3.Axis;\n    private baseValues: DataEntry[] = [];\n    private dragging: boolean;\n    private dragStart: [number, number];\n    private dragCurrent: [number, number];\n    private dragRect: any;\n    private dragRectG: any;\n    private bufferSum: number;\n    private dataLength: number;\n\n    private defaultGraphOptions: D3GraphOptions = {\n        axisType: D3AxisType.Distance,\n        dotted: false\n    };\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc);\n        this.graphOptions = this.defaultGraphOptions;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        super.ngOnChanges(changes);\n        if (changes.selection && this.selection) {\n            this.processAllData();\n            this.drawLineGraph();\n        }\n    }\n\n    public ngAfterViewInit(): void {\n        this.rawSvg = select(this.d3Elem.nativeElement)\n            .append('svg')\n            .attr('width', '100%')\n            .attr('height', '100%');\n\n        this.graph = this.rawSvg\n            .append('g')\n            .attr('transform', 'translate(' + (this.margin.left + this.maxLabelwidth) + ',' + this.margin.top + ')');\n\n        this.lineFun = line()\n            .x(this.calcXValue)\n            .y(this.calcYValue)\n            .curve(curveLinear);\n\n        this.area = area()\n            .x(this.calcXValue)\n            .y0(this.height)\n            .y1(this.calcYValue)\n            .curve(curveLinear);\n\n        this.drawLineGraph();\n    }\n\n    public reloadData(): void {\n        console.log('reload data at ' + new Date());\n    }\n\n    protected timeIntervalChanges(): void {\n        this.datasetMap.forEach((entry) => {\n            if (entry.dataset) {\n                this.loadData(entry.dataset);\n            }\n        });\n    }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getDataset(id, url).subscribe((dataset) => {\n            this.datasetMap.set(dataset.internalId, { dataset });\n            this.loadData(dataset);\n        });\n    }\n\n    protected removeDataset(internalId: string): void {\n        this.datasetMap.delete(internalId);\n        this.processAllData();\n        this.drawLineGraph();\n    }\n\n    protected setSelectedId(internalId: string): void {\n        throw new Error('Method not implemented.');\n    }\n\n    protected removeSelectedId(internalId: string): void {\n        throw new Error('Method not implemented.');\n    }\n\n    protected graphOptionsChanged(options: D3GraphOptions): void {\n        this.timeIntervalChanges();\n    }\n\n    protected datasetOptionsChanged(internalId: string, options: DatasetOptions, firstChange: boolean): void {\n        if (!firstChange && this.datasetMap.has(internalId)) {\n            this.loadData(this.datasetMap.get(internalId).dataset);\n        }\n    }\n\n    protected onResize(): void {\n        this.drawLineGraph();\n    }\n\n    private loadData(dataset: IDataset) {\n        if (this.timespan &&\n            this.datasetOptions.has(dataset.internalId) &&\n            this.datasetOptions.get(dataset.internalId).visible) {\n            const buffer = this.timeSrvc.getBufferedTimespan(this.timespan, 0.2);\n            const option = this.datasetOptions.get(dataset.internalId);\n            this.api.getData(dataset.id, dataset.url, buffer,\n                {\n                    generalize: option.generalize\n                })\n                .subscribe((result) => {\n                    this.dataLength = result.values.length;\n                    this.datasetMap.get(dataset.internalId).data = result.values;\n                    this.processDataForId(dataset.internalId);\n                    this.drawLineGraph();\n                });\n        } else {\n            this.drawLineGraph();\n        }\n    }\n\n    private processAllData() {\n        this.baseValues = [];\n        this.datasetIds.forEach((id) => this.processDataForId(id));\n    }\n\n    private processDataForId(internalId: string) {\n        if (this.datasetOptions.get(internalId).visible) {\n            const datasetEntry = this.datasetMap.get(internalId);\n            const firstEntry = this.baseValues.length === 0;\n            let previous: DataEntry = null;\n            datasetEntry.data.forEach((elem, idx) => {\n                if (firstEntry) {\n                    const entry = this.createDataEntry(internalId, elem, previous, idx);\n                    if (this.selection) {\n                        if (idx >= this.selection.from && idx = this.selection.from && idx  {\n        return this.yScaleBase(d.value);\n    }\n\n    private calcXValue = (d: DataEntry, i: number) => {\n        const xDiagCoord = this.xScaleBase(this.getXValue(d));\n        d.xDiagCoord = xDiagCoord;\n        return xDiagCoord;\n    }\n\n    private calculateHeight(): number {\n        return this.rawSvg.node().height.baseVal.value - this.margin.top - this.margin.bottom;\n    }\n\n    private calculateWidth(): number {\n        return this.rawSvg.node().width.baseVal.value - this.margin.left - this.margin.right - this.maxLabelwidth;\n    }\n\n    private getXValue(data: DataEntry) {\n        switch (this.graphOptions.axisType) {\n            case D3AxisType.Distance:\n                return data.dist;\n            case D3AxisType.Time:\n                return data.timestamp;\n            case D3AxisType.Ticks:\n                return data.tick;\n            default:\n                return data.tick;\n        }\n    }\n\n    private drawDots(values: DataEntry[], yScale: d3.ScaleLinear, options: DrawOptions) {\n        this.graph.selectAll('dot')\n            .data(values)\n            .enter().append('circle')\n            .attr('stroke', options.color)\n            .attr('r', 1.5)\n            .attr('fill', options.color)\n            .attr('cx', this.calcXValue)\n            .attr('cy', (d: DataEntry) => yScale(d[options.id]));\n    }\n\n    private drawValueLine(values: DataEntry[], yScale: d3.ScaleLinear, options: DrawOptions) {\n        this.graph.append('svg:path')\n            .datum(values)\n            .attr('class', 'line')\n            .attr('fill', 'none')\n            .attr('stroke', options.color)\n            .attr('stroke-width', 1)\n            .attr('d', line()\n                .x(this.calcXValue)\n                .y((d: DataEntry) => yScale(d[options.id]))\n                .curve(curveLinear));\n    }\n\n    private drawGraph(yScale: d3.ScaleLinear, options: DrawOptions) {\n        if (this.graphOptions.dotted) {\n            this.drawDots(this.baseValues, yScale, options);\n        } else {\n            this.drawValueLine(this.baseValues, yScale, options);\n        }\n    }\n\n    private drawLineGraph() {\n        if (!this.baseValues || this.baseValues.length === 0 || !this.graph) {\n            return;\n        }\n\n        this.height = this.calculateHeight();\n        this.width = this.calculateWidth();\n\n        this.graph.selectAll('*').remove();\n\n        this.bufferSum = 0;\n\n        this.yScaleBase = null;\n\n        this.datasetMap.forEach((datasetEntry, id) => {\n            if (this.datasetOptions.has(id) && datasetEntry.data && this.datasetOptions.get(id).visible) {\n                datasetEntry.drawOptions = {\n                    uom: datasetEntry.dataset.uom,\n                    id: datasetEntry.dataset.internalId,\n                    color: this.datasetOptions.get(id).color,\n                    first: this.yScaleBase === null,\n                    offset: this.bufferSum\n                };\n                const axisResult = this.drawYAxis(datasetEntry.drawOptions);\n                if (this.yScaleBase === null) {\n                    this.yScaleBase = axisResult.yScale;\n                } else {\n                    this.bufferSum = axisResult.buffer;\n                }\n                datasetEntry.yScale = axisResult.yScale;\n            }\n        });\n\n        if (!this.yScaleBase) {\n            return;\n        }\n\n        // draw right axis as border\n        this.graph.append('svg:g')\n            .attr('class', 'y axis')\n            .attr('transform', 'translate(' + this.width + ', 0)')\n            .call(axisRight(this.yScaleBase).tickSize(0).ticks(0));\n\n        this.drawXAxis(this.bufferSum);\n\n        this.datasetMap.forEach((entry, id) => {\n            if (this.datasetOptions.has(id) && this.datasetOptions.get(id).visible && entry.data) {\n                this.drawGraph(entry.yScale, entry.drawOptions);\n            }\n        });\n\n        this.background = this.graph.append('svg:rect')\n            .attr('width', this.width - this.bufferSum)\n            .attr('height', this.height)\n            .attr('fill', 'none')\n            .attr('stroke', 'none')\n            .attr('pointer-events', 'all')\n            .attr('transform', 'translate(' + this.bufferSum + ', 0)')\n            .on('mousemove.focus', this.mousemoveHandler)\n            .on('mouseout.focus', this.mouseoutHandler)\n            .on('mousedown.drag', this.dragStartHandler)\n            .on('mousemove.drag', this.dragHandler)\n            .on('mouseup.drag', this.dragEndHandler);\n\n        this.focusG = this.graph.append('g');\n        this.highlightFocus = this.focusG.append('svg:line')\n            .attr('class', 'mouse-focus-line')\n            .attr('x2', '0')\n            .attr('y2', '0')\n            .attr('x1', '0')\n            .attr('y1', '0')\n            .style('stroke', 'black')\n            .style('stroke-width', '1px');\n\n        this.datasetMap.forEach((entry, id) => {\n            if (this.datasetOptions.has(id) && this.datasetOptions.get(id).visible && entry.data) {\n                entry.focusLabelRect = this.focusG.append('svg:rect')\n                    .style('fill', 'white')\n                    .style('stroke', 'none')\n                    .style('pointer-events', 'none');\n                entry.focusLabel = this.focusG.append('svg:text').attr('class', 'mouse-focus-label-x')\n                    .style('pointer-events', 'none')\n                    .style('fill', this.datasetOptions.get(id).color)\n                    .style('font-weight', 'lighter');\n            }\n        });\n\n        this.focuslabelTime = this.focusG.append('svg:text')\n            .style('pointer-events', 'none')\n            .attr('class', 'mouse-focus-label-x');\n        this.focuslabelY = this.focusG.append('svg:text')\n            .style('pointer-events', 'none')\n            .attr('class', 'mouse-focus-label-y');\n    }\n\n    private mousemoveHandler = () => {\n        if (!this.baseValues || this.baseValues.length === 0) {\n            return;\n        }\n        const coords = mouse(this.background.node());\n        const idx = this.getItemForX(coords[0] + this.bufferSum, this.baseValues);\n        this.showDiagramIndicator(idx);\n        this.onHoverHighlight.emit(this.baseValues[idx].tick);\n    }\n\n    private mouseoutHandler = () => {\n        this.hideDiagramIndicator();\n    }\n\n    private dragStartHandler = () => {\n        this.dragging = false;\n        this.dragStart = mouse(this.background.node());\n    }\n\n    private dragHandler = () => {\n        this.dragging = true;\n        this.drawDragRectangle();\n    }\n\n    private dragEndHandler = () => {\n        if (!this.dragStart || !this.dragging) {\n            this.onSelectionChangedFinished.emit({ from: 0, to: this.dataLength });\n        } else {\n            const from = this.getItemForX(this.dragStart[0] + this.bufferSum, this.baseValues);\n            const to = this.getItemForX(this.dragCurrent[0] + this.bufferSum, this.baseValues);\n            this.onSelectionChangedFinished.emit(this.prepareRange(this.baseValues[from].tick, this.baseValues[to].tick));\n        }\n        this.dragStart = null;\n        this.dragging = false;\n        this.resetDrag();\n    }\n\n    private prepareRange(from: number, to: number): D3SelectionRange {\n        if (from  {\n        const item = this.baseValues[idx];\n        this.focusG.style('visibility', 'visible');\n        this.highlightFocus.attr('x1', item.xDiagCoord)\n            .attr('y1', 0)\n            .attr('x2', item.xDiagCoord)\n            .attr('y2', this.height)\n            .classed('hidden', false);\n\n        let onLeftSide = false;\n        if ((this.background.node().getBBox().width + this.bufferSum) / 2 > item.xDiagCoord) { onLeftSide = true; }\n\n        this.showLabelValues(item, onLeftSide);\n        this.showTimeIndicatorLabel(item, onLeftSide);\n        this.showBottomIndicatorLabel(item, onLeftSide);\n    }\n\n    private showLabelValues(item: DataEntry, onLeftSide: boolean) {\n        this.datasetMap.forEach((entry, id) => {\n            if (this.datasetOptions.get(id).visible) {\n                if (entry.focusLabel) {\n                    entry.focusLabel.text(item[id] + (entry.dataset.uom ? entry.dataset.uom : ''));\n                    const entryX = onLeftSide ?\n                        item.xDiagCoord + 2 : item.xDiagCoord - this.getDimensions(entry.focusLabel.node()).w;\n                    entry.focusLabel\n                        .attr('x', entryX)\n                        .attr('y', entry.yScale(item[id]) + this.getDimensions(entry.focusLabel.node()).h - 3);\n                    entry.focusLabelRect\n                        .attr('x', entryX)\n                        .attr('y', entry.yScale(item[id]))\n                        .attr('width', this.getDimensions(entry.focusLabel.node()).w)\n                        .attr('height', this.getDimensions(entry.focusLabel.node()).h);\n                }\n            }\n        });\n    }\n\n    private showTimeIndicatorLabel(item: DataEntry, onLeftSide: boolean) {\n        this.focuslabelTime.text(moment(item.timestamp).format('DD.MM.YY HH:mm'));\n        this.focuslabelTime\n            .attr('x', onLeftSide ? item.xDiagCoord + 2 : item.xDiagCoord - this.getDimensions(this.focuslabelTime.node()).w)\n            .attr('y', 13);\n    }\n\n    private showBottomIndicatorLabel(item: DataEntry, onLeftSide: boolean) {\n        if (this.graphOptions.axisType === D3AxisType.Distance) {\n            this.focuslabelY.text(item.dist + ' km');\n        }\n        if (this.graphOptions.axisType === D3AxisType.Ticks) {\n            this.focuslabelY.text('Measurement: ' + item.tick);\n        }\n        this.focuslabelY\n            .attr('y', this.calculateHeight() - 5)\n            .attr('x', onLeftSide ? item.xDiagCoord + 2 : item.xDiagCoord - this.getDimensions(this.focuslabelY.node()).w);\n    }\n\n    private getDimensions(el: any) {\n        let w = 0;\n        let h = 0;\n        if (el) {\n            const dimensions = el.getBBox();\n            w = dimensions.width;\n            h = dimensions.height;\n        } else {\n            console.log('error: getDimensions() ' + el + ' not found.');\n        }\n        return {\n            w,\n            h\n        };\n    }\n\n    private getItemForX(x: number, data: DataEntry[]) {\n        const index = this.xScaleBase.invert(x);\n        const bisectDate = bisector((d: DataEntry) => {\n            switch (this.graphOptions.axisType) {\n                case D3AxisType.Distance:\n                    return d.dist;\n                case D3AxisType.Time:\n                    return d.timestamp;\n                case D3AxisType.Ticks:\n                default:\n                    return d.tick;\n            }\n        }).left;\n        return bisectDate(this.baseValues, index);\n    }\n\n    private drawYAxis(options: DrawOptions): any {\n        const range = extent(this.baseValues, (datum, index, array) => {\n            return datum[options.id]; // here with ID\n        });\n        const rangeOffset = (range[1] - range[0]) * 0.10;\n        const yScale = scaleLinear()\n            .domain([range[0] - rangeOffset, range[1] + rangeOffset])\n            .range([this.height, 0]);\n\n        this.yAxisGen = axisLeft(yScale).ticks(5);\n\n        // draw y axis\n        const axis = this.graph.append('svg:g')\n            .attr('class', 'y axis')\n            .call(this.yAxisGen);\n\n        // draw y axis label\n        const text = this.graph.append('text')\n            .attr('transform', 'rotate(-90)')\n            .attr('dy', '1em')\n            .style('text-anchor', 'middle')\n            .style('fill', options.color)\n            .text(options.uom);\n\n        const axisWidth = axis.node().getBBox().width + 5 + this.getDimensions(text.node()).h;\n        const buffer = options.offset + (axisWidth  '')\n                );\n        }\n\n        return {\n            buffer,\n            yScale\n        };\n    }\n\n    private drawXAxis(buffer: number) {\n        this.xScaleBase = scaleLinear()\n            .domain(this.getXDomain(this.baseValues))\n            .range([buffer, this.width]);\n\n        const xAxisGen = axisBottom(this.xScaleBase).ticks(5);\n\n        if (this.graphOptions.axisType === D3AxisType.Time) {\n            xAxisGen.tickFormat((d) => {\n                return timeFormat('%d.%m.%Y %H:%M:%S')(new Date(d.valueOf()));\n            });\n        }\n\n        // draw x axis\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(xAxisGen);\n\n        // draw the x grid lines\n        this.graph.append('svg:g')\n            .attr('class', 'grid')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(axisBottom(this.xScaleBase)\n                .ticks(10)\n                .tickSize(-this.height)\n                .tickFormat(() => '')\n            );\n\n        // draw upper axis as border\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .call(axisTop(this.xScaleBase).ticks(0).tickSize(0));\n\n        // text label for the x axis\n        this.graph.append('text')\n            .attr('x', (this.width + buffer) / 2)\n            .attr('y', this.height + this.margin.bottom - 5)\n            .style('text-anchor', 'middle')\n            .text(this.getXAxisLabel());\n    }\n\n    private getXDomain(values: DataEntry[]) {\n        switch (this.graphOptions.axisType) {\n            case D3AxisType.Distance:\n                return [values[0].dist, values[values.length - 1].dist];\n            case D3AxisType.Time:\n                return [values[0].timestamp, values[values.length - 1].timestamp];\n            default:\n                return [values[0].tick, values[values.length - 1].tick];\n        }\n    }\n\n    private getXAxisLabel() {\n        switch (this.graphOptions.axisType) {\n            case D3AxisType.Distance:\n                return 'Distance';\n            case D3AxisType.Time:\n                return 'Time';\n            default:\n                return 'Ticks';\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventingApiService.html":{"url":"classes/EventingApiService.html","title":"class - EventingApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventingApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/eventing-api.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ApiInterface\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                getEvent\n                            \n                            \n                                    Public\n                                    \n                                getEvents\n                            \n                            \n                                    Public\n                                    \n                                getSubscription\n                            \n                            \n                                    Public\n                                    \n                                getSubscriptions\n                            \n                            \n                                    Protected\n                                createRequestTimespan\n                            \n                            \n                                    Protected\n                                createRequestUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            getEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEvent(id: string, apiUrl: string, options?: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-api.service.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            getEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEvents(apiUrl: string, params?: EventingEventFilter, options?: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-api.service.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    EventingEventFilter\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            getSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSubscription(id: string, apiUrl: string, options?: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-api.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            getSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSubscriptions(apiUrl: string, params?: EventingSubscriptionFilter, options?: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-api.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    EventingSubscriptionFilter\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createRequestTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createRequestTimespan(timespan: Timespan)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ApiInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in ApiInterface:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createRequestUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createRequestUrl(apiUrl: string, endpoint: string, id?: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ApiInterface\n\n                                \n                            \n                        \n                            \n                                    Defined in ApiInterface:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        endpoint\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiInterface, HttpRequestOptions } from '@helgoland/core';\nimport { Observable } from 'rxjs';\n\nimport { EventingEventFilter, EventingSubscriptionFilter } from './model/request';\nimport { EventingEvent, EventingEventResults, EventingSubscription, EventingSubscriptionResults } from './model/response';\n\nexport abstract class EventingApiService extends ApiInterface {\n\n  public abstract getEvents(apiUrl: string, params?: EventingEventFilter, options?: HttpRequestOptions): Observable;\n\n  public abstract getEvent(id: string, apiUrl: string, options?: HttpRequestOptions): Observable;\n\n  public abstract getSubscriptions(apiUrl: string, params?: EventingSubscriptionFilter, options?: HttpRequestOptions): Observable;\n\n  public abstract getSubscription(id: string, apiUrl: string, options?: HttpRequestOptions): Observable;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventingEvent.html":{"url":"interfaces/EventingEvent.html","title":"interface - EventingEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventingEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/response.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Id\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                        eventType\n                                \n                                \n                                        label\n                                \n                                \n                                        notificationLevel\n                                \n                                \n                                        publication\n                                \n                                \n                                        subscription\n                                \n                                \n                                        timestamp\n                                \n                                \n                                        timestampCreated\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventType\n                                    \n                                \n                                \n                                    \n                                        eventType:     Id\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Id\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notificationLevel\n                                    \n                                \n                                \n                                    \n                                        notificationLevel:     Id\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Id\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publication\n                                    \n                                \n                                \n                                    \n                                        publication:     Id\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Id\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscription\n                                    \n                                \n                                \n                                    \n                                        subscription:     Id\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Id\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestampCreated\n                                    \n                                \n                                \n                                    \n                                        timestampCreated:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Id {\n    id: string;\n    href: string;\n}\n\nexport interface EventingEvent extends Id {\n    label: string;\n    eventType: Id;\n    notificationLevel: Id;\n    publication: Id;\n    subscription: Id;\n    timestamp: number;\n    timestampCreated: number;\n    data?: {\n        eventTrigger: {\n            code: number;\n            label: string;\n            threshold: number;\n            thresholdUnit: string;\n        }\n        previousTimestamp: number;\n        previousValue: number;\n        unit: string;\n        value: number;\n    };\n}\n\nexport interface EventingEventResults {\n    data: EventingEvent[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingSubscription extends Id {\n    deliveryMethod: Id;\n    template: EventingTemplate;\n    user: Id;\n}\n\nexport interface EventingSubscriptionResults {\n    data: EventingSubscription[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingTemplate extends Id {\n    label: string;\n    publication: Id;\n}\n\nexport interface CollectionMetadata {\n    limit: number;\n    offset: number;\n    total: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventingEventFilter.html":{"url":"interfaces/EventingEventFilter.html","title":"interface - EventingEventFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventingEventFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/request.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EventingFilter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        latest\n                                \n                                \n                                            Optional\n                                        subscriptions\n                                \n                                \n                                            Optional\n                                        timespan\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latest\n                                    \n                                \n                                \n                                    \n                                        latest:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscriptions\n                                    \n                                \n                                \n                                    \n                                        subscriptions:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timespan\n                                    \n                                \n                                \n                                    \n                                        timespan:     Timespan\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timespan\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timespan } from '@helgoland/core';\n\nexport interface EventingFilter {\n    expanded?: boolean;\n    offset?: number;\n    limit?: number;\n}\n\nexport interface EventingEventFilter extends EventingFilter {\n    latest?: boolean;\n    subscriptions?: string;\n    timespan?: Timespan;\n}\n\nexport interface EventingSubscriptionFilter extends EventingFilter { }\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventingEventResults.html":{"url":"interfaces/EventingEventResults.html","title":"interface - EventingEventResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventingEventResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/response.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        metadata\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     EventingEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventingEvent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                    \n                                \n                                \n                                    \n                                        metadata:     CollectionMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CollectionMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Id {\n    id: string;\n    href: string;\n}\n\nexport interface EventingEvent extends Id {\n    label: string;\n    eventType: Id;\n    notificationLevel: Id;\n    publication: Id;\n    subscription: Id;\n    timestamp: number;\n    timestampCreated: number;\n    data?: {\n        eventTrigger: {\n            code: number;\n            label: string;\n            threshold: number;\n            thresholdUnit: string;\n        }\n        previousTimestamp: number;\n        previousValue: number;\n        unit: string;\n        value: number;\n    };\n}\n\nexport interface EventingEventResults {\n    data: EventingEvent[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingSubscription extends Id {\n    deliveryMethod: Id;\n    template: EventingTemplate;\n    user: Id;\n}\n\nexport interface EventingSubscriptionResults {\n    data: EventingSubscription[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingTemplate extends Id {\n    label: string;\n    publication: Id;\n}\n\nexport interface CollectionMetadata {\n    limit: number;\n    offset: number;\n    total: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventingFilter.html":{"url":"interfaces/EventingFilter.html","title":"interface - EventingFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventingFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/request.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        expanded\n                                \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        offset\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                    \n                                \n                                \n                                    \n                                        expanded:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                    \n                                \n                                \n                                    \n                                        offset:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timespan } from '@helgoland/core';\n\nexport interface EventingFilter {\n    expanded?: boolean;\n    offset?: number;\n    limit?: number;\n}\n\nexport interface EventingEventFilter extends EventingFilter {\n    latest?: boolean;\n    subscriptions?: string;\n    timespan?: Timespan;\n}\n\nexport interface EventingSubscriptionFilter extends EventingFilter { }\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventingImplApiInterface.html":{"url":"injectables/EventingImplApiInterface.html","title":"injectable - EventingImplApiInterface","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  EventingImplApiInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addParameterFilter\n                            \n                            \n                                    Private\n                                addTimespan\n                            \n                            \n                                    Private\n                                createBasicAuthHeader\n                            \n                            \n                                    Public\n                                getEvent\n                            \n                            \n                                    Public\n                                getEvents\n                            \n                            \n                                    Public\n                                getSubscription\n                            \n                            \n                                    Public\n                                getSubscriptions\n                            \n                            \n                                    Protected\n                                prepareFilterParams\n                            \n                            \n                                    Protected\n                                requestApi\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addParameterFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addParameterFilter(params: EventingFilter, key: string, httpParams: HttpParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    EventingFilter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        httpParams\n                                                        \n                                                                    HttpParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpParams\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addTimespan(timespan: Timespan, httpParams: HttpParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        httpParams\n                                                        \n                                                                    HttpParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpParams\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createBasicAuthHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createBasicAuthHeader(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpHeaders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEvent(id: string, apiUrl: string, options: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEvents(apiUrl: string, filterParameter: EventingEventFilter, options: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        filterParameter\n                                                        \n                                                                    EventingEventFilter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSubscription(id: string, apiUrl: string, options: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getSubscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSubscriptions(apiUrl: string, filterParameter: EventingSubscriptionFilter, options: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        filterParameter\n                                                        \n                                                                    EventingSubscriptionFilter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            prepareFilterParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        prepareFilterParams(params: EventingFilter)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    EventingFilter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpParams\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            requestApi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        requestApi(url: string, params: HttpParams, options: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/eventing/src/lib/eventing-impl-api-interface.service.ts:42\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    HttpParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                new HttpParams()\n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpRequestOptions, HttpService, Timespan, UriParameterCoder } from '@helgoland/core';\nimport { Observable } from 'rxjs';\n\nimport { EventingApiService } from './eventing-api.service';\nimport { EventingEventFilter, EventingFilter, EventingSubscriptionFilter } from './model/request';\nimport { EventingEvent, EventingEventResults, EventingSubscription, EventingSubscriptionResults } from './model/response';\n\n@Injectable()\nexport class EventingImplApiInterface extends EventingApiService {\n\n    constructor(\n        private httpService: HttpService\n    ) { super(); }\n\n    public getEvents(apiUrl: string, filterParameter: EventingEventFilter = {}, options: HttpRequestOptions = {}): Observable {\n        const url = this.createRequestUrl(apiUrl, 'events');\n        let httpParams = this.prepareFilterParams(filterParameter);\n        httpParams = this.addParameterFilter(filterParameter, 'latest', httpParams);\n        httpParams = this.addParameterFilter(filterParameter, 'subscriptions', httpParams);\n        httpParams = this.addTimespan(filterParameter.timespan, httpParams);\n        return this.requestApi(url, httpParams, options);\n    }\n\n    public getEvent(id: string, apiUrl: string, options: HttpRequestOptions = {}): Observable {\n        const url = this.createRequestUrl(apiUrl, 'events', id);\n        return this.requestApi(url, null, options);\n    }\n\n    public getSubscriptions(apiUrl: string, filterParameter: EventingSubscriptionFilter = {}, options: HttpRequestOptions = {}): Observable {\n        const url = this.createRequestUrl(apiUrl, 'subscriptions');\n        const httpParams = this.prepareFilterParams(filterParameter);\n        return this.requestApi(url, httpParams, options);\n    }\n\n    public getSubscription(id: string, apiUrl: string, options: HttpRequestOptions = {}): Observable {\n        const url = this.createRequestUrl(apiUrl, 'subscriptions', id);\n        return this.requestApi(url, null, options);\n    }\n\n    protected requestApi(url: string, params: HttpParams = new HttpParams(), options: HttpRequestOptions = {}): Observable {\n        const headers = this.createBasicAuthHeader(options.basicAuthToken);\n        return this.httpService.client(options).get(url, { params, headers });\n    }\n\n    protected prepareFilterParams(params: EventingFilter): HttpParams {\n        let httpParams = new HttpParams({ encoder: new UriParameterCoder() });\n        httpParams = this.addParameterFilter(params, 'expanded', httpParams);\n        httpParams = this.addParameterFilter(params, 'offset', httpParams);\n        httpParams = this.addParameterFilter(params, 'limit', httpParams);\n        return httpParams;\n    }\n\n    private addTimespan(timespan: Timespan, httpParams: HttpParams): HttpParams {\n        if (timespan !== undefined) {\n            return httpParams.set('timespan', this.createRequestTimespan(timespan));\n        }\n        return httpParams;\n    }\n\n    private createBasicAuthHeader(token: string): HttpHeaders {\n        const headers = new HttpHeaders();\n        if (token) { return headers.set('Authorization', token); }\n        return headers;\n    }\n\n    private addParameterFilter(params: EventingFilter, key: string, httpParams: HttpParams): HttpParams {\n        if (params && params[key] !== undefined) {\n            return httpParams.set(key, params[key]);\n        }\n        return httpParams;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventingModule.html":{"url":"modules/EventingModule.html","title":"module - EventingModule","body":"\n                   \n\n\n\n\n  Modules\n  EventingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/eventing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: [],\n  providers: []\n})\nexport class EventingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventingSubscription.html":{"url":"interfaces/EventingSubscription.html","title":"interface - EventingSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventingSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/response.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Id\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deliveryMethod\n                                \n                                \n                                        template\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deliveryMethod\n                                    \n                                \n                                \n                                    \n                                        deliveryMethod:     Id\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Id\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template\n                                    \n                                \n                                \n                                    \n                                        template:     EventingTemplate\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventingTemplate\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     Id\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Id\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Id {\n    id: string;\n    href: string;\n}\n\nexport interface EventingEvent extends Id {\n    label: string;\n    eventType: Id;\n    notificationLevel: Id;\n    publication: Id;\n    subscription: Id;\n    timestamp: number;\n    timestampCreated: number;\n    data?: {\n        eventTrigger: {\n            code: number;\n            label: string;\n            threshold: number;\n            thresholdUnit: string;\n        }\n        previousTimestamp: number;\n        previousValue: number;\n        unit: string;\n        value: number;\n    };\n}\n\nexport interface EventingEventResults {\n    data: EventingEvent[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingSubscription extends Id {\n    deliveryMethod: Id;\n    template: EventingTemplate;\n    user: Id;\n}\n\nexport interface EventingSubscriptionResults {\n    data: EventingSubscription[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingTemplate extends Id {\n    label: string;\n    publication: Id;\n}\n\nexport interface CollectionMetadata {\n    limit: number;\n    offset: number;\n    total: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventingSubscriptionFilter.html":{"url":"interfaces/EventingSubscriptionFilter.html","title":"interface - EventingSubscriptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventingSubscriptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/request.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EventingFilter\n            \n\n\n\n\n    \n\n\n    \n        import { Timespan } from '@helgoland/core';\n\nexport interface EventingFilter {\n    expanded?: boolean;\n    offset?: number;\n    limit?: number;\n}\n\nexport interface EventingEventFilter extends EventingFilter {\n    latest?: boolean;\n    subscriptions?: string;\n    timespan?: Timespan;\n}\n\nexport interface EventingSubscriptionFilter extends EventingFilter { }\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventingSubscriptionResults.html":{"url":"interfaces/EventingSubscriptionResults.html","title":"interface - EventingSubscriptionResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventingSubscriptionResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/response.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        metadata\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     EventingSubscription[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventingSubscription[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                    \n                                \n                                \n                                    \n                                        metadata:     CollectionMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CollectionMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Id {\n    id: string;\n    href: string;\n}\n\nexport interface EventingEvent extends Id {\n    label: string;\n    eventType: Id;\n    notificationLevel: Id;\n    publication: Id;\n    subscription: Id;\n    timestamp: number;\n    timestampCreated: number;\n    data?: {\n        eventTrigger: {\n            code: number;\n            label: string;\n            threshold: number;\n            thresholdUnit: string;\n        }\n        previousTimestamp: number;\n        previousValue: number;\n        unit: string;\n        value: number;\n    };\n}\n\nexport interface EventingEventResults {\n    data: EventingEvent[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingSubscription extends Id {\n    deliveryMethod: Id;\n    template: EventingTemplate;\n    user: Id;\n}\n\nexport interface EventingSubscriptionResults {\n    data: EventingSubscription[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingTemplate extends Id {\n    label: string;\n    publication: Id;\n}\n\nexport interface CollectionMetadata {\n    limit: number;\n    offset: number;\n    total: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventingTemplate.html":{"url":"interfaces/EventingTemplate.html","title":"interface - EventingTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventingTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/response.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Id\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        publication\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publication\n                                    \n                                \n                                \n                                    \n                                        publication:     Id\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Id\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Id {\n    id: string;\n    href: string;\n}\n\nexport interface EventingEvent extends Id {\n    label: string;\n    eventType: Id;\n    notificationLevel: Id;\n    publication: Id;\n    subscription: Id;\n    timestamp: number;\n    timestampCreated: number;\n    data?: {\n        eventTrigger: {\n            code: number;\n            label: string;\n            threshold: number;\n            thresholdUnit: string;\n        }\n        previousTimestamp: number;\n        previousValue: number;\n        unit: string;\n        value: number;\n    };\n}\n\nexport interface EventingEventResults {\n    data: EventingEvent[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingSubscription extends Id {\n    deliveryMethod: Id;\n    template: EventingTemplate;\n    user: Id;\n}\n\nexport interface EventingSubscriptionResults {\n    data: EventingSubscription[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingTemplate extends Id {\n    label: string;\n    publication: Id;\n}\n\nexport interface CollectionMetadata {\n    limit: number;\n    offset: number;\n    total: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtendedScatterData.html":{"url":"interfaces/ExtendedScatterData.html","title":"interface - ExtendedScatterData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExtendedScatterData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/plotly/src/lib/plotly-profile-graph/plotly-profile-graph.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Partial\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        timestamp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, Component, ElementRef, EventEmitter, IterableDiffers, Output, ViewChild } from '@angular/core';\nimport {\n    DatasetApiInterface,\n    DatasetPresenterComponent,\n    PresenterHighlight,\n    IDataset,\n    InternalIdHandler,\n    ProfileDataEntry,\n    Time,\n    TimedDatasetOptions,\n    Timespan,\n} from '@helgoland/core';\nimport * as d3 from 'd3';\n\nimport * as Plotly from 'plotly.js';\n\ninterface RawData {\n    dataset: IDataset;\n    datas: ProfileDataEntry[];\n    options: TimedDatasetOptions[];\n}\n\ninterface ExtendedScatterData extends Partial {\n    timestamp: number;\n    id: string;\n}\n\nconst LINE_WIDTH_SELECTED = 5;\nconst LINE_WIDTH = 2;\nconst MARKER_SIZE_SELECTED = 10;\nconst MARKER_SIZE = 6;\n\n@Component({\n    selector: 'n52-plotly-profile-graph',\n    templateUrl: './plotly-profile-graph.component.html',\n    styleUrls: ['./plotly-profile-graph.component.scss']\n})\nexport class PlotlyProfileGraphComponent\n    extends DatasetPresenterComponent\n    implements AfterViewInit {\n\n    @Output()\n    public onHighlight: EventEmitter = new EventEmitter();\n\n    @ViewChild('plotly')\n    public plotlyElem: ElementRef;\n\n    private plotlyArea: any;\n    private preparedData: ExtendedScatterData[] = [];\n    private rawData: Map = new Map();\n    private counterXAxis = 0;\n    private counterYAxis = 0;\n\n    private layout: Layout = {\n        autosize: true,\n        showlegend: false,\n        dragmode: 'pan',\n        margin: {\n            l: 40,\n            r: 10,\n            b: 40,\n            t: 10\n            // pad: 100\n        },\n        hovermode: 'closest'\n    };\n\n    private settings: Partial = {\n        displayModeBar: false,\n        modeBarButtonsToRemove: [\n            'sendDataToCloud',\n            'hoverCompareCartesian'\n        ],\n        displaylogo: false,\n        showTips: false,\n        scrollZoom: true\n    };\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc);\n    }\n\n    public ngAfterViewInit(): void {\n        this.plotlyArea = this.plotlyElem.nativeElement;\n        this.drawChart();\n    }\n\n    public reloadData(): void {\n        console.log('reload data at ' + new Date());\n    }\n\n    // tslint:disable-next-line:no-empty\n    protected timeIntervalChanges(): void { }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getDataset(id, url).subscribe((dataset) => {\n            const options = this.datasetOptions.get(dataset.internalId);\n            options.forEach((option) => {\n                if (option.timestamp) {\n                    const timespan = new Timespan(option.timestamp);\n                    this.api.getData(id, url, timespan).subscribe((data) => {\n                        if (data.values.length === 1) {\n                            if (this.rawData.has(dataset.internalId)) {\n                                this.rawData.get(dataset.internalId).datas.push(data.values[0]);\n                                this.rawData.get(dataset.internalId).options.push(option);\n                            } else {\n                                this.rawData.set(dataset.internalId, {\n                                    dataset,\n                                    datas: [data.values[0]],\n                                    options: [option]\n                                });\n                            }\n                        }\n                        this.drawChart();\n                    });\n                }\n            });\n        });\n    }\n\n    protected removeDataset(internalId: string): void {\n        this.rawData.delete(internalId);\n        this.drawChart();\n    }\n\n    protected setSelectedId(internalId: string): void {\n        this.drawChart();\n    }\n\n    protected removeSelectedId(internalId: string): void {\n        this.drawChart();\n    }\n\n    // tslint:disable-next-line:no-empty\n    protected graphOptionsChanged(options: any): void { }\n\n    protected datasetOptionsChanged(internalId: string, options: TimedDatasetOptions[], firstChange: boolean): void {\n        if (!firstChange) {\n            // remove unused options\n            const removedIdx = this.rawData.get(internalId).options.findIndex((option) => {\n                const idx = options.findIndex((e) => e.timestamp === option.timestamp);\n                if (idx === -1) {\n                    return true;\n                }\n            });\n            if (removedIdx > -1) {\n                this.rawData.get(internalId).options.splice(removedIdx, 1);\n                this.rawData.get(internalId).datas.splice(removedIdx, 1);\n            }\n            this.drawChart();\n        }\n    }\n\n    protected onResize(): void {\n        this.redrawChart();\n    }\n\n    private processData() {\n        this.clearLayout();\n        this.clearData();\n        this.rawData.forEach((dataEntry) => {\n            dataEntry.options.forEach((option, key) => {\n                if (option.visible) {\n                    const x = new Array();\n                    const y = new Array();\n                    const selected = this.selectedDatasetIds.indexOf(dataEntry.dataset.internalId) >= 0;\n                    dataEntry.datas[key].value.forEach((entry) => {\n                        x.push(entry.value);\n                        y.push(entry.vertical);\n                    });\n                    const prepared: ExtendedScatterData = {\n                        x,\n                        y,\n                        type: 'scatter',\n                        name: '',\n                        timestamp: option.timestamp,\n                        id: dataEntry.dataset.internalId,\n                        yaxis: this.createYAxis(dataEntry.dataset, dataEntry.datas[key]),\n                        xaxis: this.createXAxis(dataEntry.dataset, dataEntry.datas[key]),\n                        // hovertext: dataEntry.label,\n                        line: {\n                            color: option.color,\n                            width: selected ? LINE_WIDTH_SELECTED : LINE_WIDTH\n                        },\n                        marker: {\n                            size: selected ? MARKER_SIZE_SELECTED : MARKER_SIZE\n                        }\n                    };\n                    this.preparedData.push(prepared);\n                }\n            });\n        });\n\n        this.updateAxis();\n    }\n\n    private createXAxis(dataset: IDataset, data: ProfileDataEntry): string {\n        let axis;\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis') && this.layout[key].title === dataset.uom) {\n                axis = this.layout[key];\n            }\n        }\n        const range = d3.extent(data.value, (d) => d.value);\n        if (!axis) {\n            this.counterXAxis = this.counterXAxis + 1;\n            axis = this.layout['xaxis' + this.counterXAxis] = {\n                id: 'x' + (this.counterXAxis > 1 ? this.counterXAxis : ''),\n                anchor: 'free',\n                title: dataset.uom,\n                zeroline: true,\n                hoverformat: '.2f',\n                showline: false,\n                range: [range[0], range[1]],\n                overlaying: '',\n                // rangemode: 'tozero',\n                fixedrange: false\n            };\n            if (this.counterXAxis !== 1) {\n                axis.overlaying = 'x';\n            }\n        } else {\n            axis.range = d3.extent([range[0], range[1], axis.range[0], axis.range[1]]);\n        }\n        return axis.id;\n    }\n\n    private createYAxis(dataset: IDataset, data: ProfileDataEntry): string {\n        let axis;\n        // find axis\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) &&\n                key.startsWith('yaxis') &&\n                this.layout[key].title === data.verticalUnit) {\n                axis = this.layout[key];\n            }\n        }\n        if (!axis) {\n            // add axis\n            this.counterYAxis = this.counterYAxis + 1;\n            axis = this.layout[('yaxis' + this.counterYAxis)] = {\n                id: 'y' + (this.counterYAxis > 1 ? this.counterYAxis : ''),\n                // zeroline: true,\n                anchor: 'free',\n                hoverformat: '.2r',\n                side: 'left',\n                autorange: 'reversed',\n                showline: false,\n                overlaying: '',\n                title: data.verticalUnit,\n                fixedrange: false\n            };\n            if (this.counterYAxis !== 1) {\n                axis.overlaying = 'y';\n            }\n        }\n        return axis.id;\n    }\n\n    private updateAxis() {\n        if (this.counterYAxis > 1) {\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                    this.layout[key].domain = [(0.1 * this.counterYAxis) - 0.1, 1];\n                }\n            }\n            let yaxisCount = 0;\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('yaxis')) {\n                    this.layout[key].position = 0.1 * yaxisCount;\n                    yaxisCount += 1;\n                }\n            }\n        }\n        if (this.counterXAxis > 1) {\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('yaxis')) {\n                    this.layout[key].domain = [(0.06 * this.counterXAxis) - 0.06, 1];\n                }\n            }\n            let xaxisCount = 0;\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                    this.layout[key].position = 0.06 * xaxisCount;\n                    xaxisCount += 1;\n                }\n            }\n        }\n        // add offset to xaxis ranges\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                const range = this.layout[key].range;\n                const rangeOffset = (range[1] - range[0]) * 0.05;\n                this.layout[key].range = [range[0] - rangeOffset, range[1] + rangeOffset];\n            }\n        }\n    }\n\n    private drawChart() {\n        if (this.plotlyArea && this.rawData.size > 0) {\n            this.processData();\n            Plotly.newPlot(this.plotlyArea, this.preparedData, this.layout, this.settings);\n            this.plotlyArea.on('plotly_hover', (entry: any) => {\n                if (entry.points.length === 1) {\n                    this.onHighlight.emit({\n                        internalId: entry.points[0].data.id,\n                        dataIndex: entry.points[0].pointNumber\n                    });\n                }\n            });\n        }\n    }\n\n    private clearLayout() {\n        // todo remove yaxis\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && (key.startsWith('yaxis') || key.startsWith('xaxis'))) {\n                delete this.layout[key];\n            }\n        }\n        // reset counter\n        this.counterYAxis = 0;\n        this.counterXAxis = 0;\n    }\n\n    private clearData() {\n        this.preparedData = [];\n    }\n\n    private redrawChart() {\n        if (this.plotlyArea) {\n            Plotly.relayout(this.plotlyArea, {});\n        }\n    }\n}\n\ninterface ScatterData extends Partial {\n    id: string;\n    timestamp: number;\n}\n\ninterface Layout extends Partial {\n    [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExtendedTimeseries.html":{"url":"classes/ExtendedTimeseries.html","title":"class - ExtendedTimeseries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExtendedTimeseries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Timeseries\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                selected\n                            \n                            \n                                    Public\n                                firstValue\n                            \n                            \n                                    Public\n                                hasData\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                internalId\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                lastValue\n                            \n                            \n                                    Public\n                                parameters\n                            \n                            \n                                    Public\n                                referenceValues\n                            \n                            \n                                    Public\n                                station\n                            \n                            \n                                    Public\n                                    Optional\n                                statusIntervals\n                            \n                            \n                                    Public\n                                uom\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/dataset-by-station-selector/dataset-by-station-selector.component.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstValue:     FirstLastValue\n\n                    \n                \n                    \n                        \n                            Type :     FirstLastValue\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasData:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            internalId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        internalId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastValue:     FirstLastValue\n\n                    \n                \n                    \n                        \n                            Type :     FirstLastValue\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parameters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parameters:     ParameterConstellation\n\n                    \n                \n                    \n                        \n                            Type :     ParameterConstellation\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            referenceValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        referenceValues:     ReferenceValue[]\n\n                    \n                \n                    \n                        \n                            Type :     ReferenceValue[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            station\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        station:     Station\n\n                    \n                \n                    \n                        \n                            Type :     Station\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            statusIntervals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statusIntervals:     StatusInterval[]\n\n                    \n                \n                    \n                        \n                            Type :     StatusInterval[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uom:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Timeseries\n\n                                \n                            \n                        \n                            \n                                    Defined in Timeseries:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { DatasetApiInterface, Station, Timeseries } from '@helgoland/core';\n\nexport class ExtendedTimeseries extends Timeseries {\n    public selected: boolean;\n}\n\n@Component({\n    selector: 'n52-dataset-by-station-selector',\n    templateUrl: './dataset-by-station-selector.component.html',\n    styleUrls: ['./dataset-by-station-selector.component.scss']\n})\nexport class DatasetByStationSelectorComponent implements OnInit {\n\n    @Input()\n    public station: Station;\n\n    @Input()\n    public url: string;\n\n    @Input()\n    public defaultSelected = false;\n\n    @Output()\n    public onSelectionChanged: EventEmitter = new EventEmitter();\n\n    public timeseriesList: ExtendedTimeseries[] = [];\n\n    public counter: number;\n\n    constructor(\n        protected apiInterface: DatasetApiInterface\n    ) { }\n\n    public ngOnInit() {\n        if (this.station) {\n            this.apiInterface.getStation(this.station.properties.id, this.url)\n                .subscribe((station) => {\n                    this.station = station;\n                    this.counter = 0;\n                    for (const id in this.station.properties.timeseries) {\n                        if (this.station.properties.timeseries.hasOwnProperty(id)) {\n                            this.counter++;\n                            this.apiInterface.getSingleTimeseries(id, this.url)\n                                .subscribe((result) => {\n                                    const ts = result as ExtendedTimeseries;\n                                    ts.selected = this.defaultSelected;\n                                    this.timeseriesList.push(ts);\n                                    this.updateSelection();\n                                    this.counter--;\n                                }, (error) => {\n                                    this.counter--;\n                                });\n                        }\n                    }\n                });\n        }\n    }\n\n    public toggle(timeseries: ExtendedTimeseries) {\n        timeseries.selected = !timeseries.selected;\n        this.updateSelection();\n    }\n\n    private updateSelection() {\n        const selection = this.timeseriesList.filter((entry) => entry.selected);\n        this.onSelectionChanged.emit(selection);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExtentControlComponent.html":{"url":"components/ExtentControlComponent.html","title":"component - ExtentControlComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ExtentControlComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/map/src/lib/control/extent/extent.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-extent-control\n            \n\n\n\n\n            \n                templateUrl\n                ./extent.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                zoomToExtent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extent\n                            \n                            \n                                mapId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mapCache: MapCache)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/control/extent/extent.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapCache\n                                                  \n                                                        \n                                                                    MapCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        extent\n                    \n                    \n                            \n                            Type:    L.LatLngBoundsExpression\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/extent/extent.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/extent/extent.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zoomToExtent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        zoomToExtent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/extent/extent.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { MapCache } from '../../base/map-cache.service';\n\n@Component({\n  selector: 'n52-extent-control',\n  templateUrl: './extent.component.html'\n})\nexport class ExtentControlComponent {\n\n  @Input()\n  public mapId: string;\n\n  @Input()\n  public extent: L.LatLngBoundsExpression;\n\n  constructor(\n    protected mapCache: MapCache\n  ) { }\n\n  public zoomToExtent() {\n    this.mapCache.getMap(this.mapId).fitBounds(this.extent);\n  }\n\n}\n\n    \n\n    \n        \n  zoom to extent\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  zoom to extent'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExtentControlComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Favorite.html":{"url":"interfaces/Favorite.html","title":"interface - Favorite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Favorite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/favorite/src/lib/service/favorite.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IDataset, LocalStorage } from '@helgoland/core';\n\nconst CACHE_PARAM_FAVORITES_SINGLE = 'SingleFavorites';\nconst CACHE_PARAM_FAVORITES_GROUP = 'GroupFavorites';\n\n@Injectable()\nexport class FavoriteService {\n\n  private singleFavs: Map;\n  private groupFavs: Map;\n  private groupCounter = 0;\n\n  constructor(\n    protected localStorage: LocalStorage\n  ) {\n    this.loadFavorites();\n  }\n\n  public addFavorite(dataset: IDataset, label?: string): boolean {\n    if (!this.singleFavs.has(dataset.internalId)) {\n      this.singleFavs.set(dataset.internalId, {\n        id: dataset.internalId,\n        label: label ? label : dataset.label,\n        favorite: dataset\n      });\n      this.saveFavorites();\n      return true;\n    }\n    return false;\n  }\n\n  public hasFavorite(dataset: IDataset): boolean {\n    return this.singleFavs.has(dataset.internalId);\n  }\n\n  public getFavorites(): SingleFavorite[] {\n    return Array.from(this.singleFavs.values());\n  }\n\n  public removeFavorite(favoriteId: string): boolean {\n    if (this.singleFavs.has(favoriteId)) {\n      this.singleFavs.delete(favoriteId);\n      this.saveFavorites();\n      return true;\n    }\n    if (this.groupFavs.has(favoriteId)) {\n      this.groupFavs.delete(favoriteId);\n      this.saveFavorites();\n      return true;\n    }\n    return false;\n  }\n\n  public addFavoriteGroup(datasets: IDataset[], label?: string): boolean {\n    const id = 'Group' + this.groupCounter++;\n    this.groupFavs.set(id, {\n      id,\n      label: label ? label : id,\n      favorites: datasets\n    });\n    this.saveFavorites();\n    return true;\n  }\n\n  public getFavoriteGroups(): GroupFavorite[] {\n    return Array.from(this.groupFavs.values());\n  }\n\n  public removeAllFavorites(): boolean {\n    this.singleFavs.clear();\n    this.groupFavs.clear();\n    this.saveFavorites();\n    return true;\n  }\n\n  public changeLabel(favorite: Favorite, label: string) {\n    favorite.label = label;\n    if (isSingleFavorite(favorite)) { this.singleFavs.set(favorite.id, favorite); }\n    if (isGroupFavorite(favorite)) { this.groupFavs.set(favorite.id, favorite); }\n    this.saveFavorites();\n  }\n\n  private saveFavorites(): void {\n    this.localStorage.save(CACHE_PARAM_FAVORITES_SINGLE, this.getFavorites());\n    this.localStorage.save(CACHE_PARAM_FAVORITES_GROUP, this.getFavoriteGroups());\n  }\n\n  private loadFavorites(): void {\n    this.singleFavs = new Map();\n    this.groupFavs = new Map();\n    const loadedSingleFavs = this.localStorage.loadArray(CACHE_PARAM_FAVORITES_SINGLE);\n    if (loadedSingleFavs) {\n      loadedSingleFavs.forEach((entry) => this.singleFavs.set(entry.id, entry));\n    }\n    const loadedGroupFavs = this.localStorage.loadArray(CACHE_PARAM_FAVORITES_GROUP);\n    if (loadedGroupFavs) {\n      loadedGroupFavs.forEach((entry) => this.groupFavs.set(entry.id, entry));\n    }\n  }\n}\n\nexport interface Favorite {\n  id: string;\n  label: string;\n}\n\nexport interface SingleFavorite extends Favorite {\n  favorite: IDataset;\n}\n\nfunction isSingleFavorite(object: any): object is SingleFavorite {\n  return 'favorite' in object;\n}\n\nexport interface GroupFavorite extends Favorite {\n  favorites: IDataset[];\n}\n\nfunction isGroupFavorite(object: any): object is GroupFavorite {\n  return 'favorites' in object;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FavoriteService.html":{"url":"injectables/FavoriteService.html","title":"injectable - FavoriteService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  FavoriteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/favorite/src/lib/service/favorite.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                groupCounter\n                            \n                            \n                                    Private\n                                groupFavs\n                            \n                            \n                                    Private\n                                singleFavs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addFavorite\n                            \n                            \n                                    Public\n                                addFavoriteGroup\n                            \n                            \n                                    Public\n                                changeLabel\n                            \n                            \n                                    Public\n                                getFavoriteGroups\n                            \n                            \n                                    Public\n                                getFavorites\n                            \n                            \n                                    Public\n                                hasFavorite\n                            \n                            \n                                    Private\n                                loadFavorites\n                            \n                            \n                                    Public\n                                removeAllFavorites\n                            \n                            \n                                    Public\n                                removeFavorite\n                            \n                            \n                                    Private\n                                saveFavorites\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorage\n                                                  \n                                                        \n                                                                    LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addFavorite\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addFavorite(dataset: IDataset, label?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataset\n                                                        \n                                                                    IDataset\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addFavoriteGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addFavoriteGroup(datasets: IDataset[], label?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        datasets\n                                                        \n                                                                    IDataset[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeLabel(favorite: Favorite, label: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        favorite\n                                                        \n                                                                    Favorite\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFavoriteGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFavoriteGroups()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     GroupFavorite[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFavorites()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     SingleFavorite[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasFavorite\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasFavorite(dataset: IDataset)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataset\n                                                        \n                                                                    IDataset\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadFavorites()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeAllFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeAllFavorites()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFavorite\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFavorite(favoriteId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        favoriteId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            saveFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveFavorites()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            groupCounter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        groupCounter:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            groupFavs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        groupFavs:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            singleFavs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        singleFavs:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/favorite.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IDataset, LocalStorage } from '@helgoland/core';\n\nconst CACHE_PARAM_FAVORITES_SINGLE = 'SingleFavorites';\nconst CACHE_PARAM_FAVORITES_GROUP = 'GroupFavorites';\n\n@Injectable()\nexport class FavoriteService {\n\n  private singleFavs: Map;\n  private groupFavs: Map;\n  private groupCounter = 0;\n\n  constructor(\n    protected localStorage: LocalStorage\n  ) {\n    this.loadFavorites();\n  }\n\n  public addFavorite(dataset: IDataset, label?: string): boolean {\n    if (!this.singleFavs.has(dataset.internalId)) {\n      this.singleFavs.set(dataset.internalId, {\n        id: dataset.internalId,\n        label: label ? label : dataset.label,\n        favorite: dataset\n      });\n      this.saveFavorites();\n      return true;\n    }\n    return false;\n  }\n\n  public hasFavorite(dataset: IDataset): boolean {\n    return this.singleFavs.has(dataset.internalId);\n  }\n\n  public getFavorites(): SingleFavorite[] {\n    return Array.from(this.singleFavs.values());\n  }\n\n  public removeFavorite(favoriteId: string): boolean {\n    if (this.singleFavs.has(favoriteId)) {\n      this.singleFavs.delete(favoriteId);\n      this.saveFavorites();\n      return true;\n    }\n    if (this.groupFavs.has(favoriteId)) {\n      this.groupFavs.delete(favoriteId);\n      this.saveFavorites();\n      return true;\n    }\n    return false;\n  }\n\n  public addFavoriteGroup(datasets: IDataset[], label?: string): boolean {\n    const id = 'Group' + this.groupCounter++;\n    this.groupFavs.set(id, {\n      id,\n      label: label ? label : id,\n      favorites: datasets\n    });\n    this.saveFavorites();\n    return true;\n  }\n\n  public getFavoriteGroups(): GroupFavorite[] {\n    return Array.from(this.groupFavs.values());\n  }\n\n  public removeAllFavorites(): boolean {\n    this.singleFavs.clear();\n    this.groupFavs.clear();\n    this.saveFavorites();\n    return true;\n  }\n\n  public changeLabel(favorite: Favorite, label: string) {\n    favorite.label = label;\n    if (isSingleFavorite(favorite)) { this.singleFavs.set(favorite.id, favorite); }\n    if (isGroupFavorite(favorite)) { this.groupFavs.set(favorite.id, favorite); }\n    this.saveFavorites();\n  }\n\n  private saveFavorites(): void {\n    this.localStorage.save(CACHE_PARAM_FAVORITES_SINGLE, this.getFavorites());\n    this.localStorage.save(CACHE_PARAM_FAVORITES_GROUP, this.getFavoriteGroups());\n  }\n\n  private loadFavorites(): void {\n    this.singleFavs = new Map();\n    this.groupFavs = new Map();\n    const loadedSingleFavs = this.localStorage.loadArray(CACHE_PARAM_FAVORITES_SINGLE);\n    if (loadedSingleFavs) {\n      loadedSingleFavs.forEach((entry) => this.singleFavs.set(entry.id, entry));\n    }\n    const loadedGroupFavs = this.localStorage.loadArray(CACHE_PARAM_FAVORITES_GROUP);\n    if (loadedGroupFavs) {\n      loadedGroupFavs.forEach((entry) => this.groupFavs.set(entry.id, entry));\n    }\n  }\n}\n\nexport interface Favorite {\n  id: string;\n  label: string;\n}\n\nexport interface SingleFavorite extends Favorite {\n  favorite: IDataset;\n}\n\nfunction isSingleFavorite(object: any): object is SingleFavorite {\n  return 'favorite' in object;\n}\n\nexport interface GroupFavorite extends Favorite {\n  favorites: IDataset[];\n}\n\nfunction isGroupFavorite(object: any): object is GroupFavorite {\n  return 'favorites' in object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoriteTogglerComponent.html":{"url":"components/FavoriteTogglerComponent.html","title":"component - FavoriteTogglerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoriteTogglerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/favorite/src/lib/favorite-toggler/favorite-toggler.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-favorite-toggler\n            \n\n\n\n\n            \n                templateUrl\n                ./favorite-toggler.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isFavorite\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataset\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(favSrvc: FavoriteService, notifier: NotifierService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/favorite/src/lib/favorite-toggler/favorite-toggler.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        favSrvc\n                                                  \n                                                        \n                                                                    FavoriteService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifier\n                                                  \n                                                        \n                                                                    NotifierService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataset\n                    \n                    \n                            \n                            Type:    IDataset\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/favorite-toggler/favorite-toggler.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/favorite-toggler/favorite-toggler.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/favorite-toggler/favorite-toggler.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isFavorite\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isFavorite:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/favorite-toggler/favorite-toggler.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { IDataset, NotifierService } from '@helgoland/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { FavoriteService } from '../service/favorite.service';\n\n@Component({\n  selector: 'n52-favorite-toggler',\n  templateUrl: './favorite-toggler.component.html'\n})\nexport class FavoriteTogglerComponent implements OnChanges {\n\n  @Input()\n  public dataset: IDataset;\n  public isFavorite: boolean;\n\n  constructor(\n    protected favSrvc: FavoriteService,\n    protected notifier: NotifierService,\n    protected translate: TranslateService\n  ) { }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.dataset && this.dataset) {\n      this.isFavorite = this.favSrvc.hasFavorite(this.dataset);\n    }\n  }\n\n  public toggle() {\n    if (this.isFavorite) {\n      this.isFavorite = false;\n      this.favSrvc.removeFavorite(this.dataset.internalId);\n      this.translate.get('favorite.notifier.remove-favorite').subscribe((translation) => {\n        this.notifier.notify(translation + ': ' + this.dataset.label);\n      });\n    } else {\n      this.isFavorite = true;\n      this.favSrvc.addFavorite(this.dataset);\n      this.translate.get('favorite.notifier.add-favorite').subscribe((translation) => {\n        this.notifier.notify(translation + ': ' + this.dataset.label);\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavoriteTogglerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Feature.html":{"url":"interfaces/Feature.html","title":"interface - Feature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Feature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/feature.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\n\nexport interface Feature extends Parameter {\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filter.html":{"url":"classes/Filter.html","title":"class - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/filter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filter\n                            \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filter:     ParameterFilter\n\n                    \n                \n                    \n                        \n                            Type :     ParameterFilter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/filter.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/filter.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/filter.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/filter.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ParameterFilter } from './../internal/http-requests';\n\nexport class Filter {\n    public url: string;\n    public service: string;\n    public itemId: string;\n    public filter: ParameterFilter;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilteredParameter.html":{"url":"interfaces/FilteredParameter.html","title":"interface - FilteredParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilteredParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        filterList\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filterList\n                                    \n                                \n                                \n                                    \n                                        filterList:     Filter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Filter[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport {\n    DatasetApiInterface,\n    Filter,\n    FilteredProvider,\n    LanguageChangNotifier,\n    Parameter,\n    ParameterFilter,\n} from '@helgoland/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * Component to select an item out of a list of provider with a given filter combination.\n */\n@Component({\n    selector: 'n52-multi-service-filter-selector',\n    templateUrl: './multi-service-filter-selector.component.html'\n})\nexport class MultiServiceFilterSelectorComponent extends LanguageChangNotifier implements OnChanges {\n\n    @Input()\n    public endpoint: string;\n\n    @Input()\n    public filterList: FilteredProvider[];\n\n    @Output()\n    public onItemSelected: EventEmitter = new EventEmitter();\n\n    public loading = 0;\n    public items: FilteredParameter[];\n\n    constructor(\n        protected apiInterface: DatasetApiInterface,\n        protected translate: TranslateService\n    ) {\n        super(translate);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        this.loadItems();\n    }\n\n    public onSelectItem(item: FilteredParameter): void {\n        this.onItemSelected.emit(item);\n    }\n\n    protected languageChanged(): void {\n        this.loadItems();\n    }\n\n    private loadItems() {\n        this.items = [];\n        this.filterList.forEach((entry) => {\n            this.loading++;\n            const filter = entry.filter || {};\n            filter.service = entry.id;\n            switch (this.endpoint) {\n                case 'offering':\n                    this.apiInterface.getOfferings(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'phenomenon':\n                    this.apiInterface.getPhenomena(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'procedure':\n                    this.apiInterface.getProcedures(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'feature':\n                    this.apiInterface.getFeatures(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'category':\n                    this.apiInterface.getCategories(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'platform':\n                    this.apiInterface.getPlatforms(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'dataset':\n                    this.apiInterface.getDatasets(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                default:\n                    console.error('Wrong endpoint: ' + this.endpoint);\n                    this.loading--;\n            }\n        });\n    }\n\n    private errorOnLoading(): void {\n        this.loading--;\n    }\n\n    private setItems(res: FilteredParameter[], prevfilter: ParameterFilter, url: string, service: string): void {\n        this.loading--;\n        res.forEach((entry) => {\n            const filter: Filter = {\n                filter: prevfilter,\n                itemId: entry.id,\n                url,\n                service\n            };\n            const item = this.items.find((elem) => {\n                if (elem.label === entry.label) { return true; }\n            });\n            if (item) {\n                item.filterList.push(filter);\n            } else {\n                entry.filterList = [filter];\n                this.items.push(entry);\n            }\n        });\n    }\n\n}\n\nexport interface FilteredParameter extends Parameter {\n    filterList?: Filter[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilteredProvider.html":{"url":"interfaces/FilteredProvider.html","title":"interface - FilteredProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilteredProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/provider.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Provider\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:     ParameterFilter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParameterFilter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ParameterFilter } from './../internal/http-requests';\n\nexport interface Provider {\n    id: string;\n    url: string;\n}\n\nexport interface FilteredProvider extends Provider {\n    filter: ParameterFilter;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirstLastValue.html":{"url":"classes/FirstLastValue.html","title":"class - FirstLastValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirstLastValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                timestamp\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timestamp:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlotOverviewTimeseriesGraphComponent.html":{"url":"components/FlotOverviewTimeseriesGraphComponent.html","title":"component - FlotOverviewTimeseriesGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FlotOverviewTimeseriesGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n                AfterViewInit\n                HasLoadableContent\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-flot-overview-timeseries-graph\n            \n\n            \n                styleUrls\n                flot-overview-timeseries-graph.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./flot-overview-timeseries-graph.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Public\n                                isContentLoading\n                            \n                            \n                                    Public\n                                overviewTimespan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateOverviewRange\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                timeChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                datasetIds\n                            \n                            \n                                datasetOptions\n                            \n                            \n                                graphOptions\n                            \n                            \n                                rangefactor\n                            \n                            \n                                timeInterval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onContentLoading\n                            \n                            \n                                onLoading\n                            \n                            \n                                onTimespanChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(timeSrvc: Time, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeSrvc\n                                                  \n                                                        \n                                                                    Time\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        datasetIds\n                    \n                    \n                            \n                            Type:    string[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        datasetOptions\n                    \n                    \n                            \n                            Type:    Map\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        graphOptions\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rangefactor\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        timeInterval\n                    \n                    \n                            \n                            Type:    TimeInterval\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:31\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onContentLoading\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLoading\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onTimespanChanged\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            calculateOverviewRange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calculateOverviewRange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        timeChanged(timespan: Timespan)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        init:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isContentLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isContentLoading:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            overviewTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        overviewTimespan:     Timespan\n\n                    \n                \n                    \n                        \n                            Type :     Timespan\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/flot-overview-timeseries-graph/flot-overview-timeseries-graph.component.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { DatasetOptions, HasLoadableContent, Mixin, Time, TimeInterval, Timespan } from '@helgoland/core';\n\n@Component({\n    selector: 'n52-flot-overview-timeseries-graph',\n    templateUrl: './flot-overview-timeseries-graph.component.html',\n    styleUrls: ['./flot-overview-timeseries-graph.component.scss']\n})\n// @Mixin([HasLoadableContent])\nexport class FlotOverviewTimeseriesGraphComponent implements OnChanges, AfterViewInit, HasLoadableContent {\n\n    @Input()\n    public datasetIds: string[];\n\n    @Input()\n    public datasetOptions: Map;\n\n    @Input()\n    public graphOptions: any;\n\n    @Input()\n    public timeInterval: TimeInterval;\n\n    @Input()\n    public rangefactor: number;\n\n    @Output()\n    public onTimespanChanged: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onLoading: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onContentLoading: EventEmitter = new EventEmitter();\n\n    public isContentLoading: (loading: boolean) => void;\n\n    public overviewTimespan: Timespan;\n\n    private init = false;\n\n    constructor(\n        protected timeSrvc: Time,\n        protected cd: ChangeDetectorRef\n    ) { }\n\n    public ngAfterViewInit(): void {\n        this.rangefactor = this.rangefactor || 1;\n        this.calculateOverviewRange();\n        this.init = true;\n        this.cd.detectChanges();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.timeInterval && this.init) {\n            this.calculateOverviewRange();\n        }\n    }\n\n    public timeChanged(timespan: Timespan) {\n        this.onTimespanChanged.emit(timespan);\n    }\n\n    private calculateOverviewRange() {\n        const timespan = this.timeSrvc.createTimespanOfInterval(this.timeInterval);\n        this.overviewTimespan = this.timeSrvc.getBufferedTimespan(timespan, this.rangefactor);\n        this.graphOptions.selection.range = {\n            from: timespan.from,\n            to: timespan.to\n        };\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FlotOverviewTimeseriesGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeoCureGeoJSON.html":{"url":"classes/GeoCureGeoJSON.html","title":"class - GeoCureGeoJSON","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeoCureGeoJSON\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geocure/geocure-layer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    GeoJSON\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fetchData\n                            \n                            \n                                    Public\n                                getEvents\n                            \n                            \n                                    Private\n                                loadData\n                            \n                            \n                                    Public\n                                onAdd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: GeoCureGeoJSONOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/base/geocure/geocure-layer.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    GeoCureGeoJSONOptions\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     GeoCureGeoJSONOptions\n\n                    \n                \n                    \n                        \n                            Type :     GeoCureGeoJSONOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geocure/geocure-layer.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fetchData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fetchData(map: L.Map)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geocure/geocure-layer.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    L.Map\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEvents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geocure/geocure-layer.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     { moveend: (event: any) => void; }\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadData(bounds: LatLngBounds)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geocure/geocure-layer.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bounds\n                                                        \n                                                                    LatLngBounds\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onAdd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onAdd(map: L.Map)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geocure/geocure-layer.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    L.Map\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { GeoJSON, GeoJSONOptions, LatLngBounds, LeafletEvent } from 'leaflet';\n\nexport interface GeoCureGeoJSONOptions extends GeoJSONOptions {\n    url: string;\n    httpClient: HttpClient;\n    showOnMinZoom?: number;\n    showOnMaxZoom?: number;\n}\n\nexport class GeoCureGeoJSON extends GeoJSON {\n\n    public options: GeoCureGeoJSONOptions;\n\n    constructor(\n        options?: GeoCureGeoJSONOptions\n    ) {\n        super();\n        if (options) {\n            this.options = options;\n        }\n    }\n\n    public getEvents() {\n        const events = {\n            moveend: (event: LeafletEvent) => this.fetchData(event.target)\n        };\n        return events;\n    }\n\n    public onAdd(map: L.Map): this  {\n        super.onAdd(map);\n        this.fetchData(map);\n        return this;\n    }\n\n    private fetchData(map: L.Map) {\n        const matchMaxZoom = this.options.showOnMaxZoom ? map.getZoom() = this.options.showOnMinZoom : true;\n        if (matchMinZoom && matchMaxZoom) {\n            this.loadData(map.getBounds());\n        } else {\n            this.clearLayers();\n        }\n    }\n\n    private loadData(bounds: LatLngBounds) {\n        const bboxparam = [bounds.getWest(), bounds.getSouth(), bounds.getEast(), bounds.getNorth()].join(',');\n        this.options.httpClient\n            .get>(this.options.url, {\n                params: {\n                    bbox: bboxparam\n                }\n            })\n            .subscribe((geojson) => {\n                this.clearLayers();\n                this.addData(geojson);\n            });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoCureGeoJSONOptions.html":{"url":"interfaces/GeoCureGeoJSONOptions.html","title":"interface - GeoCureGeoJSONOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoCureGeoJSONOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geocure/geocure-layer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    GeoJSONOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        httpClient\n                                \n                                \n                                            Optional\n                                        showOnMaxZoom\n                                \n                                \n                                            Optional\n                                        showOnMinZoom\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        httpClient\n                                    \n                                \n                                \n                                    \n                                        httpClient:     HttpClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpClient\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showOnMaxZoom\n                                    \n                                \n                                \n                                    \n                                        showOnMaxZoom:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showOnMinZoom\n                                    \n                                \n                                \n                                    \n                                        showOnMinZoom:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { GeoJSON, GeoJSONOptions, LatLngBounds, LeafletEvent } from 'leaflet';\n\nexport interface GeoCureGeoJSONOptions extends GeoJSONOptions {\n    url: string;\n    httpClient: HttpClient;\n    showOnMinZoom?: number;\n    showOnMaxZoom?: number;\n}\n\nexport class GeoCureGeoJSON extends GeoJSON {\n\n    public options: GeoCureGeoJSONOptions;\n\n    constructor(\n        options?: GeoCureGeoJSONOptions\n    ) {\n        super();\n        if (options) {\n            this.options = options;\n        }\n    }\n\n    public getEvents() {\n        const events = {\n            moveend: (event: LeafletEvent) => this.fetchData(event.target)\n        };\n        return events;\n    }\n\n    public onAdd(map: L.Map): this  {\n        super.onAdd(map);\n        this.fetchData(map);\n        return this;\n    }\n\n    private fetchData(map: L.Map) {\n        const matchMaxZoom = this.options.showOnMaxZoom ? map.getZoom() = this.options.showOnMinZoom : true;\n        if (matchMinZoom && matchMaxZoom) {\n            this.loadData(map.getBounds());\n        } else {\n            this.clearLayers();\n        }\n    }\n\n    private loadData(bounds: LatLngBounds) {\n        const bboxparam = [bounds.getWest(), bounds.getSouth(), bounds.getEast(), bounds.getNorth()].join(',');\n        this.options.httpClient\n            .get>(this.options.url, {\n                params: {\n                    bbox: bboxparam\n                }\n            })\n            .subscribe((geojson) => {\n                this.clearLayers();\n                this.addData(geojson);\n            });\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoReverseOptions.html":{"url":"interfaces/GeoReverseOptions.html","title":"interface - GeoReverseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoReverseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geosearch/geosearch.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Point } from 'geojson';\nimport { LatLngBoundsLiteral } from 'leaflet';\nimport { Observable } from 'rxjs/Observable';\n\nexport interface GeoSearchResult {\n    name: string;\n    geometry: GeoJSON.GeoJsonObject;\n    bounds?: LatLngBoundsLiteral;\n}\n\nexport interface GeoSearchOptions {\n    countrycodes?: string[];\n    asPointGeometry?: boolean;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface GeoReverseOptions { }\n\nexport interface GeoReverseResult {\n    lat: string;\n    lon: string;\n    displayName?: string;\n    address?: {\n        houseNumber: string;\n        road: string;\n        neighbourhood: string;\n        suburb: string;\n        cityDistrict: string;\n        city: string;\n        county: string;\n        stateDistrict: string;\n        state: string;\n        postcode: string;\n        country: string;\n        countryCode: string;\n    };\n    boundingbox?: string[];\n}\n\nexport abstract class GeoSearch {\n\n    public abstract searchTerm(term: string, options?: GeoSearchOptions): Observable;\n\n    public abstract reverse(point: Point, options?: GeoReverseOptions): Observable;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoReverseResult.html":{"url":"interfaces/GeoReverseResult.html","title":"interface - GeoReverseResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoReverseResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geosearch/geosearch.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        boundingbox\n                                \n                                \n                                            Optional\n                                        displayName\n                                \n                                \n                                        lat\n                                \n                                \n                                        lon\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        boundingbox\n                                    \n                                \n                                \n                                    \n                                        boundingbox:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                    \n                                \n                                \n                                    \n                                        lon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Point } from 'geojson';\nimport { LatLngBoundsLiteral } from 'leaflet';\nimport { Observable } from 'rxjs/Observable';\n\nexport interface GeoSearchResult {\n    name: string;\n    geometry: GeoJSON.GeoJsonObject;\n    bounds?: LatLngBoundsLiteral;\n}\n\nexport interface GeoSearchOptions {\n    countrycodes?: string[];\n    asPointGeometry?: boolean;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface GeoReverseOptions { }\n\nexport interface GeoReverseResult {\n    lat: string;\n    lon: string;\n    displayName?: string;\n    address?: {\n        houseNumber: string;\n        road: string;\n        neighbourhood: string;\n        suburb: string;\n        cityDistrict: string;\n        city: string;\n        county: string;\n        stateDistrict: string;\n        state: string;\n        postcode: string;\n        country: string;\n        countryCode: string;\n    };\n    boundingbox?: string[];\n}\n\nexport abstract class GeoSearch {\n\n    public abstract searchTerm(term: string, options?: GeoSearchOptions): Observable;\n\n    public abstract reverse(point: Point, options?: GeoReverseOptions): Observable;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeoSearch.html":{"url":"classes/GeoSearch.html","title":"class - GeoSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeoSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geosearch/geosearch.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                reverse\n                            \n                            \n                                    Public\n                                    \n                                searchTerm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            reverse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reverse(point: Point, options?: GeoReverseOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geosearch/geosearch.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        point\n                                                        \n                                                                    Point\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    GeoReverseOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            searchTerm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        searchTerm(term: string, options?: GeoSearchOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geosearch/geosearch.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    GeoSearchOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Point } from 'geojson';\nimport { LatLngBoundsLiteral } from 'leaflet';\nimport { Observable } from 'rxjs/Observable';\n\nexport interface GeoSearchResult {\n    name: string;\n    geometry: GeoJSON.GeoJsonObject;\n    bounds?: LatLngBoundsLiteral;\n}\n\nexport interface GeoSearchOptions {\n    countrycodes?: string[];\n    asPointGeometry?: boolean;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface GeoReverseOptions { }\n\nexport interface GeoReverseResult {\n    lat: string;\n    lon: string;\n    displayName?: string;\n    address?: {\n        houseNumber: string;\n        road: string;\n        neighbourhood: string;\n        suburb: string;\n        cityDistrict: string;\n        city: string;\n        county: string;\n        stateDistrict: string;\n        state: string;\n        postcode: string;\n        country: string;\n        countryCode: string;\n    };\n    boundingbox?: string[];\n}\n\nexport abstract class GeoSearch {\n\n    public abstract searchTerm(term: string, options?: GeoSearchOptions): Observable;\n\n    public abstract reverse(point: Point, options?: GeoReverseOptions): Observable;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoSearchOptions.html":{"url":"interfaces/GeoSearchOptions.html","title":"interface - GeoSearchOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoSearchOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geosearch/geosearch.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        asPointGeometry\n                                \n                                \n                                            Optional\n                                        countrycodes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asPointGeometry\n                                    \n                                \n                                \n                                    \n                                        asPointGeometry:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        countrycodes\n                                    \n                                \n                                \n                                    \n                                        countrycodes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Point } from 'geojson';\nimport { LatLngBoundsLiteral } from 'leaflet';\nimport { Observable } from 'rxjs/Observable';\n\nexport interface GeoSearchResult {\n    name: string;\n    geometry: GeoJSON.GeoJsonObject;\n    bounds?: LatLngBoundsLiteral;\n}\n\nexport interface GeoSearchOptions {\n    countrycodes?: string[];\n    asPointGeometry?: boolean;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface GeoReverseOptions { }\n\nexport interface GeoReverseResult {\n    lat: string;\n    lon: string;\n    displayName?: string;\n    address?: {\n        houseNumber: string;\n        road: string;\n        neighbourhood: string;\n        suburb: string;\n        cityDistrict: string;\n        city: string;\n        county: string;\n        stateDistrict: string;\n        state: string;\n        postcode: string;\n        country: string;\n        countryCode: string;\n    };\n    boundingbox?: string[];\n}\n\nexport abstract class GeoSearch {\n\n    public abstract searchTerm(term: string, options?: GeoSearchOptions): Observable;\n\n    public abstract reverse(point: Point, options?: GeoReverseOptions): Observable;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoSearchResult.html":{"url":"interfaces/GeoSearchResult.html","title":"interface - GeoSearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoSearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geosearch/geosearch.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bounds\n                                \n                                \n                                        geometry\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bounds\n                                    \n                                \n                                \n                                    \n                                        bounds:     LatLngBoundsLiteral\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LatLngBoundsLiteral\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     GeoJSON.GeoJsonObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GeoJSON.GeoJsonObject\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Point } from 'geojson';\nimport { LatLngBoundsLiteral } from 'leaflet';\nimport { Observable } from 'rxjs/Observable';\n\nexport interface GeoSearchResult {\n    name: string;\n    geometry: GeoJSON.GeoJsonObject;\n    bounds?: LatLngBoundsLiteral;\n}\n\nexport interface GeoSearchOptions {\n    countrycodes?: string[];\n    asPointGeometry?: boolean;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface GeoReverseOptions { }\n\nexport interface GeoReverseResult {\n    lat: string;\n    lon: string;\n    displayName?: string;\n    address?: {\n        houseNumber: string;\n        road: string;\n        neighbourhood: string;\n        suburb: string;\n        cityDistrict: string;\n        city: string;\n        county: string;\n        stateDistrict: string;\n        state: string;\n        postcode: string;\n        country: string;\n        countryCode: string;\n    };\n    boundingbox?: string[];\n}\n\nexport abstract class GeoSearch {\n\n    public abstract searchTerm(term: string, options?: GeoSearchOptions): Observable;\n\n    public abstract reverse(point: Point, options?: GeoReverseOptions): Observable;\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeosearchControlComponent.html":{"url":"components/GeosearchControlComponent.html","title":"component - GeosearchControlComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GeosearchControlComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-geosearch-control\n            \n\n\n\n\n            \n                templateUrl\n                ./geosearch.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                result\n                            \n                            \n                                    Public\n                                resultGeometry\n                            \n                            \n                                    Public\n                                searchTerm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearSearch\n                            \n                            \n                                    Private\n                                removeOldGeometry\n                            \n                            \n                                    Public\n                                triggerSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapId\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onResultChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mapCache: MapCache, geosearch: GeoSearch)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapCache\n                                                  \n                                                        \n                                                                    MapCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        geosearch\n                                                  \n                                                        \n                                                                    GeoSearch\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                            \n                            Type:    GeoSearchOptions\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onResultChanged\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clearSearch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearSearch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            removeOldGeometry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeOldGeometry()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            triggerSearch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        triggerSearch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            result\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        result:     GeoSearchResult\n\n                    \n                \n                    \n                        \n                            Type :     GeoSearchResult\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultGeometry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resultGeometry:     L.GeoJSON\n\n                    \n                \n                    \n                        \n                            Type :     L.GeoJSON\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchTerm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchTerm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/geosearch/geosearch.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport * as L from 'leaflet';\n\nimport { GeoSearch, GeoSearchOptions, GeoSearchResult } from '../../base/geosearch/geosearch';\nimport { MapCache } from '../../base/map-cache.service';\n\n@Component({\n    selector: 'n52-geosearch-control',\n    templateUrl: './geosearch.component.html'\n})\nexport class GeosearchControlComponent {\n\n    @Input()\n    public mapId: string;\n\n    @Input()\n    public options: GeoSearchOptions;\n\n    @Output()\n    public onResultChanged: EventEmitter = new EventEmitter();\n\n    public result: GeoSearchResult;\n\n    public resultGeometry: L.GeoJSON;\n\n    public searchTerm: string;\n\n    public loading: boolean;\n\n    constructor(\n        protected mapCache: MapCache,\n        protected geosearch: GeoSearch\n    ) { }\n\n    public triggerSearch() {\n        this.removeOldGeometry();\n        if (this.searchTerm) {\n            this.loading = true;\n            this.geosearch.searchTerm(this.searchTerm, this.options).subscribe(\n                (result) => {\n                    if (!result) {\n                        this.searchTerm = '';\n                        return;\n                    }\n                    this.onResultChanged.emit(result);\n                    this.result = result;\n                    if (this.mapId) {\n                        this.resultGeometry = L.geoJSON(result.geometry).addTo(this.mapCache.getMap(this.mapId));\n                        if (result.bounds) {\n                            this.mapCache.getMap(this.mapId).fitBounds(result.bounds);\n                        } else {\n                            this.mapCache.getMap(this.mapId).fitBounds(this.resultGeometry.getBounds());\n                        }\n                    }\n                },\n                (error) => this.searchTerm = 'error occurred',\n                () => { this.loading = false; }\n            );\n        }\n    }\n\n    public clearSearch() {\n        this.searchTerm = '';\n        this.onResultChanged.emit(null);\n        this.removeOldGeometry();\n    }\n\n    private removeOldGeometry() {\n        if (this.resultGeometry) {\n            this.resultGeometry.remove();\n        }\n    }\n\n}\n\n    \n\n    \n        \n  \n  loading...\n  X\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    loading...  X'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GeosearchControlComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupFavorite.html":{"url":"interfaces/GroupFavorite.html","title":"interface - GroupFavorite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GroupFavorite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/favorite/src/lib/service/favorite.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Favorite\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        favorites\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        favorites\n                                    \n                                \n                                \n                                    \n                                        favorites:     IDataset[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IDataset[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IDataset, LocalStorage } from '@helgoland/core';\n\nconst CACHE_PARAM_FAVORITES_SINGLE = 'SingleFavorites';\nconst CACHE_PARAM_FAVORITES_GROUP = 'GroupFavorites';\n\n@Injectable()\nexport class FavoriteService {\n\n  private singleFavs: Map;\n  private groupFavs: Map;\n  private groupCounter = 0;\n\n  constructor(\n    protected localStorage: LocalStorage\n  ) {\n    this.loadFavorites();\n  }\n\n  public addFavorite(dataset: IDataset, label?: string): boolean {\n    if (!this.singleFavs.has(dataset.internalId)) {\n      this.singleFavs.set(dataset.internalId, {\n        id: dataset.internalId,\n        label: label ? label : dataset.label,\n        favorite: dataset\n      });\n      this.saveFavorites();\n      return true;\n    }\n    return false;\n  }\n\n  public hasFavorite(dataset: IDataset): boolean {\n    return this.singleFavs.has(dataset.internalId);\n  }\n\n  public getFavorites(): SingleFavorite[] {\n    return Array.from(this.singleFavs.values());\n  }\n\n  public removeFavorite(favoriteId: string): boolean {\n    if (this.singleFavs.has(favoriteId)) {\n      this.singleFavs.delete(favoriteId);\n      this.saveFavorites();\n      return true;\n    }\n    if (this.groupFavs.has(favoriteId)) {\n      this.groupFavs.delete(favoriteId);\n      this.saveFavorites();\n      return true;\n    }\n    return false;\n  }\n\n  public addFavoriteGroup(datasets: IDataset[], label?: string): boolean {\n    const id = 'Group' + this.groupCounter++;\n    this.groupFavs.set(id, {\n      id,\n      label: label ? label : id,\n      favorites: datasets\n    });\n    this.saveFavorites();\n    return true;\n  }\n\n  public getFavoriteGroups(): GroupFavorite[] {\n    return Array.from(this.groupFavs.values());\n  }\n\n  public removeAllFavorites(): boolean {\n    this.singleFavs.clear();\n    this.groupFavs.clear();\n    this.saveFavorites();\n    return true;\n  }\n\n  public changeLabel(favorite: Favorite, label: string) {\n    favorite.label = label;\n    if (isSingleFavorite(favorite)) { this.singleFavs.set(favorite.id, favorite); }\n    if (isGroupFavorite(favorite)) { this.groupFavs.set(favorite.id, favorite); }\n    this.saveFavorites();\n  }\n\n  private saveFavorites(): void {\n    this.localStorage.save(CACHE_PARAM_FAVORITES_SINGLE, this.getFavorites());\n    this.localStorage.save(CACHE_PARAM_FAVORITES_GROUP, this.getFavoriteGroups());\n  }\n\n  private loadFavorites(): void {\n    this.singleFavs = new Map();\n    this.groupFavs = new Map();\n    const loadedSingleFavs = this.localStorage.loadArray(CACHE_PARAM_FAVORITES_SINGLE);\n    if (loadedSingleFavs) {\n      loadedSingleFavs.forEach((entry) => this.singleFavs.set(entry.id, entry));\n    }\n    const loadedGroupFavs = this.localStorage.loadArray(CACHE_PARAM_FAVORITES_GROUP);\n    if (loadedGroupFavs) {\n      loadedGroupFavs.forEach((entry) => this.groupFavs.set(entry.id, entry));\n    }\n  }\n}\n\nexport interface Favorite {\n  id: string;\n  label: string;\n}\n\nexport interface SingleFavorite extends Favorite {\n  favorite: IDataset;\n}\n\nfunction isSingleFavorite(object: any): object is SingleFavorite {\n  return 'favorite' in object;\n}\n\nexport interface GroupFavorite extends Favorite {\n  favorites: IDataset[];\n}\n\nfunction isGroupFavorite(object: any): object is GroupFavorite {\n  return 'favorites' in object;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HasLoadableContent.html":{"url":"classes/HasLoadableContent.html","title":"class - HasLoadableContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  HasLoadableContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/mixins/has-loadable-content.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onContentLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isContentLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onContentLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onContentLoading:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/mixins/has-loadable-content.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isContentLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isContentLoading(loading: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/mixins/has-loadable-content.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { EventEmitter, Output } from '@angular/core';\n\nexport class HasLoadableContent {\n\n    public onContentLoading: EventEmitter;\n\n    public isContentLoading(loading: boolean) {\n        this.onContentLoading.emit(loading);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandCachingModule.html":{"url":"modules/HelgolandCachingModule.html","title":"module - HelgolandCachingModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandCachingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/caching/src/lib/caching.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { HTTP_SERVICE_INTERCEPTORS } from '@helgoland/core';\n\nimport { CachingInterceptor } from './cache-interceptor';\nimport { LocalHttpCache } from './local-http-cache';\nimport { LocalOngoingHttpCache } from './local-ongoing-http-cache';\nimport { HttpCache, OnGoingHttpCache } from './model';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [\n    {\n      provide: HttpCache,\n      useClass: LocalHttpCache\n    },\n    {\n      provide: HTTP_SERVICE_INTERCEPTORS,\n      useClass: CachingInterceptor,\n      multi: true\n    },\n    {\n      provide: OnGoingHttpCache,\n      useClass: LocalOngoingHttpCache\n    },\n  ]\n})\nexport class HelgolandCachingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandControlModule.html":{"url":"modules/HelgolandControlModule.html","title":"module - HelgolandControlModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandControlModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandControlModule\n\n\n\ncluster_HelgolandControlModule_declarations\n\n\n\ncluster_HelgolandControlModule_exports\n\n\n\n\nBoolTogglerComponent\n\nBoolTogglerComponent\n\n\n\nHelgolandControlModule\n\nHelgolandControlModule\n\nHelgolandControlModule -->\n\nBoolTogglerComponent->HelgolandControlModule\n\n\n\n\n\nRefreshButtonComponent\n\nRefreshButtonComponent\n\nHelgolandControlModule -->\n\nRefreshButtonComponent->HelgolandControlModule\n\n\n\n\n\nStringTogglerComponent\n\nStringTogglerComponent\n\nHelgolandControlModule -->\n\nStringTogglerComponent->HelgolandControlModule\n\n\n\n\n\nBoolTogglerComponent \n\nBoolTogglerComponent \n\nBoolTogglerComponent  -->\n\nHelgolandControlModule->BoolTogglerComponent \n\n\n\n\n\nRefreshButtonComponent \n\nRefreshButtonComponent \n\nRefreshButtonComponent  -->\n\nHelgolandControlModule->RefreshButtonComponent \n\n\n\n\n\nStringTogglerComponent \n\nStringTogglerComponent \n\nStringTogglerComponent  -->\n\nHelgolandControlModule->StringTogglerComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/control/src/lib/control.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BoolTogglerComponent\n                            \n                            \n                                RefreshButtonComponent\n                            \n                            \n                                StringTogglerComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BoolTogglerComponent\n                            \n                            \n                                    RefreshButtonComponent\n                            \n                            \n                                    StringTogglerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { BoolTogglerComponent } from './bool-toggler/bool-toggler.component';\nimport { RefreshButtonComponent } from './refresh-button/refresh-button.component';\nimport { StringTogglerComponent } from './string-toggler/string-toggler.component';\n\nconst COMPONENTS = [\n  BoolTogglerComponent,\n  StringTogglerComponent,\n  RefreshButtonComponent\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    COMPONENTS\n  ],\n  providers: [\n  ]\n})\nexport class HelgolandControlModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandCoreModule.html":{"url":"modules/HelgolandCoreModule.html","title":"module - HelgolandCoreModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandCoreModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandCoreModule\n\n\n\ncluster_HelgolandCoreModule_declarations\n\n\n\ncluster_HelgolandCoreModule_exports\n\n\n\ncluster_HelgolandCoreModule_providers\n\n\n\n\nDateProxyPipe\n\nDateProxyPipe\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandCoreModule -->\n\nDateProxyPipe->HelgolandCoreModule\n\n\n\n\n\nDateProxyPipe \n\nDateProxyPipe \n\nDateProxyPipe  -->\n\nHelgolandCoreModule->DateProxyPipe \n\n\n\n\n\nColorService\n\nColorService\n\nHelgolandCoreModule -->\n\nColorService->HelgolandCoreModule\n\n\n\n\n\nDatasetApiMapping\n\nDatasetApiMapping\n\nHelgolandCoreModule -->\n\nDatasetApiMapping->HelgolandCoreModule\n\n\n\n\n\nDefinedTimespanService\n\nDefinedTimespanService\n\nHelgolandCoreModule -->\n\nDefinedTimespanService->HelgolandCoreModule\n\n\n\n\n\nInternalIdHandler\n\nInternalIdHandler\n\nHelgolandCoreModule -->\n\nInternalIdHandler->HelgolandCoreModule\n\n\n\n\n\nLocalStorage\n\nLocalStorage\n\nHelgolandCoreModule -->\n\nLocalStorage->HelgolandCoreModule\n\n\n\n\n\nNotifierService\n\nNotifierService\n\nHelgolandCoreModule -->\n\nNotifierService->HelgolandCoreModule\n\n\n\n\n\nStatusIntervalResolverService\n\nStatusIntervalResolverService\n\nHelgolandCoreModule -->\n\nStatusIntervalResolverService->HelgolandCoreModule\n\n\n\n\n\nTime\n\nTime\n\nHelgolandCoreModule -->\n\nTime->HelgolandCoreModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/core.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DateProxyPipe\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ColorService\n                            \n                            \n                                     DatasetApiMapping\n                            \n                            \n                                     DefinedTimespanService\n                            \n                            \n                                     InternalIdHandler\n                            \n                            \n                                     LocalStorage\n                            \n                            \n                                     NotifierService\n                            \n                            \n                                     StatusIntervalResolverService\n                            \n                            \n                                     Time\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DateProxyPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { ColorService } from './color/color.service';\nimport { DatasetApiMapping } from './dataset-api/api-mapping.service';\nimport { StatusIntervalResolverService } from './dataset-api/helper/status-interval-resolver.service';\nimport { InternalIdHandler } from './dataset-api/internal-id-handler.service';\nimport { LocalStorage } from './local-storage/local-storage.service';\nimport { NotifierService } from './notifier/notifier.service';\nimport { DateProxyPipe } from './pipes/dateproxy/dateproxy.pipe';\nimport { DefinedTimespanService } from './time/defined-timespan.service';\nimport { Time } from './time/time.service';\n\n@NgModule({\n  declarations: [\n    DateProxyPipe\n  ],\n  imports: [\n    HttpClientModule\n  ],\n  exports: [\n    DateProxyPipe\n  ],\n  providers: [\n    ColorService,\n    DatasetApiMapping,\n    DefinedTimespanService,\n    InternalIdHandler,\n    LocalStorage,\n    NotifierService,\n    StatusIntervalResolverService,\n    Time\n  ]\n})\nexport class HelgolandCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandD3Module.html":{"url":"modules/HelgolandD3Module.html","title":"module - HelgolandD3Module","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandD3Module\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandD3Module\n\n\n\ncluster_HelgolandD3Module_declarations\n\n\n\ncluster_HelgolandD3Module_imports\n\n\n\ncluster_HelgolandD3Module_exports\n\n\n\n\nD3OverviewTimeseriesGraphComponent\n\nD3OverviewTimeseriesGraphComponent\n\n\n\nHelgolandD3Module\n\nHelgolandD3Module\n\nHelgolandD3Module -->\n\nD3OverviewTimeseriesGraphComponent->HelgolandD3Module\n\n\n\n\n\nD3TimeseriesGraphComponent\n\nD3TimeseriesGraphComponent\n\nHelgolandD3Module -->\n\nD3TimeseriesGraphComponent->HelgolandD3Module\n\n\n\n\n\nD3TrajectoryGraphComponent\n\nD3TrajectoryGraphComponent\n\nHelgolandD3Module -->\n\nD3TrajectoryGraphComponent->HelgolandD3Module\n\n\n\n\n\nD3OverviewTimeseriesGraphComponent \n\nD3OverviewTimeseriesGraphComponent \n\nD3OverviewTimeseriesGraphComponent  -->\n\nHelgolandD3Module->D3OverviewTimeseriesGraphComponent \n\n\n\n\n\nD3TimeseriesGraphComponent \n\nD3TimeseriesGraphComponent \n\nD3TimeseriesGraphComponent  -->\n\nHelgolandD3Module->D3TimeseriesGraphComponent \n\n\n\n\n\nD3TrajectoryGraphComponent \n\nD3TrajectoryGraphComponent \n\nD3TrajectoryGraphComponent  -->\n\nHelgolandD3Module->D3TrajectoryGraphComponent \n\n\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandD3Module -->\n\nHelgolandCoreModule->HelgolandD3Module\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/d3/src/lib/d3.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                D3OverviewTimeseriesGraphComponent\n                            \n                            \n                                D3TimeseriesGraphComponent\n                            \n                            \n                                D3TrajectoryGraphComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandCoreModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    D3OverviewTimeseriesGraphComponent\n                            \n                            \n                                    D3TimeseriesGraphComponent\n                            \n                            \n                                    D3TrajectoryGraphComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { HelgolandCoreModule } from '@helgoland/core';\n\nimport { D3TimeseriesGraphComponent } from './d3-timeseries-graph/d3-timeseries-graph.component';\nimport { D3OverviewTimeseriesGraphComponent } from './d3-overview-timeseries-graph/d3-overview-timeseries-graph.component';\nimport { D3TrajectoryGraphComponent } from './d3-trajectory-graph/d3-trajectory-graph.component';\n\n@NgModule({\n  declarations: [\n    D3TrajectoryGraphComponent,\n    D3TimeseriesGraphComponent,\n    D3OverviewTimeseriesGraphComponent\n  ],\n  imports: [\n    HelgolandCoreModule\n  ],\n  exports: [\n    D3TrajectoryGraphComponent,\n    D3TimeseriesGraphComponent,\n    D3OverviewTimeseriesGraphComponent\n  ],\n  providers: []\n})\nexport class HelgolandD3Module { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandDatasetTableModule.html":{"url":"modules/HelgolandDatasetTableModule.html","title":"module - HelgolandDatasetTableModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandDatasetTableModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandDatasetTableModule\n\n\n\ncluster_HelgolandDatasetTableModule_declarations\n\n\n\ncluster_HelgolandDatasetTableModule_imports\n\n\n\ncluster_HelgolandDatasetTableModule_exports\n\n\n\n\nDatasetTableComponent\n\nDatasetTableComponent\n\n\n\nHelgolandDatasetTableModule\n\nHelgolandDatasetTableModule\n\nHelgolandDatasetTableModule -->\n\nDatasetTableComponent->HelgolandDatasetTableModule\n\n\n\n\n\nDatasetTableComponent \n\nDatasetTableComponent \n\nDatasetTableComponent  -->\n\nHelgolandDatasetTableModule->DatasetTableComponent \n\n\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandDatasetTableModule -->\n\nHelgolandCoreModule->HelgolandDatasetTableModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/depiction/src/lib/dataset-table/module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DatasetTableComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandCoreModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DatasetTableComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HelgolandCoreModule } from '@helgoland/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { DatasetTableComponent } from './dataset-table.component';\n\n@NgModule({\n    declarations: [\n        DatasetTableComponent\n    ],\n    imports: [\n        CommonModule,\n        TranslateModule,\n        HelgolandCoreModule\n    ],\n    exports: [\n        DatasetTableComponent\n    ],\n    providers: [\n    ]\n})\nexport class HelgolandDatasetTableModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandDatasetlistModule.html":{"url":"modules/HelgolandDatasetlistModule.html","title":"module - HelgolandDatasetlistModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandDatasetlistModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandDatasetlistModule\n\n\n\ncluster_HelgolandDatasetlistModule_declarations\n\n\n\ncluster_HelgolandDatasetlistModule_imports\n\n\n\ncluster_HelgolandDatasetlistModule_exports\n\n\n\ncluster_HelgolandDatasetlistModule_providers\n\n\n\n\nBoolTogglerComponent\n\nBoolTogglerComponent\n\n\n\nHelgolandDatasetlistModule\n\nHelgolandDatasetlistModule\n\nHelgolandDatasetlistModule -->\n\nBoolTogglerComponent->HelgolandDatasetlistModule\n\n\n\n\n\nRefreshButtonComponent\n\nRefreshButtonComponent\n\nHelgolandDatasetlistModule -->\n\nRefreshButtonComponent->HelgolandDatasetlistModule\n\n\n\n\n\nStringTogglerComponent\n\nStringTogglerComponent\n\nHelgolandDatasetlistModule -->\n\nStringTogglerComponent->HelgolandDatasetlistModule\n\n\n\n\n\nBoolTogglerComponent \n\nBoolTogglerComponent \n\nBoolTogglerComponent  -->\n\nHelgolandDatasetlistModule->BoolTogglerComponent \n\n\n\n\n\nRefreshButtonComponent \n\nRefreshButtonComponent \n\nRefreshButtonComponent  -->\n\nHelgolandDatasetlistModule->RefreshButtonComponent \n\n\n\n\n\nStringTogglerComponent \n\nStringTogglerComponent \n\nStringTogglerComponent  -->\n\nHelgolandDatasetlistModule->StringTogglerComponent \n\n\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandDatasetlistModule -->\n\nHelgolandCoreModule->HelgolandDatasetlistModule\n\n\n\n\n\nHelgolandLabelMapperModule\n\nHelgolandLabelMapperModule\n\nHelgolandDatasetlistModule -->\n\nHelgolandLabelMapperModule->HelgolandDatasetlistModule\n\n\n\n\n\nReferenceValueColorCache\n\nReferenceValueColorCache\n\nHelgolandDatasetlistModule -->\n\nReferenceValueColorCache->HelgolandDatasetlistModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/depiction/src/lib/datasetlist/module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BoolTogglerComponent\n                            \n                            \n                                RefreshButtonComponent\n                            \n                            \n                                StringTogglerComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ReferenceValueColorCache\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandCoreModule\n                            \n                            \n                                    HelgolandLabelMapperModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BoolTogglerComponent\n                            \n                            \n                                    RefreshButtonComponent\n                            \n                            \n                                    StringTogglerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HelgolandCoreModule } from '@helgoland/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { HelgolandLabelMapperModule } from '../label-mapper/label-mapper.module';\nimport { ProfileEntryComponent } from './profile-entry/profile-entry.component';\nimport { ReferenceValueColorCache, TimeseriesEntryComponent } from './timeseries-entry/timeseries-entry.component';\nimport { TrajectoryEntryComponent } from './trajectory-entry/trajectory-entry.component';\nimport { FormsModule } from '@angular/forms';\n\nconst COMPONENTS = [\n  TimeseriesEntryComponent,\n  ProfileEntryComponent,\n  TrajectoryEntryComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    HelgolandCoreModule,\n    HelgolandLabelMapperModule,\n    FormsModule\n  ],\n  declarations: [\n    COMPONENTS\n  ],\n  exports: [\n    COMPONENTS\n  ],\n  providers: [\n    ReferenceValueColorCache\n  ]\n})\nexport class HelgolandDatasetlistModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandFavoriteModule.html":{"url":"modules/HelgolandFavoriteModule.html","title":"module - HelgolandFavoriteModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandFavoriteModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandFavoriteModule\n\n\n\ncluster_HelgolandFavoriteModule_declarations\n\n\n\ncluster_HelgolandFavoriteModule_exports\n\n\n\ncluster_HelgolandFavoriteModule_providers\n\n\n\n\nBoolTogglerComponent\n\nBoolTogglerComponent\n\n\n\nHelgolandFavoriteModule\n\nHelgolandFavoriteModule\n\nHelgolandFavoriteModule -->\n\nBoolTogglerComponent->HelgolandFavoriteModule\n\n\n\n\n\nRefreshButtonComponent\n\nRefreshButtonComponent\n\nHelgolandFavoriteModule -->\n\nRefreshButtonComponent->HelgolandFavoriteModule\n\n\n\n\n\nStringTogglerComponent\n\nStringTogglerComponent\n\nHelgolandFavoriteModule -->\n\nStringTogglerComponent->HelgolandFavoriteModule\n\n\n\n\n\nBoolTogglerComponent \n\nBoolTogglerComponent \n\nBoolTogglerComponent  -->\n\nHelgolandFavoriteModule->BoolTogglerComponent \n\n\n\n\n\nRefreshButtonComponent \n\nRefreshButtonComponent \n\nRefreshButtonComponent  -->\n\nHelgolandFavoriteModule->RefreshButtonComponent \n\n\n\n\n\nStringTogglerComponent \n\nStringTogglerComponent \n\nStringTogglerComponent  -->\n\nHelgolandFavoriteModule->StringTogglerComponent \n\n\n\n\n\nFavoriteService\n\nFavoriteService\n\nHelgolandFavoriteModule -->\n\nFavoriteService->HelgolandFavoriteModule\n\n\n\n\n\nJsonFavoriteExporterService\n\nJsonFavoriteExporterService\n\nHelgolandFavoriteModule -->\n\nJsonFavoriteExporterService->HelgolandFavoriteModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/favorite/src/lib/favorite.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BoolTogglerComponent\n                            \n                            \n                                RefreshButtonComponent\n                            \n                            \n                                StringTogglerComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     FavoriteService\n                            \n                            \n                                     JsonFavoriteExporterService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BoolTogglerComponent\n                            \n                            \n                                    RefreshButtonComponent\n                            \n                            \n                                    StringTogglerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FavoriteTogglerComponent } from './favorite-toggler/favorite-toggler.component';\nimport { FavoriteService } from './service/favorite.service';\nimport { JsonFavoriteExporterService } from './service/json-favorite-exporter.service';\n\nconst COMPONENTS = [\n  FavoriteTogglerComponent\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    COMPONENTS\n  ],\n  providers: [\n    FavoriteService,\n    JsonFavoriteExporterService\n  ]\n})\nexport class HelgolandFavoriteModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandFlotModule.html":{"url":"modules/HelgolandFlotModule.html","title":"module - HelgolandFlotModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandFlotModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandFlotModule\n\n\n\ncluster_HelgolandFlotModule_declarations\n\n\n\ncluster_HelgolandFlotModule_imports\n\n\n\ncluster_HelgolandFlotModule_exports\n\n\n\n\nFlotOverviewTimeseriesGraphComponent\n\nFlotOverviewTimeseriesGraphComponent\n\n\n\nHelgolandFlotModule\n\nHelgolandFlotModule\n\nHelgolandFlotModule -->\n\nFlotOverviewTimeseriesGraphComponent->HelgolandFlotModule\n\n\n\n\n\nFlotTimeseriesGraphComponent\n\nFlotTimeseriesGraphComponent\n\nHelgolandFlotModule -->\n\nFlotTimeseriesGraphComponent->HelgolandFlotModule\n\n\n\n\n\nFlotOverviewTimeseriesGraphComponent \n\nFlotOverviewTimeseriesGraphComponent \n\nFlotOverviewTimeseriesGraphComponent  -->\n\nHelgolandFlotModule->FlotOverviewTimeseriesGraphComponent \n\n\n\n\n\nFlotTimeseriesGraphComponent \n\nFlotTimeseriesGraphComponent \n\nFlotTimeseriesGraphComponent  -->\n\nHelgolandFlotModule->FlotTimeseriesGraphComponent \n\n\n\n\n\nHelgolandLabelMapperModule\n\nHelgolandLabelMapperModule\n\nHelgolandFlotModule -->\n\nHelgolandLabelMapperModule->HelgolandFlotModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/flot/src/lib/flot.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FlotOverviewTimeseriesGraphComponent\n                            \n                            \n                                FlotTimeseriesGraphComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandLabelMapperModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FlotOverviewTimeseriesGraphComponent\n                            \n                            \n                                    FlotTimeseriesGraphComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { HelgolandLabelMapperModule } from '@helgoland/depiction';\n\nimport {\n  FlotOverviewTimeseriesGraphComponent,\n} from './flot-overview-timeseries-graph/flot-overview-timeseries-graph.component';\nimport { FlotTimeseriesGraphComponent } from './flot-timeseries-graph/flot-timeseries-graph.component';\n\n@NgModule({\n  declarations: [\n    FlotTimeseriesGraphComponent,\n    FlotOverviewTimeseriesGraphComponent\n  ],\n  imports: [\n    HelgolandLabelMapperModule\n  ],\n  exports: [\n    FlotTimeseriesGraphComponent,\n    FlotOverviewTimeseriesGraphComponent\n  ],\n  providers: []\n})\nexport class HelgolandFlotModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandLabelMapperModule.html":{"url":"modules/HelgolandLabelMapperModule.html","title":"module - HelgolandLabelMapperModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandLabelMapperModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandLabelMapperModule\n\n\n\ncluster_HelgolandLabelMapperModule_declarations\n\n\n\ncluster_HelgolandLabelMapperModule_exports\n\n\n\ncluster_HelgolandLabelMapperModule_providers\n\n\n\n\nLabelMapperComponent\n\nLabelMapperComponent\n\n\n\nHelgolandLabelMapperModule\n\nHelgolandLabelMapperModule\n\nHelgolandLabelMapperModule -->\n\nLabelMapperComponent->HelgolandLabelMapperModule\n\n\n\n\n\nLabelMapperComponent \n\nLabelMapperComponent \n\nLabelMapperComponent  -->\n\nHelgolandLabelMapperModule->LabelMapperComponent \n\n\n\n\n\nLabelMapperService\n\nLabelMapperService\n\nHelgolandLabelMapperModule -->\n\nLabelMapperService->HelgolandLabelMapperModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/depiction/src/lib/label-mapper/label-mapper.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LabelMapperComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     LabelMapperService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LabelMapperComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { LabelMapperComponent } from './label-mapper.component';\nimport { LabelMapperService } from './label-mapper.service';\n\n@NgModule({\n  declarations: [\n    LabelMapperComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LabelMapperComponent\n  ],\n  providers: [\n    LabelMapperService\n  ]\n})\nexport class HelgolandLabelMapperModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandMapControlModule.html":{"url":"modules/HelgolandMapControlModule.html","title":"module - HelgolandMapControlModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandMapControlModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandMapControlModule\n\n\n\ncluster_HelgolandMapControlModule_declarations\n\n\n\ncluster_HelgolandMapControlModule_imports\n\n\n\ncluster_HelgolandMapControlModule_exports\n\n\n\ncluster_HelgolandMapControlModule_providers\n\n\n\n\nBoolTogglerComponent\n\nBoolTogglerComponent\n\n\n\nHelgolandMapControlModule\n\nHelgolandMapControlModule\n\nHelgolandMapControlModule -->\n\nBoolTogglerComponent->HelgolandMapControlModule\n\n\n\n\n\nRefreshButtonComponent\n\nRefreshButtonComponent\n\nHelgolandMapControlModule -->\n\nRefreshButtonComponent->HelgolandMapControlModule\n\n\n\n\n\nStringTogglerComponent\n\nStringTogglerComponent\n\nHelgolandMapControlModule -->\n\nStringTogglerComponent->HelgolandMapControlModule\n\n\n\n\n\nBoolTogglerComponent \n\nBoolTogglerComponent \n\nBoolTogglerComponent  -->\n\nHelgolandMapControlModule->BoolTogglerComponent \n\n\n\n\n\nRefreshButtonComponent \n\nRefreshButtonComponent \n\nRefreshButtonComponent  -->\n\nHelgolandMapControlModule->RefreshButtonComponent \n\n\n\n\n\nStringTogglerComponent \n\nStringTogglerComponent \n\nStringTogglerComponent  -->\n\nHelgolandMapControlModule->StringTogglerComponent \n\n\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandMapControlModule -->\n\nHelgolandCoreModule->HelgolandMapControlModule\n\n\n\n\n\nHelgolandMapModule\n\nHelgolandMapModule\n\nHelgolandMapControlModule -->\n\nHelgolandMapModule->HelgolandMapControlModule\n\n\n\n\n\nLocateService\n\nLocateService\n\nHelgolandMapControlModule -->\n\nLocateService->HelgolandMapControlModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/control/module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BoolTogglerComponent\n                            \n                            \n                                RefreshButtonComponent\n                            \n                            \n                                StringTogglerComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     LocateService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandCoreModule\n                            \n                            \n                                    HelgolandMapModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BoolTogglerComponent\n                            \n                            \n                                    RefreshButtonComponent\n                            \n                            \n                                    StringTogglerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HelgolandCoreModule } from '@helgoland/core';\n\nimport { HelgolandMapModule } from '../base/map.module';\nimport { ExtentControlComponent } from './extent/extent.component';\nimport { GeosearchControlComponent } from './geosearch/geosearch.component';\nimport { LocateControlComponent } from './locate/locate.component';\nimport { LocateService } from './locate/locate.service';\nimport { ZoomControlComponent } from './zoom/zoom.component';\n\nconst COMPONENTS = [\n  LocateControlComponent,\n  ZoomControlComponent,\n  GeosearchControlComponent,\n  ExtentControlComponent\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HelgolandCoreModule,\n    HelgolandMapModule\n  ],\n  exports: [\n    COMPONENTS\n  ],\n  providers: [\n    LocateService\n  ]\n})\nexport class HelgolandMapControlModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandMapModule.html":{"url":"modules/HelgolandMapModule.html","title":"module - HelgolandMapModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandMapModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandMapModule\n\n\n\ncluster_HelgolandMapModule_declarations\n\n\n\ncluster_HelgolandMapModule_exports\n\n\n\ncluster_HelgolandMapModule_providers\n\n\n\n\nBoolTogglerComponent\n\nBoolTogglerComponent\n\n\n\nHelgolandMapModule\n\nHelgolandMapModule\n\nHelgolandMapModule -->\n\nBoolTogglerComponent->HelgolandMapModule\n\n\n\n\n\nRefreshButtonComponent\n\nRefreshButtonComponent\n\nHelgolandMapModule -->\n\nRefreshButtonComponent->HelgolandMapModule\n\n\n\n\n\nStringTogglerComponent\n\nStringTogglerComponent\n\nHelgolandMapModule -->\n\nStringTogglerComponent->HelgolandMapModule\n\n\n\n\n\nBoolTogglerComponent \n\nBoolTogglerComponent \n\nBoolTogglerComponent  -->\n\nHelgolandMapModule->BoolTogglerComponent \n\n\n\n\n\nRefreshButtonComponent \n\nRefreshButtonComponent \n\nRefreshButtonComponent  -->\n\nHelgolandMapModule->RefreshButtonComponent \n\n\n\n\n\nStringTogglerComponent \n\nStringTogglerComponent \n\nStringTogglerComponent  -->\n\nHelgolandMapModule->StringTogglerComponent \n\n\n\n\n\nMapCache\n\nMapCache\n\nHelgolandMapModule -->\n\nMapCache->HelgolandMapModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/map.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BoolTogglerComponent\n                            \n                            \n                                RefreshButtonComponent\n                            \n                            \n                                StringTogglerComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MapCache\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BoolTogglerComponent\n                            \n                            \n                                    RefreshButtonComponent\n                            \n                            \n                                    StringTogglerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { MapCache } from './map-cache.service';\n\nconst COMPONENTS = [\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n  ],\n  exports: [\n    COMPONENTS\n  ],\n  providers: [\n    MapCache\n  ]\n})\nexport class HelgolandMapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandMapSelectorModule.html":{"url":"modules/HelgolandMapSelectorModule.html","title":"module - HelgolandMapSelectorModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandMapSelectorModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandMapSelectorModule\n\n\n\ncluster_HelgolandMapSelectorModule_declarations\n\n\n\ncluster_HelgolandMapSelectorModule_imports\n\n\n\ncluster_HelgolandMapSelectorModule_exports\n\n\n\n\nBoolTogglerComponent\n\nBoolTogglerComponent\n\n\n\nHelgolandMapSelectorModule\n\nHelgolandMapSelectorModule\n\nHelgolandMapSelectorModule -->\n\nBoolTogglerComponent->HelgolandMapSelectorModule\n\n\n\n\n\nRefreshButtonComponent\n\nRefreshButtonComponent\n\nHelgolandMapSelectorModule -->\n\nRefreshButtonComponent->HelgolandMapSelectorModule\n\n\n\n\n\nStringTogglerComponent\n\nStringTogglerComponent\n\nHelgolandMapSelectorModule -->\n\nStringTogglerComponent->HelgolandMapSelectorModule\n\n\n\n\n\nBoolTogglerComponent \n\nBoolTogglerComponent \n\nBoolTogglerComponent  -->\n\nHelgolandMapSelectorModule->BoolTogglerComponent \n\n\n\n\n\nRefreshButtonComponent \n\nRefreshButtonComponent \n\nRefreshButtonComponent  -->\n\nHelgolandMapSelectorModule->RefreshButtonComponent \n\n\n\n\n\nStringTogglerComponent \n\nStringTogglerComponent \n\nStringTogglerComponent  -->\n\nHelgolandMapSelectorModule->StringTogglerComponent \n\n\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandMapSelectorModule -->\n\nHelgolandCoreModule->HelgolandMapSelectorModule\n\n\n\n\n\nHelgolandMapModule\n\nHelgolandMapModule\n\nHelgolandMapSelectorModule -->\n\nHelgolandMapModule->HelgolandMapSelectorModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/selector/module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BoolTogglerComponent\n                            \n                            \n                                RefreshButtonComponent\n                            \n                            \n                                StringTogglerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandCoreModule\n                            \n                            \n                                    HelgolandMapModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BoolTogglerComponent\n                            \n                            \n                                    RefreshButtonComponent\n                            \n                            \n                                    StringTogglerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HelgolandCoreModule } from '@helgoland/core';\n\nimport { HelgolandMapModule } from '../base/map.module';\nimport { PlatformMapSelectorComponent } from './platform-map-selector/platform-map-selector.component';\nimport { StationMapSelectorComponent } from './station-map-selector/station-map-selector.component';\nimport { ProfileTrajectoryMapSelectorComponent } from './trajectory-map-selector/trajectory-map-selector.component';\n\nconst COMPONENTS = [\n    PlatformMapSelectorComponent,\n    StationMapSelectorComponent,\n    ProfileTrajectoryMapSelectorComponent\n];\n\n@NgModule({\n    declarations: [\n        COMPONENTS\n    ],\n    imports: [\n        CommonModule,\n        HelgolandCoreModule,\n        HelgolandMapModule\n    ],\n    exports: [\n        COMPONENTS\n    ],\n    providers: [\n    ]\n})\nexport class HelgolandMapSelectorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandMapViewModule.html":{"url":"modules/HelgolandMapViewModule.html","title":"module - HelgolandMapViewModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandMapViewModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandMapViewModule\n\n\n\ncluster_HelgolandMapViewModule_declarations\n\n\n\ncluster_HelgolandMapViewModule_imports\n\n\n\ncluster_HelgolandMapViewModule_exports\n\n\n\n\nGeometryMapViewerComponent\n\nGeometryMapViewerComponent\n\n\n\nHelgolandMapViewModule\n\nHelgolandMapViewModule\n\nHelgolandMapViewModule -->\n\nGeometryMapViewerComponent->HelgolandMapViewModule\n\n\n\n\n\nGeometryMapViewerComponent \n\nGeometryMapViewerComponent \n\nGeometryMapViewerComponent  -->\n\nHelgolandMapViewModule->GeometryMapViewerComponent \n\n\n\n\n\nHelgolandMapModule\n\nHelgolandMapModule\n\nHelgolandMapViewModule -->\n\nHelgolandMapModule->HelgolandMapViewModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/view/module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GeometryMapViewerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandMapModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    GeometryMapViewerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { HelgolandMapModule } from '../base/map.module';\nimport { GeometryMapViewerComponent } from './geometry-map-viewer/geometry-map-viewer.component';\n\n@NgModule({\n    declarations: [\n        GeometryMapViewerComponent\n    ],\n    imports: [\n        HelgolandMapModule\n    ],\n    exports: [\n        GeometryMapViewerComponent\n    ],\n    providers: [\n    ]\n})\nexport class HelgolandMapViewModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandModificationModule.html":{"url":"modules/HelgolandModificationModule.html","title":"module - HelgolandModificationModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandModificationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandModificationModule\n\n\n\ncluster_HelgolandModificationModule_declarations\n\n\n\ncluster_HelgolandModificationModule_imports\n\n\n\ncluster_HelgolandModificationModule_exports\n\n\n\n\nAxesOptionsComponent\n\nAxesOptionsComponent\n\n\n\nHelgolandModificationModule\n\nHelgolandModificationModule\n\nHelgolandModificationModule -->\n\nAxesOptionsComponent->HelgolandModificationModule\n\n\n\n\n\nColorSelectorComponent\n\nColorSelectorComponent\n\nHelgolandModificationModule -->\n\nColorSelectorComponent->HelgolandModificationModule\n\n\n\n\n\nDragOptionsComponent\n\nDragOptionsComponent\n\nHelgolandModificationModule -->\n\nDragOptionsComponent->HelgolandModificationModule\n\n\n\n\n\nMinMaxRangeComponent\n\nMinMaxRangeComponent\n\nHelgolandModificationModule -->\n\nMinMaxRangeComponent->HelgolandModificationModule\n\n\n\n\n\nAxesOptionsComponent \n\nAxesOptionsComponent \n\nAxesOptionsComponent  -->\n\nHelgolandModificationModule->AxesOptionsComponent \n\n\n\n\n\nColorSelectorComponent \n\nColorSelectorComponent \n\nColorSelectorComponent  -->\n\nHelgolandModificationModule->ColorSelectorComponent \n\n\n\n\n\nDragOptionsComponent \n\nDragOptionsComponent \n\nDragOptionsComponent  -->\n\nHelgolandModificationModule->DragOptionsComponent \n\n\n\n\n\nMinMaxRangeComponent \n\nMinMaxRangeComponent \n\nMinMaxRangeComponent  -->\n\nHelgolandModificationModule->MinMaxRangeComponent \n\n\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandModificationModule -->\n\nHelgolandCoreModule->HelgolandModificationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/modification/src/lib/modification.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AxesOptionsComponent\n                            \n                            \n                                ColorSelectorComponent\n                            \n                            \n                                DragOptionsComponent\n                            \n                            \n                                MinMaxRangeComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandCoreModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AxesOptionsComponent\n                            \n                            \n                                    ColorSelectorComponent\n                            \n                            \n                                    DragOptionsComponent\n                            \n                            \n                                    MinMaxRangeComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HelgolandCoreModule } from '@helgoland/core';\nimport { ColorPickerModule } from 'ngx-color-picker';\n\nimport { AxesOptionsComponent } from './axes-options/axes-options.component';\nimport { ColorSelectorComponent } from './color-selector/color-selector.component';\nimport { DragOptionsComponent } from './drag-options/drag-options.component';\nimport { MinMaxRangeComponent } from './min-max-range/min-max-range.component';\n\n@NgModule({\n  declarations: [\n    ColorSelectorComponent,\n    AxesOptionsComponent,\n    DragOptionsComponent,\n    MinMaxRangeComponent\n  ],\n  imports: [\n    HelgolandCoreModule,\n    FormsModule,\n    ColorPickerModule\n  ],\n  exports: [\n    ColorSelectorComponent,\n    AxesOptionsComponent,\n    DragOptionsComponent,\n    MinMaxRangeComponent\n  ],\n  providers: [\n  ]\n})\nexport class HelgolandModificationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandPermalinkModule.html":{"url":"modules/HelgolandPermalinkModule.html","title":"module - HelgolandPermalinkModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandPermalinkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandPermalinkModule\n\n\n\ncluster_HelgolandPermalinkModule_declarations\n\n\n\ncluster_HelgolandPermalinkModule_exports\n\n\n\n\nBoolTogglerComponent\n\nBoolTogglerComponent\n\n\n\nHelgolandPermalinkModule\n\nHelgolandPermalinkModule\n\nHelgolandPermalinkModule -->\n\nBoolTogglerComponent->HelgolandPermalinkModule\n\n\n\n\n\nRefreshButtonComponent\n\nRefreshButtonComponent\n\nHelgolandPermalinkModule -->\n\nRefreshButtonComponent->HelgolandPermalinkModule\n\n\n\n\n\nStringTogglerComponent\n\nStringTogglerComponent\n\nHelgolandPermalinkModule -->\n\nStringTogglerComponent->HelgolandPermalinkModule\n\n\n\n\n\nBoolTogglerComponent \n\nBoolTogglerComponent \n\nBoolTogglerComponent  -->\n\nHelgolandPermalinkModule->BoolTogglerComponent \n\n\n\n\n\nRefreshButtonComponent \n\nRefreshButtonComponent \n\nRefreshButtonComponent  -->\n\nHelgolandPermalinkModule->RefreshButtonComponent \n\n\n\n\n\nStringTogglerComponent \n\nStringTogglerComponent \n\nStringTogglerComponent  -->\n\nHelgolandPermalinkModule->StringTogglerComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/permalink/src/lib/permalink.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BoolTogglerComponent\n                            \n                            \n                                RefreshButtonComponent\n                            \n                            \n                                StringTogglerComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BoolTogglerComponent\n                            \n                            \n                                    RefreshButtonComponent\n                            \n                            \n                                    StringTogglerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ClipboardModule } from 'ngx-clipboard';\n\nimport { PermalinkInMailComponent } from './permalink-in-mail/permalink-in-mail.component';\nimport { PermalinkNewWindowComponent } from './permalink-new-window/permalink-new-window.component';\nimport { PermalinkToClipboardComponent } from './permalink-to-clipboard/permalink-to-clipboard.component';\n\nconst COMPONENTS = [\n  PermalinkInMailComponent,\n  PermalinkNewWindowComponent,\n  PermalinkToClipboardComponent\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n    ClipboardModule\n  ],\n  exports: [\n    COMPONENTS\n  ],\n  providers: [\n  ]\n})\nexport class HelgolandPermalinkModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandPlotlyModule.html":{"url":"modules/HelgolandPlotlyModule.html","title":"module - HelgolandPlotlyModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandPlotlyModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandPlotlyModule\n\n\n\ncluster_HelgolandPlotlyModule_declarations\n\n\n\ncluster_HelgolandPlotlyModule_imports\n\n\n\ncluster_HelgolandPlotlyModule_exports\n\n\n\n\nPlotlyProfileGraphComponent\n\nPlotlyProfileGraphComponent\n\n\n\nHelgolandPlotlyModule\n\nHelgolandPlotlyModule\n\nHelgolandPlotlyModule -->\n\nPlotlyProfileGraphComponent->HelgolandPlotlyModule\n\n\n\n\n\nPlotlyProfileGraphComponent \n\nPlotlyProfileGraphComponent \n\nPlotlyProfileGraphComponent  -->\n\nHelgolandPlotlyModule->PlotlyProfileGraphComponent \n\n\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandPlotlyModule -->\n\nHelgolandCoreModule->HelgolandPlotlyModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/plotly/src/lib/plotly.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PlotlyProfileGraphComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandCoreModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    PlotlyProfileGraphComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { HelgolandCoreModule } from '@helgoland/core';\n\nimport { PlotlyProfileGraphComponent } from './plotly-profile-graph/plotly-profile-graph.component';\n\n@NgModule({\n  declarations: [\n    PlotlyProfileGraphComponent\n  ],\n  imports: [\n    HelgolandCoreModule\n  ],\n  exports: [\n    PlotlyProfileGraphComponent\n  ],\n  providers: []\n})\nexport class HelgolandPlotlyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandSelectorModule.html":{"url":"modules/HelgolandSelectorModule.html","title":"module - HelgolandSelectorModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandSelectorModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandSelectorModule\n\n\n\ncluster_HelgolandSelectorModule_declarations\n\n\n\ncluster_HelgolandSelectorModule_imports\n\n\n\ncluster_HelgolandSelectorModule_exports\n\n\n\ncluster_HelgolandSelectorModule_providers\n\n\n\n\nDatasetByStationSelectorComponent\n\nDatasetByStationSelectorComponent\n\n\n\nHelgolandSelectorModule\n\nHelgolandSelectorModule\n\nHelgolandSelectorModule -->\n\nDatasetByStationSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nListSelectorComponent\n\nListSelectorComponent\n\nHelgolandSelectorModule -->\n\nListSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nMultiServiceFilterSelectorComponent\n\nMultiServiceFilterSelectorComponent\n\nHelgolandSelectorModule -->\n\nMultiServiceFilterSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nServiceFilterSelectorComponent\n\nServiceFilterSelectorComponent\n\nHelgolandSelectorModule -->\n\nServiceFilterSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nServiceSelectorComponent\n\nServiceSelectorComponent\n\nHelgolandSelectorModule -->\n\nServiceSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nDatasetByStationSelectorComponent \n\nDatasetByStationSelectorComponent \n\nDatasetByStationSelectorComponent  -->\n\nHelgolandSelectorModule->DatasetByStationSelectorComponent \n\n\n\n\n\nListSelectorComponent \n\nListSelectorComponent \n\nListSelectorComponent  -->\n\nHelgolandSelectorModule->ListSelectorComponent \n\n\n\n\n\nMultiServiceFilterSelectorComponent \n\nMultiServiceFilterSelectorComponent \n\nMultiServiceFilterSelectorComponent  -->\n\nHelgolandSelectorModule->MultiServiceFilterSelectorComponent \n\n\n\n\n\nServiceFilterSelectorComponent \n\nServiceFilterSelectorComponent \n\nServiceFilterSelectorComponent  -->\n\nHelgolandSelectorModule->ServiceFilterSelectorComponent \n\n\n\n\n\nServiceSelectorComponent \n\nServiceSelectorComponent \n\nServiceSelectorComponent  -->\n\nHelgolandSelectorModule->ServiceSelectorComponent \n\n\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandSelectorModule -->\n\nHelgolandCoreModule->HelgolandSelectorModule\n\n\n\n\n\nHelgolandLabelMapperModule\n\nHelgolandLabelMapperModule\n\nHelgolandSelectorModule -->\n\nHelgolandLabelMapperModule->HelgolandSelectorModule\n\n\n\n\n\nListSelectorService\n\nListSelectorService\n\nHelgolandSelectorModule -->\n\nListSelectorService->HelgolandSelectorModule\n\n\n\n\n\nServiceSelectorService\n\nServiceSelectorService\n\nHelgolandSelectorModule -->\n\nServiceSelectorService->HelgolandSelectorModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/selector/src/lib/selector.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DatasetByStationSelectorComponent\n                            \n                            \n                                ListSelectorComponent\n                            \n                            \n                                MultiServiceFilterSelectorComponent\n                            \n                            \n                                ServiceFilterSelectorComponent\n                            \n                            \n                                ServiceSelectorComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ListSelectorService\n                            \n                            \n                                     ServiceSelectorService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandCoreModule\n                            \n                            \n                                    HelgolandLabelMapperModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DatasetByStationSelectorComponent\n                            \n                            \n                                    ListSelectorComponent\n                            \n                            \n                                    MultiServiceFilterSelectorComponent\n                            \n                            \n                                    ServiceFilterSelectorComponent\n                            \n                            \n                                    ServiceSelectorComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HelgolandCoreModule } from '@helgoland/core';\nimport { HelgolandLabelMapperModule } from '@helgoland/depiction';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { DatasetByStationSelectorComponent } from './dataset-by-station-selector/dataset-by-station-selector.component';\nimport { ListSelectorComponent } from './list-selector/list-selector.component';\nimport { ListSelectorService } from './list-selector/list-selector.service';\nimport {\n  MultiServiceFilterSelectorComponent,\n} from './multi-service-filter-selector/multi-service-filter-selector.component';\nimport { ServiceFilterSelectorComponent } from './service-filter-selector/service-filter-selector.component';\nimport { ServiceSelectorComponent } from './service-selector/service-selector.component';\nimport { ServiceSelectorService } from './service-selector/service-selector.service';\n\n@NgModule({\n  declarations: [\n    ServiceSelectorComponent,\n    ServiceFilterSelectorComponent,\n    DatasetByStationSelectorComponent,\n    MultiServiceFilterSelectorComponent,\n    ListSelectorComponent\n  ],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    HelgolandLabelMapperModule,\n    HelgolandCoreModule\n  ],\n  exports: [\n    ServiceSelectorComponent,\n    ServiceFilterSelectorComponent,\n    DatasetByStationSelectorComponent,\n    MultiServiceFilterSelectorComponent,\n    ListSelectorComponent\n  ],\n  providers: [\n    ServiceSelectorService,\n    ListSelectorService\n  ]\n})\nexport class HelgolandSelectorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandTimeModule.html":{"url":"modules/HelgolandTimeModule.html","title":"module - HelgolandTimeModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandTimeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandTimeModule\n\n\n\ncluster_HelgolandTimeModule_declarations\n\n\n\ncluster_HelgolandTimeModule_imports\n\n\n\ncluster_HelgolandTimeModule_exports\n\n\n\n\nBoolTogglerComponent\n\nBoolTogglerComponent\n\n\n\nHelgolandTimeModule\n\nHelgolandTimeModule\n\nHelgolandTimeModule -->\n\nBoolTogglerComponent->HelgolandTimeModule\n\n\n\n\n\nRefreshButtonComponent\n\nRefreshButtonComponent\n\nHelgolandTimeModule -->\n\nRefreshButtonComponent->HelgolandTimeModule\n\n\n\n\n\nStringTogglerComponent\n\nStringTogglerComponent\n\nHelgolandTimeModule -->\n\nStringTogglerComponent->HelgolandTimeModule\n\n\n\n\n\nBoolTogglerComponent \n\nBoolTogglerComponent \n\nBoolTogglerComponent  -->\n\nHelgolandTimeModule->BoolTogglerComponent \n\n\n\n\n\nRefreshButtonComponent \n\nRefreshButtonComponent \n\nRefreshButtonComponent  -->\n\nHelgolandTimeModule->RefreshButtonComponent \n\n\n\n\n\nStringTogglerComponent \n\nStringTogglerComponent \n\nStringTogglerComponent  -->\n\nHelgolandTimeModule->StringTogglerComponent \n\n\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandTimeModule -->\n\nHelgolandCoreModule->HelgolandTimeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/time/src/lib/time.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BoolTogglerComponent\n                            \n                            \n                                RefreshButtonComponent\n                            \n                            \n                                StringTogglerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HelgolandCoreModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BoolTogglerComponent\n                            \n                            \n                                    RefreshButtonComponent\n                            \n                            \n                                    StringTogglerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HelgolandCoreModule } from '@helgoland/core';\n\nimport { PredefinedTimespanSelectorComponent } from './predefined-timespan-selector/predefined-timespan-selector.component';\nimport { TimeListSelectorComponent } from './time-list-selector/time-list-selector.component';\nimport { TimespanButtonComponent } from './timespan-button/timespan-button.component';\nimport { TimespanShiftSelectorComponent } from './timespan-shift-selector/timespan-shift-selector.component';\n\nconst COMPONENTS = [\n  PredefinedTimespanSelectorComponent,\n  TimeListSelectorComponent,\n  TimespanShiftSelectorComponent,\n  TimespanButtonComponent\n];\n\n@NgModule({\n  declarations: [\n    COMPONENTS\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HelgolandCoreModule\n  ],\n  exports: [\n    COMPONENTS\n  ]\n})\nexport class HelgolandTimeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelgolandTimeRangeSliderModule.html":{"url":"modules/HelgolandTimeRangeSliderModule.html","title":"module - HelgolandTimeRangeSliderModule","body":"\n                   \n\n\n\n\n  Modules\n  HelgolandTimeRangeSliderModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandTimeRangeSliderModule\n\n\n\ncluster_HelgolandTimeRangeSliderModule_declarations\n\n\n\ncluster_HelgolandTimeRangeSliderModule_exports\n\n\n\ncluster_HelgolandTimeRangeSliderModule_providers\n\n\n\n\nTimeRangeSliderComponent\n\nTimeRangeSliderComponent\n\n\n\nHelgolandTimeRangeSliderModule\n\nHelgolandTimeRangeSliderModule\n\nHelgolandTimeRangeSliderModule -->\n\nTimeRangeSliderComponent->HelgolandTimeRangeSliderModule\n\n\n\n\n\nTimeRangeSliderComponent \n\nTimeRangeSliderComponent \n\nTimeRangeSliderComponent  -->\n\nHelgolandTimeRangeSliderModule->TimeRangeSliderComponent \n\n\n\n\n\nTimeRangeSliderCache\n\nTimeRangeSliderCache\n\nHelgolandTimeRangeSliderModule -->\n\nTimeRangeSliderCache->HelgolandTimeRangeSliderModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/helgoland/time-range-slider/src/lib/time-range-slider.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TimeRangeSliderComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TimeRangeSliderCache\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TimeRangeSliderComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { TimeRangeSliderComponent } from './time-range-slider.component';\nimport { TimeRangeSliderCache } from './time-range-slider.service';\n\n@NgModule({\n    declarations: [TimeRangeSliderComponent],\n    exports: [TimeRangeSliderComponent],\n    imports: [CommonModule],\n    providers: [TimeRangeSliderCache]\n})\nexport class HelgolandTimeRangeSliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HighlightDataset.html":{"url":"interfaces/HighlightDataset.html","title":"interface - HighlightDataset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HighlightDataset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/d3/src/lib/d3-timeseries-graph/d3-timeseries-graph.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        change\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                    \n                                \n                                \n                                    \n                                        change:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    IterableDiffers,\n    Output,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    ColorService,\n    Data,\n    DatasetApiInterface,\n    DatasetOptions,\n    DatasetPresenterComponent,\n    IDataset,\n    InternalIdHandler,\n    MinMaxRange,\n    Time,\n    Timeseries,\n    Timespan,\n} from '@helgoland/core';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { D3PlotOptions } from '../model/d3-plot-options';\n\ninterface DataEntry {\n    yDiagCoord?: number;\n    timestamp?: number;\n    xDiagMin?: number;\n    xDiagMax?: number;\n    yDiagMin?: number;\n    yDiagMax?: number;\n    xDiagCoord?: number;\n}\n\ninterface HighlightDataset {\n    id: string;\n    change: boolean;\n}\n\ninterface YScale {\n    buffer: number;\n    yScale: d3.ScaleLinear;\n}\n\ninterface YRanges {\n    uom: string;\n    range: MinMaxRange;\n    zeroBased: boolean;\n    ids: string[];\n    first?: boolean;\n    yScale?: d3.ScaleLinear;\n    offset?: number;\n}\n\ninterface InternalDataEntry {\n    internalId: string;\n    color: string;\n    data: [number, number][];\n    points: {\n        fillColor: string\n    };\n    lines: {\n        lineWidth: number;\n        pointRadius: number;\n    };\n    bars: {\n        lineWidth: number;\n    };\n    axisOptions: {\n        uom: string;\n        label: string;\n        zeroBased: boolean;\n        yAxisRange: MinMaxRange;\n    };\n    visible: boolean;\n}\n\ninterface DataYRange {\n    uom: string;\n    range?: MinMaxRange;\n    id: string;\n    zeroBasedYAxis: boolean;\n}\n\ninterface DataConst extends IDataset {\n    data?: Data;\n}\n\n@Component({\n    selector: 'n52-d3-timeseries-graph',\n    templateUrl: './d3-timeseries-graph.component.html',\n    styleUrls: ['./d3-timeseries-graph.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class D3TimeseriesGraphComponent\n    extends DatasetPresenterComponent\n    implements AfterViewInit {\n\n    @Input()\n    // difference to timespan/timeInterval --> if brush, then this is the timespan of the main-diagram\n    public mainTimeInterval: Timespan;\n\n    @Output()\n    public onSelectId: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onContentLoading: EventEmitter = new EventEmitter();\n\n    @ViewChild('d3timeseries')\n    public d3Elem: ElementRef;\n\n    // set zoom limit --> can be adapted to needs\n    private config = {\n        time: {\n            zoomLimit: 10800000  // 3 hour ((3 * 3600) * 1000) limitation\n        }\n    };\n\n    private preparedData = Array(); // : DataSeries[]\n    private mousedownBrush: boolean;\n    private rawSvg: any; // d3.Selection;\n    private graph: any;\n    private graphBody: any;\n    private dragRect: any;\n    private dragRectG: any;\n    private xAxisRange: Timespan; // x domain range\n    private xAxisRangeOrigin: any; // x domain range\n    private xAxisRangePan: [number, number]; // x domain range\n    private yRangesEachUom: YRanges[]; // y array of objects containing ranges for each uom\n    private dataYranges: DataYRange[]; // y array of objects containing ranges of all datasets\n    private ypos: any; // y array of objects containing ranges of all datasets\n    private idxOfPos = 0;\n\n    private height: number;\n    private width: number;\n    private margin = {\n        top: 10,\n        right: 10,\n        bottom: 40,\n        left: 40\n    };\n    private maxLabelwidth = 0;\n    private xScaleBase: d3.ScaleLinear; // calculate diagram coord of x value\n    private yScaleBase: d3.ScaleLinear; // calculate diagram coord of y value\n    private background: any;\n    private focusG: any;\n    private highlightFocus: any;\n    private focuslabelTime: any;\n    private bufferSum: number;\n    private labelTimestamp: number[];\n\n    private dragging: boolean;\n    private dragStart: [number, number];\n    private dragCurrent: [number, number];\n\n    private draggingMove: boolean;\n    private dragMoveStart: [number, number];\n    private dragMoveRange: [number, number];\n\n    private addLineWidth = 2; // value added to linewidth\n\n    // default plot options\n    private plotOptions: D3PlotOptions = {\n        showReferenceValues: false,\n        generalizeAllways: true,\n        togglePanZoom: true,\n        hoverable: true,\n        grid: true,\n        yaxis: true,\n        overview: false\n    };\n\n    private datasetMap: Map = new Map();\n\n    private loadingCounter = 0;\n    private currentTimeId: string;\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time,\n        private colorService: ColorService\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc);\n    }\n\n    public ngAfterViewInit(): void {\n        this.currentTimeId = this.uuidv4();\n\n        this.rawSvg = d3.select(this.d3Elem.nativeElement)\n            .append('svg')\n            .attr('width', '100%')\n            .attr('height', '100%');\n\n        this.graph = this.rawSvg\n            .append('g')\n            .attr('transform', 'translate(' + (this.margin.left + this.maxLabelwidth) + ',' + this.margin.top + ')');\n\n        this.mousedownBrush = false;\n        this.dataYranges = [];\n        this.xAxisRangeOrigin = [];\n    }\n\n    public reloadData(): void {\n        // not implemented yet\n    }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getSingleTimeseries(id, url).subscribe(\n            (timeseries) => this.loadAddedDataset(timeseries),\n            (error) => {\n                this.api.getDataset(id, url).subscribe(\n                    (dataset) => this.loadAddedDataset(dataset),\n                );\n            }\n        );\n    }\n    protected removeDataset(internalId: string): void {\n        this.dataYranges = [];\n        this.xAxisRangeOrigin = [];\n        this.datasetMap.delete(internalId);\n        let spliceIdx = this.preparedData.findIndex((entry) => entry.internalId === internalId);\n        if (spliceIdx >= 0) {\n            this.preparedData.splice(spliceIdx, 1);\n            if (this.preparedData.length  {\n                    this.processData(entry);\n                });\n            }\n        }\n    }\n    protected setSelectedId(internalId: string): void {\n        const tsData = this.preparedData.find((e) => e.internalId === internalId);\n        if (!tsData.selected || tsData.selected === undefined) {\n            tsData.selected = true;\n            tsData.lines.lineWidth += this.addLineWidth;\n            tsData.lines.pointRadius += this.addLineWidth;\n            tsData.bars.lineWidth += this.addLineWidth;\n        }\n        this.plotGraph();\n    }\n    protected removeSelectedId(internalId: string): void {\n        const tsData = this.preparedData.find((e) => e.internalId === internalId);\n        if (tsData.selected || tsData.selected === undefined) {\n            tsData.selected = false;\n            tsData.lines.lineWidth -= this.addLineWidth;\n            tsData.lines.pointRadius -= this.addLineWidth;\n            tsData.bars.lineWidth -= this.addLineWidth;\n        }\n        this.plotGraph();\n    }\n    protected graphOptionsChanged(options: D3PlotOptions): void {\n\n        Object.assign(this.plotOptions, options);\n        if (this.rawSvg && this.yRangesEachUom) {\n            this.plotGraph();\n        }\n    }\n    protected datasetOptionsChanged(internalId: string, options: DatasetOptions, firstChange: boolean) {\n        if (!firstChange && this.datasetMap.has(internalId)) {\n            this.loadDataset(this.datasetMap.get(internalId));\n        }\n    }\n    protected timeIntervalChanges(): void {\n        this.datasetMap.forEach((dataset) => {\n            this.loadDataset(dataset);\n        });\n    }\n    protected onResize(): void {\n        this.plotGraph();\n    }\n\n    private changeTime(from: number, to: number) {\n        if (to - from (dataset.id, dataset.url, buffer,\n                {\n                    format: 'flot',\n                    expanded: this.plotOptions.showReferenceValues === true,\n                    generalize: this.plotOptions.generalizeAllways || datasetOptions.generalize\n                }\n            ).subscribe(\n                (result) => {\n                    this.datasetMap.get(dataset.internalId).data = result;\n                    this.prepareTsData(dataset).subscribe(() => {\n                    });\n                },\n                (error) => this.onError(error),\n                () => {\n                    this.onCompleteLoadingData();\n                }\n            );\n        }\n    }\n\n    private onCompleteLoadingData() {\n        this.loadingCounter--;\n        if (this.loadingCounter === 0) { this.isContentLoadingD3(false); }\n    }\n\n    /**\n     * Function to prepare each dataset for the graph and adding it to an array of datasets.\n     * @param dataset {IDataset} Object of the whole dataset\n     */\n    private prepareTsData(dataset: IDataset): Observable { // , data: Data\n        return Observable.create((observer: Observer) => {\n            const datasetIdx = this.preparedData.findIndex((e) => e.internalId === dataset.internalId);\n            const styles = this.datasetOptions.get(dataset.internalId);\n            const data = this.datasetMap.get(dataset.internalId).data;\n\n            // TODO: change uom for testing\n            // if (this.preparedData.length > 0) {\n            //     dataset.uom = 'mc';\n            // }\n\n            // generate random color, if color is not defined\n            if (styles.color === undefined) {\n                styles.color = this.colorService.getColor();\n            }\n\n\n            // end of check for datasets\n            const dataEntry: InternalDataEntry = {\n                internalId: dataset.internalId,\n                color: styles.color,\n                data: styles.visible ? data.values : [],\n                points: {\n                    fillColor: styles.color\n                },\n                lines: {\n                    lineWidth: styles.lineWidth,\n                    pointRadius: styles.pointRadius\n                },\n                bars: {\n                    lineWidth: styles.lineWidth\n                },\n                axisOptions: {\n                    uom: dataset.uom,\n                    label: dataset.label,\n                    zeroBased: styles.zeroBasedYAxis,\n                    yAxisRange: styles.yAxisRange\n                },\n                visible: styles.visible\n            };\n            // alternative linewWidth = this.plotOptions.selected.includes(dataset.uom)\n            if (this.selectedDatasetIds.indexOf(dataset.internalId) >= 0) {\n                dataEntry.lines.lineWidth += this.addLineWidth;\n                dataEntry.lines.pointRadius += this.addLineWidth;\n                dataEntry.bars.lineWidth += this.addLineWidth;\n            }\n\n            if (datasetIdx >= 0) {\n                this.preparedData[datasetIdx] = dataEntry;\n            } else {\n                this.preparedData.push(dataEntry);\n            }\n            this.addReferenceValueData(dataset.internalId, styles, data, dataset.uom);\n            this.processData(dataEntry);\n            this.plotGraph();\n        });\n    }\n\n    /**\n     * Function to add referencevaluedata to the dataset (e.g. mean).\n     * @param internalId {String} String with the id of a dataset\n     * @param styles {DatasetOptions} Object containing information for dataset styling\n     * @param data {Data} Array of Arrays containing the measurement-data of the dataset\n     * @param uomO {String} String with the uom of a dataset\n     */\n    private addReferenceValueData(internalId: string, styles: DatasetOptions, data: Data, uomO: string) {\n        this.preparedData = this.preparedData.filter((entry) => {\n            return !entry.internalId.startsWith('ref' + internalId);\n        });\n        if (this.plotOptions.showReferenceValues) {\n            styles.showReferenceValues.forEach((refValue) => {\n                const refDataEntry = {\n                    internalId: 'ref' + internalId + refValue.id,\n                    color: refValue.color,\n                    data: data.referenceValues[refValue.id],\n                    points: {\n                        fillColor: refValue.color\n                    },\n                    lines: {\n                        lineWidth: 1\n                    },\n                    axisOptions: {\n                        uom: uomO\n                    }\n                };\n                this.preparedData.push(refDataEntry);\n            });\n        }\n    }\n\n    /**\n     * Function that processes the data to calculate y axis range of each dataset.\n     * @param dataEntry {DataEntry} Object containing dataset related data.\n     * @param internalId {String} String with the ID of a dataset.\n     */\n    private processData(dataEntry: InternalDataEntry) {\n        let calculatedRange: MinMaxRange;\n        let predefinedRange = dataEntry.axisOptions.yAxisRange;\n\n        // get min and max value of data\n        const dataExtent = d3.extent(dataEntry.data, (datum, index, array) => {\n            return datum[1]; // datum[0] = timestamp -- datum[1] = value\n        });\n\n        // let outOfrange = false;\n        let setDataExtent = false;\n\n        // calculate out of predefined range\n        if (predefinedRange && !this.graphOptions.overview) {\n            if (predefinedRange.min > predefinedRange.max) {\n                calculatedRange = { min: predefinedRange.max, max: predefinedRange.min };\n            } else {\n                calculatedRange = predefinedRange;\n            }\n            if (predefinedRange.min > dataExtent[1] || predefinedRange.max = 0) {\n                calculatedRange.min = 0;\n            }\n        }\n\n        const newDatasetIdx = this.preparedData.findIndex((e) => e.internalId === dataEntry.internalId);\n\n        // set range, uom and id for each dataset\n        if (dataEntry.visible) {\n            this.dataYranges[newDatasetIdx] = {\n                uom: dataEntry.axisOptions.uom,\n                id: dataEntry.internalId,\n                zeroBasedYAxis: dataEntry.axisOptions.zeroBased\n            };\n            if (isFinite(calculatedRange.min) && isFinite(calculatedRange.max)) {\n                this.dataYranges[newDatasetIdx].range = calculatedRange;\n            }\n        } else {\n            this.dataYranges[newDatasetIdx] = null;\n        }\n\n        // set range and array of IDs for each uom to generate y-axis later on\n        this.yRangesEachUom = [];\n        this.dataYranges.forEach((obj) => {\n            if (obj !== null) {\n                let idx = this.yRangesEachUom.findIndex((e) => e.uom === obj.uom);\n                let yrangeObj: YRanges = {\n                    uom: obj.uom,\n                    range: obj.range,\n                    ids: [obj.id],\n                    zeroBased: obj.zeroBasedYAxis\n                };\n\n                if (idx >= 0) {\n                    if (this.yRangesEachUom[idx].range) {\n                        if (obj.range) {\n                            if (this.yRangesEachUom[idx].range.min > obj.range.min && !isNaN(obj.range.min)) {\n                                this.yRangesEachUom[idx].range.min = obj.range.min;\n                            }\n                            if (this.yRangesEachUom[idx].range.max  {\n            entry.first = (this.yScaleBase === null);\n            entry.offset = this.bufferSum;\n\n            let yAxisResult = this.drawYaxis(entry);\n            if (this.yScaleBase === null) {\n                this.yScaleBase = yAxisResult.yScale;\n            } else {\n                this.bufferSum = yAxisResult.buffer;\n            }\n            entry.yScale = yAxisResult.yScale;\n        });\n\n        if (!this.yScaleBase) {\n            return;\n        }\n\n        // draw x and y axis\n        this.drawXaxis(this.bufferSum);\n        this.preparedData.forEach((entry) => {\n            this.drawGraphLine(entry);\n        });\n\n        // #####################################################\n        // create background rect\n        if (!this.plotOptions.overview) {\n            // execute when it is not an overview diagram\n            this.background = this.graph.append('svg:rect')\n                .attr('width', this.width - this.bufferSum)\n                .attr('height', this.height)\n                .attr('fill', 'none')\n                .attr('stroke', 'none')\n                .attr('pointer-events', 'all')\n                .attr('transform', 'translate(' + this.bufferSum + ', 0)');\n\n            // mouse events hovering\n            if (this.plotOptions.hoverable) {\n                this.background\n                    .on('mousemove.focus', this.mousemoveHandler)\n                    .on('mouseout.focus', this.mouseoutHandler);\n\n                // line inside graph\n                this.focusG = this.graph.append('g');\n                this.highlightFocus = this.focusG.append('svg:line')\n                    .attr('class', 'mouse-focus-line')\n                    .attr('x2', '0')\n                    .attr('y2', '0')\n                    .attr('x1', '0')\n                    .attr('y1', '0')\n                    .style('stroke', 'black')\n                    .style('stroke-width', '1px');\n\n                this.preparedData.forEach((entry) => {\n                    // label inside graph\n                    entry.focusLabelRect = this.focusG.append('svg:rect')\n                        .attr('class', 'mouse-focus-label')\n                        .style('fill', 'white')\n                        .style('stroke', 'none')\n                        .style('pointer-events', 'none');\n                    entry.focusLabel = this.focusG.append('svg:text')\n                        .attr('class', 'mouse-focus-label')\n                        .style('pointer-events', 'none')\n                        .style('fill', entry.color)\n                        .style('font-weight', 'lighter');\n\n                    this.focuslabelTime = this.focusG.append('svg:text')\n                        .style('pointer-events', 'none')\n                        .attr('class', 'mouse-focus-time');\n                });\n            }\n\n            if (this.plotOptions.togglePanZoom === false) {\n                this.background\n                    .call(d3.zoom()\n                        .on('start', this.zoomStartHandler)\n                        .on('zoom', this.zoomHandler)\n                        .on('end', this.zoomEndHandler)\n                    );\n            } else {\n                this.background\n                    .call(d3.drag()\n                        .on('start', this.panStartHandler)\n                        .on('drag', this.panMoveHandler)\n                        .on('end', this.panEndHandler));\n            }\n        } else {\n            // execute when it is overview diagram\n            let interval = this.getXDomainByTimestamp();\n            let overviewTimespanInterval = [interval[0], interval[1]];\n\n            // create brush\n            let brush = d3.brushX()\n                .extent([[0, 0], [this.width, this.height]])\n                .on('end', () => {\n                    // on mouseclick change time after brush was moved\n                    if (this.mousedownBrush) {\n                        let timeByCoord = this.getTimestampByCoord(d3.event.selection[0], d3.event.selection[1]);\n                        this.changeTime(timeByCoord[0], timeByCoord[1]);\n                    }\n                    this.mousedownBrush = false;\n                });\n\n            // add brush to svg\n            this.background = this.graph.append('g')\n                .attr('width', this.width)\n                .attr('height', this.height)\n                .attr('pointer-events', 'all')\n                .attr('class', 'brush')\n                .call(brush)\n                .call(brush.move, overviewTimespanInterval);\n\n            /**\n             * add event to selection to prevent unnecessary re-rendering of brush\n             * add style of brush selection here\n             * e.g. 'fill' for color,\n             * 'stroke' for borderline-color,\n             * 'stroke-dasharray' for customizing borderline-style\n             */\n            this.background.selectAll('.selection')\n                .attr('stroke', 'none')\n                .on('mousedown', () => {\n                    this.mousedownBrush = true;\n                });\n\n            // do not allow clear selection\n            this.background.selectAll('.overlay')\n                .remove();\n\n            // add event to resizing handle to allow change time on resize\n            this.background.selectAll('.handle')\n                .style('fill', 'red')\n                .style('opacity', 0.3)\n                .attr('stroke', 'none')\n                .on('mousedown', () => {\n                    this.mousedownBrush = true;\n                });\n        }\n    }\n\n    /**\n     * Function that calculates and returns the x diagram coordinate for the brush range\n     * for the overview diagram by the selected time interval of the main diagram.\n     * Calculate to get brush extent when main diagram time interval changes.\n     */\n    private getXDomainByTimestamp() {\n        /**\n         * calculate range of brush with timestamp and not diagram coordinates\n         * formula:\n         * brush_min =\n         * (overview_width / (overview_max - overview_min)) * (brush_min - overview_min)\n         * brus_max =\n         * (overview_width / (overview_max - overview_min)) * (brush_max - overview_min)\n         */\n\n        let minOverviewTimeInterval = this.timespan.from;\n        let maxOverviewTimeInterval = this.timespan.to;\n        let minDiagramTimestamp = this.mainTimeInterval.from;\n        let maxDiagramTimestamp = this.mainTimeInterval.to;\n        let diagramWidth = this.width;\n\n        let diffOverviewTimeInterval = maxOverviewTimeInterval - minOverviewTimeInterval;\n        let divOverviewTimeWidth = diagramWidth / diffOverviewTimeInterval;\n        let minCalcBrush = divOverviewTimeWidth * (minDiagramTimestamp - minOverviewTimeInterval);\n        let maxCalcBrush = divOverviewTimeWidth * (maxDiagramTimestamp - minOverviewTimeInterval);\n\n        return [minCalcBrush, maxCalcBrush];\n    }\n\n    /**\n     * Function that calculates and returns the timestamp for the main diagram calculated\n     * by the selected coordinate of the brush range.\n     * @param minCalcBrush {Number} Number with the minimum coordinate of the selected brush range.\n     * @param maxCalcBrush {Number} Number with the maximum coordinate of the selected brush range.\n     */\n    private getTimestampByCoord(minCalcBrush, maxCalcBrush) {\n        /**\n         * calculate range of brush with timestamp and not diagram coordinates\n         * formula:\n         * minDiagramTimestamp =\n         * ((minCalcBrush / overview_width) * (overview_max - overview_min)) + overview_min\n         * maxDiagramTimestamp =\n         * ((maxCalcBrush / overview_width) * (overview_max - overview_min)) + overview_min\n         */\n\n        let minOverviewTimeInterval = this.timespan.from;\n        let maxOverviewTimeInterval = this.timespan.to;\n        let diagramWidth = this.width;\n\n        let diffOverviewTimeInterval = maxOverviewTimeInterval - minOverviewTimeInterval;\n        let minDiagramTimestamp = ((minCalcBrush / diagramWidth) * diffOverviewTimeInterval) + minOverviewTimeInterval;\n        let maxDiagramTimestamp = ((maxCalcBrush / diagramWidth) * diffOverviewTimeInterval) + minOverviewTimeInterval;\n\n        return [minDiagramTimestamp, maxDiagramTimestamp];\n    }\n\n    /**\n     * Function that returns the tickvalues for the x axis related to the timestep.\n     * @param time {String} String with the information how the time should be visualized in the x axis.\n     * @param range {Array} Array containing the minimum and maximum range.\n     * @param span {Number} Number with the ticksize for the axis generation.\n     */\n    private timeTickValues(time: String, range: any, span: number) {\n        if (time === 'minly') {\n            return d3.timeMinutes(range, new Date(this.xAxisRange.to), span);\n        }\n        if (time === 'hourly') {\n            return d3.timeHours(range, new Date(this.xAxisRange.to), span);\n        }\n        if (time === 'daily') {\n            return d3.timeDay.range(range, new Date(this.xAxisRange.to), span);\n        }\n    }\n\n    /**\n     * Function that draws the x axis to the svg element.\n     * @param bufferXrange {Number} Number with the distance between left edge and the beginning of the graph.\n     */\n    private drawXaxis(bufferXrange: number) {\n        // range for x axis scale\n        this.xScaleBase = d3.scaleLinear()\n            .domain([this.xAxisRange.from, this.xAxisRange.to])\n            .range([bufferXrange, this.width]);\n\n        // calculate range for about 7 ticks on x axis\n        let calcTicks = (((this.xAxisRange.to - this.xAxisRange.from) / 1000) / 7);\n        let hourly = Math.ceil(calcTicks / 3600);\n        let daily = Math.ceil(calcTicks / (3600 * 48));\n\n        if ((calcTicks / 3600)  11) {\n            timeFormatString = '%d %b %H:%M';\n        }\n\n        if (hourly > 47) {\n            timeFormatString = '%d %B';\n            tickSize = (Math.max(1, Math.round(hourly / 12))) * 12;\n        }\n\n        // calculate minimum range dependent on tickSize for UTC // 7200000 (e.g. tickSize = 4 --> every 4 hours)\n        let minRange = this.xAxisRange.from + ((3600000 * tickSize) - (this.xAxisRange.from % (3600000 * tickSize)));\n        // minimum range for UTC+2\n        let minRangeGer = minRange + 3600000 * (tickSize / 2);\n        if ((minRange - 3600000 * (tickSize / 2)) >= this.xAxisRange.from) {\n            minRangeGer = minRange - 3600000 * (tickSize / 2);\n        }\n\n        // calculate tickvalues dependent on tickSize for UTC+2\n        let xAxisGen;\n        if (tickSize >= 1) {\n            xAxisGen = d3.axisBottom(this.xScaleBase)\n                .tickValues(this.timeTickValues(timeString, minRangeGer, tickSize))\n                .tickFormat((d) => {\n                    return d3.timeFormat(timeFormatString)(new Date(d.valueOf()));\n                });\n        } else {\n            timeString = 'minly';\n            xAxisGen = d3.axisBottom(this.xScaleBase)\n                .tickValues(this.timeTickValues(timeString, minRangeGer, 30))\n                .tickFormat((d) => {\n                    return d3.timeFormat(timeFormatString)(new Date(d.valueOf()));\n                });\n        }\n\n        // draw x axis\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(xAxisGen)\n            .selectAll('text')\n            .style('text-anchor', 'middle');\n\n        if (this.plotOptions.grid) {\n            // draw the x grid lines\n            this.graph.append('svg:g')\n                .attr('class', 'grid')\n                .attr('transform', 'translate(0,' + this.height + ')')\n                .call(xAxisGen\n                    .tickSize(-this.height)\n                    .tickFormat(() => '')\n                );\n        }\n\n        // draw upper axis as border\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .call(d3.axisTop(this.xScaleBase).ticks(0).tickSize(0));\n\n        // text label for the x axis\n        this.graph.append('text')\n            .attr('x', (this.width + bufferXrange) / 2)\n            .attr('y', this.height + this.margin.bottom - 5)\n            .style('text-anchor', 'middle')\n            .text('time');\n    }\n\n    /**\n     * Function to draw the y axis for each dataset.\n     * Each uom has its own axis.\n     * @param entry {DataEntry} Object containing a dataset.\n     */\n    private drawYaxis(entry): YScale {\n        let showAxis = (this.plotOptions.yaxis === undefined ? true : this.plotOptions.yaxis);\n        const range = this.getyAxisRange(entry.uom);\n\n        let yMin = range.min;\n        let yMax = range.max;\n\n        // range for y axis scale\n        const rangeOffset = (yMax - yMin) * 0.10;\n        const yScale = d3.scaleLinear()\n            .domain([yMin - rangeOffset, yMax + rangeOffset])\n            .range([this.height, 0]);\n\n        let yAxisGen = d3.axisLeft(yScale).ticks(5);\n        let buffer = 0;\n\n        // only if yAxis should not be visible\n        if (!showAxis) {\n            yAxisGen\n                .tickFormat(() => '')\n                .tickSize(0);\n        }\n\n        // draw y axis\n        const axis = this.graph.append('svg:g')\n            .attr('class', 'y axis')\n            .call(yAxisGen);\n\n        // only if yAxis should be visible\n        if (showAxis) {\n            // draw y axis label\n            const text = this.graph.append('text')\n                .attr('transform', 'rotate(-90)')\n                .attr('dy', '1em')\n                .style('text-anchor', 'middle')\n                .style('fill', 'black')\n                .text(entry.uom);\n\n            const axisWidth = axis.node().getBBox().width + 5 + this.getDimensions(text.node()).h;\n            // if yAxis should not be visible, buffer will be set to 0\n            buffer = (showAxis ? entry.offset + (axisWidth  {\n                    d3.select(k[0])\n                        .attr('fill', 'grey')\n                        .attr('opacity', 0.4);\n                })\n                .on('mouseout', (d, i, k) => {\n                    d3.select(k[0])\n                        .attr('fill', 'white')\n                        .attr('opacity', 0);\n                })\n                .on('mouseup', () => {\n                    this.highlightLine(entry.ids, entry.uom);\n                });\n\n            if (!entry.first) {\n                axisDiv\n                    .attr('x', entry.offset)\n                    .attr('y', 0);\n            } else {\n                axisDiv\n                    .attr('x', 0 - this.margin.left - this.maxLabelwidth)\n                    .attr('y', 0);\n            }\n\n        }\n\n        // draw the y grid lines\n        if (this.datasetIds.length === 1) {\n            this.graph.append('svg:g')\n                .attr('class', 'grid')\n                .call(d3.axisLeft(yScale)\n                    .ticks(5)\n                    .tickSize(-this.width)\n                    .tickFormat(() => '')\n                );\n        }\n\n        return {\n            buffer,\n            yScale\n        };\n    }\n\n    /**\n     * Function to set selected Ids that should be highlighted.\n     * @param ids {Array} Array of Strings containing the Ids.\n     * @param uom {String} String with the uom for the selected Ids\n     */\n    private highlightLine(ids, uom) {\n        let changeFalse: HighlightDataset[] = [];\n        let changeTrue: HighlightDataset[] = [];\n        ids.forEach((ID) => {\n            if (this.selectedDatasetIds.indexOf(ID) >= 0) {\n                changeFalse.push({ id: ID, change: false });\n            }\n            changeTrue.push({ id: ID, change: true });\n        });\n\n        let changeAll = true;\n        if (ids.length === changeFalse.length) {\n            this.changeSelectedIds(changeFalse, true);\n        } else {\n            this.changeSelectedIds(changeTrue, false);\n        }\n    }\n\n    /**\n     * Function that changes state of selected Ids.\n     */\n    private changeSelectedIds(toHighlightDataset: HighlightDataset[], change: boolean) {\n        if (change) {\n            toHighlightDataset.forEach((obj) => {\n                this.removeSelectedId(obj.id);\n                this.selectedDatasetIds.splice(this.selectedDatasetIds.findIndex((entry) => entry === obj.id), 1);\n            });\n        } else {\n            toHighlightDataset.forEach((obj) => {\n                if (this.selectedDatasetIds.indexOf(obj.id)  {\n            if (obj.uom === entry.axisOptions.uom) {\n                return true;\n            } // uom does exist in this.yRangesEachUom\n        });\n\n        if (entry.data.length > 0) {\n            let xScaleBase = this.xScaleBase;\n            if (getYaxisRange !== undefined) {\n                let yScaleBase = getYaxisRange.yScale;\n\n                // #####################################################\n                // create body to clip graph\n                // unique ID generated through the current time (current time when initialized)\n                let querySelectorClip = 'clip' + this.currentTimeId;\n\n                this.graph\n                    .append('svg:clipPath')\n                    .attr('id', querySelectorClip)\n                    .append('svg:rect')\n                    .attr('x', this.bufferSum)\n                    .attr('y', 0)\n                    .attr('width', this.width - this.bufferSum)\n                    .attr('height', this.height);\n\n                // draw grah line\n                this.graphBody = this.graph\n                    .append('g')\n                    .attr('clip-path', 'url(#' + querySelectorClip + ')');\n\n                // create graph line\n                let line = d3.line()\n                    .x((d) => {\n                        d.timestamp = d[0];\n                        const xDiagCoord = xScaleBase(d[0]);\n                        if (xDiagCoord !== NaN) {\n                            d.xDiagCoord = xDiagCoord;\n                            return xDiagCoord;\n                        }\n                    })\n                    .y((d) => {\n                        const yDiagCoord = yScaleBase(d[1]);\n                        if (yDiagCoord !== NaN) {\n                            d.yDiagCoord = yDiagCoord;\n                            return yDiagCoord;\n                        }\n                    })\n                    .curve(d3.curveLinear);\n\n                this.graphBody\n                    .append('svg:path')\n                    .datum(entry.data)\n                    .attr('class', 'line')\n                    .attr('fill', 'none')\n                    .attr('stroke', entry.color)\n                    .attr('stroke-width', entry.lines.lineWidth)\n                    .attr('d', line);\n\n                this.graphBody.selectAll('.dot')\n                    .data(entry.data.filter((d) => d))\n                    .enter().append('circle')\n                    .attr('class', 'dot')\n                    .attr('stroke', entry.color)\n                    .attr('fill', entry.color)\n                    .attr('cx', line.x())\n                    .attr('cy', line.y())\n                    .attr('r', entry.lines.pointRadius);\n            }\n        }\n    }\n\n    /**\n     * Function that shows labeling via mousmove.\n     */\n    private mousemoveHandler = () => {\n        const coords = d3.mouse(this.background.node());\n        this.ypos = [];\n        this.idxOfPos = 0;\n        this.labelTimestamp = [];\n        this.preparedData.forEach((entry, entryIdx) => {\n            const idx = this.getItemForX(coords[0] + this.bufferSum, entry.data);\n            this.showDiagramIndicator(entry, idx, coords[0], entryIdx);\n        });\n        // focus do not overlap each other\n        if (this.ypos !== undefined) {\n            let firstLabel = [];\n            // only push one of the pairs of objects (rectangle and label)\n            this.ypos.forEach((e, i) => {\n                if (i % 2 === 0) {\n                    firstLabel.push(e);\n                }\n            });\n            let yPos = firstLabel.sort((a, b) => a.y - b.y);\n            yPos.forEach((p, i) => {\n                if (i > 0) {\n                    let last = yPos[i - 1].y;\n                    yPos[i].off = Math.max(0, (last + 30) - yPos[i].y);\n                    yPos[i].y += yPos[i].off;\n                }\n            });\n            yPos.sort((a, b) => a.idx - b.idx);\n\n            let c1 = 0;\n            let c2 = 0;\n\n            // d3.selectAll('.mouse-focus-label')\n            d3.selectAll('.focus-visibility')\n                .attr('transform', (d, i) => {\n                    // pairs of 2 objects (rectangle (equal) and label (odd))\n                    if (i > 0) {\n                        c1 = (i - 1) % 2;\n                    }\n                    c2 += c1;\n                    if (yPos[c2] && yPos[c2].off) {\n                        return 'translate(0,' + (5 + yPos[c2].off) + ')';\n                    }\n                });\n        }\n    }\n\n    /**\n     * Function that hides the labeling inside the graph.\n     */\n    private mouseoutHandler = () => {\n        this.hideDiagramIndicator();\n    }\n\n    /**\n     * Function starting the drag handling for the diagram.\n     */\n    private panStartHandler = () => {\n        this.draggingMove = false;\n        this.dragMoveStart = d3.event.x;\n        this.dragMoveRange = [this.xAxisRange.from, this.xAxisRange.to];\n    }\n\n    /**\n     * Function that controlls the panning (dragging) of the graph.\n     */\n    private panMoveHandler = () => {\n        this.draggingMove = true;\n        if (this.dragMoveStart && this.draggingMove) {\n            let diff = -(d3.event.x - d3.event.subject.x);\n            let amountTimestamp = this.dragMoveRange[1] - this.dragMoveRange[0];\n            let ratioTimestampDiagCoord = amountTimestamp / this.width;\n            let newTimeMin = this.dragMoveRange[0] + (ratioTimestampDiagCoord * diff);\n            let newTimeMax = this.dragMoveRange[1] + (ratioTimestampDiagCoord * diff);\n\n            this.xAxisRangePan = [newTimeMin, newTimeMax];\n            this.timespan = { from: this.xAxisRangePan[0], to: this.xAxisRangePan[1] };\n            this.plotGraph();\n        }\n    }\n\n    /**\n     * Function that ends the dragging control.\n     */\n    private panEndHandler = () => {\n        this.changeTime(this.xAxisRangePan[0], this.xAxisRangePan[1]);\n        this.plotGraph();\n        this.dragMoveStart = null;\n        this.draggingMove = false;\n    }\n\n    /**\n     * Function that starts the zoom handling.\n     */\n    private zoomStartHandler = () => {\n        this.dragging = false;\n        this.dragStart = d3.mouse(this.background.node());\n        this.xAxisRangeOrigin.push([this.xAxisRange.from, this.xAxisRange.to]);\n    }\n\n    /**\n     * Function that draws a rectangle when zoom is started and the mouse is moving.\n     */\n    private zoomHandler = () => {\n        this.dragging = true;\n        this.drawDragRectangle();\n    }\n\n    /**\n     * Function that ends the zoom handling and calculates the via zoom selected time interval.\n     */\n    private zoomEndHandler = () => {\n        if (!this.dragStart || !this.dragging) {\n            if (this.xAxisRangeOrigin[0]) {\n                // back to origin range (from - to)\n                this.changeTime(this.xAxisRangeOrigin[0][0], this.xAxisRangeOrigin[0][1]);\n                this.xAxisRangeOrigin = [];\n                this.plotGraph();\n            }\n        } else {\n            let xDomainRange;\n            if (this.dragStart[0]  {\n            domMinArr.push(entry.data.find((elem, index, array) => {\n                if (elem.xDiagCoord) {\n                    if (elem.xDiagCoord >= start) {\n                        return array[index];\n                    }\n                }\n            }));\n            domMaxArr.push(entry.data.find((elem, index, array) => {\n                if (elem.xDiagCoord >= end) {\n                    return array[index];\n                }\n            }));\n        });\n\n        for (let i = 0; i  {\n            return d[0];\n        }).left;\n        return bisectDate(data, index);\n    }\n\n    /**\n     * Function that disables the labeling.\n     */\n    private hideDiagramIndicator() {\n        this.focusG.style('visibility', 'hidden');\n        d3.selectAll('.focus-visibility')\n            .attr('visibility', 'hidden');\n    }\n\n    /**\n     * Function that enables the lableing of each dataset entry.\n     * @param entry {DataEntry} Object containing the dataset.\n     * @param idx {Number} Number with the position of the dataset entry in the data array.\n     * @param xCoordMouse {Number} Number of the x coordinate of the mouse.\n     * @param entryIdx {Number} Number of the index of the entry.\n     */\n    private showDiagramIndicator = (entry, idx: number, xCoordMouse: number, entryIdx: number) => {\n        const item = entry.data[idx];\n        if (item !== undefined) {\n            // create line where mouse is\n            this.focusG.style('visibility', 'visible');\n            // show label if data available for time\n            this.chVisLabel(entry, true);\n\n            let onLeftSide = false;\n            if ((this.background.node().getBBox().width + this.bufferSum) / 2 > item.xDiagCoord) { onLeftSide = true; }\n\n            let labelBuffer = ((this.timespan.from / (this.timespan.to - this.timespan.from)) * 0.0001)\n                * ((this.timespan.from / (this.timespan.to - this.timespan.from)) * 0.0001);\n\n            labelBuffer = Math.max(4, labelBuffer);\n\n            this.showLabelValues(entry, item, onLeftSide);\n            this.showTimeIndicatorLabel(item, onLeftSide, entryIdx);\n\n            if ((xCoordMouse) > (item.xDiagCoord + labelBuffer) || (xCoordMouse) = xCoordMouse) {\n                    this.showLabelValues(entry, entry.data[idx - 1], onLeftSide);\n                    this.showTimeIndicatorLabel(item, onLeftSide, entryIdx);\n\n                    this.chVisLabel(entry, true);\n                }\n            }\n        } else {\n            // hide label if no data available for time\n            this.chVisLabel(entry, false);\n        }\n    }\n\n    /**\n     * Function to change visibility of label and white rectangle inside graph (next to mouse-cursor line).\n     * @param entry {DataEntry} Object containing the dataset.\n     * @param visible {Boolean} Boolean giving information about visibility of a label.\n     */\n    private chVisLabel(entry, visible: boolean) {\n        if (visible) {\n            entry.focusLabel\n                .attr('visibility', 'visible')\n                .attr('class', 'focus-visibility');\n            entry.focusLabelRect\n                .attr('visibility', 'visible')\n                .attr('class', 'focus-visibility');\n        } else {\n            entry.focusLabel\n                .attr('visibility', 'hidden');\n            entry.focusLabelRect\n                .attr('visibility', 'hidden');\n        }\n    }\n\n    /**\n     * Function to show the labeling inside the graph.\n     * @param entry {DataEntry} Object containg the dataset.\n     * @param item {DataEntry} Object of the entry in the dataset.\n     * @param onLeftSide {Boolean} Boolean giving information if the mouse is on left side of the diagram.\n     */\n    private showLabelValues(entry, item: DataEntry, onLeftSide: boolean) {\n        let id = 1;\n        if (entry.focusLabel) {\n            entry.focusLabel.text(item[id] + (entry.axisOptions.uom ? entry.axisOptions.uom : ''));\n            const entryX = onLeftSide ?\n                item.xDiagCoord + 4 : item.xDiagCoord - this.getDimensions(entry.focusLabel.node()).w + 4;\n            entry.focusLabel\n                .attr('x', entryX)\n                .attr('y', item.yDiagCoord);\n            entry.focusLabelRect\n                .attr('x', entryX)\n                .attr('y', item.yDiagCoord - this.getDimensions(entry.focusLabel.node()).h + 3)\n                .attr('width', this.getDimensions(entry.focusLabel.node()).w)\n                .attr('height', this.getDimensions(entry.focusLabel.node()).h);\n            this.ypos.push({ idx: this.idxOfPos++, y: item.yDiagCoord, off: 0 });\n        }\n    }\n\n    /**\n     * Function to show the time labeling inside the graph.\n     * @param item {DataEntry} Object of the entry in the dataset.\n     * @param onLeftSide {Boolean} Boolean giving information if the mouse is on left side of the diagram.\n     * @param entryIdx {Number} Number of the index of the entry.\n     */\n    private showTimeIndicatorLabel(item: DataEntry, onLeftSide: boolean, entryIdx: number) {\n        // timestamp is the time where the mouse-cursor is\n        this.labelTimestamp[entryIdx] = item.timestamp;\n        let min = d3.min(this.labelTimestamp);\n        let idxOfMin = this.labelTimestamp.findIndex((elem) => elem === min);\n        let right = item.xDiagCoord + 2;\n        let left = item.xDiagCoord - this.getDimensions(this.focuslabelTime.node()).w - 2;\n        this.focuslabelTime.text(moment(this.labelTimestamp[idxOfMin]).format('DD.MM.YY HH:mm'));\n        this.focuslabelTime\n            .attr('x', onLeftSide ? right : left)\n            .attr('y', 13);\n        if (item.timestamp === min) {\n            this.highlightFocus\n                .attr('x1', item.xDiagCoord)\n                .attr('y1', 0)\n                .attr('x2', item.xDiagCoord)\n                .attr('y2', this.height)\n                .classed('hidden', false);\n        }\n    }\n\n    /**\n     * Function that returns the boundings of a html element.\n     * @param el {Object} Object of the html element.\n     */\n    private getDimensions(el: any): { w: number, h: number } {\n        let w = 0;\n        let h = 0;\n        if (el) {\n            const dimensions = el.getBBox();\n            w = dimensions.width;\n            h = dimensions.height;\n        } else {\n            console.log('error: getDimensions() ' + el + ' not found.');\n        }\n        return {\n            w,\n            h\n        };\n    }\n\n    /**\n     * Function to generate uuid for a diagram\n     */\n    private uuidv4(): string {\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + this.s4();\n    }\n\n    /**\n     * Function to generate components of the uuid for a diagram\n     */\n    private s4(): string {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n\n    /**\n     * Function that logs the error in the console.\n     * @param error {Object} Object with the error.\n     */\n    private onError(error: any) {\n        console.error(error);\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpCache.html":{"url":"classes/HttpCache.html","title":"class - HttpCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/caching/src/lib/model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                get\n                            \n                            \n                                    Public\n                                    \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/model.ts:8\n                            \n                        \n\n\n                \n                    \n                            Returns a cached response, if any, or null if not present.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpResponse | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            put\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        put(req: HttpRequest, expirationTime: number | Date, resp: HttpResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/model.ts:13\n                            \n                        \n\n\n                \n                    \n                            Adds or updates the response in the cache.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        expirationTime\n                                                        \n                                                                    number | Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resp\n                                                        \n                                                                    HttpResponse\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpEvent, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\nexport abstract class HttpCache {\n    /**\n     * Returns a cached response, if any, or null if not present.\n     */\n    public abstract get(req: HttpRequest): HttpResponse | null;\n\n    /**\n     * Adds or updates the response in the cache.\n     */\n    public abstract put(req: HttpRequest, expirationTime: number | Date, resp: HttpResponse): void;\n}\n\nexport abstract class OnGoingHttpCache {\n\n    public abstract has(req: HttpRequest): boolean;\n    public abstract set(req: HttpRequest, request: Observable>): void;\n    public abstract observe(req: HttpRequest): Observable>;\n    public abstract clear(req: HttpRequest): void;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpRequestOptions.html":{"url":"interfaces/HttpRequestOptions.html","title":"interface - HttpRequestOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HttpRequestOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/http-requests.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        basicAuthToken\n                                \n                                \n                                            Optional\n                                        forceUpdate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        basicAuthToken\n                                    \n                                \n                                \n                                    \n                                        basicAuthToken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forceUpdate\n                                    \n                                \n                                \n                                    \n                                        forceUpdate:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ParameterFilter {\n    service?: string;\n    phenomenon?: string;\n    valueTypes?: string;\n    platformTypes?: string;\n    expanded?: boolean;\n    lang?: string;\n    [key: string]: any;\n}\n\nexport interface DataParameterFilter extends ParameterFilter {\n    format?: string;\n    timespan?: string;\n    generalize?: boolean;\n}\n\nexport interface HttpRequestOptions {\n    forceUpdate?: boolean;\n    basicAuthToken?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/http.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handler\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                client\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpHandler: HttpHandler, interceptors: HttpServiceInterceptor[] | null)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/dataset-api/http.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpHandler\n                                                  \n                                                        \n                                                                    HttpHandler\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        interceptors\n                                                  \n                                                        \n                                                                    HttpServiceInterceptor[] | null\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        client(metadata: HttpServiceMetadata)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/http.service.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        metadata\n                                                        \n                                                                    HttpServiceMetadata\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        handler:     HttpServiceHandler\n\n                    \n                \n                    \n                        \n                            Type :     HttpServiceHandler\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/http.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\n\nexport const HTTP_SERVICE_INTERCEPTORS = new InjectionToken('HTTP_SERVICE_INTERCEPTORS');\n\nexport interface HttpServiceMetadata {\n    forceUpdate?: boolean;\n    expirationTime?: number | Date;\n}\n\nexport interface HttpServiceHandler {\n    handle(req: HttpRequest, metadata: Partial);\n}\n\nexport interface HttpServiceInterceptor {\n    intercept(req: HttpRequest, metadata: Partial, next: HttpServiceHandler);\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n\n    private handler: HttpServiceHandler;\n\n    constructor(\n        protected httpHandler: HttpHandler,\n        @Optional() @Inject(HTTP_SERVICE_INTERCEPTORS) interceptors: HttpServiceInterceptor[] | null\n    ) {\n        let handler: HttpServiceHandler = {\n            handle: (req, metadata) => httpHandler.handle(req)\n        };\n        if (interceptors) {\n            handler = interceptors.reduceRight((next, interceptor) => ({\n                handle: (req, metadata) => interceptor.intercept(req, metadata, next)\n            }), handler);\n        }\n        this.handler = handler;\n    }\n\n    public client(metadata: HttpServiceMetadata = {}): HttpClient {\n        return new HttpClient({\n            handle: (req) => this.handler.handle(req, metadata)\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpServiceHandler.html":{"url":"interfaces/HttpServiceHandler.html","title":"interface - HttpServiceHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HttpServiceHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/http.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    handle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handle\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandle(req: HttpRequest, metadata: Partial)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/http.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        metadata\n                                                        \n                                                                    Partial\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpClient, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\n\nexport const HTTP_SERVICE_INTERCEPTORS = new InjectionToken('HTTP_SERVICE_INTERCEPTORS');\n\nexport interface HttpServiceMetadata {\n    forceUpdate?: boolean;\n    expirationTime?: number | Date;\n}\n\nexport interface HttpServiceHandler {\n    handle(req: HttpRequest, metadata: Partial);\n}\n\nexport interface HttpServiceInterceptor {\n    intercept(req: HttpRequest, metadata: Partial, next: HttpServiceHandler);\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n\n    private handler: HttpServiceHandler;\n\n    constructor(\n        protected httpHandler: HttpHandler,\n        @Optional() @Inject(HTTP_SERVICE_INTERCEPTORS) interceptors: HttpServiceInterceptor[] | null\n    ) {\n        let handler: HttpServiceHandler = {\n            handle: (req, metadata) => httpHandler.handle(req)\n        };\n        if (interceptors) {\n            handler = interceptors.reduceRight((next, interceptor) => ({\n                handle: (req, metadata) => interceptor.intercept(req, metadata, next)\n            }), handler);\n        }\n        this.handler = handler;\n    }\n\n    public client(metadata: HttpServiceMetadata = {}): HttpClient {\n        return new HttpClient({\n            handle: (req) => this.handler.handle(req, metadata)\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpServiceInterceptor.html":{"url":"interfaces/HttpServiceInterceptor.html","title":"interface - HttpServiceInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HttpServiceInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/http.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    intercept\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(req: HttpRequest, metadata: Partial, next: HttpServiceHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/http.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        metadata\n                                                        \n                                                                    Partial\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpServiceHandler\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpClient, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\n\nexport const HTTP_SERVICE_INTERCEPTORS = new InjectionToken('HTTP_SERVICE_INTERCEPTORS');\n\nexport interface HttpServiceMetadata {\n    forceUpdate?: boolean;\n    expirationTime?: number | Date;\n}\n\nexport interface HttpServiceHandler {\n    handle(req: HttpRequest, metadata: Partial);\n}\n\nexport interface HttpServiceInterceptor {\n    intercept(req: HttpRequest, metadata: Partial, next: HttpServiceHandler);\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n\n    private handler: HttpServiceHandler;\n\n    constructor(\n        protected httpHandler: HttpHandler,\n        @Optional() @Inject(HTTP_SERVICE_INTERCEPTORS) interceptors: HttpServiceInterceptor[] | null\n    ) {\n        let handler: HttpServiceHandler = {\n            handle: (req, metadata) => httpHandler.handle(req)\n        };\n        if (interceptors) {\n            handler = interceptors.reduceRight((next, interceptor) => ({\n                handle: (req, metadata) => interceptor.intercept(req, metadata, next)\n            }), handler);\n        }\n        this.handler = handler;\n    }\n\n    public client(metadata: HttpServiceMetadata = {}): HttpClient {\n        return new HttpClient({\n            handle: (req) => this.handler.handle(req, metadata)\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpServiceMetadata.html":{"url":"interfaces/HttpServiceMetadata.html","title":"interface - HttpServiceMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HttpServiceMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/http.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        expirationTime\n                                \n                                \n                                            Optional\n                                        forceUpdate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expirationTime\n                                    \n                                \n                                \n                                    \n                                        expirationTime:     number | Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forceUpdate\n                                    \n                                \n                                \n                                    \n                                        forceUpdate:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\n\nexport const HTTP_SERVICE_INTERCEPTORS = new InjectionToken('HTTP_SERVICE_INTERCEPTORS');\n\nexport interface HttpServiceMetadata {\n    forceUpdate?: boolean;\n    expirationTime?: number | Date;\n}\n\nexport interface HttpServiceHandler {\n    handle(req: HttpRequest, metadata: Partial);\n}\n\nexport interface HttpServiceInterceptor {\n    intercept(req: HttpRequest, metadata: Partial, next: HttpServiceHandler);\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n\n    private handler: HttpServiceHandler;\n\n    constructor(\n        protected httpHandler: HttpHandler,\n        @Optional() @Inject(HTTP_SERVICE_INTERCEPTORS) interceptors: HttpServiceInterceptor[] | null\n    ) {\n        let handler: HttpServiceHandler = {\n            handle: (req, metadata) => httpHandler.handle(req)\n        };\n        if (interceptors) {\n            handler = interceptors.reduceRight((next, interceptor) => ({\n                handle: (req, metadata) => interceptor.intercept(req, metadata, next)\n            }), handler);\n        }\n        this.handler = handler;\n    }\n\n    public client(metadata: HttpServiceMetadata = {}): HttpClient {\n        return new HttpClient({\n            handle: (req) => this.handler.handle(req, metadata)\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDataEntry.html":{"url":"interfaces/IDataEntry.html","title":"interface - IDataEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDataEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/data.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export interface IDataEntry { }\n\nexport interface Data {\n    values: T[];\n    referenceValues: ReferenceValues;\n}\n\nexport class ReferenceValues {\n    [key: string]: T[];\n}\n\nexport interface TimeValueEntry extends IDataEntry {\n    timestamp: number;\n    value: number;\n}\n\nexport interface LocatedTimeValueEntry extends TimeValueEntry {\n    geometry: GeoJSON.Point;\n}\n\nexport interface ProfileDataEntry extends IDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n}\n\nexport interface LocatedProfileDataEntry extends ProfileDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n    geometry: GeoJSON.GeoJsonObject;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDataset.html":{"url":"interfaces/IDataset.html","title":"interface - IDataset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDataset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firstValue\n                                \n                                \n                                        internalId\n                                \n                                \n                                        lastValue\n                                \n                                \n                                        parameters\n                                \n                                \n                                        referenceValues\n                                \n                                \n                                        uom\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstValue\n                                    \n                                \n                                \n                                    \n                                        firstValue:     FirstLastValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FirstLastValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        internalId\n                                    \n                                \n                                \n                                    \n                                        internalId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastValue\n                                    \n                                \n                                \n                                    \n                                        lastValue:     FirstLastValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FirstLastValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parameters\n                                    \n                                \n                                \n                                    \n                                        parameters:     ParameterConstellation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParameterConstellation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        referenceValues\n                                    \n                                \n                                \n                                    \n                                        referenceValues:     ReferenceValue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ReferenceValue[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uom\n                                    \n                                \n                                \n                                    \n                                        uom:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Id.html":{"url":"interfaces/Id.html","title":"interface - Id","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Id\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/eventing/src/lib/model/response.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        href\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                    \n                                \n                                \n                                    \n                                        href:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Id {\n    id: string;\n    href: string;\n}\n\nexport interface EventingEvent extends Id {\n    label: string;\n    eventType: Id;\n    notificationLevel: Id;\n    publication: Id;\n    subscription: Id;\n    timestamp: number;\n    timestampCreated: number;\n    data?: {\n        eventTrigger: {\n            code: number;\n            label: string;\n            threshold: number;\n            thresholdUnit: string;\n        }\n        previousTimestamp: number;\n        previousValue: number;\n        unit: string;\n        value: number;\n    };\n}\n\nexport interface EventingEventResults {\n    data: EventingEvent[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingSubscription extends Id {\n    deliveryMethod: Id;\n    template: EventingTemplate;\n    user: Id;\n}\n\nexport interface EventingSubscriptionResults {\n    data: EventingSubscription[];\n    metadata: CollectionMetadata;\n}\n\nexport interface EventingTemplate extends Id {\n    label: string;\n    publication: Id;\n}\n\nexport interface CollectionMetadata {\n    limit: number;\n    offset: number;\n    total: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdCache.html":{"url":"classes/IdCache.html","title":"class - IdCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/id-cache.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                has\n                            \n                            \n                                    Public\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cache:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/id-cache.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/id-cache.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            has\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        has(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/id-cache.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(id: string, value: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/id-cache.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class IdCache {\n\n    private cache: Map = new Map();\n\n    public has(id: string): boolean {\n        return this.cache.has(id);\n    }\n\n    public get(id: string): T {\n        return this.cache.get(id);\n    }\n\n    public set(id: string, value: T) {\n        this.cache.set(id, value);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Identifiable.html":{"url":"interfaces/Identifiable.html","title":"interface - Identifiable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Identifiable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/identifiable.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Identifiable {\n    id: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalDatasetId.html":{"url":"interfaces/InternalDatasetId.html","title":"interface - InternalDatasetId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InternalDatasetId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/internal-id-handler.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import 'rxjs/operator/map';\n\nimport { Injectable } from '@angular/core';\n\nimport { IDataset } from '../model/dataset-api/dataset';\n\nconst INTERNAL_ID_SEPERATOR = '__';\n\nexport interface InternalDatasetId {\n  id: string;\n  url: string;\n}\n\n/**\n * Service to generate or resolve internal dataset IDs\n */\n@Injectable()\nexport class InternalIdHandler {\n\n  /**\n   * Generates an internal id for the given dataset.\n   * @param dataset The dataset for which the internal id will be generated and saved.\n   */\n  public generateInternalId(dataset: IDataset) {\n    dataset.internalId = dataset.url + INTERNAL_ID_SEPERATOR + dataset.id;\n  }\n\n  /**\n   * Resolves the internal ID to the url and the API specific dataset id.\n   * @param internalId The internal id as string\n   * @returns Construct of url and API id\n   */\n  public resolveInternalId(internalId: string): InternalDatasetId {\n    const split = internalId.split(INTERNAL_ID_SEPERATOR);\n    if (split.length !== 2) {\n      console.error('InternalID ' + internalId + ' is not resolvable');\n    } else {\n      return {\n        url: split[0],\n        id: split[1]\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InternalIdHandler.html":{"url":"injectables/InternalIdHandler.html","title":"injectable - InternalIdHandler","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  InternalIdHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/internal-id-handler.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to generate or resolve internal dataset IDs\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                generateInternalId\n                            \n                            \n                                    Public\n                                resolveInternalId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            generateInternalId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateInternalId(dataset: IDataset)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/internal-id-handler.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            Generates an internal id for the given dataset.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataset\n                                                        \n                                                                    IDataset\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The dataset for which the internal id will be generated and saved.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolveInternalId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolveInternalId(internalId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/internal-id-handler.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Resolves the internal ID to the url and the API specific dataset id.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The internal id as string\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     InternalDatasetId\n\n                            \n                                \n                                    Construct of url and API id\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import 'rxjs/operator/map';\n\nimport { Injectable } from '@angular/core';\n\nimport { IDataset } from '../model/dataset-api/dataset';\n\nconst INTERNAL_ID_SEPERATOR = '__';\n\nexport interface InternalDatasetId {\n  id: string;\n  url: string;\n}\n\n/**\n * Service to generate or resolve internal dataset IDs\n */\n@Injectable()\nexport class InternalIdHandler {\n\n  /**\n   * Generates an internal id for the given dataset.\n   * @param dataset The dataset for which the internal id will be generated and saved.\n   */\n  public generateInternalId(dataset: IDataset) {\n    dataset.internalId = dataset.url + INTERNAL_ID_SEPERATOR + dataset.id;\n  }\n\n  /**\n   * Resolves the internal ID to the url and the API specific dataset id.\n   * @param internalId The internal id as string\n   * @returns Construct of url and API id\n   */\n  public resolveInternalId(internalId: string): InternalDatasetId {\n    const split = internalId.split(INTERNAL_ID_SEPERATOR);\n    if (split.length !== 2) {\n      console.error('InternalID ' + internalId + ' is not resolvable');\n    } else {\n      return {\n        url: split[0],\n        id: split[1]\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonFavoriteExporterService.html":{"url":"injectables/JsonFavoriteExporterService.html","title":"injectable - JsonFavoriteExporterService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  JsonFavoriteExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/favorite/src/lib/service/json-favorite-exporter.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exportFavorites\n                            \n                            \n                                    Public\n                                importFavorites\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(favoriteSrvc: FavoriteService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/favorite/src/lib/service/json-favorite-exporter.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        favoriteSrvc\n                                                  \n                                                        \n                                                                    FavoriteService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            exportFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        exportFavorites()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/json-favorite-exporter.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            importFavorites\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        importFavorites(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/favorite/src/lib/service/json-favorite-exporter.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { FavoriteService, SingleFavorite } from './favorite.service';\n\n@Injectable()\nexport class JsonFavoriteExporterService {\n\n  constructor(\n    protected favoriteSrvc: FavoriteService\n  ) { }\n\n  public exportFavorites() {\n    const filename = 'favorites.json';\n    const json = JSON.stringify(this.favoriteSrvc.getFavorites());\n    // if (window.navigator.msSaveBlob) {\n    //     // IE version >= 10\n    //     const blob = new Blob([json], {\n    //         type: 'application/json;charset=utf-8;'\n    //     });\n    //     window.navigator.msSaveBlob(blob, filename);\n    // } else {\n    // FF, Chrome ...\n    const a = document.createElement('a');\n    a.href = 'data:application/json,' + encodeURIComponent(json);\n    a.target = '_blank';\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    // }\n  }\n\n  public importFavorites(event: any): Observable {\n    return new Observable((observer: Observer) => {\n      const files = event.target.files;\n      if (files && files.length > 0) {\n        this.favoriteSrvc.removeAllFavorites();\n        const reader = new FileReader();\n        reader.readAsText(files[0]);\n        reader.onerror = () => {\n          // alertService.error($translate.instant('favorite.import.wrongFile'));\n        };\n        reader.onload = (e: any) => {\n          const result = e.target.result;\n          const favorites = JSON.parse(result) as SingleFavorite[];\n          favorites.forEach((entry) => {\n            this.favoriteSrvc.addFavorite(entry.favorite, entry.label);\n          });\n          observer.next(true);\n          observer.complete();\n        };\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabelMapperComponent.html":{"url":"components/LabelMapperComponent.html","title":"component - LabelMapperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LabelMapperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/depiction/src/lib/label-mapper/label-mapper.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-label-mapper\n            \n\n\n\n\n            \n                templateUrl\n                ./label-mapper.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                determinedLabel\n                            \n                            \n                                    Public\n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(labelMapperSrvc: LabelMapperService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelMapperSrvc\n                                                  \n                                                        \n                                                                    LabelMapperService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            determinedLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        determinedLabel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { LabelMapperService } from './label-mapper.service';\n\n@Component({\n    selector: 'n52-label-mapper',\n    templateUrl: './label-mapper.component.html'\n})\nexport class LabelMapperComponent implements OnChanges {\n\n    @Input()\n    public label: string;\n\n    public determinedLabel: string;\n\n    public loading = true;\n\n    constructor(\n        protected labelMapperSrvc: LabelMapperService\n    ) { }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.label) {\n            this.labelMapperSrvc.getMappedLabel(this.label)\n                .subscribe((label) => {\n                    this.determinedLabel = label;\n                    this.loading = false;\n                });\n        } else {\n            this.loading = false;\n        }\n    }\n}\n\n    \n\n    \n        {{determinedLabel}}\n\n  \n   loading label ...\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{determinedLabel}}     loading label ...'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LabelMapperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelMapperService.html":{"url":"injectables/LabelMapperService.html","title":"injectable - LabelMapperService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LabelMapperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/depiction/src/lib/label-mapper/label-mapper.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                confirmLabel\n                            \n                            \n                                    Private\n                                findUrl\n                            \n                            \n                                    Public\n                                getMappedLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, settingsSrvc: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsSrvc\n                                                  \n                                                        \n                                                                    SettingsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            confirmLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        confirmLabel(observer: Observer, label: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.service.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observer\n                                                        \n                                                                    Observer\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            findUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        findUrl(label: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getMappedLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMappedLabel(label: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cache:     IdCache\n\n                    \n                \n                    \n                        \n                            Type :     IdCache\n\n                        \n                    \n                    \n                        \n                            Default value : new IdCache()\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/label-mapper/label-mapper.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { IdCache, Settings, SettingsService } from '@helgoland/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\ndeclare var $: any;\n\n@Injectable()\nexport class LabelMapperService {\n\n    private cache: IdCache = new IdCache();\n\n    constructor(\n        protected httpClient: HttpClient,\n        protected settingsSrvc: SettingsService\n    ) { }\n\n    public getMappedLabel(label: string): Observable {\n        return new Observable((observer: Observer) => {\n            if (!this.settingsSrvc.getSettings().solveLabels) {\n                this.confirmLabel(observer, label);\n            } else {\n                const url = this.findUrl(label);\n                if (url) {\n                    if (this.cache.has(url)) {\n                        this.confirmLabel(observer, this.cache.get(url));\n                    } else {\n                        const labelUrl =\n                            this.settingsSrvc.getSettings().proxyUrl ? this.settingsSrvc.getSettings().proxyUrl + url : url;\n                        this.httpClient.get(labelUrl, { responseType: 'text' }).subscribe((res) => {\n                            try {\n                                const xml = $.parseXML(res);\n                                label = label.replace(url, $(xml).find('prefLabel').text());\n                            } catch (error) {\n                                // currently do nothing and use old label\n                            }\n                            this.cache.set(url, label);\n                            this.confirmLabel(observer, label);\n                        }, (error) => {\n                            const resolvedLabel = label.substring(label.lastIndexOf('/') + 1, label.length);\n                            this.cache.set(url, resolvedLabel);\n                            this.confirmLabel(observer, resolvedLabel);\n                        });\n                    }\n                } else {\n                    this.confirmLabel(observer, label);\n                }\n            }\n        });\n    }\n\n    private confirmLabel(observer: Observer, label: string) {\n        observer.next(label);\n        observer.complete();\n    }\n\n    private findUrl(label: string) {\n        const source = (label || '').toString();\n        const regexToken = /(((ftp|https?):\\/\\/)[\\-\\w@:%_\\+.~#?&\\/\\/=]+)/g;\n        const matchArray = regexToken.exec(source);\n        if (matchArray !== null) {\n            return matchArray[0];\n        }\n        return null;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Language.html":{"url":"interfaces/Language.html","title":"interface - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/language/model/language.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        label\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Language {\n    label: string;\n    code: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LanguageChangNotifier.html":{"url":"classes/LanguageChangNotifier.html","title":"class - LanguageChangNotifier","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LanguageChangNotifier\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/language/language-changer.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    \n                                languageChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/language/language-changer.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            languageChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        languageChanged()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/language/language-changer.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { TranslateService } from '@ngx-translate/core';\n\nexport abstract class LanguageChangNotifier {\n\n    constructor(\n        protected translate: TranslateService\n    ) {\n        this.translate.onLangChange.subscribe(() => this.languageChanged());\n    }\n\n    protected abstract languageChanged(): void;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayerOptions.html":{"url":"interfaces/LayerOptions.html","title":"interface - LayerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LayerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/map-options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        layer\n                                \n                                \n                                        visible\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layer\n                                    \n                                \n                                \n                                    \n                                        layer:     L.Layer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     L.Layer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LayerOptions {\n    label: string;\n    visible: boolean;\n    layer: L.Layer;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Layout.html":{"url":"interfaces/Layout.html","title":"interface - Layout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Layout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/plotly/src/lib/plotly-profile-graph/plotly-profile-graph.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Partial\n            \n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/plotly/src/lib/plotly-profile-graph/plotly-profile-graph.component.ts:347\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { AfterViewInit, Component, ElementRef, EventEmitter, IterableDiffers, Output, ViewChild } from '@angular/core';\nimport {\n    DatasetApiInterface,\n    DatasetPresenterComponent,\n    PresenterHighlight,\n    IDataset,\n    InternalIdHandler,\n    ProfileDataEntry,\n    Time,\n    TimedDatasetOptions,\n    Timespan,\n} from '@helgoland/core';\nimport * as d3 from 'd3';\n\nimport * as Plotly from 'plotly.js';\n\ninterface RawData {\n    dataset: IDataset;\n    datas: ProfileDataEntry[];\n    options: TimedDatasetOptions[];\n}\n\ninterface ExtendedScatterData extends Partial {\n    timestamp: number;\n    id: string;\n}\n\nconst LINE_WIDTH_SELECTED = 5;\nconst LINE_WIDTH = 2;\nconst MARKER_SIZE_SELECTED = 10;\nconst MARKER_SIZE = 6;\n\n@Component({\n    selector: 'n52-plotly-profile-graph',\n    templateUrl: './plotly-profile-graph.component.html',\n    styleUrls: ['./plotly-profile-graph.component.scss']\n})\nexport class PlotlyProfileGraphComponent\n    extends DatasetPresenterComponent\n    implements AfterViewInit {\n\n    @Output()\n    public onHighlight: EventEmitter = new EventEmitter();\n\n    @ViewChild('plotly')\n    public plotlyElem: ElementRef;\n\n    private plotlyArea: any;\n    private preparedData: ExtendedScatterData[] = [];\n    private rawData: Map = new Map();\n    private counterXAxis = 0;\n    private counterYAxis = 0;\n\n    private layout: Layout = {\n        autosize: true,\n        showlegend: false,\n        dragmode: 'pan',\n        margin: {\n            l: 40,\n            r: 10,\n            b: 40,\n            t: 10\n            // pad: 100\n        },\n        hovermode: 'closest'\n    };\n\n    private settings: Partial = {\n        displayModeBar: false,\n        modeBarButtonsToRemove: [\n            'sendDataToCloud',\n            'hoverCompareCartesian'\n        ],\n        displaylogo: false,\n        showTips: false,\n        scrollZoom: true\n    };\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc);\n    }\n\n    public ngAfterViewInit(): void {\n        this.plotlyArea = this.plotlyElem.nativeElement;\n        this.drawChart();\n    }\n\n    public reloadData(): void {\n        console.log('reload data at ' + new Date());\n    }\n\n    // tslint:disable-next-line:no-empty\n    protected timeIntervalChanges(): void { }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getDataset(id, url).subscribe((dataset) => {\n            const options = this.datasetOptions.get(dataset.internalId);\n            options.forEach((option) => {\n                if (option.timestamp) {\n                    const timespan = new Timespan(option.timestamp);\n                    this.api.getData(id, url, timespan).subscribe((data) => {\n                        if (data.values.length === 1) {\n                            if (this.rawData.has(dataset.internalId)) {\n                                this.rawData.get(dataset.internalId).datas.push(data.values[0]);\n                                this.rawData.get(dataset.internalId).options.push(option);\n                            } else {\n                                this.rawData.set(dataset.internalId, {\n                                    dataset,\n                                    datas: [data.values[0]],\n                                    options: [option]\n                                });\n                            }\n                        }\n                        this.drawChart();\n                    });\n                }\n            });\n        });\n    }\n\n    protected removeDataset(internalId: string): void {\n        this.rawData.delete(internalId);\n        this.drawChart();\n    }\n\n    protected setSelectedId(internalId: string): void {\n        this.drawChart();\n    }\n\n    protected removeSelectedId(internalId: string): void {\n        this.drawChart();\n    }\n\n    // tslint:disable-next-line:no-empty\n    protected graphOptionsChanged(options: any): void { }\n\n    protected datasetOptionsChanged(internalId: string, options: TimedDatasetOptions[], firstChange: boolean): void {\n        if (!firstChange) {\n            // remove unused options\n            const removedIdx = this.rawData.get(internalId).options.findIndex((option) => {\n                const idx = options.findIndex((e) => e.timestamp === option.timestamp);\n                if (idx === -1) {\n                    return true;\n                }\n            });\n            if (removedIdx > -1) {\n                this.rawData.get(internalId).options.splice(removedIdx, 1);\n                this.rawData.get(internalId).datas.splice(removedIdx, 1);\n            }\n            this.drawChart();\n        }\n    }\n\n    protected onResize(): void {\n        this.redrawChart();\n    }\n\n    private processData() {\n        this.clearLayout();\n        this.clearData();\n        this.rawData.forEach((dataEntry) => {\n            dataEntry.options.forEach((option, key) => {\n                if (option.visible) {\n                    const x = new Array();\n                    const y = new Array();\n                    const selected = this.selectedDatasetIds.indexOf(dataEntry.dataset.internalId) >= 0;\n                    dataEntry.datas[key].value.forEach((entry) => {\n                        x.push(entry.value);\n                        y.push(entry.vertical);\n                    });\n                    const prepared: ExtendedScatterData = {\n                        x,\n                        y,\n                        type: 'scatter',\n                        name: '',\n                        timestamp: option.timestamp,\n                        id: dataEntry.dataset.internalId,\n                        yaxis: this.createYAxis(dataEntry.dataset, dataEntry.datas[key]),\n                        xaxis: this.createXAxis(dataEntry.dataset, dataEntry.datas[key]),\n                        // hovertext: dataEntry.label,\n                        line: {\n                            color: option.color,\n                            width: selected ? LINE_WIDTH_SELECTED : LINE_WIDTH\n                        },\n                        marker: {\n                            size: selected ? MARKER_SIZE_SELECTED : MARKER_SIZE\n                        }\n                    };\n                    this.preparedData.push(prepared);\n                }\n            });\n        });\n\n        this.updateAxis();\n    }\n\n    private createXAxis(dataset: IDataset, data: ProfileDataEntry): string {\n        let axis;\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis') && this.layout[key].title === dataset.uom) {\n                axis = this.layout[key];\n            }\n        }\n        const range = d3.extent(data.value, (d) => d.value);\n        if (!axis) {\n            this.counterXAxis = this.counterXAxis + 1;\n            axis = this.layout['xaxis' + this.counterXAxis] = {\n                id: 'x' + (this.counterXAxis > 1 ? this.counterXAxis : ''),\n                anchor: 'free',\n                title: dataset.uom,\n                zeroline: true,\n                hoverformat: '.2f',\n                showline: false,\n                range: [range[0], range[1]],\n                overlaying: '',\n                // rangemode: 'tozero',\n                fixedrange: false\n            };\n            if (this.counterXAxis !== 1) {\n                axis.overlaying = 'x';\n            }\n        } else {\n            axis.range = d3.extent([range[0], range[1], axis.range[0], axis.range[1]]);\n        }\n        return axis.id;\n    }\n\n    private createYAxis(dataset: IDataset, data: ProfileDataEntry): string {\n        let axis;\n        // find axis\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) &&\n                key.startsWith('yaxis') &&\n                this.layout[key].title === data.verticalUnit) {\n                axis = this.layout[key];\n            }\n        }\n        if (!axis) {\n            // add axis\n            this.counterYAxis = this.counterYAxis + 1;\n            axis = this.layout[('yaxis' + this.counterYAxis)] = {\n                id: 'y' + (this.counterYAxis > 1 ? this.counterYAxis : ''),\n                // zeroline: true,\n                anchor: 'free',\n                hoverformat: '.2r',\n                side: 'left',\n                autorange: 'reversed',\n                showline: false,\n                overlaying: '',\n                title: data.verticalUnit,\n                fixedrange: false\n            };\n            if (this.counterYAxis !== 1) {\n                axis.overlaying = 'y';\n            }\n        }\n        return axis.id;\n    }\n\n    private updateAxis() {\n        if (this.counterYAxis > 1) {\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                    this.layout[key].domain = [(0.1 * this.counterYAxis) - 0.1, 1];\n                }\n            }\n            let yaxisCount = 0;\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('yaxis')) {\n                    this.layout[key].position = 0.1 * yaxisCount;\n                    yaxisCount += 1;\n                }\n            }\n        }\n        if (this.counterXAxis > 1) {\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('yaxis')) {\n                    this.layout[key].domain = [(0.06 * this.counterXAxis) - 0.06, 1];\n                }\n            }\n            let xaxisCount = 0;\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                    this.layout[key].position = 0.06 * xaxisCount;\n                    xaxisCount += 1;\n                }\n            }\n        }\n        // add offset to xaxis ranges\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                const range = this.layout[key].range;\n                const rangeOffset = (range[1] - range[0]) * 0.05;\n                this.layout[key].range = [range[0] - rangeOffset, range[1] + rangeOffset];\n            }\n        }\n    }\n\n    private drawChart() {\n        if (this.plotlyArea && this.rawData.size > 0) {\n            this.processData();\n            Plotly.newPlot(this.plotlyArea, this.preparedData, this.layout, this.settings);\n            this.plotlyArea.on('plotly_hover', (entry: any) => {\n                if (entry.points.length === 1) {\n                    this.onHighlight.emit({\n                        internalId: entry.points[0].data.id,\n                        dataIndex: entry.points[0].pointNumber\n                    });\n                }\n            });\n        }\n    }\n\n    private clearLayout() {\n        // todo remove yaxis\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && (key.startsWith('yaxis') || key.startsWith('xaxis'))) {\n                delete this.layout[key];\n            }\n        }\n        // reset counter\n        this.counterYAxis = 0;\n        this.counterXAxis = 0;\n    }\n\n    private clearData() {\n        this.preparedData = [];\n    }\n\n    private redrawChart() {\n        if (this.plotlyArea) {\n            Plotly.relayout(this.plotlyArea, {});\n        }\n    }\n}\n\ninterface ScatterData extends Partial {\n    id: string;\n    timestamp: number;\n}\n\ninterface Layout extends Partial {\n    [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListEntryComponent.html":{"url":"classes/ListEntryComponent.html","title":"class - ListEntryComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    \n                                loadDataset\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                removeDataset\n                            \n                            \n                                    Public\n                                toggleSelection\n                            \n                            \n                                    Public\n                                toggleUomSelection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                datasetId\n                            \n                            \n                                highlight\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteDataset\n                            \n                            \n                                onSelectDataset\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(internalIdHandler: InternalIdHandler)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalIdHandler\n                                                  \n                                                        \n                                                                    InternalIdHandler\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            loadDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadDataset(id: string, url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeDataset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleSelection()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleUomSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleUomSelection(id: , selected: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        selected\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        datasetId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:7\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        highlight\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:10\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        onDeleteDataset\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onSelectDataset\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/list-entry.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n\n\n    \n        import { EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { InternalIdHandler } from '@helgoland/core';\n\nexport abstract class ListEntryComponent implements OnInit {\n\n    @Input()\n    public datasetId: string;\n\n    @Input()\n    public selected: boolean;\n\n    @Input()\n    public highlight: boolean;\n\n    @Output()\n    public onDeleteDataset: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onSelectDataset: EventEmitter = new EventEmitter();\n\n    constructor(\n        protected internalIdHandler: InternalIdHandler\n    ) { }\n\n    public ngOnInit(): void {\n        if (this.datasetId) {\n            const temp = this.internalIdHandler.resolveInternalId(this.datasetId);\n            this.loadDataset(temp.id, temp.url);\n        }\n    }\n\n    public removeDataset() {\n        this.onDeleteDataset.emit(true);\n    }\n\n    public toggleSelection() {\n        this.selected = !this.selected;\n        this.onSelectDataset.emit(this.selected);\n    }\n\n    public toggleUomSelection(id, selected) {\n        if (this.datasetId === id) {\n            this.selected = selected;\n            this.onSelectDataset.emit(this.selected);\n        }\n    }\n\n    protected abstract loadDataset(id: string, url: string): void;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListSelectorComponent.html":{"url":"components/ListSelectorComponent.html","title":"component - ListSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts\n\n\n    \n        Description\n    \n    \n        Component to select an item out of a list of provider with a given filter combination.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-list-selector\n            \n\n\n\n\n            \n                templateUrl\n                ./list-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activePanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isEqual\n                            \n                            \n                                    Public\n                                itemSelected\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Private\n                                openDataset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                parameters\n                            \n                            \n                                providerList\n                            \n                            \n                                selectorId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onDatasetSelection\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(listSelectorService: ListSelectorService, apiInterface: DatasetApiInterface, apiMapping: DatasetApiMapping)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listSelectorService\n                                                  \n                                                        \n                                                                    ListSelectorService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiInterface\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiMapping\n                                                  \n                                                        \n                                                                    DatasetApiMapping\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filter\n                    \n                    \n                            \n                            Type:    ParameterFilter\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parameters\n                    \n                    \n                            \n                            Type:    ListSelectorParameter[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        providerList\n                    \n                    \n                            \n                            Type:    FilteredProvider[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectorId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onDatasetSelection\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isEqual\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isEqual(listOne: FilteredProvider[], listTwo: FilteredProvider[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listOne\n                                                        \n                                                                    FilteredProvider[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        listTwo\n                                                        \n                                                                    FilteredProvider[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        itemSelected(item: FilteredParameter, index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    FilteredParameter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            openDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        openDataset(url: string, params: ParameterFilter)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    ParameterFilter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activePanel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activePanel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport {\n    DatasetApiInterface,\n    DatasetApiMapping,\n    DatasetApiVersion,\n    FilteredProvider,\n    IDataset,\n    ParameterFilter,\n} from '@helgoland/core';\n\nimport { FilteredParameter } from '../multi-service-filter-selector/multi-service-filter-selector.component';\nimport { ListSelectorParameter, ListSelectorService } from './list-selector.service';\n\n/**\n * Component to select an item out of a list of provider with a given filter combination.\n */\n@Component({\n    selector: 'n52-list-selector',\n    templateUrl: './list-selector.component.html'\n})\nexport class ListSelectorComponent implements OnChanges {\n\n    @Input()\n    public parameters: ListSelectorParameter[];\n\n    @Input()\n    public filter: ParameterFilter;\n\n    @Input()\n    public providerList: FilteredProvider[];\n\n    @Input()\n    public selectorId: string;\n\n    @Output()\n    public onDatasetSelection: EventEmitter = new EventEmitter();\n\n    public activePanel: string;\n\n    constructor(\n        protected listSelectorService: ListSelectorService,\n        protected apiInterface: DatasetApiInterface,\n        protected apiMapping: DatasetApiMapping\n    ) { }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.providerList && changes.providerList.currentValue) {\n            if (this.selectorId && this.listSelectorService.cache.has(this.selectorId)\n                && this.isEqual(this.providerList, this.listSelectorService.providerList)) {\n                this.parameters = this.listSelectorService.cache.get(this.selectorId);\n                const idx = this.parameters.findIndex((entry) => {\n                    return entry.isDisabled;\n                }) - 1;\n                this.activePanel = this.selectorId + '-' + idx;\n            } else {\n                if (this.selectorId) {\n                    this.listSelectorService.cache.set(this.selectorId, this.parameters);\n                }\n                // create filterlist for first parameter entry\n                this.parameters[0].filterList = this.providerList.map((entry) => {\n                    entry.filter = this.filter;\n                    return entry;\n                });\n                this.listSelectorService.providerList = this.providerList;\n                // open first tab\n                this.activePanel = this.selectorId + '-0';\n                this.parameters[0].isDisabled = false;\n                // disable parameterList\n                for (let i = 1; i  {\n                entry.filter[this.parameters[index].type] = entry.itemId;\n                return entry;\n            });\n            for (let i = index + 2; i  {\n                entry.filter[this.parameters[index].type] = entry.itemId;\n                this.openDataset(entry.url, entry.filter);\n            });\n        }\n    }\n\n    private openDataset(url: string, params: ParameterFilter) {\n        this.apiMapping.getApiVersion(url).subscribe((apiVersionId) => {\n            if (apiVersionId === DatasetApiVersion.V2) {\n                this.apiInterface.getDatasets(url, params).subscribe((result) => this.onDatasetSelection.emit(result));\n            } else if (apiVersionId === DatasetApiVersion.V1) {\n                this.apiInterface.getTimeseries(url, params).subscribe(\n                    (result) => this.onDatasetSelection.emit(result)\n                );\n            }\n        });\n    }\n\n    private isEqual(listOne: FilteredProvider[], listTwo: FilteredProvider[]): boolean {\n        let match = true;\n        if (listOne.length === listTwo.length) {\n            listOne.forEach((entryOne) => {\n                const found = listTwo.find((entryTwo) => {\n                    if (entryOne.id === entryTwo.id && entryOne.url === entryTwo.url) { return true; }\n                    return false;\n                });\n                if (!found) { match = false; }\n            });\n        } else {\n            match = false;\n        }\n        return match;\n    }\n}\n\n    \n\n    \n        {{activePanel}}\n\n  \n    {{param.header}}\n    -\n    {{param.headerAddition}}\n  \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{activePanel}}      {{param.header}}    -    {{param.headerAddition}}          '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListSelectorParameter.html":{"url":"interfaces/ListSelectorParameter.html","title":"interface - ListSelectorParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListSelectorParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/selector/src/lib/list-selector/list-selector.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        filterList\n                                \n                                \n                                        header\n                                \n                                \n                                            Optional\n                                        headerAddition\n                                \n                                \n                                            Optional\n                                        isDisabled\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filterList\n                                    \n                                \n                                \n                                    \n                                        filterList:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                    \n                                \n                                \n                                    \n                                        header:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerAddition\n                                    \n                                \n                                \n                                    \n                                        headerAddition:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDisabled\n                                    \n                                \n                                \n                                    \n                                        isDisabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FilteredProvider } from '@helgoland/core';\n\nexport interface ListSelectorParameter {\n    header: string;\n    type: string;\n    isDisabled?: boolean;\n    headerAddition?: string;\n    filterList?: any;\n}\n\n@Injectable()\nexport class ListSelectorService {\n    public cache: Map = new Map();\n    public providerList: FilteredProvider[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListSelectorService.html":{"url":"injectables/ListSelectorService.html","title":"injectable - ListSelectorService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ListSelectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/selector/src/lib/list-selector/list-selector.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cache\n                            \n                            \n                                    Public\n                                providerList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cache:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            providerList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        providerList:     FilteredProvider[]\n\n                    \n                \n                    \n                        \n                            Type :     FilteredProvider[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/list-selector/list-selector.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FilteredProvider } from '@helgoland/core';\n\nexport interface ListSelectorParameter {\n    header: string;\n    type: string;\n    isDisabled?: boolean;\n    headerAddition?: string;\n    filterList?: any;\n}\n\n@Injectable()\nexport class ListSelectorService {\n    public cache: Map = new Map();\n    public providerList: FilteredProvider[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalHttpCache.html":{"url":"injectables/LocalHttpCache.html","title":"injectable - LocalHttpCache","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LocalHttpCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/caching/src/lib/local-http-cache.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/local-http-cache.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpResponse\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            put\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        put(req: HttpRequest, expirationTime: number | Date, resp: HttpResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/local-http-cache.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        expirationTime\n                                                        \n                                                                    number | Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resp\n                                                        \n                                                                    HttpResponse\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cache:     Cache\n\n                    \n                \n                    \n                        \n                            Type :     Cache\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/local-http-cache.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { HttpCache } from './model';\n\ninterface CachedItem {\n    expirationTime: number;\n    response: HttpResponse;\n}\n\ninterface Cache {\n    [id: string]: CachedItem;\n}\n\n@Injectable()\nexport class LocalHttpCache extends HttpCache {\n\n    private cache: Cache = {};\n\n    public get(req: HttpRequest): HttpResponse {\n        if (this.cache[req.urlWithParams]) {\n            const expirationTime = this.cache[req.urlWithParams].expirationTime;\n            const currentTime = new Date().getTime();\n            if (expirationTime >= currentTime) {\n                return this.cache[req.urlWithParams].response;\n            } else {\n                delete this.cache[req.urlWithParams];\n            }\n        }\n        return null;\n    }\n\n    public put(req: HttpRequest, expirationTime: number | Date, resp: HttpResponse) {\n        let time;\n        if (expirationTime instanceof Date) {\n            time = expirationTime.getTime();\n        } else {\n            time = new Date().getTime() + expirationTime;\n        }\n        this.cache[req.urlWithParams] = {\n            expirationTime: time,\n            response: resp\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalOngoingHttpCache.html":{"url":"injectables/LocalOngoingHttpCache.html","title":"injectable - LocalOngoingHttpCache","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LocalOngoingHttpCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/caching/src/lib/local-ongoing-http-cache.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                has\n                            \n                            \n                                    Public\n                                observe\n                            \n                            \n                                    Public\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clear(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/local-ongoing-http-cache.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            has\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        has(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/local-ongoing-http-cache.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            observe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        observe(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/local-ongoing-http-cache.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(req: HttpRequest, request: Observable>)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/local-ongoing-http-cache.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        request\n                                                        \n                                                                    Observable>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cache:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/local-ongoing-http-cache.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpEvent, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class LocalOngoingHttpCache {\n\n    private cache: { [key: string]: { request: Observable> } } = {};\n\n    public has(req: HttpRequest): boolean {\n        return this.cache[req.urlWithParams] !== undefined;\n    }\n\n    public set(req: HttpRequest, request: Observable>): void {\n        this.cache[req.urlWithParams] = {\n            request\n        };\n    }\n\n    public observe(req: HttpRequest): Observable> {\n        return this.cache[req.urlWithParams].request;\n    }\n\n    public clear(req: HttpRequest) {\n        delete this.cache[req.urlWithParams];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalSelectorComponent.html":{"url":"classes/LocalSelectorComponent.html","title":"class - LocalSelectorComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/language/locale-selector.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Private\n                                setCurrentLang\n                            \n                            \n                                    Public\n                                setLanguage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                languageList\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/language/locale-selector.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentLang\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentLang:     Language\n\n                    \n                \n                    \n                        \n                            Type :     Language\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/language/locale-selector.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/language/locale-selector.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setCurrentLang\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setCurrentLang()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/language/locale-selector.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setLanguage(lang: Language)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/language/locale-selector.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    Language\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        languageList\n                    \n                    \n                            \n                            Type:    Language[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/language/locale-selector.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { Language } from './model/language';\n\nexport abstract class LocalSelectorComponent implements OnChanges {\n\n    @Input()\n    public languageList: Language[];\n\n    public currentLang: Language;\n\n    constructor(\n        protected translate: TranslateService\n    ) { }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.languageList) {\n            this.setCurrentLang();\n        }\n    }\n\n    public setLanguage(lang: Language) {\n        this.translate.use(lang.code);\n        this.setCurrentLang();\n    }\n\n    private setCurrentLang() {\n        this.currentLang = this.languageList.find((e) => e.code === this.translate.currentLang);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorage.html":{"url":"injectables/LocalStorage.html","title":"injectable - LocalStorage","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LocalStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/local-storage/local-storage.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                localStorageEnabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                load\n                            \n                            \n                                    Public\n                                loadArray\n                            \n                            \n                                    Public\n                                loadTextual\n                            \n                            \n                                    Public\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/local-storage/local-storage.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        load(param: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/local-storage/local-storage.service.ts:22\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadArray(param: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/local-storage/local-storage.service.ts:32\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadTextual\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadTextual(param: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/local-storage/local-storage.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        save(param: string, object: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/local-storage/local-storage.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        object\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            localStorageEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        localStorageEnabled:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/local-storage/local-storage.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LocalStorage {\n\n    private localStorageEnabled = false;\n\n    constructor() {\n        if (typeof (Storage) !== 'undefined') {\n            this.localStorageEnabled = true;\n        }\n    }\n\n    public save(param: string, object: any): boolean {\n        if (this.localStorageEnabled) {\n            localStorage.setItem(param, JSON.stringify(object));\n            return true;\n        }\n        return false;\n    }\n\n    public load(param: string): T {\n        if (this.localStorageEnabled) {\n            const result = localStorage.getItem(param);\n            if (result) {\n                return JSON.parse(result);\n            }\n            return null;\n        }\n    }\n\n    public loadArray(param: string): T[] {\n        if (this.localStorageEnabled) {\n            const result = localStorage.getItem(param);\n            if (result) {\n                return JSON.parse(result);\n            }\n            return null;\n        }\n    }\n\n    public loadTextual(param: string): string {\n        if (this.localStorageEnabled) {\n            const result = localStorage.getItem(param);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocateControlComponent.html":{"url":"components/LocateControlComponent.html","title":"component - LocateControlComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocateControlComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/map/src/lib/control/locate/locate.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-locate-control\n            \n\n            \n                styleUrls\n                locate.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./locate.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isToggled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                locateUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(locateService: LocateService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/control/locate/locate.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locateService\n                                                  \n                                                        \n                                                                    LocateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/locate/locate.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            locateUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        locateUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/locate/locate.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isToggled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isToggled:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/locate/locate.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { LocateService } from './locate.service';\n\n@Component({\n    selector: 'n52-locate-control',\n    templateUrl: './locate.component.html',\n    styleUrls: ['./locate.component.scss']\n})\nexport class LocateControlComponent {\n\n    @Input()\n    public mapId: string;\n\n    public isToggled = false;\n\n    constructor(\n        protected locateService: LocateService\n    ) { }\n\n    public locateUser() {\n        this.isToggled = !this.isToggled;\n        if (this.isToggled) {\n            this.locateService.startLocate(this.mapId);\n        } else {\n            this.locateService.stopLocate(this.mapId);\n        }\n    }\n}\n\n    \n\n    \n        \n  \n    locate\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      locate  '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LocateControlComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocateService.html":{"url":"injectables/LocateService.html","title":"injectable - LocateService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LocateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/control/locate/locate.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                removeMarker\n                            \n                            \n                                    Public\n                                startLocate\n                            \n                            \n                                    Public\n                                stopLocate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapCache: MapCache)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/control/locate/locate.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapCache\n                                                  \n                                                        \n                                                                    MapCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            removeMarker\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeMarker(map: L.Map)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/locate/locate.service.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    L.Map\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startLocate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        startLocate(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/locate/locate.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stopLocate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stopLocate(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/locate/locate.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as L from 'leaflet';\n\nimport { MapCache } from '../../base/map-cache.service';\n\nconst LOCATION_FOUND_EVENT = 'locationfound';\nconst LOCATION_ERROR = 'locationerror';\nconst LOCATED_MARKER_ID = 'located';\n\n@Injectable()\nexport class LocateService {\n\n  constructor(\n    protected mapCache: MapCache\n  ) { }\n\n  public startLocate(id: string) {\n    const map = this.mapCache.getMap(id);\n    map.on(LOCATION_FOUND_EVENT, (evt: L.LocationEvent) => {\n      this.removeMarker(map);\n      const marker = L.marker(evt.latlng).addTo(map);\n      marker.options.title = LOCATED_MARKER_ID;\n    });\n    map.on(LOCATION_ERROR, (error) => {\n      console.error(error);\n    });\n    map.locate({\n      watch: true,\n      setView: true,\n      timeout: 30000\n    });\n  }\n\n  public stopLocate(id: string) {\n    const map = this.mapCache.getMap(id);\n    map.stopLocate();\n    map.off(LOCATION_FOUND_EVENT);\n    this.removeMarker(map);\n  }\n\n  private removeMarker(map: L.Map) {\n    map.eachLayer((entry) => {\n      if (entry instanceof L.Marker && entry.options.title === LOCATED_MARKER_ID) {\n        map.removeLayer(entry);\n      }\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocatedProfileDataEntry.html":{"url":"interfaces/LocatedProfileDataEntry.html","title":"interface - LocatedProfileDataEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocatedProfileDataEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/data.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ProfileDataEntry\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        timestamp\n                                \n                                \n                                        value\n                                \n                                \n                                        verticalUnit\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     GeoJSON.GeoJsonObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GeoJSON.GeoJsonObject\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verticalUnit\n                                    \n                                \n                                \n                                    \n                                        verticalUnit:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IDataEntry { }\n\nexport interface Data {\n    values: T[];\n    referenceValues: ReferenceValues;\n}\n\nexport class ReferenceValues {\n    [key: string]: T[];\n}\n\nexport interface TimeValueEntry extends IDataEntry {\n    timestamp: number;\n    value: number;\n}\n\nexport interface LocatedTimeValueEntry extends TimeValueEntry {\n    geometry: GeoJSON.Point;\n}\n\nexport interface ProfileDataEntry extends IDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n}\n\nexport interface LocatedProfileDataEntry extends ProfileDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n    geometry: GeoJSON.GeoJsonObject;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocatedTimeValueEntry.html":{"url":"interfaces/LocatedTimeValueEntry.html","title":"interface - LocatedTimeValueEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocatedTimeValueEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/data.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeValueEntry\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     GeoJSON.Point\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GeoJSON.Point\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IDataEntry { }\n\nexport interface Data {\n    values: T[];\n    referenceValues: ReferenceValues;\n}\n\nexport class ReferenceValues {\n    [key: string]: T[];\n}\n\nexport interface TimeValueEntry extends IDataEntry {\n    timestamp: number;\n    value: number;\n}\n\nexport interface LocatedTimeValueEntry extends TimeValueEntry {\n    geometry: GeoJSON.Point;\n}\n\nexport interface ProfileDataEntry extends IDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n}\n\nexport interface LocatedProfileDataEntry extends ProfileDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n    geometry: GeoJSON.GeoJsonObject;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapCache.html":{"url":"injectables/MapCache.html","title":"injectable - MapCache","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MapCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/map-cache.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mapCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMap\n                            \n                            \n                                    Public\n                                setMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMap(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/map-cache.service.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     L.Map\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setMap(id: string, map: L.Map)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/map-cache.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        map\n                                                        \n                                                                    L.Map\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mapCache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapCache:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/map-cache.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as L from 'leaflet';\n\n@Injectable()\nexport class MapCache {\n\n    private mapCache: Map = new Map();\n\n    public getMap(id: string): L.Map {\n        return this.mapCache.get(id);\n    }\n\n    public setMap(id: string, map: L.Map) {\n        this.mapCache.set(id, map);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinMaxRange.html":{"url":"interfaces/MinMaxRange.html","title":"interface - MinMaxRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinMaxRange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        max\n                                \n                                \n                                        min\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                    \n                                \n                                \n                                    \n                                        max:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                    \n                                \n                                \n                                    \n                                        min:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export class DatasetOptions {\n    public internalId: string;\n    public color: string;\n    public visible = true;\n    public loading?: boolean;\n    public separateYAxis?: boolean = false;\n    public zeroBasedYAxis?: boolean = false;\n    public generalize?: boolean = false;\n    public showReferenceValues: ReferenceValueOption[] = [];\n    public pointRadius = 0;\n    public lineWidth = 1;\n    public yAxisRange?: MinMaxRange;\n\n    constructor(\n        internalId: string,\n        color: string\n    ) {\n        this.internalId = internalId;\n        this.color = color;\n    }\n}\n\nexport class ReferenceValueOption {\n    public id: string;\n    public color: string;\n}\n\nexport interface MinMaxRange {\n    min: number;\n    max: number;\n}\n\nexport class TimedDatasetOptions extends DatasetOptions {\n    public timestamp: number;\n\n    constructor(\n        internalId: string,\n        color: string,\n        timestamp: number\n    ) {\n        super(internalId, color);\n        this.timestamp = timestamp;\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MinMaxRangeComponent.html":{"url":"components/MinMaxRangeComponent.html","title":"component - MinMaxRangeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MinMaxRangeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/modification/src/lib/min-max-range/min-max-range.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-min-max-range\n            \n\n            \n                styleUrls\n                min-max-range.component.css\n            \n\n\n\n            \n                templateUrl\n                ./min-max-range.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rangeMax\n                            \n                            \n                                    Public\n                                rangeMin\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                resetYaxisRange\n                            \n                            \n                                    Public\n                                setYaxisRange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                range\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onRangeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        range\n                    \n                    \n                            \n                            Type:    MinMaxRange\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/min-max-range/min-max-range.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onRangeChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/min-max-range/min-max-range.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/min-max-range/min-max-range.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resetYaxisRange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resetYaxisRange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/min-max-range/min-max-range.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setYaxisRange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setYaxisRange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/min-max-range/min-max-range.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rangeMax\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rangeMax:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/min-max-range/min-max-range.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rangeMin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rangeMin:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/modification/src/lib/min-max-range/min-max-range.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { MinMaxRange } from '@helgoland/core';\n\n@Component({\n  selector: 'n52-min-max-range',\n  templateUrl: './min-max-range.component.html',\n  styleUrls: ['./min-max-range.component.css']\n})\nexport class MinMaxRangeComponent implements OnChanges {\n\n  public rangeMin: number;\n  public rangeMax: number;\n\n  @Input()\n  public range: MinMaxRange;\n\n  @Output()\n  public onRangeChange: EventEmitter = new EventEmitter();\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (changes.range && this.range) {\n      this.rangeMin = this.range.min;\n      this.rangeMax = this.range.max;\n    }\n  }\n\n  public setYaxisRange() {\n    const min = (this.rangeMin === null || this.rangeMin === undefined) ? 0 : this.rangeMin;\n    const max = (this.rangeMax === null || this.rangeMax === undefined) ? 0 : this.rangeMax;\n    this.onRangeChange.emit({ min, max });\n  }\n\n  public resetYaxisRange() {\n    this.rangeMin = null;\n    this.rangeMax = null;\n    this.onRangeChange.emit();\n  }\n\n}\n\n    \n\n    \n        \n\nreset\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'reset'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MinMaxRangeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultiServiceFilterSelectorComponent.html":{"url":"components/MultiServiceFilterSelectorComponent.html","title":"component - MultiServiceFilterSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MultiServiceFilterSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts\n\n\n    \n        Description\n    \n    \n        Component to select an item out of a list of provider with a given filter combination.\n\n    \n\n    \n        Extends\n    \n    \n            LanguageChangNotifier\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-multi-service-filter-selector\n            \n\n\n\n\n            \n                templateUrl\n                ./multi-service-filter-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Public\n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorOnLoading\n                            \n                            \n                                    Protected\n                                languageChanged\n                            \n                            \n                                    Private\n                                loadItems\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                onSelectItem\n                            \n                            \n                                    Private\n                                setItems\n                            \n                            \n                                    Protected\n                                    \n                                languageChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                endpoint\n                            \n                            \n                                filterList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onItemSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiInterface: DatasetApiInterface, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiInterface\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        endpoint\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filterList\n                    \n                    \n                            \n                            Type:    FilteredProvider[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:25\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onItemSelected\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:28\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorOnLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        errorOnLoading()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:108\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            languageChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        languageChanged()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSelectItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onSelectItem(item: FilteredParameter)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    FilteredParameter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setItems(res: FilteredParameter[], prevfilter: ParameterFilter, url: string, service: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        res\n                                                        \n                                                                    FilteredParameter[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        prevfilter\n                                                        \n                                                                    ParameterFilter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        service\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            languageChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        languageChanged()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LanguageChangNotifier\n\n                                \n                            \n                        \n                            \n                                    Defined in LanguageChangNotifier:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     FilteredParameter[]\n\n                    \n                \n                    \n                        \n                            Type :     FilteredParameter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/multi-service-filter-selector/multi-service-filter-selector.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport {\n    DatasetApiInterface,\n    Filter,\n    FilteredProvider,\n    LanguageChangNotifier,\n    Parameter,\n    ParameterFilter,\n} from '@helgoland/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * Component to select an item out of a list of provider with a given filter combination.\n */\n@Component({\n    selector: 'n52-multi-service-filter-selector',\n    templateUrl: './multi-service-filter-selector.component.html'\n})\nexport class MultiServiceFilterSelectorComponent extends LanguageChangNotifier implements OnChanges {\n\n    @Input()\n    public endpoint: string;\n\n    @Input()\n    public filterList: FilteredProvider[];\n\n    @Output()\n    public onItemSelected: EventEmitter = new EventEmitter();\n\n    public loading = 0;\n    public items: FilteredParameter[];\n\n    constructor(\n        protected apiInterface: DatasetApiInterface,\n        protected translate: TranslateService\n    ) {\n        super(translate);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        this.loadItems();\n    }\n\n    public onSelectItem(item: FilteredParameter): void {\n        this.onItemSelected.emit(item);\n    }\n\n    protected languageChanged(): void {\n        this.loadItems();\n    }\n\n    private loadItems() {\n        this.items = [];\n        this.filterList.forEach((entry) => {\n            this.loading++;\n            const filter = entry.filter || {};\n            filter.service = entry.id;\n            switch (this.endpoint) {\n                case 'offering':\n                    this.apiInterface.getOfferings(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'phenomenon':\n                    this.apiInterface.getPhenomena(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'procedure':\n                    this.apiInterface.getProcedures(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'feature':\n                    this.apiInterface.getFeatures(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'category':\n                    this.apiInterface.getCategories(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'platform':\n                    this.apiInterface.getPlatforms(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                case 'dataset':\n                    this.apiInterface.getDatasets(entry.url, filter).subscribe(\n                        (res) => this.setItems(res, filter, entry.url, filter.service),\n                        (error) => this.errorOnLoading\n                    );\n                    break;\n                default:\n                    console.error('Wrong endpoint: ' + this.endpoint);\n                    this.loading--;\n            }\n        });\n    }\n\n    private errorOnLoading(): void {\n        this.loading--;\n    }\n\n    private setItems(res: FilteredParameter[], prevfilter: ParameterFilter, url: string, service: string): void {\n        this.loading--;\n        res.forEach((entry) => {\n            const filter: Filter = {\n                filter: prevfilter,\n                itemId: entry.id,\n                url,\n                service\n            };\n            const item = this.items.find((elem) => {\n                if (elem.label === entry.label) { return true; }\n            });\n            if (item) {\n                item.filterList.push(filter);\n            } else {\n                entry.filterList = [filter];\n                this.items.push(entry);\n            }\n        });\n    }\n\n}\n\nexport interface FilteredParameter extends Parameter {\n    filterList?: Filter[];\n}\n\n    \n\n    \n         0\">\n    \n    \n\n\n\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\">            '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MultiServiceFilterSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NominatimGeoSearchService.html":{"url":"injectables/NominatimGeoSearchService.html","title":"injectable - NominatimGeoSearchService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NominatimGeoSearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                serviceUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reverse\n                            \n                            \n                                    Public\n                                searchTerm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reverse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reverse(point: Point, options?: GeoReverseOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        point\n                                                        \n                                                                    Point\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    GeoReverseOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchTerm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        searchTerm(term: string, options?: GeoSearchOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    GeoSearchOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            serviceUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serviceUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://nominatim.openstreetmap.org/'\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts:50\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import 'rxjs/add/operator/map';\n\nimport { HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpService } from '@helgoland/core';\nimport { Point } from 'geojson';\nimport { Observable } from 'rxjs/Observable';\n\nimport { GeoReverseOptions, GeoReverseResult, GeoSearch, GeoSearchOptions, GeoSearchResult } from './geosearch';\n\ninterface NominatimSearchResult {\n    display_name: string;\n    geojson?: GeoJSON.GeoJsonObject;\n    lat: string;\n    lon: string;\n    boundingbox: number[];\n}\n\nexport interface Address {\n    address29: string;\n    house_number: string;\n    road: string;\n    neighbourhood: string;\n    suburb: string;\n    city_district: string;\n    city: string;\n    county: string;\n    state_district: string;\n    state: string;\n    postcode: string;\n    country: string;\n    country_code: string;\n}\n\nexport interface NominatimReverseResult {\n    place_id: string;\n    licence: string;\n    osm_type: string;\n    osm_id: string;\n    lat: string;\n    lon: string;\n    display_name: string;\n    address: Address;\n    boundingbox: string[];\n}\n\n@Injectable()\nexport class NominatimGeoSearchService implements GeoSearch {\n\n    protected serviceUrl = 'https://nominatim.openstreetmap.org/';\n\n    constructor(\n        protected http: HttpService\n    ) { }\n\n    public searchTerm(term: string, options?: GeoSearchOptions): Observable {\n        let params = new HttpParams();\n        params = params.set('limit', '1');\n        params = params.set('polygon_geojson', options.asPointGeometry ? '0' : '1');\n        params = params.set('q', term);\n        params = params.set('format', 'json');\n        if (options && options.countrycodes) { params = params.set('countrycodes', options.countrycodes.join(',')); }\n        return this.http.client().get(\n            this.serviceUrl + 'search',\n            { params }\n        ).map((resArray: NominatimSearchResult[]) => {\n            if (resArray.length === 1) {\n                const result = resArray[0];\n                const name = result.display_name;\n                let bounds: Array;\n                if (result.boundingbox) {\n                    bounds = [\n                        [\n                            result.boundingbox[0],\n                            result.boundingbox[2]\n                        ],\n                        [\n                            result.boundingbox[1],\n                            result.boundingbox[3]\n                        ]\n                    ];\n                } else {\n                    bounds = null;\n                }\n                let geometry;\n                if (result.geojson) {\n                    geometry = result.geojson;\n                } else {\n                    geometry = {\n                        type: 'Point',\n                        coordinates: [parseFloat(result.lon), parseFloat(result.lat)]\n                    };\n                }\n                return {\n                    name,\n                    geometry,\n                    bounds\n                };\n            }\n        });\n    }\n\n    public reverse(point: Point, options?: GeoReverseOptions): Observable {\n        let params = new HttpParams();\n        params = params.set('lat', point.coordinates[0].toString());\n        params = params.set('lon', point.coordinates[1].toString());\n        params = params.set('format', 'json');\n        return this.http.client().get(\n            this.serviceUrl + 'reverse',\n            { params }\n        ).map((res: NominatimReverseResult) => {\n            return {\n                lat: res.lat,\n                lon: res.lon,\n                displayName: res.display_name,\n                address: {\n                    city: res.address.city,\n                    cityDistrict: res.address.city_district,\n                    country: res.address.country,\n                    countryCode: res.address.country_code,\n                    county: res.address.county,\n                    houseNumber: res.address.house_number,\n                    neighbourhood: res.address.neighbourhood,\n                    postcode: res.address.postcode,\n                    road: res.address.road,\n                    state: res.address.state,\n                    stateDistrict: res.address.state_district,\n                    suburb: res.address.suburb\n                },\n                boundingbox: res.boundingbox\n            } as GeoReverseResult;\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NominatimReverseResult.html":{"url":"interfaces/NominatimReverseResult.html","title":"interface - NominatimReverseResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NominatimReverseResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        boundingbox\n                                \n                                \n                                        display_name\n                                \n                                \n                                        lat\n                                \n                                \n                                        licence\n                                \n                                \n                                        lon\n                                \n                                \n                                        osm_id\n                                \n                                \n                                        osm_type\n                                \n                                \n                                        place_id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        boundingbox\n                                    \n                                \n                                \n                                    \n                                        boundingbox:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display_name\n                                    \n                                \n                                \n                                    \n                                        display_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        licence\n                                    \n                                \n                                \n                                    \n                                        licence:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                    \n                                \n                                \n                                    \n                                        lon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        osm_id\n                                    \n                                \n                                \n                                    \n                                        osm_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        osm_type\n                                    \n                                \n                                \n                                    \n                                        osm_type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        place_id\n                                    \n                                \n                                \n                                    \n                                        place_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import 'rxjs/add/operator/map';\n\nimport { HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpService } from '@helgoland/core';\nimport { Point } from 'geojson';\nimport { Observable } from 'rxjs/Observable';\n\nimport { GeoReverseOptions, GeoReverseResult, GeoSearch, GeoSearchOptions, GeoSearchResult } from './geosearch';\n\ninterface NominatimSearchResult {\n    display_name: string;\n    geojson?: GeoJSON.GeoJsonObject;\n    lat: string;\n    lon: string;\n    boundingbox: number[];\n}\n\nexport interface Address {\n    address29: string;\n    house_number: string;\n    road: string;\n    neighbourhood: string;\n    suburb: string;\n    city_district: string;\n    city: string;\n    county: string;\n    state_district: string;\n    state: string;\n    postcode: string;\n    country: string;\n    country_code: string;\n}\n\nexport interface NominatimReverseResult {\n    place_id: string;\n    licence: string;\n    osm_type: string;\n    osm_id: string;\n    lat: string;\n    lon: string;\n    display_name: string;\n    address: Address;\n    boundingbox: string[];\n}\n\n@Injectable()\nexport class NominatimGeoSearchService implements GeoSearch {\n\n    protected serviceUrl = 'https://nominatim.openstreetmap.org/';\n\n    constructor(\n        protected http: HttpService\n    ) { }\n\n    public searchTerm(term: string, options?: GeoSearchOptions): Observable {\n        let params = new HttpParams();\n        params = params.set('limit', '1');\n        params = params.set('polygon_geojson', options.asPointGeometry ? '0' : '1');\n        params = params.set('q', term);\n        params = params.set('format', 'json');\n        if (options && options.countrycodes) { params = params.set('countrycodes', options.countrycodes.join(',')); }\n        return this.http.client().get(\n            this.serviceUrl + 'search',\n            { params }\n        ).map((resArray: NominatimSearchResult[]) => {\n            if (resArray.length === 1) {\n                const result = resArray[0];\n                const name = result.display_name;\n                let bounds: Array;\n                if (result.boundingbox) {\n                    bounds = [\n                        [\n                            result.boundingbox[0],\n                            result.boundingbox[2]\n                        ],\n                        [\n                            result.boundingbox[1],\n                            result.boundingbox[3]\n                        ]\n                    ];\n                } else {\n                    bounds = null;\n                }\n                let geometry;\n                if (result.geojson) {\n                    geometry = result.geojson;\n                } else {\n                    geometry = {\n                        type: 'Point',\n                        coordinates: [parseFloat(result.lon), parseFloat(result.lat)]\n                    };\n                }\n                return {\n                    name,\n                    geometry,\n                    bounds\n                };\n            }\n        });\n    }\n\n    public reverse(point: Point, options?: GeoReverseOptions): Observable {\n        let params = new HttpParams();\n        params = params.set('lat', point.coordinates[0].toString());\n        params = params.set('lon', point.coordinates[1].toString());\n        params = params.set('format', 'json');\n        return this.http.client().get(\n            this.serviceUrl + 'reverse',\n            { params }\n        ).map((res: NominatimReverseResult) => {\n            return {\n                lat: res.lat,\n                lon: res.lon,\n                displayName: res.display_name,\n                address: {\n                    city: res.address.city,\n                    cityDistrict: res.address.city_district,\n                    country: res.address.country,\n                    countryCode: res.address.country_code,\n                    county: res.address.county,\n                    houseNumber: res.address.house_number,\n                    neighbourhood: res.address.neighbourhood,\n                    postcode: res.address.postcode,\n                    road: res.address.road,\n                    state: res.address.state,\n                    stateDistrict: res.address.state_district,\n                    suburb: res.address.suburb\n                },\n                boundingbox: res.boundingbox\n            } as GeoReverseResult;\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NominatimSearchResult.html":{"url":"interfaces/NominatimSearchResult.html","title":"interface - NominatimSearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NominatimSearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/base/geosearch/nominatim.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        boundingbox\n                                \n                                \n                                        display_name\n                                \n                                \n                                            Optional\n                                        geojson\n                                \n                                \n                                        lat\n                                \n                                \n                                        lon\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        boundingbox\n                                    \n                                \n                                \n                                    \n                                        boundingbox:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display_name\n                                    \n                                \n                                \n                                    \n                                        display_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geojson\n                                    \n                                \n                                \n                                    \n                                        geojson:     GeoJSON.GeoJsonObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GeoJSON.GeoJsonObject\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                    \n                                \n                                \n                                    \n                                        lon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import 'rxjs/add/operator/map';\n\nimport { HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpService } from '@helgoland/core';\nimport { Point } from 'geojson';\nimport { Observable } from 'rxjs/Observable';\n\nimport { GeoReverseOptions, GeoReverseResult, GeoSearch, GeoSearchOptions, GeoSearchResult } from './geosearch';\n\ninterface NominatimSearchResult {\n    display_name: string;\n    geojson?: GeoJSON.GeoJsonObject;\n    lat: string;\n    lon: string;\n    boundingbox: number[];\n}\n\nexport interface Address {\n    address29: string;\n    house_number: string;\n    road: string;\n    neighbourhood: string;\n    suburb: string;\n    city_district: string;\n    city: string;\n    county: string;\n    state_district: string;\n    state: string;\n    postcode: string;\n    country: string;\n    country_code: string;\n}\n\nexport interface NominatimReverseResult {\n    place_id: string;\n    licence: string;\n    osm_type: string;\n    osm_id: string;\n    lat: string;\n    lon: string;\n    display_name: string;\n    address: Address;\n    boundingbox: string[];\n}\n\n@Injectable()\nexport class NominatimGeoSearchService implements GeoSearch {\n\n    protected serviceUrl = 'https://nominatim.openstreetmap.org/';\n\n    constructor(\n        protected http: HttpService\n    ) { }\n\n    public searchTerm(term: string, options?: GeoSearchOptions): Observable {\n        let params = new HttpParams();\n        params = params.set('limit', '1');\n        params = params.set('polygon_geojson', options.asPointGeometry ? '0' : '1');\n        params = params.set('q', term);\n        params = params.set('format', 'json');\n        if (options && options.countrycodes) { params = params.set('countrycodes', options.countrycodes.join(',')); }\n        return this.http.client().get(\n            this.serviceUrl + 'search',\n            { params }\n        ).map((resArray: NominatimSearchResult[]) => {\n            if (resArray.length === 1) {\n                const result = resArray[0];\n                const name = result.display_name;\n                let bounds: Array;\n                if (result.boundingbox) {\n                    bounds = [\n                        [\n                            result.boundingbox[0],\n                            result.boundingbox[2]\n                        ],\n                        [\n                            result.boundingbox[1],\n                            result.boundingbox[3]\n                        ]\n                    ];\n                } else {\n                    bounds = null;\n                }\n                let geometry;\n                if (result.geojson) {\n                    geometry = result.geojson;\n                } else {\n                    geometry = {\n                        type: 'Point',\n                        coordinates: [parseFloat(result.lon), parseFloat(result.lat)]\n                    };\n                }\n                return {\n                    name,\n                    geometry,\n                    bounds\n                };\n            }\n        });\n    }\n\n    public reverse(point: Point, options?: GeoReverseOptions): Observable {\n        let params = new HttpParams();\n        params = params.set('lat', point.coordinates[0].toString());\n        params = params.set('lon', point.coordinates[1].toString());\n        params = params.set('format', 'json');\n        return this.http.client().get(\n            this.serviceUrl + 'reverse',\n            { params }\n        ).map((res: NominatimReverseResult) => {\n            return {\n                lat: res.lat,\n                lon: res.lon,\n                displayName: res.display_name,\n                address: {\n                    city: res.address.city,\n                    cityDistrict: res.address.city_district,\n                    country: res.address.country,\n                    countryCode: res.address.country_code,\n                    county: res.address.county,\n                    houseNumber: res.address.house_number,\n                    neighbourhood: res.address.neighbourhood,\n                    postcode: res.address.postcode,\n                    road: res.address.road,\n                    state: res.address.state,\n                    stateDistrict: res.address.state_district,\n                    suburb: res.address.suburb\n                },\n                boundingbox: res.boundingbox\n            } as GeoReverseResult;\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotifierService.html":{"url":"injectables/NotifierService.html","title":"injectable - NotifierService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NotifierService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/notifier/notifier.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                notifierTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/notifier/notifier.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notify\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        notify(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/notifier/notifier.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            notifierTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifierTimeout:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/notifier/notifier.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nconst ID = 'helgoland-notifier';\nconst TIME_IN_MS = 3000;\n\n@Injectable()\nexport class NotifierService {\n\n  private notifierTimeout: any;\n\n  constructor() {\n    const notifierElement = document.getElementById(ID);\n    if (!notifierElement) {\n      const node = document.createElement('div');\n      node.id = ID;\n      node.className = 'hide';\n      const textNode = document.createTextNode('');\n      node.appendChild(textNode);\n      document.body.appendChild(node);\n    }\n  }\n\n  public notify(text: string) {\n    clearTimeout(this.notifierTimeout);\n    const notifierElement = document.getElementById(ID);\n    notifierElement.innerHTML = text;\n    notifierElement.className = notifierElement.className.replace('hide', 'show');\n    this.notifierTimeout = setTimeout(() => {\n      notifierElement.className = notifierElement.className.replace('show', 'hide');\n    }, TIME_IN_MS);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Offering.html":{"url":"interfaces/Offering.html","title":"interface - Offering","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Offering\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/offering.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\n\nexport interface Offering extends Parameter {\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OnGoingHttpCache.html":{"url":"classes/OnGoingHttpCache.html","title":"class - OnGoingHttpCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  OnGoingHttpCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/caching/src/lib/model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                clear\n                            \n                            \n                                    Public\n                                    \n                                has\n                            \n                            \n                                    Public\n                                    \n                                observe\n                            \n                            \n                                    Public\n                                    \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clear(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/model.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            has\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        has(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/model.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            observe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        observe(req: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/model.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(req: HttpRequest, request: Observable>)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/caching/src/lib/model.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        request\n                                                        \n                                                                    Observable>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpEvent, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\nexport abstract class HttpCache {\n    /**\n     * Returns a cached response, if any, or null if not present.\n     */\n    public abstract get(req: HttpRequest): HttpResponse | null;\n\n    /**\n     * Adds or updates the response in the cache.\n     */\n    public abstract put(req: HttpRequest, expirationTime: number | Date, resp: HttpResponse): void;\n}\n\nexport abstract class OnGoingHttpCache {\n\n    public abstract has(req: HttpRequest): boolean;\n    public abstract set(req: HttpRequest, request: Observable>): void;\n    public abstract observe(req: HttpRequest): Observable>;\n    public abstract clear(req: HttpRequest): void;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Parameter.html":{"url":"interfaces/Parameter.html","title":"interface - Parameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Parameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/parameter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Identifiable\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Identifiable } from './identifiable';\n\nexport interface Parameter extends Identifiable {\n    id: string;\n    label: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterConstellation.html":{"url":"classes/ParameterConstellation.html","title":"class - ParameterConstellation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterConstellation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                category\n                            \n                            \n                                    Public\n                                feature\n                            \n                            \n                                    Public\n                                offering\n                            \n                            \n                                    Public\n                                phenomenon\n                            \n                            \n                                    Public\n                                procedure\n                            \n                            \n                                    Public\n                                service\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            category\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        category:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            feature\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        feature:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offering\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        offering:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            phenomenon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        phenomenon:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            procedure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        procedure:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     Parameter\n\n                    \n                \n                    \n                        \n                            Type :     Parameter\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParameterFilter.html":{"url":"interfaces/ParameterFilter.html","title":"interface - ParameterFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParameterFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/http-requests.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        expanded\n                                \n                                \n                                            Optional\n                                        lang\n                                \n                                \n                                            Optional\n                                        phenomenon\n                                \n                                \n                                            Optional\n                                        platformTypes\n                                \n                                \n                                            Optional\n                                        service\n                                \n                                \n                                            Optional\n                                        valueTypes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/model/internal/http-requests.ts:7\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                    \n                                \n                                \n                                    \n                                        expanded:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                    \n                                \n                                \n                                    \n                                        lang:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phenomenon\n                                    \n                                \n                                \n                                    \n                                        phenomenon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformTypes\n                                    \n                                \n                                \n                                    \n                                        platformTypes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service\n                                    \n                                \n                                \n                                    \n                                        service:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueTypes\n                                    \n                                \n                                \n                                    \n                                        valueTypes:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ParameterFilter {\n    service?: string;\n    phenomenon?: string;\n    valueTypes?: string;\n    platformTypes?: string;\n    expanded?: boolean;\n    lang?: string;\n    [key: string]: any;\n}\n\nexport interface DataParameterFilter extends ParameterFilter {\n    format?: string;\n    timespan?: string;\n    generalize?: boolean;\n}\n\nexport interface HttpRequestOptions {\n    forceUpdate?: boolean;\n    basicAuthToken?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParsedTimespanPreset.html":{"url":"interfaces/ParsedTimespanPreset.html","title":"interface - ParsedTimespanPreset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParsedTimespanPreset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/settings/settings.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        seperatorAfterThisItem\n                                \n                                \n                                        timespan\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seperatorAfterThisItem\n                                    \n                                \n                                \n                                    \n                                        seperatorAfterThisItem:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timespan\n                                    \n                                \n                                \n                                    \n                                        timespan:     Timespan\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timespan\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timespan } from './../internal/timeInterval';\n\nexport interface Settings {\n    datasetApis?: DatasetApi[];\n    providerBlackList?: BlacklistedService[];\n    solveLabels?: boolean;\n    proxyUrl?: string;\n    timespanPresets?: TimespanPreset[];\n    colorList?: string[];\n    languages?: [{ label: string, code: string }];\n    refreshDataInterval?: number;\n}\n\nexport interface DatasetApi {\n    name: string;\n    url: string;\n}\n\nexport interface BlacklistedService {\n    serviceId: string;\n    apiUrl: string;\n}\n\nexport interface TimespanPreset {\n    name: string;\n    label: string;\n    timespan: TimespanMomentTemplate;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface ParsedTimespanPreset {\n    name: string;\n    label: string;\n    timespan: Timespan;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface TimespanMomentTemplate {\n    to: string;\n    from: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PermalinkInMailComponent.html":{"url":"components/PermalinkInMailComponent.html","title":"component - PermalinkInMailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PermalinkInMailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/permalink/src/lib/permalink-in-mail/permalink-in-mail.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-permalink-in-mail\n            \n\n\n\n\n            \n                templateUrl\n                ./permalink-in-mail.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                openInMail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTriggered\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/permalink-in-mail/permalink-in-mail.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTriggered\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/permalink-in-mail/permalink-in-mail.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openInMail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        openInMail()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/permalink-in-mail/permalink-in-mail.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'n52-permalink-in-mail',\n  templateUrl: './permalink-in-mail.component.html'\n})\nexport class PermalinkInMailComponent {\n\n  @Input()\n  public url: string;\n\n  @Output()\n  public onTriggered: EventEmitter = new EventEmitter();\n\n  public openInMail() {\n    window.location.href = 'mailto:?body=' + encodeURIComponent(this.url);\n    this.onTriggered.emit();\n  }\n\n}\n\n    \n\n    \n        open in mail\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'open in mail'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PermalinkInMailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PermalinkNewWindowComponent.html":{"url":"components/PermalinkNewWindowComponent.html","title":"component - PermalinkNewWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PermalinkNewWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/permalink/src/lib/permalink-new-window/permalink-new-window.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-permalink-new-window\n            \n\n\n\n\n            \n                templateUrl\n                ./permalink-new-window.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                openInNewWindow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTriggered\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/permalink-new-window/permalink-new-window.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTriggered\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/permalink-new-window/permalink-new-window.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openInNewWindow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        openInNewWindow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/permalink-new-window/permalink-new-window.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'n52-permalink-new-window',\n  templateUrl: './permalink-new-window.component.html'\n})\nexport class PermalinkNewWindowComponent {\n\n  @Input()\n  public url: string;\n\n  @Output()\n  public onTriggered: EventEmitter = new EventEmitter();\n\n  public openInNewWindow() {\n    window.open(this.url, '_blank');\n    this.onTriggered.emit();\n  }\n\n}\n\n    \n\n    \n        open in new window\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'open in new window'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PermalinkNewWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PermalinkService.html":{"url":"classes/PermalinkService.html","title":"class - PermalinkService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PermalinkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/permalink/src/lib/services/permalink.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createPermalink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createBaseUrl\n                            \n                            \n                                    Protected\n                                    \n                                generatePermalink\n                            \n                            \n                                    Public\n                                    \n                                validatePeramlink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createPermalink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createPermalink:     \n\n                    \n                \n                    \n                        \n                            Default value : () => {\n    return this.generatePermalink();\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/services/permalink.service.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createBaseUrl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/services/permalink.service.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            generatePermalink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generatePermalink()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/services/permalink.service.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                \n                            validatePeramlink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        validatePeramlink()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/services/permalink.service.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     T\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class PermalinkService {\n\n  public createPermalink = () => {\n    return this.generatePermalink();\n  }\n\n  public abstract validatePeramlink(): T;\n\n  protected abstract generatePermalink(): string;\n\n  protected createBaseUrl() {\n    const url = window.location.href;\n    if (url.indexOf('?') !== -1) {\n      return url.substring(0, url.indexOf('?'));\n    } else {\n      return url;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PermalinkToClipboardComponent.html":{"url":"components/PermalinkToClipboardComponent.html","title":"component - PermalinkToClipboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PermalinkToClipboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/permalink/src/lib/permalink-to-clipboard/permalink-to-clipboard.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-permalink-to-clipboard\n            \n\n\n\n\n            \n                templateUrl\n                ./permalink-to-clipboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTriggered\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/permalink-to-clipboard/permalink-to-clipboard.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTriggered\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/permalink/src/lib/permalink-to-clipboard/permalink-to-clipboard.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'n52-permalink-to-clipboard',\n  templateUrl: './permalink-to-clipboard.component.html'\n})\nexport class PermalinkToClipboardComponent {\n\n  @Input()\n  public url: string;\n\n  @Output()\n  public onTriggered: EventEmitter = new EventEmitter();\n\n}\n\n    \n\n    \n        copy to clipboard\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'copy to clipboard'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PermalinkToClipboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Phenomenon.html":{"url":"interfaces/Phenomenon.html","title":"interface - Phenomenon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Phenomenon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/phenomenon.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\n\nexport interface Phenomenon extends Parameter {\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Platform.html":{"url":"interfaces/Platform.html","title":"interface - Platform","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Platform\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/platform.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        datasets\n                                \n                                \n                                        geometry\n                                \n                                \n                                        platformType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datasets\n                                    \n                                \n                                \n                                    \n                                        datasets:     IDataset[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IDataset[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     GeoJSON.Point\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GeoJSON.Point\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformType\n                                    \n                                \n                                \n                                    \n                                        platformType:     PlatformTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlatformTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDataset } from './dataset';\nimport { PlatformTypes } from './enums';\nimport { Parameter } from './parameter';\n\nexport interface Platform extends Parameter {\n    platformType: PlatformTypes;\n    datasets: IDataset[];\n    geometry: GeoJSON.Point;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlatformMapSelectorComponent.html":{"url":"components/PlatformMapSelectorComponent.html","title":"component - PlatformMapSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlatformMapSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/map/src/lib/selector/platform-map-selector/platform-map-selector.component.ts\n\n\n\n    \n        Extends\n    \n    \n            MapSelectorComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-platform-map-selector\n            \n\n            \n                styleUrls\n                .map-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ../map-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                markerFeatureGroup\n                            \n                            \n                                    Public\n                                isContentLoading\n                            \n                            \n                                    Public\n                                noResultsFound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                drawGeometries\n                            \n                            \n                                    Protected\n                                    \n                                drawGeometries\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                zoomToMarkerBounds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cluster\n                            \n                            \n                                avoidZoomToSelection\n                            \n                            \n                                filter\n                            \n                            \n                                serviceUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onContentLoading\n                            \n                            \n                                onSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiInterface: DatasetApiInterface, mapCache: MapCache, cd: ChangeDetectorRef, differs: KeyValueDiffers)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/selector/platform-map-selector/platform-map-selector.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiInterface\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapCache\n                                                  \n                                                        \n                                                                    MapCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        differs\n                                                  \n                                                        \n                                                                    KeyValueDiffers\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cluster\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/platform-map-selector/platform-map-selector.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        avoidZoomToSelection\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                    \n                            \n                            Type:    ParameterFilter\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serviceUrl\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onContentLoading\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onSelected\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            drawGeometries\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        drawGeometries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/platform-map-selector/platform-map-selector.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            drawGeometries\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        drawGeometries()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:82\n                            \n                        \n\n\n                \n                    \n                            Draws the geometries\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            zoomToMarkerBounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        zoomToMarkerBounds(bounds: L.LatLngBoundsExpression)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:91\n                            \n                        \n\n\n                \n                    \n                            Zooms to the given bounds\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        bounds\n                                                        \n                                                                    L.LatLngBoundsExpression\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                where to zoom\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            markerFeatureGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markerFeatureGroup:     L.FeatureGroup\n\n                    \n                \n                    \n                        \n                            Type :     L.FeatureGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/platform-map-selector/platform-map-selector.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isContentLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isContentLoading:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noResultsFound\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noResultsFound:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import 'leaflet.markercluster';\n\nimport { AfterViewInit, ChangeDetectorRef, Component, Input, KeyValueDiffers, OnChanges } from '@angular/core';\nimport { DatasetApiInterface, HasLoadableContent, Mixin, Platform } from '@helgoland/core';\nimport * as L from 'leaflet';\n\nimport { MapCache } from '../../base/map-cache.service';\nimport { MapSelectorComponent } from '../map-selector.component';\n\n@Component({\n    selector: 'n52-platform-map-selector',\n    templateUrl: '../map-selector.component.html',\n    styleUrls: ['../map-selector.component.scss']\n})\n@Mixin([HasLoadableContent])\nexport class PlatformMapSelectorComponent extends MapSelectorComponent implements OnChanges, AfterViewInit {\n\n    @Input()\n    public cluster: boolean;\n\n    private markerFeatureGroup: L.FeatureGroup;\n\n    constructor(\n        protected apiInterface: DatasetApiInterface,\n        protected mapCache: MapCache,\n        protected cd: ChangeDetectorRef,\n        protected differs: KeyValueDiffers\n    ) {\n        super(mapCache, differs, cd);\n    }\n\n    protected drawGeometries() {\n        this.noResultsFound = false;\n        this.isContentLoading(true);\n        if (this.markerFeatureGroup) { this.map.removeLayer(this.markerFeatureGroup); }\n        this.apiInterface.getPlatforms(this.serviceUrl, this.filter)\n            .subscribe((res) => {\n                if (this.cluster) {\n                    this.markerFeatureGroup = L.markerClusterGroup({ animate: true });\n                } else {\n                    this.markerFeatureGroup = L.featureGroup();\n                }\n                if (res instanceof Array && res.length > 0) {\n                    res.forEach((entry) => {\n                        const marker = L.marker([entry.geometry.coordinates[1], entry.geometry.coordinates[0]]);\n                        marker.on('click', () => {\n                            this.onSelected.emit(entry);\n                        });\n                        this.markerFeatureGroup.addLayer(marker);\n                    });\n                    this.markerFeatureGroup.addTo(this.map);\n                    this.zoomToMarkerBounds(this.markerFeatureGroup.getBounds());\n                } else {\n                    this.noResultsFound = true;\n                }\n                this.map.invalidateSize();\n                this.isContentLoading(false);\n            });\n    }\n}\n\n    \n\n    \n        \n  \n  \n    No results found\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        No results found  '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlatformMapSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlatformParameter.html":{"url":"interfaces/PlatformParameter.html","title":"interface - PlatformParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlatformParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        platformType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        platformType\n                                    \n                                \n                                \n                                    \n                                        platformType:     PlatformTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlatformTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Plot.html":{"url":"interfaces/Plot.html","title":"interface - Plot","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Plot\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/flot/src/lib/model/plot.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getData\n                                \n                                \n                                    setSelection\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/model/plot.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     DataSeries[]\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSelection(range: any, show: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/flot/src/lib/model/plot.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        range\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        show\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { DataSeries } from './dataSeries';\n\nexport interface Plot extends jquery.flot.plot {\n    setSelection(range: any, show: boolean): void;\n    getData(): DataSeries[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlotOptions.html":{"url":"interfaces/PlotOptions.html","title":"interface - PlotOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlotOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/flot/src/lib/model/plotOptions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        annotation\n                                \n                                \n                                            Optional\n                                        crosshair\n                                \n                                \n                                            Optional\n                                        generalizeAllways\n                                \n                                \n                                            Optional\n                                        pan\n                                \n                                \n                                            Optional\n                                        selection\n                                \n                                \n                                            Optional\n                                        showReferenceValues\n                                \n                                \n                                            Optional\n                                        touch\n                                \n                                \n                                            Optional\n                                        xaxis\n                                \n                                \n                                            Optional\n                                        yaxes\n                                \n                                \n                                            Optional\n                                        yaxis\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        annotation\n                                    \n                                \n                                \n                                    \n                                        annotation:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crosshair\n                                    \n                                \n                                \n                                    \n                                        crosshair:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        generalizeAllways\n                                    \n                                \n                                \n                                    \n                                        generalizeAllways:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pan\n                                    \n                                \n                                \n                                    \n                                        pan:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selection\n                                    \n                                \n                                \n                                    \n                                        selection:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showReferenceValues\n                                    \n                                \n                                \n                                    \n                                        showReferenceValues:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touch\n                                    \n                                \n                                \n                                    \n                                        touch:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xaxis\n                                    \n                                \n                                \n                                    \n                                        xaxis:     AxesOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AxesOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yaxes\n                                    \n                                \n                                \n                                    \n                                        yaxes:     AxesOptions[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AxesOptions[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yaxis\n                                    \n                                \n                                \n                                    \n                                        yaxis:     AxesOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AxesOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AxesOptions } from './axesOptions';\n\nexport interface PlotOptions extends jquery.flot.plotOptions {\n    showReferenceValues?: boolean;\n    generalizeAllways?: boolean;\n    yaxes?: AxesOptions[];\n    xaxis?: AxesOptions;\n    yaxis?: AxesOptions;\n    // selectedTimespan?: Timespan;\n    selection?: {\n        mode?: string;\n        color?: string;\n        shape?: string;\n        minSize?: 30;\n        range?: {\n            from: number;\n            to: number;\n        }\n    };\n    annotation?: string;\n    touch?: {\n        pan?: string;\n        scale?: string;\n        delayTouchEnded?: number;\n    };\n    crosshair?: {\n        mode?: string\n    };\n    pan?: {\n        frameRate: number,\n        interactive: boolean\n    };\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PredefinedTimespanSelectorComponent.html":{"url":"components/PredefinedTimespanSelectorComponent.html","title":"component - PredefinedTimespanSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PredefinedTimespanSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-predefined-timespan-selector\n            \n\n            \n                styleUrls\n                predefined-timespan-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./predefined-timespan-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                parsedTimespanPresets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isSafeMomentExpression\n                            \n                            \n                                    Public\n                                isSafeTimespanPreset\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                parseMomentExpression\n                            \n                            \n                                    Public\n                                timespanChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                timespan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTimespanChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(settingSrvc: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settingSrvc\n                                                  \n                                                        \n                                                                    SettingsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        timespan\n                    \n                    \n                            \n                            Type:    Timespan\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTimespanChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isSafeMomentExpression\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isSafeMomentExpression(expression: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expression\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isSafeTimespanPreset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isSafeTimespanPreset(preset: TimespanPreset)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        preset\n                                                        \n                                                                    TimespanPreset\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parseMomentExpression\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseMomentExpression(expression: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expression\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Date\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timespanChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        timespanChanged(preset: TimespanPreset)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        preset\n                                                        \n                                                                    TimespanPreset\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parsedTimespanPresets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parsedTimespanPresets:     ParsedTimespanPreset[]\n\n                    \n                \n                    \n                        \n                            Type :     ParsedTimespanPreset[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/predefined-timespan-selector/predefined-timespan-selector.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ParsedTimespanPreset, Settings, SettingsService, Timespan, TimespanPreset } from '@helgoland/core';\n\n@Component({\n  selector: 'n52-predefined-timespan-selector',\n  templateUrl: './predefined-timespan-selector.component.html',\n  styleUrls: ['./predefined-timespan-selector.component.scss']\n})\n\nexport class PredefinedTimespanSelectorComponent implements OnInit {\n\n  @Input()\n  public timespan: Timespan;\n\n  @Output()\n  public onTimespanChange: EventEmitter = new EventEmitter();\n\n  public parsedTimespanPresets: ParsedTimespanPreset[];\n\n  constructor(\n    protected settingSrvc: SettingsService\n  ) { }\n\n  public ngOnInit() {\n    const timespanPresets = this.settingSrvc.getSettings().timespanPresets;\n    if (timespanPresets) {\n      this.parsedTimespanPresets = timespanPresets\n        .filter((e) => this.isSafeTimespanPreset(e))\n        .map((e) => ({\n          name: e.name,\n          label: e.label,\n          timespan: {\n            from: this.parseMomentExpression(e.timespan.from).getTime(),\n            to: this.parseMomentExpression(e.timespan.to).getTime()\n          },\n          seperatorAfterThisItem: e.seperatorAfterThisItem\n        }));\n    }\n  }\n\n  public isSafeMomentExpression(expression: string): boolean {\n    // tslint:disable:max-line-length\n    // regex checks whether code to be eval'ed adhers to syntax given in https://momentjs.com/docs/#/manipulating/\n    // explanation:               Start with \"moment()\"   Possible functions: add(number, string) and subtract(number, string)                            Further possible functions: startOf(string) and endOf(string)                           Further possible functions: year(number), ..., milliseconds(number).                         functions can be chained infinitely, or not at all\n    // further explanation:       This is a MUST.         The strings have to be out of the options described in the docs (shortcuts permitted)           Again, the strings have to be out of a strict set.                                      These set the corresponding part of the Moment object to the number given.                   |  (i.e. \"moment()\" is the minimal case matched)\n    // even further explanation:                          The number doesn't HAVE to be reasonable (e.g. month=20 is ok), but that's no security issue.   The quotes can incorrectly start with ' and then end with \" (or vice versa), but that's no security problem either.                                                                  v v optional semicolon at the end\n    const safeMomentExpression = new RegExp(/^moment\\(\\)(\\.(((add|subtract)\\(\\d+, ?['\"](years|y|quarters|Q|months|M|weeks|w|days|d|hours|h|minutes|m|seconds|s|milliseconds|ms)['\"]\\))|((startOf|endOf)\\(['\"](year|month|quarter|week|isoWeek|day|date|hour|minute|second)['\"]\\))|((year|month|date|hours|minutes|seconds|milliseconds)\\(\\d+\\))))*;?$/);\n    // brackets level in case you get lost:          * *1  234            4 *          4                                                                                      4     *3 34             4 *    4                                                           4     *3 34                                                  4 *    *321\n    // * = this bracket is an escaped bracket and therefore not counted\n\n    // test expression against regex above\n    return safeMomentExpression.test(expression);\n  }\n\n  public isSafeTimespanPreset(preset: TimespanPreset): boolean {\n    // test both inputs against the regex\n    const isSafe = this.isSafeMomentExpression(preset.timespan.from) && this.isSafeMomentExpression(preset.timespan.to);\n\n    if (isSafe) {\n      return true;\n    } else {\n      console.log('Timespan preset \"' + preset.name + '\" has invalid moment() expression!');\n      return false;\n    }\n  }\n\n  public parseMomentExpression(expression: string): Date {\n    // just to be sure not to eval() something nasty\n    if (this.isSafeMomentExpression(expression)) {\n      // if satisfied, eval the inputs -> the ._d property contains the corresponding Date objects from which the Timespan can be constructed\n      // tslint:disable-next-line:no-eval\n      return eval(expression)._d;\n    } else {\n      return null;\n    }\n  }\n\n  public timespanChanged(preset: TimespanPreset) {\n    // construct new Timespan\n    this.timespan = new Timespan(parseInt(preset.timespan.from, 10), parseInt(preset.timespan.to, 10));\n    // publicise new timespan\n    this.onTimespanChange.emit(this.timespan);\n  }\n}\n\n    \n\n    \n        \n  \n    {{item.label}}\n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{item.label}}    '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PredefinedTimespanSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PresenterHighlight.html":{"url":"interfaces/PresenterHighlight.html","title":"interface - PresenterHighlight","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PresenterHighlight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/presenting/presenter-highlight.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dataIndex\n                                \n                                \n                                        internalId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dataIndex\n                                    \n                                \n                                \n                                    \n                                        dataIndex:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        internalId\n                                    \n                                \n                                \n                                    \n                                        internalId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PresenterHighlight {\n    internalId: string;\n    dataIndex: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PresenterMessage.html":{"url":"interfaces/PresenterMessage.html","title":"interface - PresenterMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PresenterMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/presenting/presenter-message.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     PresenterMessageType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PresenterMessageType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PresenterMessageType } from './presenter-message-type';\n\nexport interface PresenterMessage {\n    type: PresenterMessageType;\n    message: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Procedure.html":{"url":"interfaces/Procedure.html","title":"interface - Procedure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Procedure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/procedure.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\n\nexport interface Procedure extends Parameter {\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileDataEntry.html":{"url":"interfaces/ProfileDataEntry.html","title":"interface - ProfileDataEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProfileDataEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/data.ts\n        \n\n\n            \n                Extends\n            \n            \n                    IDataEntry\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        timestamp\n                                \n                                \n                                        value\n                                \n                                \n                                        verticalUnit\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verticalUnit\n                                    \n                                \n                                \n                                    \n                                        verticalUnit:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IDataEntry { }\n\nexport interface Data {\n    values: T[];\n    referenceValues: ReferenceValues;\n}\n\nexport class ReferenceValues {\n    [key: string]: T[];\n}\n\nexport interface TimeValueEntry extends IDataEntry {\n    timestamp: number;\n    value: number;\n}\n\nexport interface LocatedTimeValueEntry extends TimeValueEntry {\n    geometry: GeoJSON.Point;\n}\n\nexport interface ProfileDataEntry extends IDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n}\n\nexport interface LocatedProfileDataEntry extends ProfileDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n    geometry: GeoJSON.GeoJsonObject;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileEntryComponent.html":{"url":"components/ProfileEntryComponent.html","title":"component - ProfileEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ListEntryComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-profile-entry\n            \n\n            \n                styleUrls\n                profile-entry.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile-entry.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dataset\n                            \n                            \n                                    Public\n                                editableOptions\n                            \n                            \n                                    Public\n                                tempColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editDatasetOptions\n                            \n                            \n                                    Public\n                                isMobile\n                            \n                            \n                                    Protected\n                                loadDataset\n                            \n                            \n                                    Public\n                                openInCombiView\n                            \n                            \n                                    Public\n                                removeDatasetOptions\n                            \n                            \n                                    Public\n                                showGeometry\n                            \n                            \n                                    Public\n                                toggleVisibility\n                            \n                            \n                                    Protected\n                                    \n                                loadDataset\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                removeDataset\n                            \n                            \n                                    Public\n                                toggleSelection\n                            \n                            \n                                    Public\n                                toggleUomSelection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                datasetOptions\n                            \n                            \n                                datasetId\n                            \n                            \n                                highlight\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteDatasetOptions\n                            \n                            \n                                onEditOptions\n                            \n                            \n                                onOpenInCombiView\n                            \n                            \n                                onShowGeometry\n                            \n                            \n                                onUpdateOptions\n                            \n                            \n                                onDeleteDataset\n                            \n                            \n                                onSelectDataset\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: DatasetApiInterface, internalIdHandler: InternalIdHandler)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        internalIdHandler\n                                                  \n                                                        \n                                                                    InternalIdHandler\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        datasetOptions\n                    \n                    \n                            \n                            Type:    TimedDatasetOptions[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        datasetId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:7\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        highlight\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onDeleteDatasetOptions\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onEditOptions\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onOpenInCombiView\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onShowGeometry\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onUpdateOptions\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onDeleteDataset\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onSelectDataset\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editDatasetOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        editDatasetOptions(options: TimedDatasetOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    TimedDatasetOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isMobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isMobile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            loadDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadDataset(id: string, url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openInCombiView\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        openInCombiView(option: TimedDatasetOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        option\n                                                        \n                                                                    TimedDatasetOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeDatasetOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeDatasetOptions(options: TimedDatasetOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    TimedDatasetOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showGeometry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showGeometry(option: TimedDatasetOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        option\n                                                        \n                                                                    TimedDatasetOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleVisibility\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleVisibility(options: TimedDatasetOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    TimedDatasetOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            loadDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadDataset(id: string, url: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeDataset()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleSelection()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleUomSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleUomSelection(id: , selected: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        selected\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataset:     Dataset\n\n                    \n                \n                    \n                        \n                            Type :     Dataset\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editableOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editableOptions:     TimedDatasetOptions\n\n                    \n                \n                    \n                        \n                            Type :     TimedDatasetOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempColor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/profile-entry/profile-entry.component.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n    DatasetApiInterface,\n    Dataset,\n    InternalIdHandler,\n    LocatedProfileDataEntry,\n    PlatformTypes,\n    TimedDatasetOptions,\n    Timespan,\n} from '@helgoland/core';\n\nimport { ListEntryComponent } from '../list-entry.component';\n\n@Component({\n    selector: 'n52-profile-entry',\n    templateUrl: './profile-entry.component.html',\n    styleUrls: ['./profile-entry.component.scss']\n})\nexport class ProfileEntryComponent extends ListEntryComponent {\n\n    @Input()\n    public datasetOptions: TimedDatasetOptions[];\n\n    @Output()\n    public onUpdateOptions: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onDeleteDatasetOptions: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onEditOptions: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onOpenInCombiView: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onShowGeometry: EventEmitter = new EventEmitter();\n\n    public dataset: Dataset;\n\n    public editableOptions: TimedDatasetOptions;\n    public tempColor: string;\n\n    constructor(\n        protected api: DatasetApiInterface,\n        protected internalIdHandler: InternalIdHandler\n    ) {\n        super(internalIdHandler);\n    }\n\n    public removeDatasetOptions(options: TimedDatasetOptions) {\n        this.onDeleteDatasetOptions.emit(options);\n    }\n\n    public editDatasetOptions(options: TimedDatasetOptions) {\n        this.onEditOptions.emit(options);\n    }\n\n    public toggleVisibility(options: TimedDatasetOptions) {\n        options.visible = !options.visible;\n        this.onUpdateOptions.emit(this.datasetOptions);\n    }\n\n    public isMobile() {\n        if (this.dataset) {\n            return this.dataset.platformType === PlatformTypes.mobileInsitu;\n        }\n        return false;\n    }\n\n    public openInCombiView(option: TimedDatasetOptions) {\n        this.onOpenInCombiView.emit(option);\n    }\n\n    public showGeometry(option: TimedDatasetOptions) {\n        const internalId = this.internalIdHandler.resolveInternalId(this.datasetId);\n        if (this.isMobile()) {\n            const timespan = new Timespan(option.timestamp);\n            this.api.getData(internalId.id, internalId.url, timespan).subscribe((result) => {\n                if (result.values.length === 1) {\n                    this.onShowGeometry.emit(result.values[0].geometry);\n                }\n            });\n        } else {\n            this.api.getPlatform(this.dataset.parameters.platform.id, internalId.url).subscribe((platform) => {\n                this.onShowGeometry.emit(platform.geometry);\n            });\n        }\n    }\n\n    protected loadDataset(id: string, url: string) {\n        this.api.getDataset(id, url).subscribe((dataset) => {\n            this.dataset = dataset;\n        });\n    }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      [\n        ]\n    \n    \n      \n    \n    \n      \n    \n  \n  \n    \n      {{item.timestamp | date: 'short'}}\n      \n      \n      \n      \n    \n    \n      \n      {{'profiles.legend.go-to-combi-view' | translate}}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                [        ]                                              {{item.timestamp | date: \\'short\\'}}                                            {{\\'profiles.legend.go-to-combi-view\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileTrajectoryMapSelectorComponent.html":{"url":"components/ProfileTrajectoryMapSelectorComponent.html","title":"component - ProfileTrajectoryMapSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileTrajectoryMapSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts\n\n\n\n    \n        Extends\n    \n    \n            MapSelectorComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-profile-trajectory-map-selector\n            \n\n            \n                styleUrls\n                .map-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ../map-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                            \n                                    Private\n                                dataset\n                            \n                            \n                                    Private\n                                defaultStyle\n                            \n                            \n                                    Private\n                                highlightStyle\n                            \n                            \n                                    Private\n                                layer\n                            \n                            \n                                    Public\n                                isContentLoading\n                            \n                            \n                                    Public\n                                noResultsFound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearMap\n                            \n                            \n                                    Private\n                                createGeoJson\n                            \n                            \n                                    Protected\n                                drawGeometries\n                            \n                            \n                                    Private\n                                initLayer\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                    \n                                drawGeometries\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                zoomToMarkerBounds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedTimespan\n                            \n                            \n                                avoidZoomToSelection\n                            \n                            \n                                filter\n                            \n                            \n                                serviceUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTimeListDetermined\n                            \n                            \n                                onContentLoading\n                            \n                            \n                                onSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiInterface: DatasetApiInterface, mapCache: MapCache, differs: KeyValueDiffers, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiInterface\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapCache\n                                                  \n                                                        \n                                                                    MapCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        differs\n                                                  \n                                                        \n                                                                    KeyValueDiffers\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedTimespan\n                    \n                    \n                            \n                            Type:    Timespan\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        avoidZoomToSelection\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                    \n                            \n                            Type:    ParameterFilter\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serviceUrl\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTimeListDetermined\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onContentLoading\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onSelected\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            clearMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clearMap()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:116\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createGeoJson\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createGeoJson(profileDataEntry: LocatedProfileDataEntry, dataset: IDataset)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileDataEntry\n                                                        \n                                                                    LocatedProfileDataEntry\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        dataset\n                                                        \n                                                                    IDataset\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     L.GeoJSON\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            drawGeometries\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        drawGeometries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initLayer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initLayer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            drawGeometries\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        drawGeometries()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:82\n                            \n                        \n\n\n                \n                    \n                            Draws the geometries\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngAfterViewInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            zoomToMarkerBounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        zoomToMarkerBounds(bounds: L.LatLngBoundsExpression)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:91\n                            \n                        \n\n\n                \n                    \n                            Zooms to the given bounds\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        bounds\n                                                        \n                                                                    L.LatLngBoundsExpression\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                where to zoom\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     LocatedProfileDataEntry[]\n\n                    \n                \n                    \n                        \n                            Type :     LocatedProfileDataEntry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataset:     IDataset\n\n                    \n                \n                    \n                        \n                            Type :     IDataset\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defaultStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultStyle:     L.PathOptions\n\n                    \n                \n                    \n                        \n                            Type :     L.PathOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        color: 'red',\n        weight: 5,\n        opacity: 0.65\n    }\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            highlightStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        highlightStyle:     L.PathOptions\n\n                    \n                \n                    \n                        \n                            Type :     L.PathOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        color: 'blue',\n        weight: 7,\n        opacity: 1\n    }\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            layer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layer:     L.FeatureGroup\n\n                    \n                \n                    \n                        \n                            Type :     L.FeatureGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/selector/trajectory-map-selector/trajectory-map-selector.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isContentLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isContentLoading:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noResultsFound\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noResultsFound:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     MapSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in MapSelectorComponent:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import 'leaflet.markercluster';\n\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    KeyValueDiffers,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    DatasetApiInterface,\n    HasLoadableContent,\n    IDataset,\n    LocatedProfileDataEntry,\n    Mixin,\n    Timespan,\n} from '@helgoland/core';\nimport * as L from 'leaflet';\n\nimport { MapCache } from '../../base/map-cache.service';\nimport { MapSelectorComponent } from '../map-selector.component';\nimport { TrajectoryResult } from '../model/trajectory-result';\n\n@Component({\n    selector: 'n52-profile-trajectory-map-selector',\n    templateUrl: '../map-selector.component.html',\n    styleUrls: ['../map-selector.component.scss']\n})\n@Mixin([HasLoadableContent])\nexport class ProfileTrajectoryMapSelectorComponent\n    extends MapSelectorComponent\n    implements OnChanges, AfterViewInit {\n\n    @Input()\n    public selectedTimespan: Timespan;\n\n    @Output()\n    public onTimeListDetermined: EventEmitter = new EventEmitter();\n\n    private layer: L.FeatureGroup;\n    private data: LocatedProfileDataEntry[];\n    private dataset: IDataset;\n\n    private defaultStyle: L.PathOptions = {\n        color: 'red',\n        weight: 5,\n        opacity: 0.65\n    };\n\n    private highlightStyle: L.PathOptions = {\n        color: 'blue',\n        weight: 7,\n        opacity: 1\n    };\n\n    constructor(\n        protected apiInterface: DatasetApiInterface,\n        protected mapCache: MapCache,\n        protected differs: KeyValueDiffers,\n        protected cd: ChangeDetectorRef\n    ) {\n        super(mapCache, differs, cd);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        super.ngOnChanges(changes);\n        if (changes.selectedTimespan && this.selectedTimespan) {\n            this.clearMap();\n            this.initLayer();\n            this.data.forEach((entry) => {\n                if (this.selectedTimespan.from  {\n            datasets.forEach((dataset) => {\n                this.dataset = dataset;\n                const timespan = new Timespan(dataset.firstValue.timestamp, dataset.lastValue.timestamp);\n                this.apiInterface.getData(dataset.id, this.serviceUrl, timespan)\n                    .subscribe((data) => {\n                        if (data.values instanceof Array) {\n                            this.initLayer();\n                            this.data = [];\n                            const timelist: number[] = [];\n                            data.values.forEach((entry) => {\n                                this.data.push(entry);\n                                const geojson = this.createGeoJson(entry, dataset);\n                                timelist.push(entry.timestamp);\n                                this.layer.addLayer(geojson);\n                            });\n                            this.onTimeListDetermined.emit(timelist);\n                            this.layer.addTo(this.map);\n                            this.zoomToMarkerBounds(this.layer.getBounds());\n                        }\n                        this.isContentLoading(false);\n                    });\n            });\n        });\n    }\n\n    private initLayer() {\n        this.layer = L.markerClusterGroup({ animate: false });\n    }\n\n    private clearMap() {\n        if (this.layer) {\n            this.map.removeLayer(this.layer);\n        }\n    }\n\n    private createGeoJson(profileDataEntry: LocatedProfileDataEntry, dataset: IDataset): L.GeoJSON {\n        const geojson = new L.GeoJSON(profileDataEntry.geometry);\n        geojson.setStyle(this.defaultStyle);\n        geojson.on('click', () => {\n            this.onSelected.emit({\n                dataset,\n                data: profileDataEntry\n            });\n        });\n        geojson.on('mouseover', () => {\n            geojson.setStyle(this.highlightStyle);\n            geojson.bringToFront();\n        });\n        geojson.on('mouseout', () => {\n            geojson.setStyle(this.defaultStyle);\n        });\n        return geojson;\n    }\n}\n\n    \n\n    \n        \n  \n  \n    No results found\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        No results found  '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileTrajectoryMapSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Provider.html":{"url":"interfaces/Provider.html","title":"interface - Provider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Provider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ParameterFilter } from './../internal/http-requests';\n\nexport interface Provider {\n    id: string;\n    url: string;\n}\n\nexport interface FilteredProvider extends Provider {\n    filter: ParameterFilter;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawData.html":{"url":"interfaces/RawData.html","title":"interface - RawData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RawData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/plotly/src/lib/plotly-profile-graph/plotly-profile-graph.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        datas\n                                \n                                \n                                        dataset\n                                \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datas\n                                    \n                                \n                                \n                                    \n                                        datas:     ProfileDataEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProfileDataEntry[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataset\n                                    \n                                \n                                \n                                    \n                                        dataset:     IDataset\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IDataset\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     TimedDatasetOptions[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TimedDatasetOptions[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, Component, ElementRef, EventEmitter, IterableDiffers, Output, ViewChild } from '@angular/core';\nimport {\n    DatasetApiInterface,\n    DatasetPresenterComponent,\n    PresenterHighlight,\n    IDataset,\n    InternalIdHandler,\n    ProfileDataEntry,\n    Time,\n    TimedDatasetOptions,\n    Timespan,\n} from '@helgoland/core';\nimport * as d3 from 'd3';\n\nimport * as Plotly from 'plotly.js';\n\ninterface RawData {\n    dataset: IDataset;\n    datas: ProfileDataEntry[];\n    options: TimedDatasetOptions[];\n}\n\ninterface ExtendedScatterData extends Partial {\n    timestamp: number;\n    id: string;\n}\n\nconst LINE_WIDTH_SELECTED = 5;\nconst LINE_WIDTH = 2;\nconst MARKER_SIZE_SELECTED = 10;\nconst MARKER_SIZE = 6;\n\n@Component({\n    selector: 'n52-plotly-profile-graph',\n    templateUrl: './plotly-profile-graph.component.html',\n    styleUrls: ['./plotly-profile-graph.component.scss']\n})\nexport class PlotlyProfileGraphComponent\n    extends DatasetPresenterComponent\n    implements AfterViewInit {\n\n    @Output()\n    public onHighlight: EventEmitter = new EventEmitter();\n\n    @ViewChild('plotly')\n    public plotlyElem: ElementRef;\n\n    private plotlyArea: any;\n    private preparedData: ExtendedScatterData[] = [];\n    private rawData: Map = new Map();\n    private counterXAxis = 0;\n    private counterYAxis = 0;\n\n    private layout: Layout = {\n        autosize: true,\n        showlegend: false,\n        dragmode: 'pan',\n        margin: {\n            l: 40,\n            r: 10,\n            b: 40,\n            t: 10\n            // pad: 100\n        },\n        hovermode: 'closest'\n    };\n\n    private settings: Partial = {\n        displayModeBar: false,\n        modeBarButtonsToRemove: [\n            'sendDataToCloud',\n            'hoverCompareCartesian'\n        ],\n        displaylogo: false,\n        showTips: false,\n        scrollZoom: true\n    };\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc);\n    }\n\n    public ngAfterViewInit(): void {\n        this.plotlyArea = this.plotlyElem.nativeElement;\n        this.drawChart();\n    }\n\n    public reloadData(): void {\n        console.log('reload data at ' + new Date());\n    }\n\n    // tslint:disable-next-line:no-empty\n    protected timeIntervalChanges(): void { }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getDataset(id, url).subscribe((dataset) => {\n            const options = this.datasetOptions.get(dataset.internalId);\n            options.forEach((option) => {\n                if (option.timestamp) {\n                    const timespan = new Timespan(option.timestamp);\n                    this.api.getData(id, url, timespan).subscribe((data) => {\n                        if (data.values.length === 1) {\n                            if (this.rawData.has(dataset.internalId)) {\n                                this.rawData.get(dataset.internalId).datas.push(data.values[0]);\n                                this.rawData.get(dataset.internalId).options.push(option);\n                            } else {\n                                this.rawData.set(dataset.internalId, {\n                                    dataset,\n                                    datas: [data.values[0]],\n                                    options: [option]\n                                });\n                            }\n                        }\n                        this.drawChart();\n                    });\n                }\n            });\n        });\n    }\n\n    protected removeDataset(internalId: string): void {\n        this.rawData.delete(internalId);\n        this.drawChart();\n    }\n\n    protected setSelectedId(internalId: string): void {\n        this.drawChart();\n    }\n\n    protected removeSelectedId(internalId: string): void {\n        this.drawChart();\n    }\n\n    // tslint:disable-next-line:no-empty\n    protected graphOptionsChanged(options: any): void { }\n\n    protected datasetOptionsChanged(internalId: string, options: TimedDatasetOptions[], firstChange: boolean): void {\n        if (!firstChange) {\n            // remove unused options\n            const removedIdx = this.rawData.get(internalId).options.findIndex((option) => {\n                const idx = options.findIndex((e) => e.timestamp === option.timestamp);\n                if (idx === -1) {\n                    return true;\n                }\n            });\n            if (removedIdx > -1) {\n                this.rawData.get(internalId).options.splice(removedIdx, 1);\n                this.rawData.get(internalId).datas.splice(removedIdx, 1);\n            }\n            this.drawChart();\n        }\n    }\n\n    protected onResize(): void {\n        this.redrawChart();\n    }\n\n    private processData() {\n        this.clearLayout();\n        this.clearData();\n        this.rawData.forEach((dataEntry) => {\n            dataEntry.options.forEach((option, key) => {\n                if (option.visible) {\n                    const x = new Array();\n                    const y = new Array();\n                    const selected = this.selectedDatasetIds.indexOf(dataEntry.dataset.internalId) >= 0;\n                    dataEntry.datas[key].value.forEach((entry) => {\n                        x.push(entry.value);\n                        y.push(entry.vertical);\n                    });\n                    const prepared: ExtendedScatterData = {\n                        x,\n                        y,\n                        type: 'scatter',\n                        name: '',\n                        timestamp: option.timestamp,\n                        id: dataEntry.dataset.internalId,\n                        yaxis: this.createYAxis(dataEntry.dataset, dataEntry.datas[key]),\n                        xaxis: this.createXAxis(dataEntry.dataset, dataEntry.datas[key]),\n                        // hovertext: dataEntry.label,\n                        line: {\n                            color: option.color,\n                            width: selected ? LINE_WIDTH_SELECTED : LINE_WIDTH\n                        },\n                        marker: {\n                            size: selected ? MARKER_SIZE_SELECTED : MARKER_SIZE\n                        }\n                    };\n                    this.preparedData.push(prepared);\n                }\n            });\n        });\n\n        this.updateAxis();\n    }\n\n    private createXAxis(dataset: IDataset, data: ProfileDataEntry): string {\n        let axis;\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis') && this.layout[key].title === dataset.uom) {\n                axis = this.layout[key];\n            }\n        }\n        const range = d3.extent(data.value, (d) => d.value);\n        if (!axis) {\n            this.counterXAxis = this.counterXAxis + 1;\n            axis = this.layout['xaxis' + this.counterXAxis] = {\n                id: 'x' + (this.counterXAxis > 1 ? this.counterXAxis : ''),\n                anchor: 'free',\n                title: dataset.uom,\n                zeroline: true,\n                hoverformat: '.2f',\n                showline: false,\n                range: [range[0], range[1]],\n                overlaying: '',\n                // rangemode: 'tozero',\n                fixedrange: false\n            };\n            if (this.counterXAxis !== 1) {\n                axis.overlaying = 'x';\n            }\n        } else {\n            axis.range = d3.extent([range[0], range[1], axis.range[0], axis.range[1]]);\n        }\n        return axis.id;\n    }\n\n    private createYAxis(dataset: IDataset, data: ProfileDataEntry): string {\n        let axis;\n        // find axis\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) &&\n                key.startsWith('yaxis') &&\n                this.layout[key].title === data.verticalUnit) {\n                axis = this.layout[key];\n            }\n        }\n        if (!axis) {\n            // add axis\n            this.counterYAxis = this.counterYAxis + 1;\n            axis = this.layout[('yaxis' + this.counterYAxis)] = {\n                id: 'y' + (this.counterYAxis > 1 ? this.counterYAxis : ''),\n                // zeroline: true,\n                anchor: 'free',\n                hoverformat: '.2r',\n                side: 'left',\n                autorange: 'reversed',\n                showline: false,\n                overlaying: '',\n                title: data.verticalUnit,\n                fixedrange: false\n            };\n            if (this.counterYAxis !== 1) {\n                axis.overlaying = 'y';\n            }\n        }\n        return axis.id;\n    }\n\n    private updateAxis() {\n        if (this.counterYAxis > 1) {\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                    this.layout[key].domain = [(0.1 * this.counterYAxis) - 0.1, 1];\n                }\n            }\n            let yaxisCount = 0;\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('yaxis')) {\n                    this.layout[key].position = 0.1 * yaxisCount;\n                    yaxisCount += 1;\n                }\n            }\n        }\n        if (this.counterXAxis > 1) {\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('yaxis')) {\n                    this.layout[key].domain = [(0.06 * this.counterXAxis) - 0.06, 1];\n                }\n            }\n            let xaxisCount = 0;\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                    this.layout[key].position = 0.06 * xaxisCount;\n                    xaxisCount += 1;\n                }\n            }\n        }\n        // add offset to xaxis ranges\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                const range = this.layout[key].range;\n                const rangeOffset = (range[1] - range[0]) * 0.05;\n                this.layout[key].range = [range[0] - rangeOffset, range[1] + rangeOffset];\n            }\n        }\n    }\n\n    private drawChart() {\n        if (this.plotlyArea && this.rawData.size > 0) {\n            this.processData();\n            Plotly.newPlot(this.plotlyArea, this.preparedData, this.layout, this.settings);\n            this.plotlyArea.on('plotly_hover', (entry: any) => {\n                if (entry.points.length === 1) {\n                    this.onHighlight.emit({\n                        internalId: entry.points[0].data.id,\n                        dataIndex: entry.points[0].pointNumber\n                    });\n                }\n            });\n        }\n    }\n\n    private clearLayout() {\n        // todo remove yaxis\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && (key.startsWith('yaxis') || key.startsWith('xaxis'))) {\n                delete this.layout[key];\n            }\n        }\n        // reset counter\n        this.counterYAxis = 0;\n        this.counterXAxis = 0;\n    }\n\n    private clearData() {\n        this.preparedData = [];\n    }\n\n    private redrawChart() {\n        if (this.plotlyArea) {\n            Plotly.relayout(this.plotlyArea, {});\n        }\n    }\n}\n\ninterface ScatterData extends Partial {\n    id: string;\n    timestamp: number;\n}\n\ninterface Layout extends Partial {\n    [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReferenceValue.html":{"url":"classes/ReferenceValue.html","title":"class - ReferenceValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReferenceValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                color\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                lastValue\n                            \n                            \n                                    Public\n                                referenceValueId\n                            \n                            \n                                    Public\n                                    Optional\n                                visible\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            color\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        color:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastValue:     FirstLastValue\n\n                    \n                \n                    \n                        \n                            Type :     FirstLastValue\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            referenceValueId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        referenceValueId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReferenceValueColorCache.html":{"url":"injectables/ReferenceValueColorCache.html","title":"injectable - ReferenceValueColorCache","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ReferenceValueColorCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/depiction/src/lib/datasetlist/timeseries-entry/timeseries-entry.component.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Component,\n    EventEmitter,\n    Injectable,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    DatasetApiInterface,\n    ColorService,\n    Dataset,\n    DatasetOptions,\n    FirstLastValue,\n    IDataset,\n    IdCache,\n    InternalIdHandler,\n    ReferenceValue,\n    Time,\n    TimeInterval,\n    Timeseries,\n} from '@helgoland/core';\n\nimport { ListEntryComponent } from '../list-entry.component';\n\n@Injectable()\nexport class ReferenceValueColorCache extends IdCache { }\n\n@Component({\n    selector: 'n52-timeseries-entry',\n    templateUrl: './timeseries-entry.component.html',\n    styleUrls: ['./timeseries-entry.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TimeseriesEntryComponent extends ListEntryComponent implements OnChanges {\n\n    @Input()\n    public datasetOptions: DatasetOptions;\n\n    @Input()\n    public timeInterval: TimeInterval;\n\n    @Input()\n    public changedSelectedDatasets: string;\n\n    @Output()\n    public onUpdateOptions: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onEditOptions: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onSelectDate: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onShowGeometry: EventEmitter = new EventEmitter();\n\n    public platformLabel: string;\n    public phenomenonLabel: string;\n    public procedureLabel: string;\n    public categoryLabel: string;\n    public uom: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public informationVisible = false;\n    public tempColor: string;\n    public hasData = true;\n    public referenceValues: ReferenceValue[];\n\n    public dataset: IDataset;\n\n    constructor(\n        protected api: DatasetApiInterface,\n        protected timeSrvc: Time,\n        protected internalIdHandler: InternalIdHandler,\n        protected color: ColorService,\n        protected refValCache: ReferenceValueColorCache\n    ) {\n        super(internalIdHandler);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.changedSelectedDatasets) {\n            if (changes.changedSelectedDatasets.firstChange !== true) {\n                changes.changedSelectedDatasets.currentValue.forEach((obj) => {\n                    this.toggleUomSelection(obj.id, obj.change);\n                });\n            }\n        }\n\n        if (changes.timeInterval) {\n            this.checkDataInTimespan();\n        }\n    }\n\n    public toggleInformation() {\n        this.informationVisible = !this.informationVisible;\n    }\n\n    public jumpToFirstTimeStamp() {\n        this.onSelectDate.emit(new Date(this.dataset.firstValue.timestamp));\n    }\n\n    public jumpToLastTimeStamp() {\n        this.onSelectDate.emit(new Date(this.dataset.lastValue.timestamp));\n    }\n\n    public toggleVisibility() {\n        this.datasetOptions.visible = !this.datasetOptions.visible;\n        this.onUpdateOptions.emit(this.datasetOptions);\n    }\n\n    public toggleReferenceValue(refValue: ReferenceValue) {\n        const idx = this.datasetOptions.showReferenceValues.findIndex((entry) => entry.id === refValue.referenceValueId);\n        const refValId = this.createRefValId(refValue.referenceValueId);\n        if (idx > -1) {\n            refValue.visible = false;\n            this.datasetOptions.showReferenceValues.splice(idx, 1);\n        } else {\n            refValue.visible = true;\n            this.datasetOptions.showReferenceValues.push({ id: refValue.referenceValueId, color: refValue.color });\n        }\n        this.refValCache.get(refValId).visible = refValue.visible;\n        this.onUpdateOptions.emit(this.datasetOptions);\n    }\n\n    public editDatasetOptions() {\n        this.onEditOptions.emit(this.datasetOptions);\n    }\n\n    public showGeometry() {\n        if (this.dataset instanceof Timeseries) {\n            this.onShowGeometry.emit(this.dataset.station.geometry);\n        }\n        if (this.dataset instanceof Dataset) {\n            this.api.getPlatform(this.dataset.parameters.platform.id, this.dataset.url).subscribe((platform) => {\n                this.onShowGeometry.emit(platform.geometry);\n            });\n        }\n    }\n\n    protected loadDataset(id: string, url: string) {\n        this.api.getSingleTimeseries(id, url).subscribe((timeseries) => {\n            this.dataset = timeseries;\n            this.setParameters();\n        }, (error) => {\n            this.api.getDataset(id, url).subscribe((dataset) => {\n                this.dataset = dataset;\n                this.setParameters();\n            });\n        });\n    }\n\n    private setParameters() {\n        if (this.dataset instanceof Dataset) {\n            this.platformLabel = this.dataset.parameters.platform.label;\n        } else if (this.dataset instanceof Timeseries) {\n            this.platformLabel = this.dataset.station.properties.label;\n        }\n        this.phenomenonLabel = this.dataset.parameters.phenomenon.label;\n        this.procedureLabel = this.dataset.parameters.procedure.label;\n        this.categoryLabel = this.dataset.parameters.category.label;\n        this.firstValue = this.dataset.firstValue;\n        this.lastValue = this.dataset.lastValue;\n        this.uom = this.dataset.uom;\n        if (this.dataset.referenceValues) {\n            this.dataset.referenceValues.forEach((e) => {\n                const refValId = this.createRefValId(e.referenceValueId);\n                const refValOption = this.datasetOptions.showReferenceValues.find((o) => o.id === e.referenceValueId);\n                if (refValOption) {\n                    this.refValCache.set(refValId, {\n                        color: refValOption.color,\n                        visible: true\n                    });\n                }\n                if (!this.refValCache.has(refValId)) {\n                    this.refValCache.set(refValId, {\n                        color: this.color.getColor(),\n                        visible: false\n                    });\n                }\n                e.color = this.refValCache.get(refValId).color;\n                e.visible = this.refValCache.get(refValId).visible;\n            });\n        }\n        this.checkDataInTimespan();\n    }\n\n    private createRefValId(refId: string) {\n        return this.dataset.url + refId;\n    }\n\n    private checkDataInTimespan() {\n        if (this.timeInterval && this.dataset) {\n            this.hasData = this.timeSrvc.overlaps(\n                this.timeInterval,\n                this.dataset.firstValue.timestamp,\n                this.dataset.lastValue.timestamp\n            );\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReferenceValueOption.html":{"url":"classes/ReferenceValueOption.html","title":"class - ReferenceValueOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReferenceValueOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                color\n                            \n                            \n                                    Public\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            color\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        color:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DatasetOptions {\n    public internalId: string;\n    public color: string;\n    public visible = true;\n    public loading?: boolean;\n    public separateYAxis?: boolean = false;\n    public zeroBasedYAxis?: boolean = false;\n    public generalize?: boolean = false;\n    public showReferenceValues: ReferenceValueOption[] = [];\n    public pointRadius = 0;\n    public lineWidth = 1;\n    public yAxisRange?: MinMaxRange;\n\n    constructor(\n        internalId: string,\n        color: string\n    ) {\n        this.internalId = internalId;\n        this.color = color;\n    }\n}\n\nexport class ReferenceValueOption {\n    public id: string;\n    public color: string;\n}\n\nexport interface MinMaxRange {\n    min: number;\n    max: number;\n}\n\nexport class TimedDatasetOptions extends DatasetOptions {\n    public timestamp: number;\n\n    constructor(\n        internalId: string,\n        color: string,\n        timestamp: number\n    ) {\n        super(internalId, color);\n        this.timestamp = timestamp;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReferenceValues.html":{"url":"classes/ReferenceValues.html","title":"class - ReferenceValues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReferenceValues\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/data.ts\n        \n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    T[]\n\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/model/dataset-api/data.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export interface IDataEntry { }\n\nexport interface Data {\n    values: T[];\n    referenceValues: ReferenceValues;\n}\n\nexport class ReferenceValues {\n    [key: string]: T[];\n}\n\nexport interface TimeValueEntry extends IDataEntry {\n    timestamp: number;\n    value: number;\n}\n\nexport interface LocatedTimeValueEntry extends TimeValueEntry {\n    geometry: GeoJSON.Point;\n}\n\nexport interface ProfileDataEntry extends IDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n}\n\nexport interface LocatedProfileDataEntry extends ProfileDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n    geometry: GeoJSON.GeoJsonObject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RefreshButtonComponent.html":{"url":"components/RefreshButtonComponent.html","title":"component - RefreshButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RefreshButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-refresh-button\n            \n\n\n\n\n            \n                templateUrl\n                ./refresh-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                interval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                evaluteRefreshing\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                refresh\n                            \n                            \n                                    Private\n                                startRefreshInterval\n                            \n                            \n                                    Private\n                                stopRefreshInterval\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                refreshInterval\n                            \n                            \n                                toggled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                refreshing\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                    SettingsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        refreshInterval\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggled\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        refreshing\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            evaluteRefreshing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        evaluteRefreshing()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refresh\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        refresh()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            startRefreshInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        startRefreshInterval()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stopRefreshInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stopRefreshInterval()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            interval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        interval:     NodeJS.Timer\n\n                    \n                \n                    \n                        \n                            Type :     NodeJS.Timer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/refresh-button/refresh-button.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { Settings, SettingsService } from '@helgoland/core';\n\n@Component({\n  selector: 'n52-refresh-button',\n  templateUrl: './refresh-button.component.html'\n})\nexport class RefreshButtonComponent implements OnChanges, OnInit {\n\n  @Input()\n  public refreshInterval: number;\n\n  @Input()\n  public toggled: boolean;\n\n  @Output()\n  public refreshing: EventEmitter = new EventEmitter();\n\n  private interval: NodeJS.Timer;\n\n  constructor(\n    protected settings: SettingsService\n  ) {\n    if (!this.refreshInterval) {\n      this.refreshInterval = this.settings.getSettings().refreshDataInterval\n        ? this.settings.getSettings().refreshDataInterval : 60;\n    }\n  }\n\n  public ngOnInit(): void {\n    this.evaluteRefreshing();\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.toggled) {\n      this.evaluteRefreshing();\n    }\n  }\n\n  public toggle() {\n    this.toggled = !this.toggled;\n    if (this.toggled) { this.refresh(); }\n    this.evaluteRefreshing();\n  }\n\n  private evaluteRefreshing() {\n    if (this.toggled) {\n      this.startRefreshInterval();\n    } else {\n      this.stopRefreshInterval();\n    }\n  }\n\n  private startRefreshInterval() {\n    this.interval = setInterval(() => this.refresh(), this.refreshInterval * 1000);\n  }\n\n  private stopRefreshInterval() {\n    clearInterval(this.interval);\n  }\n\n  private refresh() {\n    this.refreshing.emit(true);\n  }\n\n}\n\n    \n\n    \n        \n    \n    active\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        active'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RefreshButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResizableComponent.html":{"url":"classes/ResizableComponent.html","title":"class - ResizableComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResizableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/ResizableComponent.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            onResize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onResize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/ResizableComponent.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:resize\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nwindow:resize(event: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/ResizableComponent.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HostListener } from '@angular/core';\n\nexport abstract class ResizableComponent {\n\n    @HostListener('window:resize', ['$event'])\n    public onWindowResize(event: Event) {\n        this.onResize();\n    }\n\n    protected abstract onResize(): void;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScatterData.html":{"url":"interfaces/ScatterData.html","title":"interface - ScatterData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ScatterData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/plotly/src/lib/plotly-profile-graph/plotly-profile-graph.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Partial\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        timestamp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, Component, ElementRef, EventEmitter, IterableDiffers, Output, ViewChild } from '@angular/core';\nimport {\n    DatasetApiInterface,\n    DatasetPresenterComponent,\n    PresenterHighlight,\n    IDataset,\n    InternalIdHandler,\n    ProfileDataEntry,\n    Time,\n    TimedDatasetOptions,\n    Timespan,\n} from '@helgoland/core';\nimport * as d3 from 'd3';\n\nimport * as Plotly from 'plotly.js';\n\ninterface RawData {\n    dataset: IDataset;\n    datas: ProfileDataEntry[];\n    options: TimedDatasetOptions[];\n}\n\ninterface ExtendedScatterData extends Partial {\n    timestamp: number;\n    id: string;\n}\n\nconst LINE_WIDTH_SELECTED = 5;\nconst LINE_WIDTH = 2;\nconst MARKER_SIZE_SELECTED = 10;\nconst MARKER_SIZE = 6;\n\n@Component({\n    selector: 'n52-plotly-profile-graph',\n    templateUrl: './plotly-profile-graph.component.html',\n    styleUrls: ['./plotly-profile-graph.component.scss']\n})\nexport class PlotlyProfileGraphComponent\n    extends DatasetPresenterComponent\n    implements AfterViewInit {\n\n    @Output()\n    public onHighlight: EventEmitter = new EventEmitter();\n\n    @ViewChild('plotly')\n    public plotlyElem: ElementRef;\n\n    private plotlyArea: any;\n    private preparedData: ExtendedScatterData[] = [];\n    private rawData: Map = new Map();\n    private counterXAxis = 0;\n    private counterYAxis = 0;\n\n    private layout: Layout = {\n        autosize: true,\n        showlegend: false,\n        dragmode: 'pan',\n        margin: {\n            l: 40,\n            r: 10,\n            b: 40,\n            t: 10\n            // pad: 100\n        },\n        hovermode: 'closest'\n    };\n\n    private settings: Partial = {\n        displayModeBar: false,\n        modeBarButtonsToRemove: [\n            'sendDataToCloud',\n            'hoverCompareCartesian'\n        ],\n        displaylogo: false,\n        showTips: false,\n        scrollZoom: true\n    };\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc);\n    }\n\n    public ngAfterViewInit(): void {\n        this.plotlyArea = this.plotlyElem.nativeElement;\n        this.drawChart();\n    }\n\n    public reloadData(): void {\n        console.log('reload data at ' + new Date());\n    }\n\n    // tslint:disable-next-line:no-empty\n    protected timeIntervalChanges(): void { }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getDataset(id, url).subscribe((dataset) => {\n            const options = this.datasetOptions.get(dataset.internalId);\n            options.forEach((option) => {\n                if (option.timestamp) {\n                    const timespan = new Timespan(option.timestamp);\n                    this.api.getData(id, url, timespan).subscribe((data) => {\n                        if (data.values.length === 1) {\n                            if (this.rawData.has(dataset.internalId)) {\n                                this.rawData.get(dataset.internalId).datas.push(data.values[0]);\n                                this.rawData.get(dataset.internalId).options.push(option);\n                            } else {\n                                this.rawData.set(dataset.internalId, {\n                                    dataset,\n                                    datas: [data.values[0]],\n                                    options: [option]\n                                });\n                            }\n                        }\n                        this.drawChart();\n                    });\n                }\n            });\n        });\n    }\n\n    protected removeDataset(internalId: string): void {\n        this.rawData.delete(internalId);\n        this.drawChart();\n    }\n\n    protected setSelectedId(internalId: string): void {\n        this.drawChart();\n    }\n\n    protected removeSelectedId(internalId: string): void {\n        this.drawChart();\n    }\n\n    // tslint:disable-next-line:no-empty\n    protected graphOptionsChanged(options: any): void { }\n\n    protected datasetOptionsChanged(internalId: string, options: TimedDatasetOptions[], firstChange: boolean): void {\n        if (!firstChange) {\n            // remove unused options\n            const removedIdx = this.rawData.get(internalId).options.findIndex((option) => {\n                const idx = options.findIndex((e) => e.timestamp === option.timestamp);\n                if (idx === -1) {\n                    return true;\n                }\n            });\n            if (removedIdx > -1) {\n                this.rawData.get(internalId).options.splice(removedIdx, 1);\n                this.rawData.get(internalId).datas.splice(removedIdx, 1);\n            }\n            this.drawChart();\n        }\n    }\n\n    protected onResize(): void {\n        this.redrawChart();\n    }\n\n    private processData() {\n        this.clearLayout();\n        this.clearData();\n        this.rawData.forEach((dataEntry) => {\n            dataEntry.options.forEach((option, key) => {\n                if (option.visible) {\n                    const x = new Array();\n                    const y = new Array();\n                    const selected = this.selectedDatasetIds.indexOf(dataEntry.dataset.internalId) >= 0;\n                    dataEntry.datas[key].value.forEach((entry) => {\n                        x.push(entry.value);\n                        y.push(entry.vertical);\n                    });\n                    const prepared: ExtendedScatterData = {\n                        x,\n                        y,\n                        type: 'scatter',\n                        name: '',\n                        timestamp: option.timestamp,\n                        id: dataEntry.dataset.internalId,\n                        yaxis: this.createYAxis(dataEntry.dataset, dataEntry.datas[key]),\n                        xaxis: this.createXAxis(dataEntry.dataset, dataEntry.datas[key]),\n                        // hovertext: dataEntry.label,\n                        line: {\n                            color: option.color,\n                            width: selected ? LINE_WIDTH_SELECTED : LINE_WIDTH\n                        },\n                        marker: {\n                            size: selected ? MARKER_SIZE_SELECTED : MARKER_SIZE\n                        }\n                    };\n                    this.preparedData.push(prepared);\n                }\n            });\n        });\n\n        this.updateAxis();\n    }\n\n    private createXAxis(dataset: IDataset, data: ProfileDataEntry): string {\n        let axis;\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis') && this.layout[key].title === dataset.uom) {\n                axis = this.layout[key];\n            }\n        }\n        const range = d3.extent(data.value, (d) => d.value);\n        if (!axis) {\n            this.counterXAxis = this.counterXAxis + 1;\n            axis = this.layout['xaxis' + this.counterXAxis] = {\n                id: 'x' + (this.counterXAxis > 1 ? this.counterXAxis : ''),\n                anchor: 'free',\n                title: dataset.uom,\n                zeroline: true,\n                hoverformat: '.2f',\n                showline: false,\n                range: [range[0], range[1]],\n                overlaying: '',\n                // rangemode: 'tozero',\n                fixedrange: false\n            };\n            if (this.counterXAxis !== 1) {\n                axis.overlaying = 'x';\n            }\n        } else {\n            axis.range = d3.extent([range[0], range[1], axis.range[0], axis.range[1]]);\n        }\n        return axis.id;\n    }\n\n    private createYAxis(dataset: IDataset, data: ProfileDataEntry): string {\n        let axis;\n        // find axis\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) &&\n                key.startsWith('yaxis') &&\n                this.layout[key].title === data.verticalUnit) {\n                axis = this.layout[key];\n            }\n        }\n        if (!axis) {\n            // add axis\n            this.counterYAxis = this.counterYAxis + 1;\n            axis = this.layout[('yaxis' + this.counterYAxis)] = {\n                id: 'y' + (this.counterYAxis > 1 ? this.counterYAxis : ''),\n                // zeroline: true,\n                anchor: 'free',\n                hoverformat: '.2r',\n                side: 'left',\n                autorange: 'reversed',\n                showline: false,\n                overlaying: '',\n                title: data.verticalUnit,\n                fixedrange: false\n            };\n            if (this.counterYAxis !== 1) {\n                axis.overlaying = 'y';\n            }\n        }\n        return axis.id;\n    }\n\n    private updateAxis() {\n        if (this.counterYAxis > 1) {\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                    this.layout[key].domain = [(0.1 * this.counterYAxis) - 0.1, 1];\n                }\n            }\n            let yaxisCount = 0;\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('yaxis')) {\n                    this.layout[key].position = 0.1 * yaxisCount;\n                    yaxisCount += 1;\n                }\n            }\n        }\n        if (this.counterXAxis > 1) {\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('yaxis')) {\n                    this.layout[key].domain = [(0.06 * this.counterXAxis) - 0.06, 1];\n                }\n            }\n            let xaxisCount = 0;\n            for (const key in this.layout) {\n                if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                    this.layout[key].position = 0.06 * xaxisCount;\n                    xaxisCount += 1;\n                }\n            }\n        }\n        // add offset to xaxis ranges\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && key.startsWith('xaxis')) {\n                const range = this.layout[key].range;\n                const rangeOffset = (range[1] - range[0]) * 0.05;\n                this.layout[key].range = [range[0] - rangeOffset, range[1] + rangeOffset];\n            }\n        }\n    }\n\n    private drawChart() {\n        if (this.plotlyArea && this.rawData.size > 0) {\n            this.processData();\n            Plotly.newPlot(this.plotlyArea, this.preparedData, this.layout, this.settings);\n            this.plotlyArea.on('plotly_hover', (entry: any) => {\n                if (entry.points.length === 1) {\n                    this.onHighlight.emit({\n                        internalId: entry.points[0].data.id,\n                        dataIndex: entry.points[0].pointNumber\n                    });\n                }\n            });\n        }\n    }\n\n    private clearLayout() {\n        // todo remove yaxis\n        for (const key in this.layout) {\n            if (this.layout.hasOwnProperty(key) && (key.startsWith('yaxis') || key.startsWith('xaxis'))) {\n                delete this.layout[key];\n            }\n        }\n        // reset counter\n        this.counterYAxis = 0;\n        this.counterXAxis = 0;\n    }\n\n    private clearData() {\n        this.preparedData = [];\n    }\n\n    private redrawChart() {\n        if (this.plotlyArea) {\n            Plotly.relayout(this.plotlyArea, {});\n        }\n    }\n}\n\ninterface ScatterData extends Partial {\n    id: string;\n    timestamp: number;\n}\n\ninterface Layout extends Partial {\n    [key: string]: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SeriesOptions.html":{"url":"interfaces/SeriesOptions.html","title":"interface - SeriesOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SeriesOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/flot/src/lib/model/dataSeries.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        selected\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SeriesOptions extends jquery.flot.seriesOptions {\n    selected?: boolean;\n}\n\nexport interface DataSeries extends jquery.flot.dataSeries, SeriesOptions {\n    internalId: string;\n    data: any[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Service.html":{"url":"interfaces/Service.html","title":"interface - Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        apiUrl\n                                \n                                \n                                        extras\n                                \n                                \n                                        href\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        quantities\n                                \n                                \n                                            Optional\n                                        supportedmimetypes\n                                \n                                \n                                            Optional\n                                        supportsfirstlatest\n                                \n                                \n                                        type\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiUrl\n                                    \n                                \n                                \n                                    \n                                        apiUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extras\n                                    \n                                \n                                \n                                    \n                                        extras:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                    \n                                \n                                \n                                    \n                                        href:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantities\n                                    \n                                \n                                \n                                    \n                                        quantities:     ServiceQuantities\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ServiceQuantities\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        supportedmimetypes\n                                    \n                                \n                                \n                                    \n                                        supportedmimetypes:     SupportedMimeTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SupportedMimeTypes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        supportsfirstlatest\n                                    \n                                \n                                \n                                    \n                                        supportsfirstlatest:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Parameter } from './parameter';\n\nexport interface Service extends Parameter {\n    id: string;\n    href: string;\n    label: string;\n    version: string;\n    extras: string[];\n    type: string;\n    quantities?: ServiceQuantities;\n    supportsfirstlatest?: boolean;\n    supportedmimetypes?: SupportedMimeTypes;\n    // for internal use:\n    apiUrl: string;\n}\n\nexport interface SupportedMimeTypes {}\n\nexport interface ServiceQuantities {\n    categories?: number;\n    features?: number;\n    offerings?: number;\n    phenomena?: number;\n    procedures?: number;\n    stations?: number;\n    timeseries?: number;\n    platforms?: number;\n    datasets?: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServiceFilterSelectorComponent.html":{"url":"components/ServiceFilterSelectorComponent.html","title":"component - ServiceFilterSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServiceFilterSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts\n\n\n    \n        Description\n    \n    \n        Component to select an item out of a list of provider with a given filter combination.\n\n    \n\n    \n        Extends\n    \n    \n            LanguageChangNotifier\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-service-filter-selector\n            \n\n\n\n\n            \n                templateUrl\n                ./service-filter-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Public\n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorOnLoading\n                            \n                            \n                                    Protected\n                                languageChanged\n                            \n                            \n                                    Private\n                                loadItems\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                onSelectItem\n                            \n                            \n                                    Private\n                                setItems\n                            \n                            \n                                    Protected\n                                    \n                                languageChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                endpoint\n                            \n                            \n                                filter\n                            \n                            \n                                selectionId\n                            \n                            \n                                serviceUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onItemSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, apiInterface: DatasetApiInterface)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiInterface\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        endpoint\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                    \n                            \n                            Type:    ParameterFilter\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectionId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serviceUrl\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onItemSelected\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorOnLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        errorOnLoading()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            languageChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        languageChanged()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSelectItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onSelectItem(item: Parameter)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Parameter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setItems(res: Parameter[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        res\n                                                        \n                                                                    Parameter[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            languageChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        languageChanged()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LanguageChangNotifier\n\n                                \n                            \n                        \n                            \n                                    Defined in LanguageChangNotifier:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     Parameter[]\n\n                    \n                \n                    \n                        \n                            Type :     Parameter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-filter-selector/service-filter-selector.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { DatasetApiInterface, LanguageChangNotifier, Parameter, ParameterFilter } from '@helgoland/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * Component to select an item out of a list of provider with a given filter combination.\n */\n@Component({\n    selector: 'n52-service-filter-selector',\n    templateUrl: './service-filter-selector.component.html'\n})\nexport class ServiceFilterSelectorComponent extends LanguageChangNotifier implements OnChanges {\n\n    @Input()\n    public endpoint: string;\n\n    @Input()\n    public serviceUrl: string;\n\n    @Input()\n    public filter: ParameterFilter;\n\n    @Input()\n    public selectionId: string;\n\n    @Output()\n    public onItemSelected: EventEmitter = new EventEmitter();\n\n    public loading: boolean;\n    public items: Parameter[];\n\n    constructor(\n        protected translate: TranslateService,\n        protected apiInterface: DatasetApiInterface\n    ) {\n        super(translate);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.endpoint) {\n            this.loadItems();\n        }\n    }\n\n    public onSelectItem(item: Parameter): void {\n        this.onItemSelected.emit(item);\n    }\n\n    protected languageChanged() {\n        this.loadItems();\n    }\n\n    private loadItems() {\n        this.loading = true;\n        switch (this.endpoint) {\n            case 'offering':\n                this.apiInterface.getOfferings(this.serviceUrl, this.filter)\n                    .subscribe((res) => this.setItems(res), (error) => this.errorOnLoading);\n                break;\n            case 'phenomenon':\n                this.apiInterface.getPhenomena(this.serviceUrl, this.filter)\n                    .subscribe((res) => this.setItems(res), (error) => this.errorOnLoading);\n                break;\n            case 'procedure':\n                this.apiInterface.getProcedures(this.serviceUrl, this.filter)\n                    .subscribe((res) => this.setItems(res), (error) => this.errorOnLoading);\n                break;\n            case 'category':\n                this.apiInterface.getCategories(this.serviceUrl, this.filter)\n                    .subscribe((res) => this.setItems(res), (error) => this.errorOnLoading);\n                break;\n            case 'feature':\n                this.apiInterface.getFeatures(this.serviceUrl, this.filter)\n                    .subscribe((res) => this.setItems(res), (error) => this.errorOnLoading);\n                break;\n            default:\n                console.error('Wrong endpoint: ' + this.endpoint);\n        }\n    }\n\n    private errorOnLoading(): void {\n        this.loading = false;\n    }\n\n    private setItems(res: Parameter[]): void {\n        if (res instanceof Array) {\n            this.items = res;\n        } else {\n            this.items = [];\n        }\n        this.loading = false;\n    }\n}\n\n    \n\n    \n        \n    loading...\n\n\n    no results found\n\n\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    loading...    no results found    '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ServiceFilterSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceQuantities.html":{"url":"interfaces/ServiceQuantities.html","title":"interface - ServiceQuantities","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ServiceQuantities\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        categories\n                                \n                                \n                                            Optional\n                                        datasets\n                                \n                                \n                                            Optional\n                                        features\n                                \n                                \n                                            Optional\n                                        offerings\n                                \n                                \n                                            Optional\n                                        phenomena\n                                \n                                \n                                            Optional\n                                        platforms\n                                \n                                \n                                            Optional\n                                        procedures\n                                \n                                \n                                            Optional\n                                        stations\n                                \n                                \n                                            Optional\n                                        timeseries\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        datasets\n                                    \n                                \n                                \n                                    \n                                        datasets:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offerings\n                                    \n                                \n                                \n                                    \n                                        offerings:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phenomena\n                                    \n                                \n                                \n                                    \n                                        phenomena:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platforms\n                                    \n                                \n                                \n                                    \n                                        platforms:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        procedures\n                                    \n                                \n                                \n                                    \n                                        procedures:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stations\n                                    \n                                \n                                \n                                    \n                                        stations:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeseries\n                                    \n                                \n                                \n                                    \n                                        timeseries:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Parameter } from './parameter';\n\nexport interface Service extends Parameter {\n    id: string;\n    href: string;\n    label: string;\n    version: string;\n    extras: string[];\n    type: string;\n    quantities?: ServiceQuantities;\n    supportsfirstlatest?: boolean;\n    supportedmimetypes?: SupportedMimeTypes;\n    // for internal use:\n    apiUrl: string;\n}\n\nexport interface SupportedMimeTypes {}\n\nexport interface ServiceQuantities {\n    categories?: number;\n    features?: number;\n    offerings?: number;\n    phenomena?: number;\n    procedures?: number;\n    stations?: number;\n    timeseries?: number;\n    platforms?: number;\n    datasets?: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServiceSelectorComponent.html":{"url":"components/ServiceSelectorComponent.html","title":"component - ServiceSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServiceSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts\n\n\n    \n        Description\n    \n    \n        Component to select an item out of a list of provider with a given filter combination.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-service-selector\n            \n\n            \n                styleUrls\n                service-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./service-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadingCount\n                            \n                            \n                                    Public\n                                services\n                            \n                            \n                                    Public\n                                unResolvableServices\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isSelected\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                selectService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                datasetApiList\n                            \n                            \n                                filter\n                            \n                            \n                                providerBlacklist\n                            \n                            \n                                selectedService\n                            \n                            \n                                showUnresolvableServices\n                            \n                            \n                                supportStations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onServiceSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(serviceSelectorService: ServiceSelectorService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceSelectorService\n                                                  \n                                                        \n                                                                    ServiceSelectorService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        datasetApiList\n                    \n                    \n                            \n                            Type:    DatasetApi[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                    \n                            \n                            Type:    ParameterFilter\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        providerBlacklist\n                    \n                    \n                            \n                            Type:    BlacklistedService[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedService\n                    \n                    \n                            \n                            Type:    Service\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showUnresolvableServices\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        supportStations\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onServiceSelected\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:35\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isSelected(service: Service)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                        \n                                                                    Service\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectService(service: Service)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                        \n                                                                    Service\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadingCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            services\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        services:     Service[]\n\n                    \n                \n                    \n                        \n                            Type :     Service[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unResolvableServices\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unResolvableServices:     DatasetApi[]\n\n                    \n                \n                    \n                        \n                            Type :     DatasetApi[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { BlacklistedService, DatasetApi, ParameterFilter, Service } from '@helgoland/core';\n\nimport { ServiceSelectorService } from './service-selector.service';\n\n/**\n * Component to select an item out of a list of provider with a given filter combination.\n */\n@Component({\n    selector: 'n52-service-selector',\n    templateUrl: './service-selector.component.html',\n    styleUrls: ['./service-selector.component.scss']\n})\nexport class ServiceSelectorComponent implements OnInit {\n\n    @Input()\n    public datasetApiList: DatasetApi[];\n\n    @Input()\n    public providerBlacklist: BlacklistedService[];\n\n    @Input()\n    public supportStations: boolean;\n\n    @Input()\n    public selectedService: Service;\n\n    @Input()\n    public filter: ParameterFilter;\n\n    @Input()\n    public showUnresolvableServices: boolean;\n\n    @Output()\n    public onServiceSelected: EventEmitter = new EventEmitter();\n\n    public services: Service[];\n    public unResolvableServices: DatasetApi[];\n    public loadingCount = 0;\n\n    constructor(\n        protected serviceSelectorService: ServiceSelectorService\n    ) { }\n\n    public ngOnInit() {\n        if (!this.filter) { this.filter = {}; }\n        if (!this.providerBlacklist) { this.providerBlacklist = []; }\n        if (this.datasetApiList) {\n            this.loadingCount = this.datasetApiList.length;\n            this.services = [];\n            this.unResolvableServices = [];\n            this.datasetApiList.forEach((api) => {\n                this.serviceSelectorService.fetchServicesOfAPI(api.url, this.providerBlacklist, this.filter)\n                    .subscribe(\n                        (res) => {\n                            this.loadingCount--;\n                            if (res && res instanceof Array) {\n                                res.forEach((entry) => {\n                                    if (entry.quantities.platforms > 0\n                                        || this.supportStations && entry.quantities.stations > 0) {\n                                        this.services.push(entry);\n                                    }\n                                });\n                            }\n                            this.services.sort((a, b) => {\n                                if (a.label  b.label) { return 1; }\n                                return 0;\n                            });\n                        },\n                        (error) => {\n                            if (this.showUnresolvableServices) { this.unResolvableServices.push(api); }\n                            this.loadingCount--;\n                        });\n            });\n        }\n    }\n\n    public isSelected(service: Service) {\n        if (!this.selectedService) { return false; }\n        return this.selectedService.id === service.id && this.selectedService.apiUrl === service.apiUrl;\n    }\n\n    public selectService(service: Service) {\n        this.onServiceSelected.emit(service);\n    }\n}\n\n    \n\n    \n         0\">\n  Requesting {{loadingCount}} providers...\n\n\n  \n    {{service.label}}\n    {{service.type}}, {{service.version}}\n    \n    {{'service-selector.service-url' | translate}}: {{service.apiUrl}}\n    \n      {{'service-selector.stations' | translate}}: {{service.quantities.stations}}\n      {{'service-selector.platforms' | translate}}: {{service.quantities.platforms}}\n      {{'service-selector.timeseries' | translate}}: {{service.quantities.timeseries}}\n      {{'service-selector.datasets' | translate}}: {{service.quantities.datasets}}\n      {{'service-selector.phenomena' | translate}}: {{service.quantities.phenomena}}\n    \n  \n  \n    {{item.name}} is currently not reachable\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\">  Requesting {{loadingCount}} providers...      {{service.label}}    {{service.type}}, {{service.version}}        {{\\'service-selector.service-url\\' | translate}}: {{service.apiUrl}}          {{\\'service-selector.stations\\' | translate}}: {{service.quantities.stations}}      {{\\'service-selector.platforms\\' | translate}}: {{service.quantities.platforms}}      {{\\'service-selector.timeseries\\' | translate}}: {{service.quantities.timeseries}}      {{\\'service-selector.datasets\\' | translate}}: {{service.quantities.datasets}}      {{\\'service-selector.phenomena\\' | translate}}: {{service.quantities.phenomena}}            {{item.name}} is currently not reachable  '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ServiceSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServiceSelectorService.html":{"url":"injectables/ServiceSelectorService.html","title":"injectable - ServiceSelectorService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ServiceSelectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/selector/src/lib/service-selector/service-selector.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fetchServicesOfAPI\n                            \n                            \n                                    Private\n                                isServiceBlacklisted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiInterface: DatasetApiInterface)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiInterface\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fetchServicesOfAPI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fetchServicesOfAPI(url: string, blacklist: BlacklistedService[], filter: ParameterFilter)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        blacklist\n                                                        \n                                                                    BlacklistedService[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filter\n                                                        \n                                                                    ParameterFilter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isServiceBlacklisted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isServiceBlacklisted(serviceID: string, url: string, blacklist: BlacklistedService[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/selector/src/lib/service-selector/service-selector.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        blacklist\n                                                        \n                                                                    BlacklistedService[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DatasetApiInterface } from '@helgoland/core';\nimport { Service } from '@helgoland/core';\nimport { BlacklistedService } from '@helgoland/core';\nimport { ParameterFilter } from '@helgoland/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\n@Injectable()\nexport class ServiceSelectorService {\n\n    constructor(\n        protected apiInterface: DatasetApiInterface\n    ) { }\n\n    public fetchServicesOfAPI(\n        url: string,\n        blacklist: BlacklistedService[],\n        filter: ParameterFilter\n    ): Observable {\n        return new Observable((observer: Observer) => {\n            this.apiInterface.getServices(url, filter)\n                .subscribe(\n                    (services) => {\n                        if (services && services instanceof Array) {\n                            const usableServices = services.map((service) => {\n                                if (!this.isServiceBlacklisted(service.id, url, blacklist)) {\n                                    return service;\n                                }\n                            });\n                            observer.next(usableServices);\n                            observer.complete();\n                        }\n                    },\n                    (error) => {\n                        observer.error(error);\n                        observer.complete();\n                    });\n        });\n    }\n\n    private isServiceBlacklisted(serviceID: string, url: string, blacklist: BlacklistedService[]): boolean {\n        let isBlacklisted = false;\n        blacklist.forEach((entry) => {\n            if (entry.serviceId === serviceID && entry.apiUrl === url) {\n                isBlacklisted = true;\n            }\n        });\n        return isBlacklisted;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Settings.html":{"url":"interfaces/Settings.html","title":"interface - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/settings/settings.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        colorList\n                                \n                                \n                                            Optional\n                                        datasetApis\n                                \n                                \n                                            Optional\n                                        languages\n                                \n                                \n                                            Optional\n                                        providerBlackList\n                                \n                                \n                                            Optional\n                                        proxyUrl\n                                \n                                \n                                            Optional\n                                        refreshDataInterval\n                                \n                                \n                                            Optional\n                                        solveLabels\n                                \n                                \n                                            Optional\n                                        timespanPresets\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colorList\n                                    \n                                \n                                \n                                    \n                                        colorList:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        datasetApis\n                                    \n                                \n                                \n                                    \n                                        datasetApis:     DatasetApi[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DatasetApi[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        languages\n                                    \n                                \n                                \n                                    \n                                        languages:     [literal type]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [literal type]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providerBlackList\n                                    \n                                \n                                \n                                    \n                                        providerBlackList:     BlacklistedService[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BlacklistedService[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        proxyUrl\n                                    \n                                \n                                \n                                    \n                                        proxyUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshDataInterval\n                                    \n                                \n                                \n                                    \n                                        refreshDataInterval:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        solveLabels\n                                    \n                                \n                                \n                                    \n                                        solveLabels:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timespanPresets\n                                    \n                                \n                                \n                                    \n                                        timespanPresets:     TimespanPreset[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TimespanPreset[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timespan } from './../internal/timeInterval';\n\nexport interface Settings {\n    datasetApis?: DatasetApi[];\n    providerBlackList?: BlacklistedService[];\n    solveLabels?: boolean;\n    proxyUrl?: string;\n    timespanPresets?: TimespanPreset[];\n    colorList?: string[];\n    languages?: [{ label: string, code: string }];\n    refreshDataInterval?: number;\n}\n\nexport interface DatasetApi {\n    name: string;\n    url: string;\n}\n\nexport interface BlacklistedService {\n    serviceId: string;\n    apiUrl: string;\n}\n\nexport interface TimespanPreset {\n    name: string;\n    label: string;\n    timespan: TimespanMomentTemplate;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface ParsedTimespanPreset {\n    name: string;\n    label: string;\n    timespan: Timespan;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface TimespanMomentTemplate {\n    to: string;\n    from: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SettingsService.html":{"url":"classes/SettingsService.html","title":"class - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/settings/settings.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getSettings\n                            \n                            \n                                    Protected\n                                setSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/settings/settings.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            settings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        settings:     T\n\n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/settings/settings.service.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getSettings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSettings()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/settings/settings.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     T\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setSettings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setSettings(settings: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/settings/settings.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Settings } from '../model/settings/settings';\n\nexport abstract class SettingsService {\n\n    private settings: T;\n\n    constructor() {\n        // Default empty settings\n        this.settings = {} as T;\n    }\n\n    public getSettings() {\n        return this.settings;\n    }\n\n    protected setSettings(settings: T) {\n        this.settings = settings;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SingleFavorite.html":{"url":"interfaces/SingleFavorite.html","title":"interface - SingleFavorite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SingleFavorite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/favorite/src/lib/service/favorite.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Favorite\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        favorite\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        favorite\n                                    \n                                \n                                \n                                    \n                                        favorite:     IDataset\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IDataset\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IDataset, LocalStorage } from '@helgoland/core';\n\nconst CACHE_PARAM_FAVORITES_SINGLE = 'SingleFavorites';\nconst CACHE_PARAM_FAVORITES_GROUP = 'GroupFavorites';\n\n@Injectable()\nexport class FavoriteService {\n\n  private singleFavs: Map;\n  private groupFavs: Map;\n  private groupCounter = 0;\n\n  constructor(\n    protected localStorage: LocalStorage\n  ) {\n    this.loadFavorites();\n  }\n\n  public addFavorite(dataset: IDataset, label?: string): boolean {\n    if (!this.singleFavs.has(dataset.internalId)) {\n      this.singleFavs.set(dataset.internalId, {\n        id: dataset.internalId,\n        label: label ? label : dataset.label,\n        favorite: dataset\n      });\n      this.saveFavorites();\n      return true;\n    }\n    return false;\n  }\n\n  public hasFavorite(dataset: IDataset): boolean {\n    return this.singleFavs.has(dataset.internalId);\n  }\n\n  public getFavorites(): SingleFavorite[] {\n    return Array.from(this.singleFavs.values());\n  }\n\n  public removeFavorite(favoriteId: string): boolean {\n    if (this.singleFavs.has(favoriteId)) {\n      this.singleFavs.delete(favoriteId);\n      this.saveFavorites();\n      return true;\n    }\n    if (this.groupFavs.has(favoriteId)) {\n      this.groupFavs.delete(favoriteId);\n      this.saveFavorites();\n      return true;\n    }\n    return false;\n  }\n\n  public addFavoriteGroup(datasets: IDataset[], label?: string): boolean {\n    const id = 'Group' + this.groupCounter++;\n    this.groupFavs.set(id, {\n      id,\n      label: label ? label : id,\n      favorites: datasets\n    });\n    this.saveFavorites();\n    return true;\n  }\n\n  public getFavoriteGroups(): GroupFavorite[] {\n    return Array.from(this.groupFavs.values());\n  }\n\n  public removeAllFavorites(): boolean {\n    this.singleFavs.clear();\n    this.groupFavs.clear();\n    this.saveFavorites();\n    return true;\n  }\n\n  public changeLabel(favorite: Favorite, label: string) {\n    favorite.label = label;\n    if (isSingleFavorite(favorite)) { this.singleFavs.set(favorite.id, favorite); }\n    if (isGroupFavorite(favorite)) { this.groupFavs.set(favorite.id, favorite); }\n    this.saveFavorites();\n  }\n\n  private saveFavorites(): void {\n    this.localStorage.save(CACHE_PARAM_FAVORITES_SINGLE, this.getFavorites());\n    this.localStorage.save(CACHE_PARAM_FAVORITES_GROUP, this.getFavoriteGroups());\n  }\n\n  private loadFavorites(): void {\n    this.singleFavs = new Map();\n    this.groupFavs = new Map();\n    const loadedSingleFavs = this.localStorage.loadArray(CACHE_PARAM_FAVORITES_SINGLE);\n    if (loadedSingleFavs) {\n      loadedSingleFavs.forEach((entry) => this.singleFavs.set(entry.id, entry));\n    }\n    const loadedGroupFavs = this.localStorage.loadArray(CACHE_PARAM_FAVORITES_GROUP);\n    if (loadedGroupFavs) {\n      loadedGroupFavs.forEach((entry) => this.groupFavs.set(entry.id, entry));\n    }\n  }\n}\n\nexport interface Favorite {\n  id: string;\n  label: string;\n}\n\nexport interface SingleFavorite extends Favorite {\n  favorite: IDataset;\n}\n\nfunction isSingleFavorite(object: any): object is SingleFavorite {\n  return 'favorite' in object;\n}\n\nexport interface GroupFavorite extends Favorite {\n  favorites: IDataset[];\n}\n\nfunction isGroupFavorite(object: any): object is GroupFavorite {\n  return 'favorites' in object;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SplittedDataDatasetApiInterface.html":{"url":"injectables/SplittedDataDatasetApiInterface.html","title":"injectable - SplittedDataDatasetApiInterface","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SplittedDataDatasetApiInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/splitted-data-api-interface.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getTsData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpservice: HttpService, internalDatasetId: InternalIdHandler, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/dataset-api/splitted-data-api-interface.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpservice\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        internalDatasetId\n                                                  \n                                                        \n                                                                    InternalIdHandler\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTsData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTsData(id: string, apiUrl: string, timespan: Timespan, params: DataParameterFilter, options: HttpRequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/splitted-data-api-interface.service.ts:25\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        apiUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    DataParameterFilter\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    HttpRequestOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport moment from 'moment';\nimport { forkJoin, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Data } from '../model/dataset-api/data';\nimport { DataParameterFilter, HttpRequestOptions } from '../model/internal/http-requests';\nimport { Timespan } from '../model/internal/timeInterval';\nimport { DatasetImplApiInterface } from './dataset-impl-api-interface.service';\nimport { HttpService } from './http.service';\nimport { InternalIdHandler } from './internal-id-handler.service';\n\n@Injectable()\nexport class SplittedDataDatasetApiInterface extends DatasetImplApiInterface {\n\n    constructor(\n        protected httpservice: HttpService,\n        protected internalDatasetId: InternalIdHandler,\n        protected translate: TranslateService\n    ) {\n        super(httpservice, internalDatasetId, translate);\n    }\n\n    public getTsData(\n        id: string,\n        apiUrl: string,\n        timespan: Timespan,\n        params: DataParameterFilter = {},\n        options: HttpRequestOptions\n    ): Observable> {\n        const maxTimeExtent = moment.duration(1, 'year').asMilliseconds();\n        if ((timespan.to - timespan.from) > maxTimeExtent) {\n            const requests: Array>> = [];\n            let start = moment(timespan.from).startOf('year');\n            let end = moment(timespan.from).endOf('year');\n            while (start.isBefore(moment(timespan.to))) {\n                const chunkSpan = new Timespan(start.unix() * 1000, end.unix() * 1000);\n                requests.push(super.getTsData(id, apiUrl, chunkSpan, params, options));\n                start = end.add(1, 'millisecond');\n                end = moment(start).endOf('year');\n            }\n            return forkJoin(requests).pipe(map((entry) => {\n                return entry.reduce((previous, current) => {\n                    const next: Data = {\n                        referenceValues: {},\n                        values: previous.values.concat(current.values)\n                    };\n                    for (const key in previous.referenceValues) {\n                        if (previous.referenceValues.hasOwnProperty(key)) {\n                            next.referenceValues[key] = previous.referenceValues[key].concat(current.referenceValues[key]);\n                        }\n                    }\n                    return next;\n                });\n            }));\n        } else {\n            return super.getTsData(id, apiUrl, timespan, params, options);\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Station.html":{"url":"classes/Station.html","title":"class - Station","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Station\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/station.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                geometry\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geometry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geometry:     GeoJSON.GeometryObject\n\n                    \n                \n                    \n                        \n                            Type :     GeoJSON.GeometryObject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/station.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/station.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            properties\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        properties:     StationProperties\n\n                    \n                \n                    \n                        \n                            Type :     StationProperties\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/station.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ParameterConstellation, Timeseries } from './dataset';\nimport { Parameter } from './parameter';\n\nexport class Station {\n    public id: string;\n    public geometry: GeoJSON.GeometryObject;\n    public properties: StationProperties;\n}\n\nexport interface StationProperties extends Parameter {\n    timeseries: TimeseriesCollection | Timeseries;\n}\n\nexport class TimeseriesCollection {\n    [key: string]: ParameterConstellation;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StationProperties.html":{"url":"interfaces/StationProperties.html","title":"interface - StationProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StationProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/station.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Parameter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        timeseries\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        timeseries\n                                    \n                                \n                                \n                                    \n                                        timeseries:     TimeseriesCollection | Timeseries\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TimeseriesCollection | Timeseries\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ParameterConstellation, Timeseries } from './dataset';\nimport { Parameter } from './parameter';\n\nexport class Station {\n    public id: string;\n    public geometry: GeoJSON.GeometryObject;\n    public properties: StationProperties;\n}\n\nexport interface StationProperties extends Parameter {\n    timeseries: TimeseriesCollection | Timeseries;\n}\n\nexport class TimeseriesCollection {\n    [key: string]: ParameterConstellation;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatusCheckService.html":{"url":"injectables/StatusCheckService.html","title":"injectable - StatusCheckService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StatusCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/status-check/status-check.service.ts\n        \n\n            \n                Description\n            \n            \n                This class checks URLs if they are reachable by a simple get request. If they gets anything back, everything is ok, otherwise\nthe corresponding method gives back the URLs which are not reachable.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                urls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addUrl\n                            \n                            \n                                    Public\n                                checkAll\n                            \n                            \n                                    Public\n                                checkUrl\n                            \n                            \n                                    Public\n                                checkUrls\n                            \n                            \n                                    Private\n                                doCheck\n                            \n                            \n                                    Private\n                                doCheckUrl\n                            \n                            \n                                    Public\n                                removeUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/status-check/status-check.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/status-check/status-check.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Adds the URL to the internal collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            checkAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/status-check/status-check.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Checks all internal registered URLs if they are reachable. Gives back every URL, which was not reachable\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            checkUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/status-check/status-check.service.ts:30\n                            \n                        \n\n\n                \n                    \n                            Checks the given URL.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    Observable with the URL if not reachable.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            checkUrls\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkUrls(urls: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/status-check/status-check.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Checks the given URLs.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        urls\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    Observable of all not reachable URLs.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            doCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doCheck(urls: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/status-check/status-check.service.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        urls\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            doCheckUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doCheckUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/status-check/status-check.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/status-check/status-check.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Removes the URL of the internal collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urls\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        urls:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/status-check/status-check.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { forkJoin, Observable, Observer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * This class checks URLs if they are reachable by a simple get request. If they gets anything back, everything is ok, otherwise\n * the corresponding method gives back the URLs which are not reachable.\n */\n@Injectable()\nexport class StatusCheckService {\n\n  private urls: string[] = [];\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  /**\n   * Checks all internal registered URLs if they are reachable. Gives back every URL, which was not reachable\n   */\n  public checkAll(): Observable {\n    return this.doCheck(this.urls);\n  }\n\n  /**\n   * Checks the given URL.\n   * @returns Observable with the URL if not reachable.\n   */\n  public checkUrl(url: string): Observable {\n    return this.doCheckUrl(url);\n  }\n\n  /**\n   * Checks the given URLs.\n   * @returns Observable of all not reachable URLs.\n   */\n  public checkUrls(urls: string[]): Observable {\n    return this.doCheck(urls);\n  }\n\n  /**\n   * Adds the URL to the internal collection.\n   */\n  public addUrl(url: string) {\n    const index = this.urls.indexOf(url);\n    if (index === -1) { this.urls.push(url); }\n  }\n\n  /**\n   * Removes the URL of the internal collection.\n   */\n  public removeUrl(url: string) {\n    const index = this.urls.indexOf(url);\n    if (index > -1) { this.urls.splice(index, 1); }\n  }\n\n  private doCheckUrl(url: string): Observable {\n    return new Observable((observer: Observer) => {\n      this.httpClient.get(url).subscribe(\n        (res) => {\n          observer.next(null);\n          observer.complete();\n        },\n        (error) => {\n          observer.next(url);\n          observer.complete();\n        }\n      );\n    });\n  }\n\n  private doCheck(urls: string[]): Observable {\n    const requests: Array> = [];\n    urls.forEach((url) => requests.push(this.doCheckUrl(url)));\n    return forkJoin(requests).pipe(\n      map((checkedUrls) => {\n        return checkedUrls.filter((entry) => {\n          if (entry) {\n            return entry;\n          }\n        });\n      })\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StatusInterval.html":{"url":"interfaces/StatusInterval.html","title":"interface - StatusInterval","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StatusInterval\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        color\n                                \n                                \n                                        lower\n                                \n                                \n                                        name\n                                \n                                \n                                        upper\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lower\n                                    \n                                \n                                \n                                    \n                                        lower:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        upper\n                                    \n                                \n                                \n                                    \n                                        upper:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatusIntervalResolverService.html":{"url":"injectables/StatusIntervalResolverService.html","title":"injectable - StatusIntervalResolverService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StatusIntervalResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/helper/status-interval-resolver.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMatchingInterval\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/dataset-api/helper/status-interval-resolver.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getMatchingInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMatchingInterval(value: number, statusIntervals: StatusInterval[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/helper/status-interval-resolver.service.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        statusIntervals\n                                                        \n                                                                    StatusInterval[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     StatusInterval\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StatusInterval } from '../../model/dataset-api/dataset';\n\n@Injectable()\nexport class StatusIntervalResolverService {\n\n  constructor() { }\n\n  public getMatchingInterval(value: number, statusIntervals: StatusInterval[]): StatusInterval {\n    if (value && statusIntervals) {\n      return statusIntervals.find((interval) => {\n        const upper = interval.upper ? parseFloat(interval.upper) : Number.MAX_VALUE;\n        const lower = interval.lower ? parseFloat(interval.lower) : Number.MIN_VALUE;\n        if (lower \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StringTogglerComponent.html":{"url":"components/StringTogglerComponent.html","title":"component - StringTogglerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StringTogglerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/control/src/lib/string-toggler/string-toggler.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-string-toggler\n            \n\n\n\n\n            \n                templateUrl\n                ./string-toggler.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isToggled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                option\n                            \n                            \n                                tooltip\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onToggled\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/string-toggler/string-toggler.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        option\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/string-toggler/string-toggler.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/string-toggler/string-toggler.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/string-toggler/string-toggler.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onToggled\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/string-toggler/string-toggler.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/string-toggler/string-toggler.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/string-toggler/string-toggler.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isToggled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isToggled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/control/src/lib/string-toggler/string-toggler.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, Output, SimpleChanges, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'n52-string-toggler',\n    templateUrl: './string-toggler.component.html'\n})\nexport class StringTogglerComponent implements OnChanges {\n\n    @Input()\n    public value: string;\n\n    @Input()\n    public option: string;\n\n    @Input()\n    public icon: string;\n\n    @Input()\n    public tooltip: string;\n\n    @Output()\n    public onToggled: EventEmitter = new EventEmitter();\n\n    public isToggled: boolean;\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.value) {\n            this.isToggled = this.option === this.value;\n        }\n    }\n\n    public toggle() {\n        this.onToggled.emit(this.option);\n    }\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StringTogglerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SupportedMimeTypes.html":{"url":"interfaces/SupportedMimeTypes.html","title":"interface - SupportedMimeTypes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SupportedMimeTypes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/service.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\n\nexport interface Service extends Parameter {\n    id: string;\n    href: string;\n    label: string;\n    version: string;\n    extras: string[];\n    type: string;\n    quantities?: ServiceQuantities;\n    supportsfirstlatest?: boolean;\n    supportedmimetypes?: SupportedMimeTypes;\n    // for internal use:\n    apiUrl: string;\n}\n\nexport interface SupportedMimeTypes {}\n\nexport interface ServiceQuantities {\n    categories?: number;\n    features?: number;\n    offerings?: number;\n    phenomena?: number;\n    procedures?: number;\n    stations?: number;\n    timeseries?: number;\n    platforms?: number;\n    datasets?: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Time.html":{"url":"injectables/Time.html","title":"injectable - Time","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  Time\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/time/time.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                centerTimespan\n                            \n                            \n                                    Public\n                                createTimespanOfInterval\n                            \n                            \n                                    Public\n                                getBufferedTimespan\n                            \n                            \n                                    Private\n                                getDuration\n                            \n                            \n                                    Public\n                                initTimespan\n                            \n                            \n                                    Public\n                                loadTimespan\n                            \n                            \n                                    Public\n                                overlaps\n                            \n                            \n                                    Public\n                                saveTimespan\n                            \n                            \n                                    Public\n                                stepBack\n                            \n                            \n                                    Public\n                                stepForward\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/time/time.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorage\n                                                  \n                                                        \n                                                                    LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            centerTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        centerTimespan(timespan: Timespan, date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Timespan\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createTimespanOfInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createTimespanOfInterval(timeInterval: TimeInterval)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeInterval\n                                                        \n                                                                    TimeInterval\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Timespan\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getBufferedTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBufferedTimespan(timespan: Timespan, factor: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        factor\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Timespan\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getDuration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDuration(timespan: Timespan)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     moment.Duration\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initTimespan()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Timespan\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadTimespan(param: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Timespan\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            overlaps\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        overlaps(timeInterval: TimeInterval, from: number, to: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeInterval\n                                                        \n                                                                    TimeInterval\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        from\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        to\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            saveTimespan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveTimespan(param: string, timespan: Timespan)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stepBack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stepBack(timespan: Timespan)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Timespan\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stepForward\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stepForward(timespan: Timespan)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/time/time.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timespan\n                                                        \n                                                                    Timespan\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Timespan\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { plainToClass } from 'class-transformer';\nimport moment from 'moment';\n\nimport { LocalStorage } from '../local-storage/local-storage.service';\nimport { BufferedTime, TimeInterval, Timespan } from '../model/internal/timeInterval';\n\n@Injectable()\nexport class Time {\n\n    constructor(\n        protected localStorage: LocalStorage\n    ) { }\n\n    public centerTimespan(timespan: Timespan, date: Date): Timespan {\n        const halfduration = this.getDuration(timespan).asMilliseconds() / 2;\n        const from = moment(date).subtract(halfduration).unix() * 1000;\n        const to = moment(date).add(halfduration).unix() * 1000;\n        return new Timespan(from, to);\n    }\n\n    public stepBack(timespan: Timespan): Timespan {\n        const duration = this.getDuration(timespan);\n        const from = moment(timespan.from).subtract(duration).unix() * 1000;\n        const to = moment(timespan.to).subtract(duration).unix() * 1000;\n        return new Timespan(from, to);\n    }\n\n    public stepForward(timespan: Timespan): Timespan {\n        const duration = this.getDuration(timespan);\n        const from = moment(timespan.from).add(duration).unix() * 1000;\n        const to = moment(timespan.to).add(duration).unix() * 1000;\n        return new Timespan(from, to);\n    }\n\n    public overlaps(timeInterval: TimeInterval, from: number, to: number): boolean {\n        const timespan = this.createTimespanOfInterval(timeInterval);\n        if (timespan.from = from) {\n            return true;\n        }\n        return false;\n    }\n\n    public createTimespanOfInterval(timeInterval: TimeInterval): Timespan {\n        if (timeInterval instanceof Timespan) {\n            return timeInterval;\n        } else if (timeInterval instanceof BufferedTime) {\n            const duration = moment.duration(timeInterval.bufferInterval / 2);\n            const from = moment(timeInterval.timestamp).subtract(duration).unix() * 1000;\n            const to = moment(timeInterval.timestamp).add(duration).unix() * 1000;\n            return new Timespan(from, to);\n        } else {\n            console.error('Wrong time interval!');\n        }\n    }\n\n    public getBufferedTimespan(timespan: Timespan, factor: number): Timespan {\n        const durationMillis = this.getDuration(timespan).asMilliseconds();\n        const from = moment(timespan.from).subtract(durationMillis * factor).unix() * 1000;\n        const to = moment(timespan.to).add(durationMillis * factor).unix() * 1000;\n        return new Timespan(from, to);\n    }\n\n    public saveTimespan(param: string, timespan: Timespan) {\n        this.localStorage.save(param, timespan);\n    }\n\n    public loadTimespan(param: string): Timespan {\n        const json = this.localStorage.load(param);\n        if (json) {\n            return plainToClass(Timespan, json);\n        }\n        return null;\n    }\n\n    public initTimespan(): Timespan {\n        const now = new Date();\n        const start = moment(now).startOf('day').unix() * 1000;\n        const end = moment(now).endOf('day').unix() * 1000;\n        return new Timespan(start, end);\n    }\n\n    private getDuration(timespan: Timespan): moment.Duration {\n        const from = moment(timespan.from);\n        const to = moment(timespan.to);\n        return moment.duration(to.diff(from));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeInterval.html":{"url":"classes/TimeInterval.html","title":"class - TimeInterval","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeInterval\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/timeInterval.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class TimeInterval {\n\n}\n\nexport class Timespan extends TimeInterval {\n\n    public from: number;\n\n    public to: number;\n\n    constructor(\n        from: number,\n        to?: number\n    ) {\n        super();\n        this.from = from;\n        if (to) {\n            this.to = to;\n        } else {\n            this.to = from;\n        }\n    }\n\n}\n\nexport class BufferedTime extends TimeInterval {\n    public timestamp: Date;\n    public bufferInterval: number;\n\n    constructor(\n        timestamp: Date,\n        bufferInterval: number\n    ) {\n        super();\n        this.timestamp = timestamp;\n        this.bufferInterval = bufferInterval;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeListSelectorComponent.html":{"url":"components/TimeListSelectorComponent.html","title":"component - TimeListSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeListSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/time/src/lib/time-list-selector/time-list-selector.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-time-list-selector\n            \n\n\n\n\n            \n                templateUrl\n                ./time-list-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                selectTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                timeList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTimeSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        timeList\n                    \n                    \n                            \n                            Type:    number[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/time-list-selector/time-list-selector.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTimeSelected\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/time-list-selector/time-list-selector.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectTime(timestamp: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/time-list-selector/time-list-selector.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timestamp\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'n52-time-list-selector',\n  templateUrl: './time-list-selector.component.html'\n})\nexport class TimeListSelectorComponent {\n\n  @Input()\n  public timeList: number[];\n\n  @Output()\n  public onTimeSelected: EventEmitter = new EventEmitter();\n\n  public selectTime(timestamp: number) {\n    this.onTimeSelected.emit(timestamp);\n  }\n\n}\n\n    \n\n    \n        \n  {{time | date: 'medium'}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{time | date: \\'medium\\'}}'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimeListSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeRangeSliderCache.html":{"url":"injectables/TimeRangeSliderCache.html","title":"injectable - TimeRangeSliderCache","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TimeRangeSliderCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/time-range-slider/src/lib/time-range-slider.service.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IdCache, Timespan } from '@helgoland/core';\n\n@Injectable()\nexport class TimeRangeSliderCache extends IdCache { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeRangeSliderComponent.html":{"url":"components/TimeRangeSliderComponent.html","title":"component - TimeRangeSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeRangeSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-time-range-slider\n            \n\n            \n                styleUrls\n                time-range-slider.component.scss,.../../../../node_modules/bootstrap-slider/dist/css/bootstrap-slider.min.css\n            \n\n\n\n            \n                templateUrl\n                ./time-range-slider.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                end\n                            \n                            \n                                    Public\n                                selectionEnd\n                            \n                            \n                                    Public\n                                selectionStart\n                            \n                            \n                                    Public\n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                timeList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTimespanSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: TimeRangeSliderCache)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                    TimeRangeSliderCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                    \n                        \n                            Default value: ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        timeList\n                    \n                    \n                            \n                            Type:    number[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts:25\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTimespanSelected\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts:28\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            end\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        end:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectionEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectionEnd:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectionStart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectionStart:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        start:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/time-range-slider/src/lib/time-range-slider.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import 'bootstrap-slider';\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { Timespan } from '@helgoland/core';\n\nimport { TimeRangeSliderCache } from './time-range-slider.service';\n\nimport jquery from 'jquery';\n\n@Component({\n  selector: 'n52-time-range-slider',\n  templateUrl: './time-range-slider.component.html',\n  styleUrls: [\n    './time-range-slider.component.scss',\n    '../../../../../node_modules/bootstrap-slider/dist/css/bootstrap-slider.min.css'\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TimeRangeSliderComponent implements OnChanges {\n\n  @Input()\n  public id = '';\n\n  @Input()\n  public timeList: number[];\n\n  @Output()\n  public onTimespanSelected: EventEmitter = new EventEmitter();\n\n  public start: number;\n  public selectionStart: number;\n  public end: number;\n  public selectionEnd: number;\n\n  constructor(\n    protected cache: TimeRangeSliderCache\n  ) { }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.timeList && this.timeList) {\n      let min; let max;\n      this.start = min = this.timeList[0];\n      this.end = max = this.timeList[this.timeList.length - 1];\n      if (this.id && this.cache.has(this.id)) {\n        this.selectionStart = this.cache.get(this.id).from;\n        this.selectionEnd = this.cache.get(this.id).to;\n      } else {\n        this.selectionStart = this.start;\n        this.selectionEnd = this.end;\n      }\n      jquery('#slider').slider({\n        tooltip: 'hide',\n        min,\n        max,\n        value: [this.selectionStart, this.selectionEnd]\n      }).on('slideStop', (event: any) => {\n        const timespan: Timespan = new Timespan(event.value[0], event.value[1]);\n        this.cache.set(this.id, timespan);\n        this.onTimespanSelected.emit(timespan);\n      }).on('slide', (event: any) => {\n        this.selectionStart = event.value[0];\n        this.selectionEnd = event.value[1];\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{start | date : 'short'}}\n    \n    \n      \n    \n    \n      {{end | date : 'short'}}\n    \n  \n  \n    {{selectionStart | date : 'short'}}\n     - \n    {{selectionEnd | date : 'short'}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{start | date : \\'short\\'}}                            {{end | date : \\'short\\'}}            {{selectionStart | date : \\'short\\'}}     -     {{selectionEnd | date : \\'short\\'}}  '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimeRangeSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeValueEntry.html":{"url":"interfaces/TimeValueEntry.html","title":"interface - TimeValueEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeValueEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/data.ts\n        \n\n\n            \n                Extends\n            \n            \n                    IDataEntry\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        timestamp\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IDataEntry { }\n\nexport interface Data {\n    values: T[];\n    referenceValues: ReferenceValues;\n}\n\nexport class ReferenceValues {\n    [key: string]: T[];\n}\n\nexport interface TimeValueEntry extends IDataEntry {\n    timestamp: number;\n    value: number;\n}\n\nexport interface LocatedTimeValueEntry extends TimeValueEntry {\n    geometry: GeoJSON.Point;\n}\n\nexport interface ProfileDataEntry extends IDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n}\n\nexport interface LocatedProfileDataEntry extends ProfileDataEntry {\n    timestamp: number;\n    value: Array;\n    verticalUnit: string;\n    geometry: GeoJSON.GeoJsonObject;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimedDatasetOptions.html":{"url":"classes/TimedDatasetOptions.html","title":"class - TimedDatasetOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimedDatasetOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/options.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DatasetOptions\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                timestamp\n                            \n                            \n                                    Public\n                                color\n                            \n                            \n                                    Public\n                                    Optional\n                                generalize\n                            \n                            \n                                    Public\n                                internalId\n                            \n                            \n                                    Public\n                                lineWidth\n                            \n                            \n                                    Public\n                                    Optional\n                                loading\n                            \n                            \n                                    Public\n                                pointRadius\n                            \n                            \n                                    Public\n                                    Optional\n                                separateYAxis\n                            \n                            \n                                    Public\n                                showReferenceValues\n                            \n                            \n                                    Public\n                                visible\n                            \n                            \n                                    Public\n                                    Optional\n                                yAxisRange\n                            \n                            \n                                    Public\n                                    Optional\n                                zeroBasedYAxis\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(internalId: string, color: string, timestamp: number)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/model/internal/options.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        internalId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        color\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        timestamp\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timestamp:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/options.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            color\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        color:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            generalize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        generalize:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            internalId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        internalId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lineWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lineWidth:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pointRadius\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pointRadius:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            separateYAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        separateYAxis:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showReferenceValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showReferenceValues:     ReferenceValueOption[]\n\n                    \n                \n                    \n                        \n                            Type :     ReferenceValueOption[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            yAxisRange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        yAxisRange:     MinMaxRange\n\n                    \n                \n                    \n                        \n                            Type :     MinMaxRange\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            zeroBasedYAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zeroBasedYAxis:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     DatasetOptions\n\n                                \n                            \n                        \n                            \n                                    Defined in DatasetOptions:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DatasetOptions {\n    public internalId: string;\n    public color: string;\n    public visible = true;\n    public loading?: boolean;\n    public separateYAxis?: boolean = false;\n    public zeroBasedYAxis?: boolean = false;\n    public generalize?: boolean = false;\n    public showReferenceValues: ReferenceValueOption[] = [];\n    public pointRadius = 0;\n    public lineWidth = 1;\n    public yAxisRange?: MinMaxRange;\n\n    constructor(\n        internalId: string,\n        color: string\n    ) {\n        this.internalId = internalId;\n        this.color = color;\n    }\n}\n\nexport class ReferenceValueOption {\n    public id: string;\n    public color: string;\n}\n\nexport interface MinMaxRange {\n    min: number;\n    max: number;\n}\n\nexport class TimedDatasetOptions extends DatasetOptions {\n    public timestamp: number;\n\n    constructor(\n        internalId: string,\n        color: string,\n        timestamp: number\n    ) {\n        super(internalId, color);\n        this.timestamp = timestamp;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Timeseries.html":{"url":"classes/Timeseries.html","title":"class - Timeseries","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Timeseries\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IDataset\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                firstValue\n                            \n                            \n                                    Public\n                                hasData\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                internalId\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                lastValue\n                            \n                            \n                                    Public\n                                parameters\n                            \n                            \n                                    Public\n                                referenceValues\n                            \n                            \n                                    Public\n                                station\n                            \n                            \n                                    Public\n                                    Optional\n                                statusIntervals\n                            \n                            \n                                    Public\n                                uom\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstValue:     FirstLastValue\n\n                    \n                \n                    \n                        \n                            Type :     FirstLastValue\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasData:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            internalId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        internalId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastValue:     FirstLastValue\n\n                    \n                \n                    \n                        \n                            Type :     FirstLastValue\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parameters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parameters:     ParameterConstellation\n\n                    \n                \n                    \n                        \n                            Type :     ParameterConstellation\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            referenceValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        referenceValues:     ReferenceValue[]\n\n                    \n                \n                    \n                        \n                            Type :     ReferenceValue[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            station\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        station:     Station\n\n                    \n                \n                    \n                        \n                            Type :     Station\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            statusIntervals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statusIntervals:     StatusInterval[]\n\n                    \n                \n                    \n                        \n                            Type :     StatusInterval[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uom:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/dataset-api/dataset.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeseriesCollection.html":{"url":"classes/TimeseriesCollection.html","title":"class - TimeseriesCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeseriesCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/station.ts\n        \n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ParameterConstellation\n\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/model/dataset-api/station.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        import { ParameterConstellation, Timeseries } from './dataset';\nimport { Parameter } from './parameter';\n\nexport class Station {\n    public id: string;\n    public geometry: GeoJSON.GeometryObject;\n    public properties: StationProperties;\n}\n\nexport interface StationProperties extends Parameter {\n    timeseries: TimeseriesCollection | Timeseries;\n}\n\nexport class TimeseriesCollection {\n    [key: string]: ParameterConstellation;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeseriesExtras.html":{"url":"interfaces/TimeseriesExtras.html","title":"interface - TimeseriesExtras","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeseriesExtras\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/dataset-api/dataset.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        license\n                                \n                                \n                                            Optional\n                                        statusIntervals\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        license\n                                    \n                                \n                                \n                                    \n                                        license:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusIntervals\n                                    \n                                \n                                \n                                    \n                                        statusIntervals:     StatusInterval[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StatusInterval[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Parameter } from './parameter';\nimport { Station } from './station';\nimport { DatasetTypes, PlatformTypes } from './enums';\n\nexport interface IDataset extends Parameter {\n    url: string;\n    uom: string;\n    internalId: string;\n    firstValue: FirstLastValue;\n    lastValue: FirstLastValue;\n    referenceValues: ReferenceValue[];\n    parameters: ParameterConstellation;\n}\n\nexport class ParameterConstellation {\n    public service: Parameter;\n    public offering: Parameter;\n    public feature: Parameter;\n    public procedure: Parameter;\n    public phenomenon: Parameter;\n    public category: Parameter;\n}\n\nexport class FirstLastValue {\n    public timestamp: number;\n    public value: number;\n}\n\nexport class ReferenceValue {\n    public referenceValueId: string;\n    public label: string;\n    public lastValue: FirstLastValue;\n    public color?: string;\n    public visible?: boolean;\n}\n\nexport class DatasetParameterConstellation extends ParameterConstellation {\n    public platform: PlatformParameter;\n}\n\nexport class Dataset implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public datasetType: DatasetTypes;\n    public platformType: PlatformTypes;\n    public parameters: DatasetParameterConstellation;\n    public seriesParameters?: DatasetParameterConstellation;\n}\n\nexport class Timeseries implements IDataset {\n    public id: string;\n    public label: string;\n    public url: string;\n    public uom: string;\n    public internalId: string;\n    public firstValue: FirstLastValue;\n    public lastValue: FirstLastValue;\n    public referenceValues: ReferenceValue[];\n    public station: Station;\n    public parameters: ParameterConstellation;\n    public statusIntervals?: StatusInterval[];\n    public hasData = false;\n}\n\nexport interface TimeseriesExtras {\n    license?: string;\n    statusIntervals?: StatusInterval[];\n}\n\nexport interface StatusInterval {\n    lower: string;\n    upper: string;\n    name: string;\n    color: string;\n}\n\nexport interface PlatformParameter extends Parameter {\n    platformType: PlatformTypes;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Timespan.html":{"url":"classes/Timespan.html","title":"class - Timespan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Timespan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/internal/timeInterval.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeInterval\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                from\n                            \n                            \n                                    Public\n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(from: number, to?: number)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/core/src/lib/model/internal/timeInterval.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        from\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        to\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            from\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        from:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/timeInterval.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            to\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        to:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/model/internal/timeInterval.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class TimeInterval {\n\n}\n\nexport class Timespan extends TimeInterval {\n\n    public from: number;\n\n    public to: number;\n\n    constructor(\n        from: number,\n        to?: number\n    ) {\n        super();\n        this.from = from;\n        if (to) {\n            this.to = to;\n        } else {\n            this.to = from;\n        }\n    }\n\n}\n\nexport class BufferedTime extends TimeInterval {\n    public timestamp: Date;\n    public bufferInterval: number;\n\n    constructor(\n        timestamp: Date,\n        bufferInterval: number\n    ) {\n        super();\n        this.timestamp = timestamp;\n        this.bufferInterval = bufferInterval;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimespanButtonComponent.html":{"url":"components/TimespanButtonComponent.html","title":"component - TimespanButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimespanButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/time/src/lib/timespan-button/timespan-button.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-timespan-button\n            \n\n\n\n\n            \n                templateUrl\n                ./timespan-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                predefined\n                            \n                            \n                                timespanFunc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTimespanSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(predefinedSrvc: DefinedTimespanService)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/time/src/lib/timespan-button/timespan-button.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        predefinedSrvc\n                                                  \n                                                        \n                                                                    DefinedTimespanService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-button/timespan-button.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        predefined\n                    \n                    \n                            \n                            Type:    string | DefinedTimespan\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-button/timespan-button.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        timespanFunc\n                    \n                    \n                            \n                            Type:    function\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-button/timespan-button.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTimespanSelected\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-button/timespan-button.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clicked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clicked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-button/timespan-button.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DefinedTimespan, DefinedTimespanService, Timespan } from '@helgoland/core';\n\n@Component({\n  selector: 'n52-timespan-button',\n  templateUrl: './timespan-button.component.html'\n})\nexport class TimespanButtonComponent {\n\n  @Input()\n  public predefined: string | DefinedTimespan;\n\n  @Input()\n  public label: string;\n\n  @Input()\n  public timespanFunc: () => Timespan;\n\n  @Output()\n  public onTimespanSelected: EventEmitter = new EventEmitter();\n\n  constructor(\n    protected predefinedSrvc: DefinedTimespanService\n  ) { }\n\n  public clicked() {\n    if (this.predefined) {\n      this.onTimespanSelected.emit(this.predefinedSrvc.getInterval(this.predefined as DefinedTimespan));\n      return;\n    }\n    if (this.timespanFunc) {\n      this.onTimespanSelected.emit(this.timespanFunc());\n      return;\n    }\n    this.onTimespanSelected.emit();\n  }\n\n}\n\n    \n\n    \n        \n  {{label}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}'\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimespanButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimespanMomentTemplate.html":{"url":"interfaces/TimespanMomentTemplate.html","title":"interface - TimespanMomentTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimespanMomentTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/settings/settings.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        from\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timespan } from './../internal/timeInterval';\n\nexport interface Settings {\n    datasetApis?: DatasetApi[];\n    providerBlackList?: BlacklistedService[];\n    solveLabels?: boolean;\n    proxyUrl?: string;\n    timespanPresets?: TimespanPreset[];\n    colorList?: string[];\n    languages?: [{ label: string, code: string }];\n    refreshDataInterval?: number;\n}\n\nexport interface DatasetApi {\n    name: string;\n    url: string;\n}\n\nexport interface BlacklistedService {\n    serviceId: string;\n    apiUrl: string;\n}\n\nexport interface TimespanPreset {\n    name: string;\n    label: string;\n    timespan: TimespanMomentTemplate;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface ParsedTimespanPreset {\n    name: string;\n    label: string;\n    timespan: Timespan;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface TimespanMomentTemplate {\n    to: string;\n    from: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimespanPreset.html":{"url":"interfaces/TimespanPreset.html","title":"interface - TimespanPreset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimespanPreset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/model/settings/settings.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        seperatorAfterThisItem\n                                \n                                \n                                        timespan\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seperatorAfterThisItem\n                                    \n                                \n                                \n                                    \n                                        seperatorAfterThisItem:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timespan\n                                    \n                                \n                                \n                                    \n                                        timespan:     TimespanMomentTemplate\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TimespanMomentTemplate\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timespan } from './../internal/timeInterval';\n\nexport interface Settings {\n    datasetApis?: DatasetApi[];\n    providerBlackList?: BlacklistedService[];\n    solveLabels?: boolean;\n    proxyUrl?: string;\n    timespanPresets?: TimespanPreset[];\n    colorList?: string[];\n    languages?: [{ label: string, code: string }];\n    refreshDataInterval?: number;\n}\n\nexport interface DatasetApi {\n    name: string;\n    url: string;\n}\n\nexport interface BlacklistedService {\n    serviceId: string;\n    apiUrl: string;\n}\n\nexport interface TimespanPreset {\n    name: string;\n    label: string;\n    timespan: TimespanMomentTemplate;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface ParsedTimespanPreset {\n    name: string;\n    label: string;\n    timespan: Timespan;\n    seperatorAfterThisItem?: boolean;\n}\n\nexport interface TimespanMomentTemplate {\n    to: string;\n    from: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimespanShiftSelectorComponent.html":{"url":"components/TimespanShiftSelectorComponent.html","title":"component - TimespanShiftSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimespanShiftSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/time/src/lib/timespan-shift-selector/timespan-shift-selector.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-timespan-shift-selector\n            \n\n\n\n\n            \n                templateUrl\n                ./timespan-shift-selector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                back\n                            \n                            \n                                    Public\n                                forward\n                            \n                            \n                                    Public\n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                timespan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onOpenTimeSettings\n                            \n                            \n                                onTimespanChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(timeSrvc: Time)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/time/src/lib/timespan-shift-selector/timespan-shift-selector.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeSrvc\n                                                  \n                                                        \n                                                                    Time\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        timespan\n                    \n                    \n                            \n                            Type:    Timespan\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-shift-selector/timespan-shift-selector.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onOpenTimeSettings\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-shift-selector/timespan-shift-selector.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onTimespanChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-shift-selector/timespan-shift-selector.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            back\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        back()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-shift-selector/timespan-shift-selector.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forward\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forward()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-shift-selector/timespan-shift-selector.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        open()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/time/src/lib/timespan-shift-selector/timespan-shift-selector.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Time, Timespan } from '@helgoland/core';\n\n@Component({\n  selector: 'n52-timespan-shift-selector',\n  templateUrl: './timespan-shift-selector.component.html'\n})\nexport class TimespanShiftSelectorComponent {\n\n  @Input()\n  public timespan: Timespan;\n\n  @Output()\n  public onTimespanChange: EventEmitter = new EventEmitter();\n\n  @Output()\n  public onOpenTimeSettings: EventEmitter = new EventEmitter();\n\n  constructor(\n    protected timeSrvc: Time\n  ) { }\n\n  public back() {\n    this.onTimespanChange.emit(this.timeSrvc.stepBack(this.timespan));\n  }\n\n  public forward() {\n    this.onTimespanChange.emit(this.timeSrvc.stepForward(this.timespan));\n  }\n\n  public open() {\n    this.onOpenTimeSettings.emit();\n  }\n}\n\n    \n\n    \n        \n   &lt; \n  \n    {{timespan.from | date : 'medium'}} &nbsp;&ndash;&nbsp; {{timespan.to | date : 'medium'}}\n  \n   &gt; \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         {{timespan.from | date : \\'medium\\'}}  –  {{timespan.to | date : \\'medium\\'}}     > '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimespanShiftSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrajectoryEntryComponent.html":{"url":"components/TrajectoryEntryComponent.html","title":"component - TrajectoryEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TrajectoryEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ListEntryComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-trajectory-entry\n            \n\n\n\n\n            \n                templateUrl\n                ./trajectory-entry.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dataset\n                            \n                            \n                                    Public\n                                tempColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editDatasetOptions\n                            \n                            \n                                    Protected\n                                loadDataset\n                            \n                            \n                                    Public\n                                toggleVisibility\n                            \n                            \n                                    Protected\n                                    \n                                loadDataset\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                removeDataset\n                            \n                            \n                                    Public\n                                toggleSelection\n                            \n                            \n                                    Public\n                                toggleUomSelection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                datasetOptions\n                            \n                            \n                                datasetId\n                            \n                            \n                                highlight\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onEditOptions\n                            \n                            \n                                onUpdateOptions\n                            \n                            \n                                onDeleteDataset\n                            \n                            \n                                onSelectDataset\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: DatasetApiInterface, internalIdHandler: InternalIdHandler)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    DatasetApiInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        internalIdHandler\n                                                  \n                                                        \n                                                                    InternalIdHandler\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        datasetOptions\n                    \n                    \n                            \n                            Type:    DatasetOptions\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        datasetId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:7\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        highlight\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onEditOptions\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onUpdateOptions\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onDeleteDataset\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onSelectDataset\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editDatasetOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        editDatasetOptions(options: DatasetOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    DatasetOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            loadDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadDataset(id: string, url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleVisibility\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleVisibility()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                \n                            loadDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadDataset(id: string, url: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeDataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeDataset()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleSelection()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleUomSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleUomSelection(id: , selected: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ListEntryComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ListEntryComponent:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        selected\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataset:     Dataset\n\n                    \n                \n                    \n                        \n                            Type :     Dataset\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempColor:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/helgoland/depiction/src/lib/datasetlist/trajectory-entry/trajectory-entry.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DatasetApiInterface, Dataset, DatasetOptions, InternalIdHandler } from '@helgoland/core';\n\nimport { ListEntryComponent } from '../list-entry.component';\n\n@Component({\n    selector: 'n52-trajectory-entry',\n    templateUrl: './trajectory-entry.component.html'\n})\nexport class TrajectoryEntryComponent extends ListEntryComponent {\n\n    @Input()\n    public datasetOptions: DatasetOptions;\n\n    @Output()\n    public onUpdateOptions: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onEditOptions: EventEmitter = new EventEmitter();\n\n    public dataset: Dataset;\n\n    public tempColor: string;\n\n    constructor(\n        protected api: DatasetApiInterface,\n        protected internalIdHandler: InternalIdHandler\n    ) {\n        super(internalIdHandler);\n    }\n\n    public toggleVisibility() {\n        this.datasetOptions.visible = !this.datasetOptions.visible;\n        this.onUpdateOptions.emit(this.datasetOptions);\n    }\n\n    public editDatasetOptions(options: DatasetOptions) {\n        this.onEditOptions.emit(options);\n    }\n\n    protected loadDataset(id: string, url: string): void {\n        this.api.getDataset(id, url).subscribe((dataset) => this.dataset = dataset);\n    }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  {{dataset?.parameters.phenomenon.label}}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{dataset?.parameters.phenomenon.label}}  '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrajectoryEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrajectoryResult.html":{"url":"interfaces/TrajectoryResult.html","title":"interface - TrajectoryResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrajectoryResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/map/src/lib/selector/model/trajectory-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        dataset\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     LocatedProfileDataEntry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LocatedProfileDataEntry\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataset\n                                    \n                                \n                                \n                                    \n                                        dataset:     IDataset\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IDataset\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDataset, LocatedProfileDataEntry } from '@helgoland/core';\n\nexport interface TrajectoryResult {\n    dataset: IDataset;\n    data: LocatedProfileDataEntry;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UriParameterCoder.html":{"url":"classes/UriParameterCoder.html","title":"class - UriParameterCoder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UriParameterCoder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/core/src/lib/dataset-api/api-interface.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        HttpParameterCodec\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                decodeKey\n                            \n                            \n                                    Public\n                                decodeValue\n                            \n                            \n                                    Public\n                                encodeKey\n                            \n                            \n                                    Public\n                                encodeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            decodeKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decodeKey(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/api-interface.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            decodeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decodeValue(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/api-interface.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            encodeKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        encodeKey(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/api-interface.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            encodeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        encodeValue(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/core/src/lib/dataset-api/api-interface.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpParameterCodec, HttpParams } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\n\nimport { ApiInterface } from '../abstract-services/api-interface';\nimport { Category } from '../model/dataset-api/category';\nimport { Data } from '../model/dataset-api/data';\nimport { Dataset, Timeseries, TimeseriesExtras } from '../model/dataset-api/dataset';\nimport { Feature } from '../model/dataset-api/feature';\nimport { Offering } from '../model/dataset-api/offering';\nimport { Phenomenon } from '../model/dataset-api/phenomenon';\nimport { Platform } from '../model/dataset-api/platform';\nimport { Procedure } from '../model/dataset-api/procedure';\nimport { Service } from '../model/dataset-api/service';\nimport { Station } from '../model/dataset-api/station';\nimport { DataParameterFilter, HttpRequestOptions, ParameterFilter } from '../model/internal/http-requests';\nimport { Timespan } from '../model/internal/timeInterval';\nimport { HttpService, HttpServiceMetadata } from './http.service';\nimport { DatasetApiV2 } from './interfaces/api-v2.interface';\n\nexport class UriParameterCoder implements HttpParameterCodec {\n\n    public encodeKey(key: string): string {\n        return encodeURIComponent(key);\n    }\n\n    public encodeValue(value: string): string {\n        return encodeURIComponent(value);\n    }\n\n    public decodeKey(key: string): string {\n        return key;\n    }\n\n    public decodeValue(value: string): string {\n        return value;\n    }\n}\n\nexport abstract class DatasetApiInterface extends ApiInterface implements DatasetApiV2 {\n\n    constructor(\n        protected httpService: HttpService,\n        protected translate: TranslateService\n    ) { super(); }\n\n    public abstract getPlatforms(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getPlatform(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getDatasets(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getDataset(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getData(\n        id: string, apiUrl: string, timespan: Timespan, params?: DataParameterFilter, options?: HttpRequestOptions\n    ): Observable>;\n    public abstract getServices(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getService(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getStations(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getStation(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getTimeseries(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getSingleTimeseries(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getTimeseriesExtras(id: string, apiUrl: string): Observable;\n    public abstract getTsData(\n        id: string, apiUrl: string, timespan: Timespan, params?: DataParameterFilter, options?: HttpRequestOptions\n    ): Observable>;\n    public abstract getCategories(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getCategory(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getPhenomena(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getPhenomenon(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getOfferings(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getOffering(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getFeatures(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getFeature(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getProcedures(\n        apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n    public abstract getProcedure(\n        id: string, apiUrl: string, params?: ParameterFilter, options?: HttpRequestOptions\n    ): Observable;\n\n    protected requestApi(url: string, params: ParameterFilter = {}, options: HttpServiceMetadata = {}): Observable {\n        return this.httpService.client(options).get(url, { params: this.prepareParams(params) });\n    }\n\n    protected prepareParams(params: ParameterFilter): HttpParams {\n        if (this.translate && this.translate.currentLang) {\n            params.locale = this.translate.currentLang;\n        }\n        let httpParams = new HttpParams({\n            encoder: new UriParameterCoder()\n        });\n        Object.getOwnPropertyNames(params)\n            .forEach((key) => httpParams = httpParams.set(key, params[key]));\n        return httpParams;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/YScale.html":{"url":"interfaces/YScale.html","title":"interface - YScale","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  YScale\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/helgoland/d3/src/lib/d3-timeseries-graph/d3-timeseries-graph.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        buffer\n                                \n                                \n                                        yScale\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buffer\n                                    \n                                \n                                \n                                    \n                                        buffer:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yScale\n                                    \n                                \n                                \n                                    \n                                        yScale:     d3.ScaleLinear\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     d3.ScaleLinear\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    IterableDiffers,\n    Output,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {\n    ColorService,\n    Data,\n    DatasetApiInterface,\n    DatasetOptions,\n    DatasetPresenterComponent,\n    IDataset,\n    InternalIdHandler,\n    MinMaxRange,\n    Time,\n    Timeseries,\n    Timespan,\n} from '@helgoland/core';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\nimport { D3PlotOptions } from '../model/d3-plot-options';\n\ninterface DataEntry {\n    yDiagCoord?: number;\n    timestamp?: number;\n    xDiagMin?: number;\n    xDiagMax?: number;\n    yDiagMin?: number;\n    yDiagMax?: number;\n    xDiagCoord?: number;\n}\n\ninterface HighlightDataset {\n    id: string;\n    change: boolean;\n}\n\ninterface YScale {\n    buffer: number;\n    yScale: d3.ScaleLinear;\n}\n\ninterface YRanges {\n    uom: string;\n    range: MinMaxRange;\n    zeroBased: boolean;\n    ids: string[];\n    first?: boolean;\n    yScale?: d3.ScaleLinear;\n    offset?: number;\n}\n\ninterface InternalDataEntry {\n    internalId: string;\n    color: string;\n    data: [number, number][];\n    points: {\n        fillColor: string\n    };\n    lines: {\n        lineWidth: number;\n        pointRadius: number;\n    };\n    bars: {\n        lineWidth: number;\n    };\n    axisOptions: {\n        uom: string;\n        label: string;\n        zeroBased: boolean;\n        yAxisRange: MinMaxRange;\n    };\n    visible: boolean;\n}\n\ninterface DataYRange {\n    uom: string;\n    range?: MinMaxRange;\n    id: string;\n    zeroBasedYAxis: boolean;\n}\n\ninterface DataConst extends IDataset {\n    data?: Data;\n}\n\n@Component({\n    selector: 'n52-d3-timeseries-graph',\n    templateUrl: './d3-timeseries-graph.component.html',\n    styleUrls: ['./d3-timeseries-graph.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class D3TimeseriesGraphComponent\n    extends DatasetPresenterComponent\n    implements AfterViewInit {\n\n    @Input()\n    // difference to timespan/timeInterval --> if brush, then this is the timespan of the main-diagram\n    public mainTimeInterval: Timespan;\n\n    @Output()\n    public onSelectId: EventEmitter = new EventEmitter();\n\n    @Output()\n    public onContentLoading: EventEmitter = new EventEmitter();\n\n    @ViewChild('d3timeseries')\n    public d3Elem: ElementRef;\n\n    // set zoom limit --> can be adapted to needs\n    private config = {\n        time: {\n            zoomLimit: 10800000  // 3 hour ((3 * 3600) * 1000) limitation\n        }\n    };\n\n    private preparedData = Array(); // : DataSeries[]\n    private mousedownBrush: boolean;\n    private rawSvg: any; // d3.Selection;\n    private graph: any;\n    private graphBody: any;\n    private dragRect: any;\n    private dragRectG: any;\n    private xAxisRange: Timespan; // x domain range\n    private xAxisRangeOrigin: any; // x domain range\n    private xAxisRangePan: [number, number]; // x domain range\n    private yRangesEachUom: YRanges[]; // y array of objects containing ranges for each uom\n    private dataYranges: DataYRange[]; // y array of objects containing ranges of all datasets\n    private ypos: any; // y array of objects containing ranges of all datasets\n    private idxOfPos = 0;\n\n    private height: number;\n    private width: number;\n    private margin = {\n        top: 10,\n        right: 10,\n        bottom: 40,\n        left: 40\n    };\n    private maxLabelwidth = 0;\n    private xScaleBase: d3.ScaleLinear; // calculate diagram coord of x value\n    private yScaleBase: d3.ScaleLinear; // calculate diagram coord of y value\n    private background: any;\n    private focusG: any;\n    private highlightFocus: any;\n    private focuslabelTime: any;\n    private bufferSum: number;\n    private labelTimestamp: number[];\n\n    private dragging: boolean;\n    private dragStart: [number, number];\n    private dragCurrent: [number, number];\n\n    private draggingMove: boolean;\n    private dragMoveStart: [number, number];\n    private dragMoveRange: [number, number];\n\n    private addLineWidth = 2; // value added to linewidth\n\n    // default plot options\n    private plotOptions: D3PlotOptions = {\n        showReferenceValues: false,\n        generalizeAllways: true,\n        togglePanZoom: true,\n        hoverable: true,\n        grid: true,\n        yaxis: true,\n        overview: false\n    };\n\n    private datasetMap: Map = new Map();\n\n    private loadingCounter = 0;\n    private currentTimeId: string;\n\n    constructor(\n        protected iterableDiffers: IterableDiffers,\n        protected api: DatasetApiInterface,\n        protected datasetIdResolver: InternalIdHandler,\n        protected timeSrvc: Time,\n        private colorService: ColorService\n    ) {\n        super(iterableDiffers, api, datasetIdResolver, timeSrvc);\n    }\n\n    public ngAfterViewInit(): void {\n        this.currentTimeId = this.uuidv4();\n\n        this.rawSvg = d3.select(this.d3Elem.nativeElement)\n            .append('svg')\n            .attr('width', '100%')\n            .attr('height', '100%');\n\n        this.graph = this.rawSvg\n            .append('g')\n            .attr('transform', 'translate(' + (this.margin.left + this.maxLabelwidth) + ',' + this.margin.top + ')');\n\n        this.mousedownBrush = false;\n        this.dataYranges = [];\n        this.xAxisRangeOrigin = [];\n    }\n\n    public reloadData(): void {\n        // not implemented yet\n    }\n\n    protected addDataset(id: string, url: string): void {\n        this.api.getSingleTimeseries(id, url).subscribe(\n            (timeseries) => this.loadAddedDataset(timeseries),\n            (error) => {\n                this.api.getDataset(id, url).subscribe(\n                    (dataset) => this.loadAddedDataset(dataset),\n                );\n            }\n        );\n    }\n    protected removeDataset(internalId: string): void {\n        this.dataYranges = [];\n        this.xAxisRangeOrigin = [];\n        this.datasetMap.delete(internalId);\n        let spliceIdx = this.preparedData.findIndex((entry) => entry.internalId === internalId);\n        if (spliceIdx >= 0) {\n            this.preparedData.splice(spliceIdx, 1);\n            if (this.preparedData.length  {\n                    this.processData(entry);\n                });\n            }\n        }\n    }\n    protected setSelectedId(internalId: string): void {\n        const tsData = this.preparedData.find((e) => e.internalId === internalId);\n        if (!tsData.selected || tsData.selected === undefined) {\n            tsData.selected = true;\n            tsData.lines.lineWidth += this.addLineWidth;\n            tsData.lines.pointRadius += this.addLineWidth;\n            tsData.bars.lineWidth += this.addLineWidth;\n        }\n        this.plotGraph();\n    }\n    protected removeSelectedId(internalId: string): void {\n        const tsData = this.preparedData.find((e) => e.internalId === internalId);\n        if (tsData.selected || tsData.selected === undefined) {\n            tsData.selected = false;\n            tsData.lines.lineWidth -= this.addLineWidth;\n            tsData.lines.pointRadius -= this.addLineWidth;\n            tsData.bars.lineWidth -= this.addLineWidth;\n        }\n        this.plotGraph();\n    }\n    protected graphOptionsChanged(options: D3PlotOptions): void {\n\n        Object.assign(this.plotOptions, options);\n        if (this.rawSvg && this.yRangesEachUom) {\n            this.plotGraph();\n        }\n    }\n    protected datasetOptionsChanged(internalId: string, options: DatasetOptions, firstChange: boolean) {\n        if (!firstChange && this.datasetMap.has(internalId)) {\n            this.loadDataset(this.datasetMap.get(internalId));\n        }\n    }\n    protected timeIntervalChanges(): void {\n        this.datasetMap.forEach((dataset) => {\n            this.loadDataset(dataset);\n        });\n    }\n    protected onResize(): void {\n        this.plotGraph();\n    }\n\n    private changeTime(from: number, to: number) {\n        if (to - from (dataset.id, dataset.url, buffer,\n                {\n                    format: 'flot',\n                    expanded: this.plotOptions.showReferenceValues === true,\n                    generalize: this.plotOptions.generalizeAllways || datasetOptions.generalize\n                }\n            ).subscribe(\n                (result) => {\n                    this.datasetMap.get(dataset.internalId).data = result;\n                    this.prepareTsData(dataset).subscribe(() => {\n                    });\n                },\n                (error) => this.onError(error),\n                () => {\n                    this.onCompleteLoadingData();\n                }\n            );\n        }\n    }\n\n    private onCompleteLoadingData() {\n        this.loadingCounter--;\n        if (this.loadingCounter === 0) { this.isContentLoadingD3(false); }\n    }\n\n    /**\n     * Function to prepare each dataset for the graph and adding it to an array of datasets.\n     * @param dataset {IDataset} Object of the whole dataset\n     */\n    private prepareTsData(dataset: IDataset): Observable { // , data: Data\n        return Observable.create((observer: Observer) => {\n            const datasetIdx = this.preparedData.findIndex((e) => e.internalId === dataset.internalId);\n            const styles = this.datasetOptions.get(dataset.internalId);\n            const data = this.datasetMap.get(dataset.internalId).data;\n\n            // TODO: change uom for testing\n            // if (this.preparedData.length > 0) {\n            //     dataset.uom = 'mc';\n            // }\n\n            // generate random color, if color is not defined\n            if (styles.color === undefined) {\n                styles.color = this.colorService.getColor();\n            }\n\n\n            // end of check for datasets\n            const dataEntry: InternalDataEntry = {\n                internalId: dataset.internalId,\n                color: styles.color,\n                data: styles.visible ? data.values : [],\n                points: {\n                    fillColor: styles.color\n                },\n                lines: {\n                    lineWidth: styles.lineWidth,\n                    pointRadius: styles.pointRadius\n                },\n                bars: {\n                    lineWidth: styles.lineWidth\n                },\n                axisOptions: {\n                    uom: dataset.uom,\n                    label: dataset.label,\n                    zeroBased: styles.zeroBasedYAxis,\n                    yAxisRange: styles.yAxisRange\n                },\n                visible: styles.visible\n            };\n            // alternative linewWidth = this.plotOptions.selected.includes(dataset.uom)\n            if (this.selectedDatasetIds.indexOf(dataset.internalId) >= 0) {\n                dataEntry.lines.lineWidth += this.addLineWidth;\n                dataEntry.lines.pointRadius += this.addLineWidth;\n                dataEntry.bars.lineWidth += this.addLineWidth;\n            }\n\n            if (datasetIdx >= 0) {\n                this.preparedData[datasetIdx] = dataEntry;\n            } else {\n                this.preparedData.push(dataEntry);\n            }\n            this.addReferenceValueData(dataset.internalId, styles, data, dataset.uom);\n            this.processData(dataEntry);\n            this.plotGraph();\n        });\n    }\n\n    /**\n     * Function to add referencevaluedata to the dataset (e.g. mean).\n     * @param internalId {String} String with the id of a dataset\n     * @param styles {DatasetOptions} Object containing information for dataset styling\n     * @param data {Data} Array of Arrays containing the measurement-data of the dataset\n     * @param uomO {String} String with the uom of a dataset\n     */\n    private addReferenceValueData(internalId: string, styles: DatasetOptions, data: Data, uomO: string) {\n        this.preparedData = this.preparedData.filter((entry) => {\n            return !entry.internalId.startsWith('ref' + internalId);\n        });\n        if (this.plotOptions.showReferenceValues) {\n            styles.showReferenceValues.forEach((refValue) => {\n                const refDataEntry = {\n                    internalId: 'ref' + internalId + refValue.id,\n                    color: refValue.color,\n                    data: data.referenceValues[refValue.id],\n                    points: {\n                        fillColor: refValue.color\n                    },\n                    lines: {\n                        lineWidth: 1\n                    },\n                    axisOptions: {\n                        uom: uomO\n                    }\n                };\n                this.preparedData.push(refDataEntry);\n            });\n        }\n    }\n\n    /**\n     * Function that processes the data to calculate y axis range of each dataset.\n     * @param dataEntry {DataEntry} Object containing dataset related data.\n     * @param internalId {String} String with the ID of a dataset.\n     */\n    private processData(dataEntry: InternalDataEntry) {\n        let calculatedRange: MinMaxRange;\n        let predefinedRange = dataEntry.axisOptions.yAxisRange;\n\n        // get min and max value of data\n        const dataExtent = d3.extent(dataEntry.data, (datum, index, array) => {\n            return datum[1]; // datum[0] = timestamp -- datum[1] = value\n        });\n\n        // let outOfrange = false;\n        let setDataExtent = false;\n\n        // calculate out of predefined range\n        if (predefinedRange && !this.graphOptions.overview) {\n            if (predefinedRange.min > predefinedRange.max) {\n                calculatedRange = { min: predefinedRange.max, max: predefinedRange.min };\n            } else {\n                calculatedRange = predefinedRange;\n            }\n            if (predefinedRange.min > dataExtent[1] || predefinedRange.max = 0) {\n                calculatedRange.min = 0;\n            }\n        }\n\n        const newDatasetIdx = this.preparedData.findIndex((e) => e.internalId === dataEntry.internalId);\n\n        // set range, uom and id for each dataset\n        if (dataEntry.visible) {\n            this.dataYranges[newDatasetIdx] = {\n                uom: dataEntry.axisOptions.uom,\n                id: dataEntry.internalId,\n                zeroBasedYAxis: dataEntry.axisOptions.zeroBased\n            };\n            if (isFinite(calculatedRange.min) && isFinite(calculatedRange.max)) {\n                this.dataYranges[newDatasetIdx].range = calculatedRange;\n            }\n        } else {\n            this.dataYranges[newDatasetIdx] = null;\n        }\n\n        // set range and array of IDs for each uom to generate y-axis later on\n        this.yRangesEachUom = [];\n        this.dataYranges.forEach((obj) => {\n            if (obj !== null) {\n                let idx = this.yRangesEachUom.findIndex((e) => e.uom === obj.uom);\n                let yrangeObj: YRanges = {\n                    uom: obj.uom,\n                    range: obj.range,\n                    ids: [obj.id],\n                    zeroBased: obj.zeroBasedYAxis\n                };\n\n                if (idx >= 0) {\n                    if (this.yRangesEachUom[idx].range) {\n                        if (obj.range) {\n                            if (this.yRangesEachUom[idx].range.min > obj.range.min && !isNaN(obj.range.min)) {\n                                this.yRangesEachUom[idx].range.min = obj.range.min;\n                            }\n                            if (this.yRangesEachUom[idx].range.max  {\n            entry.first = (this.yScaleBase === null);\n            entry.offset = this.bufferSum;\n\n            let yAxisResult = this.drawYaxis(entry);\n            if (this.yScaleBase === null) {\n                this.yScaleBase = yAxisResult.yScale;\n            } else {\n                this.bufferSum = yAxisResult.buffer;\n            }\n            entry.yScale = yAxisResult.yScale;\n        });\n\n        if (!this.yScaleBase) {\n            return;\n        }\n\n        // draw x and y axis\n        this.drawXaxis(this.bufferSum);\n        this.preparedData.forEach((entry) => {\n            this.drawGraphLine(entry);\n        });\n\n        // #####################################################\n        // create background rect\n        if (!this.plotOptions.overview) {\n            // execute when it is not an overview diagram\n            this.background = this.graph.append('svg:rect')\n                .attr('width', this.width - this.bufferSum)\n                .attr('height', this.height)\n                .attr('fill', 'none')\n                .attr('stroke', 'none')\n                .attr('pointer-events', 'all')\n                .attr('transform', 'translate(' + this.bufferSum + ', 0)');\n\n            // mouse events hovering\n            if (this.plotOptions.hoverable) {\n                this.background\n                    .on('mousemove.focus', this.mousemoveHandler)\n                    .on('mouseout.focus', this.mouseoutHandler);\n\n                // line inside graph\n                this.focusG = this.graph.append('g');\n                this.highlightFocus = this.focusG.append('svg:line')\n                    .attr('class', 'mouse-focus-line')\n                    .attr('x2', '0')\n                    .attr('y2', '0')\n                    .attr('x1', '0')\n                    .attr('y1', '0')\n                    .style('stroke', 'black')\n                    .style('stroke-width', '1px');\n\n                this.preparedData.forEach((entry) => {\n                    // label inside graph\n                    entry.focusLabelRect = this.focusG.append('svg:rect')\n                        .attr('class', 'mouse-focus-label')\n                        .style('fill', 'white')\n                        .style('stroke', 'none')\n                        .style('pointer-events', 'none');\n                    entry.focusLabel = this.focusG.append('svg:text')\n                        .attr('class', 'mouse-focus-label')\n                        .style('pointer-events', 'none')\n                        .style('fill', entry.color)\n                        .style('font-weight', 'lighter');\n\n                    this.focuslabelTime = this.focusG.append('svg:text')\n                        .style('pointer-events', 'none')\n                        .attr('class', 'mouse-focus-time');\n                });\n            }\n\n            if (this.plotOptions.togglePanZoom === false) {\n                this.background\n                    .call(d3.zoom()\n                        .on('start', this.zoomStartHandler)\n                        .on('zoom', this.zoomHandler)\n                        .on('end', this.zoomEndHandler)\n                    );\n            } else {\n                this.background\n                    .call(d3.drag()\n                        .on('start', this.panStartHandler)\n                        .on('drag', this.panMoveHandler)\n                        .on('end', this.panEndHandler));\n            }\n        } else {\n            // execute when it is overview diagram\n            let interval = this.getXDomainByTimestamp();\n            let overviewTimespanInterval = [interval[0], interval[1]];\n\n            // create brush\n            let brush = d3.brushX()\n                .extent([[0, 0], [this.width, this.height]])\n                .on('end', () => {\n                    // on mouseclick change time after brush was moved\n                    if (this.mousedownBrush) {\n                        let timeByCoord = this.getTimestampByCoord(d3.event.selection[0], d3.event.selection[1]);\n                        this.changeTime(timeByCoord[0], timeByCoord[1]);\n                    }\n                    this.mousedownBrush = false;\n                });\n\n            // add brush to svg\n            this.background = this.graph.append('g')\n                .attr('width', this.width)\n                .attr('height', this.height)\n                .attr('pointer-events', 'all')\n                .attr('class', 'brush')\n                .call(brush)\n                .call(brush.move, overviewTimespanInterval);\n\n            /**\n             * add event to selection to prevent unnecessary re-rendering of brush\n             * add style of brush selection here\n             * e.g. 'fill' for color,\n             * 'stroke' for borderline-color,\n             * 'stroke-dasharray' for customizing borderline-style\n             */\n            this.background.selectAll('.selection')\n                .attr('stroke', 'none')\n                .on('mousedown', () => {\n                    this.mousedownBrush = true;\n                });\n\n            // do not allow clear selection\n            this.background.selectAll('.overlay')\n                .remove();\n\n            // add event to resizing handle to allow change time on resize\n            this.background.selectAll('.handle')\n                .style('fill', 'red')\n                .style('opacity', 0.3)\n                .attr('stroke', 'none')\n                .on('mousedown', () => {\n                    this.mousedownBrush = true;\n                });\n        }\n    }\n\n    /**\n     * Function that calculates and returns the x diagram coordinate for the brush range\n     * for the overview diagram by the selected time interval of the main diagram.\n     * Calculate to get brush extent when main diagram time interval changes.\n     */\n    private getXDomainByTimestamp() {\n        /**\n         * calculate range of brush with timestamp and not diagram coordinates\n         * formula:\n         * brush_min =\n         * (overview_width / (overview_max - overview_min)) * (brush_min - overview_min)\n         * brus_max =\n         * (overview_width / (overview_max - overview_min)) * (brush_max - overview_min)\n         */\n\n        let minOverviewTimeInterval = this.timespan.from;\n        let maxOverviewTimeInterval = this.timespan.to;\n        let minDiagramTimestamp = this.mainTimeInterval.from;\n        let maxDiagramTimestamp = this.mainTimeInterval.to;\n        let diagramWidth = this.width;\n\n        let diffOverviewTimeInterval = maxOverviewTimeInterval - minOverviewTimeInterval;\n        let divOverviewTimeWidth = diagramWidth / diffOverviewTimeInterval;\n        let minCalcBrush = divOverviewTimeWidth * (minDiagramTimestamp - minOverviewTimeInterval);\n        let maxCalcBrush = divOverviewTimeWidth * (maxDiagramTimestamp - minOverviewTimeInterval);\n\n        return [minCalcBrush, maxCalcBrush];\n    }\n\n    /**\n     * Function that calculates and returns the timestamp for the main diagram calculated\n     * by the selected coordinate of the brush range.\n     * @param minCalcBrush {Number} Number with the minimum coordinate of the selected brush range.\n     * @param maxCalcBrush {Number} Number with the maximum coordinate of the selected brush range.\n     */\n    private getTimestampByCoord(minCalcBrush, maxCalcBrush) {\n        /**\n         * calculate range of brush with timestamp and not diagram coordinates\n         * formula:\n         * minDiagramTimestamp =\n         * ((minCalcBrush / overview_width) * (overview_max - overview_min)) + overview_min\n         * maxDiagramTimestamp =\n         * ((maxCalcBrush / overview_width) * (overview_max - overview_min)) + overview_min\n         */\n\n        let minOverviewTimeInterval = this.timespan.from;\n        let maxOverviewTimeInterval = this.timespan.to;\n        let diagramWidth = this.width;\n\n        let diffOverviewTimeInterval = maxOverviewTimeInterval - minOverviewTimeInterval;\n        let minDiagramTimestamp = ((minCalcBrush / diagramWidth) * diffOverviewTimeInterval) + minOverviewTimeInterval;\n        let maxDiagramTimestamp = ((maxCalcBrush / diagramWidth) * diffOverviewTimeInterval) + minOverviewTimeInterval;\n\n        return [minDiagramTimestamp, maxDiagramTimestamp];\n    }\n\n    /**\n     * Function that returns the tickvalues for the x axis related to the timestep.\n     * @param time {String} String with the information how the time should be visualized in the x axis.\n     * @param range {Array} Array containing the minimum and maximum range.\n     * @param span {Number} Number with the ticksize for the axis generation.\n     */\n    private timeTickValues(time: String, range: any, span: number) {\n        if (time === 'minly') {\n            return d3.timeMinutes(range, new Date(this.xAxisRange.to), span);\n        }\n        if (time === 'hourly') {\n            return d3.timeHours(range, new Date(this.xAxisRange.to), span);\n        }\n        if (time === 'daily') {\n            return d3.timeDay.range(range, new Date(this.xAxisRange.to), span);\n        }\n    }\n\n    /**\n     * Function that draws the x axis to the svg element.\n     * @param bufferXrange {Number} Number with the distance between left edge and the beginning of the graph.\n     */\n    private drawXaxis(bufferXrange: number) {\n        // range for x axis scale\n        this.xScaleBase = d3.scaleLinear()\n            .domain([this.xAxisRange.from, this.xAxisRange.to])\n            .range([bufferXrange, this.width]);\n\n        // calculate range for about 7 ticks on x axis\n        let calcTicks = (((this.xAxisRange.to - this.xAxisRange.from) / 1000) / 7);\n        let hourly = Math.ceil(calcTicks / 3600);\n        let daily = Math.ceil(calcTicks / (3600 * 48));\n\n        if ((calcTicks / 3600)  11) {\n            timeFormatString = '%d %b %H:%M';\n        }\n\n        if (hourly > 47) {\n            timeFormatString = '%d %B';\n            tickSize = (Math.max(1, Math.round(hourly / 12))) * 12;\n        }\n\n        // calculate minimum range dependent on tickSize for UTC // 7200000 (e.g. tickSize = 4 --> every 4 hours)\n        let minRange = this.xAxisRange.from + ((3600000 * tickSize) - (this.xAxisRange.from % (3600000 * tickSize)));\n        // minimum range for UTC+2\n        let minRangeGer = minRange + 3600000 * (tickSize / 2);\n        if ((minRange - 3600000 * (tickSize / 2)) >= this.xAxisRange.from) {\n            minRangeGer = minRange - 3600000 * (tickSize / 2);\n        }\n\n        // calculate tickvalues dependent on tickSize for UTC+2\n        let xAxisGen;\n        if (tickSize >= 1) {\n            xAxisGen = d3.axisBottom(this.xScaleBase)\n                .tickValues(this.timeTickValues(timeString, minRangeGer, tickSize))\n                .tickFormat((d) => {\n                    return d3.timeFormat(timeFormatString)(new Date(d.valueOf()));\n                });\n        } else {\n            timeString = 'minly';\n            xAxisGen = d3.axisBottom(this.xScaleBase)\n                .tickValues(this.timeTickValues(timeString, minRangeGer, 30))\n                .tickFormat((d) => {\n                    return d3.timeFormat(timeFormatString)(new Date(d.valueOf()));\n                });\n        }\n\n        // draw x axis\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(xAxisGen)\n            .selectAll('text')\n            .style('text-anchor', 'middle');\n\n        if (this.plotOptions.grid) {\n            // draw the x grid lines\n            this.graph.append('svg:g')\n                .attr('class', 'grid')\n                .attr('transform', 'translate(0,' + this.height + ')')\n                .call(xAxisGen\n                    .tickSize(-this.height)\n                    .tickFormat(() => '')\n                );\n        }\n\n        // draw upper axis as border\n        this.graph.append('svg:g')\n            .attr('class', 'x axis')\n            .call(d3.axisTop(this.xScaleBase).ticks(0).tickSize(0));\n\n        // text label for the x axis\n        this.graph.append('text')\n            .attr('x', (this.width + bufferXrange) / 2)\n            .attr('y', this.height + this.margin.bottom - 5)\n            .style('text-anchor', 'middle')\n            .text('time');\n    }\n\n    /**\n     * Function to draw the y axis for each dataset.\n     * Each uom has its own axis.\n     * @param entry {DataEntry} Object containing a dataset.\n     */\n    private drawYaxis(entry): YScale {\n        let showAxis = (this.plotOptions.yaxis === undefined ? true : this.plotOptions.yaxis);\n        const range = this.getyAxisRange(entry.uom);\n\n        let yMin = range.min;\n        let yMax = range.max;\n\n        // range for y axis scale\n        const rangeOffset = (yMax - yMin) * 0.10;\n        const yScale = d3.scaleLinear()\n            .domain([yMin - rangeOffset, yMax + rangeOffset])\n            .range([this.height, 0]);\n\n        let yAxisGen = d3.axisLeft(yScale).ticks(5);\n        let buffer = 0;\n\n        // only if yAxis should not be visible\n        if (!showAxis) {\n            yAxisGen\n                .tickFormat(() => '')\n                .tickSize(0);\n        }\n\n        // draw y axis\n        const axis = this.graph.append('svg:g')\n            .attr('class', 'y axis')\n            .call(yAxisGen);\n\n        // only if yAxis should be visible\n        if (showAxis) {\n            // draw y axis label\n            const text = this.graph.append('text')\n                .attr('transform', 'rotate(-90)')\n                .attr('dy', '1em')\n                .style('text-anchor', 'middle')\n                .style('fill', 'black')\n                .text(entry.uom);\n\n            const axisWidth = axis.node().getBBox().width + 5 + this.getDimensions(text.node()).h;\n            // if yAxis should not be visible, buffer will be set to 0\n            buffer = (showAxis ? entry.offset + (axisWidth  {\n                    d3.select(k[0])\n                        .attr('fill', 'grey')\n                        .attr('opacity', 0.4);\n                })\n                .on('mouseout', (d, i, k) => {\n                    d3.select(k[0])\n                        .attr('fill', 'white')\n                        .attr('opacity', 0);\n                })\n                .on('mouseup', () => {\n                    this.highlightLine(entry.ids, entry.uom);\n                });\n\n            if (!entry.first) {\n                axisDiv\n                    .attr('x', entry.offset)\n                    .attr('y', 0);\n            } else {\n                axisDiv\n                    .attr('x', 0 - this.margin.left - this.maxLabelwidth)\n                    .attr('y', 0);\n            }\n\n        }\n\n        // draw the y grid lines\n        if (this.datasetIds.length === 1) {\n            this.graph.append('svg:g')\n                .attr('class', 'grid')\n                .call(d3.axisLeft(yScale)\n                    .ticks(5)\n                    .tickSize(-this.width)\n                    .tickFormat(() => '')\n                );\n        }\n\n        return {\n            buffer,\n            yScale\n        };\n    }\n\n    /**\n     * Function to set selected Ids that should be highlighted.\n     * @param ids {Array} Array of Strings containing the Ids.\n     * @param uom {String} String with the uom for the selected Ids\n     */\n    private highlightLine(ids, uom) {\n        let changeFalse: HighlightDataset[] = [];\n        let changeTrue: HighlightDataset[] = [];\n        ids.forEach((ID) => {\n            if (this.selectedDatasetIds.indexOf(ID) >= 0) {\n                changeFalse.push({ id: ID, change: false });\n            }\n            changeTrue.push({ id: ID, change: true });\n        });\n\n        let changeAll = true;\n        if (ids.length === changeFalse.length) {\n            this.changeSelectedIds(changeFalse, true);\n        } else {\n            this.changeSelectedIds(changeTrue, false);\n        }\n    }\n\n    /**\n     * Function that changes state of selected Ids.\n     */\n    private changeSelectedIds(toHighlightDataset: HighlightDataset[], change: boolean) {\n        if (change) {\n            toHighlightDataset.forEach((obj) => {\n                this.removeSelectedId(obj.id);\n                this.selectedDatasetIds.splice(this.selectedDatasetIds.findIndex((entry) => entry === obj.id), 1);\n            });\n        } else {\n            toHighlightDataset.forEach((obj) => {\n                if (this.selectedDatasetIds.indexOf(obj.id)  {\n            if (obj.uom === entry.axisOptions.uom) {\n                return true;\n            } // uom does exist in this.yRangesEachUom\n        });\n\n        if (entry.data.length > 0) {\n            let xScaleBase = this.xScaleBase;\n            if (getYaxisRange !== undefined) {\n                let yScaleBase = getYaxisRange.yScale;\n\n                // #####################################################\n                // create body to clip graph\n                // unique ID generated through the current time (current time when initialized)\n                let querySelectorClip = 'clip' + this.currentTimeId;\n\n                this.graph\n                    .append('svg:clipPath')\n                    .attr('id', querySelectorClip)\n                    .append('svg:rect')\n                    .attr('x', this.bufferSum)\n                    .attr('y', 0)\n                    .attr('width', this.width - this.bufferSum)\n                    .attr('height', this.height);\n\n                // draw grah line\n                this.graphBody = this.graph\n                    .append('g')\n                    .attr('clip-path', 'url(#' + querySelectorClip + ')');\n\n                // create graph line\n                let line = d3.line()\n                    .x((d) => {\n                        d.timestamp = d[0];\n                        const xDiagCoord = xScaleBase(d[0]);\n                        if (xDiagCoord !== NaN) {\n                            d.xDiagCoord = xDiagCoord;\n                            return xDiagCoord;\n                        }\n                    })\n                    .y((d) => {\n                        const yDiagCoord = yScaleBase(d[1]);\n                        if (yDiagCoord !== NaN) {\n                            d.yDiagCoord = yDiagCoord;\n                            return yDiagCoord;\n                        }\n                    })\n                    .curve(d3.curveLinear);\n\n                this.graphBody\n                    .append('svg:path')\n                    .datum(entry.data)\n                    .attr('class', 'line')\n                    .attr('fill', 'none')\n                    .attr('stroke', entry.color)\n                    .attr('stroke-width', entry.lines.lineWidth)\n                    .attr('d', line);\n\n                this.graphBody.selectAll('.dot')\n                    .data(entry.data.filter((d) => d))\n                    .enter().append('circle')\n                    .attr('class', 'dot')\n                    .attr('stroke', entry.color)\n                    .attr('fill', entry.color)\n                    .attr('cx', line.x())\n                    .attr('cy', line.y())\n                    .attr('r', entry.lines.pointRadius);\n            }\n        }\n    }\n\n    /**\n     * Function that shows labeling via mousmove.\n     */\n    private mousemoveHandler = () => {\n        const coords = d3.mouse(this.background.node());\n        this.ypos = [];\n        this.idxOfPos = 0;\n        this.labelTimestamp = [];\n        this.preparedData.forEach((entry, entryIdx) => {\n            const idx = this.getItemForX(coords[0] + this.bufferSum, entry.data);\n            this.showDiagramIndicator(entry, idx, coords[0], entryIdx);\n        });\n        // focus do not overlap each other\n        if (this.ypos !== undefined) {\n            let firstLabel = [];\n            // only push one of the pairs of objects (rectangle and label)\n            this.ypos.forEach((e, i) => {\n                if (i % 2 === 0) {\n                    firstLabel.push(e);\n                }\n            });\n            let yPos = firstLabel.sort((a, b) => a.y - b.y);\n            yPos.forEach((p, i) => {\n                if (i > 0) {\n                    let last = yPos[i - 1].y;\n                    yPos[i].off = Math.max(0, (last + 30) - yPos[i].y);\n                    yPos[i].y += yPos[i].off;\n                }\n            });\n            yPos.sort((a, b) => a.idx - b.idx);\n\n            let c1 = 0;\n            let c2 = 0;\n\n            // d3.selectAll('.mouse-focus-label')\n            d3.selectAll('.focus-visibility')\n                .attr('transform', (d, i) => {\n                    // pairs of 2 objects (rectangle (equal) and label (odd))\n                    if (i > 0) {\n                        c1 = (i - 1) % 2;\n                    }\n                    c2 += c1;\n                    if (yPos[c2] && yPos[c2].off) {\n                        return 'translate(0,' + (5 + yPos[c2].off) + ')';\n                    }\n                });\n        }\n    }\n\n    /**\n     * Function that hides the labeling inside the graph.\n     */\n    private mouseoutHandler = () => {\n        this.hideDiagramIndicator();\n    }\n\n    /**\n     * Function starting the drag handling for the diagram.\n     */\n    private panStartHandler = () => {\n        this.draggingMove = false;\n        this.dragMoveStart = d3.event.x;\n        this.dragMoveRange = [this.xAxisRange.from, this.xAxisRange.to];\n    }\n\n    /**\n     * Function that controlls the panning (dragging) of the graph.\n     */\n    private panMoveHandler = () => {\n        this.draggingMove = true;\n        if (this.dragMoveStart && this.draggingMove) {\n            let diff = -(d3.event.x - d3.event.subject.x);\n            let amountTimestamp = this.dragMoveRange[1] - this.dragMoveRange[0];\n            let ratioTimestampDiagCoord = amountTimestamp / this.width;\n            let newTimeMin = this.dragMoveRange[0] + (ratioTimestampDiagCoord * diff);\n            let newTimeMax = this.dragMoveRange[1] + (ratioTimestampDiagCoord * diff);\n\n            this.xAxisRangePan = [newTimeMin, newTimeMax];\n            this.timespan = { from: this.xAxisRangePan[0], to: this.xAxisRangePan[1] };\n            this.plotGraph();\n        }\n    }\n\n    /**\n     * Function that ends the dragging control.\n     */\n    private panEndHandler = () => {\n        this.changeTime(this.xAxisRangePan[0], this.xAxisRangePan[1]);\n        this.plotGraph();\n        this.dragMoveStart = null;\n        this.draggingMove = false;\n    }\n\n    /**\n     * Function that starts the zoom handling.\n     */\n    private zoomStartHandler = () => {\n        this.dragging = false;\n        this.dragStart = d3.mouse(this.background.node());\n        this.xAxisRangeOrigin.push([this.xAxisRange.from, this.xAxisRange.to]);\n    }\n\n    /**\n     * Function that draws a rectangle when zoom is started and the mouse is moving.\n     */\n    private zoomHandler = () => {\n        this.dragging = true;\n        this.drawDragRectangle();\n    }\n\n    /**\n     * Function that ends the zoom handling and calculates the via zoom selected time interval.\n     */\n    private zoomEndHandler = () => {\n        if (!this.dragStart || !this.dragging) {\n            if (this.xAxisRangeOrigin[0]) {\n                // back to origin range (from - to)\n                this.changeTime(this.xAxisRangeOrigin[0][0], this.xAxisRangeOrigin[0][1]);\n                this.xAxisRangeOrigin = [];\n                this.plotGraph();\n            }\n        } else {\n            let xDomainRange;\n            if (this.dragStart[0]  {\n            domMinArr.push(entry.data.find((elem, index, array) => {\n                if (elem.xDiagCoord) {\n                    if (elem.xDiagCoord >= start) {\n                        return array[index];\n                    }\n                }\n            }));\n            domMaxArr.push(entry.data.find((elem, index, array) => {\n                if (elem.xDiagCoord >= end) {\n                    return array[index];\n                }\n            }));\n        });\n\n        for (let i = 0; i  {\n            return d[0];\n        }).left;\n        return bisectDate(data, index);\n    }\n\n    /**\n     * Function that disables the labeling.\n     */\n    private hideDiagramIndicator() {\n        this.focusG.style('visibility', 'hidden');\n        d3.selectAll('.focus-visibility')\n            .attr('visibility', 'hidden');\n    }\n\n    /**\n     * Function that enables the lableing of each dataset entry.\n     * @param entry {DataEntry} Object containing the dataset.\n     * @param idx {Number} Number with the position of the dataset entry in the data array.\n     * @param xCoordMouse {Number} Number of the x coordinate of the mouse.\n     * @param entryIdx {Number} Number of the index of the entry.\n     */\n    private showDiagramIndicator = (entry, idx: number, xCoordMouse: number, entryIdx: number) => {\n        const item = entry.data[idx];\n        if (item !== undefined) {\n            // create line where mouse is\n            this.focusG.style('visibility', 'visible');\n            // show label if data available for time\n            this.chVisLabel(entry, true);\n\n            let onLeftSide = false;\n            if ((this.background.node().getBBox().width + this.bufferSum) / 2 > item.xDiagCoord) { onLeftSide = true; }\n\n            let labelBuffer = ((this.timespan.from / (this.timespan.to - this.timespan.from)) * 0.0001)\n                * ((this.timespan.from / (this.timespan.to - this.timespan.from)) * 0.0001);\n\n            labelBuffer = Math.max(4, labelBuffer);\n\n            this.showLabelValues(entry, item, onLeftSide);\n            this.showTimeIndicatorLabel(item, onLeftSide, entryIdx);\n\n            if ((xCoordMouse) > (item.xDiagCoord + labelBuffer) || (xCoordMouse) = xCoordMouse) {\n                    this.showLabelValues(entry, entry.data[idx - 1], onLeftSide);\n                    this.showTimeIndicatorLabel(item, onLeftSide, entryIdx);\n\n                    this.chVisLabel(entry, true);\n                }\n            }\n        } else {\n            // hide label if no data available for time\n            this.chVisLabel(entry, false);\n        }\n    }\n\n    /**\n     * Function to change visibility of label and white rectangle inside graph (next to mouse-cursor line).\n     * @param entry {DataEntry} Object containing the dataset.\n     * @param visible {Boolean} Boolean giving information about visibility of a label.\n     */\n    private chVisLabel(entry, visible: boolean) {\n        if (visible) {\n            entry.focusLabel\n                .attr('visibility', 'visible')\n                .attr('class', 'focus-visibility');\n            entry.focusLabelRect\n                .attr('visibility', 'visible')\n                .attr('class', 'focus-visibility');\n        } else {\n            entry.focusLabel\n                .attr('visibility', 'hidden');\n            entry.focusLabelRect\n                .attr('visibility', 'hidden');\n        }\n    }\n\n    /**\n     * Function to show the labeling inside the graph.\n     * @param entry {DataEntry} Object containg the dataset.\n     * @param item {DataEntry} Object of the entry in the dataset.\n     * @param onLeftSide {Boolean} Boolean giving information if the mouse is on left side of the diagram.\n     */\n    private showLabelValues(entry, item: DataEntry, onLeftSide: boolean) {\n        let id = 1;\n        if (entry.focusLabel) {\n            entry.focusLabel.text(item[id] + (entry.axisOptions.uom ? entry.axisOptions.uom : ''));\n            const entryX = onLeftSide ?\n                item.xDiagCoord + 4 : item.xDiagCoord - this.getDimensions(entry.focusLabel.node()).w + 4;\n            entry.focusLabel\n                .attr('x', entryX)\n                .attr('y', item.yDiagCoord);\n            entry.focusLabelRect\n                .attr('x', entryX)\n                .attr('y', item.yDiagCoord - this.getDimensions(entry.focusLabel.node()).h + 3)\n                .attr('width', this.getDimensions(entry.focusLabel.node()).w)\n                .attr('height', this.getDimensions(entry.focusLabel.node()).h);\n            this.ypos.push({ idx: this.idxOfPos++, y: item.yDiagCoord, off: 0 });\n        }\n    }\n\n    /**\n     * Function to show the time labeling inside the graph.\n     * @param item {DataEntry} Object of the entry in the dataset.\n     * @param onLeftSide {Boolean} Boolean giving information if the mouse is on left side of the diagram.\n     * @param entryIdx {Number} Number of the index of the entry.\n     */\n    private showTimeIndicatorLabel(item: DataEntry, onLeftSide: boolean, entryIdx: number) {\n        // timestamp is the time where the mouse-cursor is\n        this.labelTimestamp[entryIdx] = item.timestamp;\n        let min = d3.min(this.labelTimestamp);\n        let idxOfMin = this.labelTimestamp.findIndex((elem) => elem === min);\n        let right = item.xDiagCoord + 2;\n        let left = item.xDiagCoord - this.getDimensions(this.focuslabelTime.node()).w - 2;\n        this.focuslabelTime.text(moment(this.labelTimestamp[idxOfMin]).format('DD.MM.YY HH:mm'));\n        this.focuslabelTime\n            .attr('x', onLeftSide ? right : left)\n            .attr('y', 13);\n        if (item.timestamp === min) {\n            this.highlightFocus\n                .attr('x1', item.xDiagCoord)\n                .attr('y1', 0)\n                .attr('x2', item.xDiagCoord)\n                .attr('y2', this.height)\n                .classed('hidden', false);\n        }\n    }\n\n    /**\n     * Function that returns the boundings of a html element.\n     * @param el {Object} Object of the html element.\n     */\n    private getDimensions(el: any): { w: number, h: number } {\n        let w = 0;\n        let h = 0;\n        if (el) {\n            const dimensions = el.getBBox();\n            w = dimensions.width;\n            h = dimensions.height;\n        } else {\n            console.log('error: getDimensions() ' + el + ' not found.');\n        }\n        return {\n            w,\n            h\n        };\n    }\n\n    /**\n     * Function to generate uuid for a diagram\n     */\n    private uuidv4(): string {\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + this.s4();\n    }\n\n    /**\n     * Function to generate components of the uuid for a diagram\n     */\n    private s4(): string {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n\n    /**\n     * Function that logs the error in the console.\n     * @param error {Object} Object with the error.\n     */\n    private onError(error: any) {\n        console.error(error);\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ZoomControlComponent.html":{"url":"components/ZoomControlComponent.html","title":"component - ZoomControlComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ZoomControlComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/helgoland/map/src/lib/control/zoom/zoom.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n52-zoom-control\n            \n\n\n\n\n            \n                templateUrl\n                ./zoom.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                zoomIn\n                            \n                            \n                                    Public\n                                zoomOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mapCache: MapCache)\n                    \n                \n                        \n                            \n                                Defined in projects/helgoland/map/src/lib/control/zoom/zoom.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapCache\n                                                  \n                                                        \n                                                                    MapCache\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/zoom/zoom.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zoomIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        zoomIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/zoom/zoom.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            zoomOut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        zoomOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/helgoland/map/src/lib/control/zoom/zoom.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { MapCache } from '../../base/map-cache.service';\n\n@Component({\n  selector: 'n52-zoom-control',\n  templateUrl: './zoom.component.html'\n})\nexport class ZoomControlComponent {\n\n  @Input()\n  public mapId: string;\n\n  constructor(\n    protected mapCache: MapCache\n  ) { }\n\n  public zoomIn() {\n    this.mapCache.getMap(this.mapId).zoomIn();\n  }\n\n  public zoomOut() {\n    this.mapCache.getMap(this.mapId).zoomOut();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AxesOptionsComponent', 'selector': 'n52-axes-options'},{'name': 'BoolTogglerComponent', 'selector': 'n52-bool-toggler'},{'name': 'ColorSelectorComponent', 'selector': 'n52-color-selector'},{'name': 'D3OverviewTimeseriesGraphComponent', 'selector': 'n52-d3-overview-timeseries-graph'},{'name': 'D3TimeseriesGraphComponent', 'selector': 'n52-d3-timeseries-graph'},{'name': 'D3TrajectoryGraphComponent', 'selector': 'n52-d3-trajectory-graph'},{'name': 'DatasetByStationSelectorComponent', 'selector': 'n52-dataset-by-station-selector'},{'name': 'DatasetTableComponent', 'selector': 'n52-dataset-table'},{'name': 'DragOptionsComponent', 'selector': 'n52-drag-options'},{'name': 'ExtentControlComponent', 'selector': 'n52-extent-control'},{'name': 'FavoriteTogglerComponent', 'selector': 'n52-favorite-toggler'},{'name': 'FlotOverviewTimeseriesGraphComponent', 'selector': 'n52-flot-overview-timeseries-graph'},{'name': 'FlotTimeseriesGraphComponent', 'selector': 'n52-flot-timeseries-graph'},{'name': 'GeometryMapViewerComponent', 'selector': 'n52-geometry-map-viewer'},{'name': 'GeosearchControlComponent', 'selector': 'n52-geosearch-control'},{'name': 'LabelMapperComponent', 'selector': 'n52-label-mapper'},{'name': 'ListSelectorComponent', 'selector': 'n52-list-selector'},{'name': 'LocateControlComponent', 'selector': 'n52-locate-control'},{'name': 'MinMaxRangeComponent', 'selector': 'n52-min-max-range'},{'name': 'MultiServiceFilterSelectorComponent', 'selector': 'n52-multi-service-filter-selector'},{'name': 'PermalinkInMailComponent', 'selector': 'n52-permalink-in-mail'},{'name': 'PermalinkNewWindowComponent', 'selector': 'n52-permalink-new-window'},{'name': 'PermalinkToClipboardComponent', 'selector': 'n52-permalink-to-clipboard'},{'name': 'PlatformMapSelectorComponent', 'selector': 'n52-platform-map-selector'},{'name': 'PlotlyProfileGraphComponent', 'selector': 'n52-plotly-profile-graph'},{'name': 'PredefinedTimespanSelectorComponent', 'selector': 'n52-predefined-timespan-selector'},{'name': 'ProfileEntryComponent', 'selector': 'n52-profile-entry'},{'name': 'ProfileTrajectoryMapSelectorComponent', 'selector': 'n52-profile-trajectory-map-selector'},{'name': 'RefreshButtonComponent', 'selector': 'n52-refresh-button'},{'name': 'ServiceFilterSelectorComponent', 'selector': 'n52-service-filter-selector'},{'name': 'ServiceSelectorComponent', 'selector': 'n52-service-selector'},{'name': 'StationMapSelectorComponent', 'selector': 'n52-station-map-selector'},{'name': 'StringTogglerComponent', 'selector': 'n52-string-toggler'},{'name': 'TimeListSelectorComponent', 'selector': 'n52-time-list-selector'},{'name': 'TimeRangeSliderComponent', 'selector': 'n52-time-range-slider'},{'name': 'TimeseriesEntryComponent', 'selector': 'n52-timeseries-entry'},{'name': 'TimespanButtonComponent', 'selector': 'n52-timespan-button'},{'name': 'TimespanShiftSelectorComponent', 'selector': 'n52-timespan-shift-selector'},{'name': 'TrajectoryEntryComponent', 'selector': 'n52-trajectory-entry'},{'name': 'ZoomControlComponent', 'selector': 'n52-zoom-control'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ZoomControlComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.9\n        \n            @angular/cdk : ^6.3.3\n        \n            @angular/common : ^6.0.9\n        \n            @angular/compiler : ^6.0.9\n        \n            @angular/core : ^6.0.9\n        \n            @angular/forms : ^6.0.9\n        \n            @angular/http : ^6.0.9\n        \n            @angular/material : ^6.3.3\n        \n            @angular/platform-browser : ^6.0.9\n        \n            @angular/platform-browser-dynamic : ^6.0.9\n        \n            @angular/router : ^6.0.9\n        \n            @compodoc/compodoc : ^1.1.3\n        \n            @ngx-translate/core : ^10.0.2\n        \n            @ngx-translate/http-loader : ^3.0.1\n        \n            @types/bootstrap-slider : ^9.9.0\n        \n            @types/d3 : ^5.0.0\n        \n            @types/flot : 0.0.31\n        \n            @types/geojson : ^7946.0.3\n        \n            @types/jquery : ^3.3.2\n        \n            @types/leaflet : ^1.2.7\n        \n            @types/leaflet.markercluster : ^1.0.3\n        \n            @types/moment : ^2.13.0\n        \n            @types/plotly.js : ^1.38.1\n        \n            Flot : github:flot/flot\n        \n            bootstrap-slider : ^9.9.0\n        \n            class-transformer : ^0.1.9\n        \n            core-js : ^2.5.4\n        \n            d3 : ^4.13.0\n        \n            font-awesome : ^4.7.0\n        \n            geojson : ^0.5.0\n        \n            gh-pages : ^1.2.0\n        \n            jquery : ^3.3.1\n        \n            jsonfile : ^4.0.0\n        \n            leaflet : ^1.3.1\n        \n            leaflet.markercluster : ^1.3.0\n        \n            moment : ^2.22.2\n        \n            ngx-clipboard : ^9.1.3\n        \n            ngx-color-picker : ^5.3.1\n        \n            plotly.js : ^1.38.3\n        \n            rxjs : ^6.2.2\n        \n            rxjs-compat : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            D3AxisType   (projects/.../d3-axis-type.ts)\n                        \n                        \n                            DatasetApiVersion   (projects/.../api-mapping.service.ts)\n                        \n                        \n                            DatasetTypes   (projects/.../enums.ts)\n                        \n                        \n                            DefinedTimespan   (projects/.../defined-timespan.service.ts)\n                        \n                        \n                            PlatformTypes   (projects/.../enums.ts)\n                        \n                        \n                            PresenterMessageType   (projects/.../presenter-message-type.ts)\n                        \n                        \n                            ValueTypes   (projects/.../enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/helgoland/d3/src/lib/model/d3-axis-type.ts\n    \n        \n            \n                \n                    \n                        \n                        D3AxisType\n                    \n                \n                        \n                            \n                                 Distance\n                            \n                        \n                        \n                            \n                                 Time\n                            \n                        \n                        \n                            \n                                 Ticks\n                            \n                        \n            \n        \n\n    projects/helgoland/core/src/lib/dataset-api/api-mapping.service.ts\n    \n        \n            \n                \n                    \n                        \n                        DatasetApiVersion\n                    \n                \n                        \n                            \n                                 V1\n                            \n                        \n                        \n                            \n                                 V2\n                            \n                        \n            \n        \n\n    projects/helgoland/core/src/lib/model/dataset-api/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        DatasetTypes\n                    \n                \n                        \n                            \n                                 measurement\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PlatformTypes\n                    \n                \n                        \n                            \n                                 stationary\n                            \n                        \n                        \n                            \n                                Value: stationary\n                            \n                        \n                        \n                            \n                                 mobile\n                            \n                        \n                        \n                            \n                                Value: mobile\n                            \n                        \n                        \n                            \n                                 mobileInsitu\n                            \n                        \n                        \n                            \n                                Value: mobile_insitu\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ValueTypes\n                    \n                \n                        \n                            \n                                 quantity\n                            \n                        \n                        \n                            \n                                Value: quantity\n                            \n                        \n                        \n                            \n                                 quantityProfile\n                            \n                        \n                        \n                            \n                                Value: quantity-profile\n                            \n                        \n            \n        \n\n    projects/helgoland/core/src/lib/time/defined-timespan.service.ts\n    \n        \n            \n                \n                    \n                        \n                        DefinedTimespan\n                    \n                \n                        \n                            \n                                 LASTHOUR\n                            \n                        \n                        \n                            \n                                Value: last_hour\n                            \n                        \n                        \n                            \n                                 TODAY\n                            \n                        \n                        \n                            \n                                Value: today\n                            \n                        \n                        \n                            \n                                 YESTERDAY\n                            \n                        \n                        \n                            \n                                Value: yesterday\n                            \n                        \n                        \n                            \n                                 TODAY_YESTERDAY\n                            \n                        \n                        \n                            \n                                Value: today_yesterday\n                            \n                        \n                        \n                            \n                                 CURRENT_WEEK\n                            \n                        \n                        \n                            \n                                Value: current_week\n                            \n                        \n                        \n                            \n                                 LAST_WEEK\n                            \n                        \n                        \n                            \n                                Value: last_week\n                            \n                        \n                        \n                            \n                                 CURRENT_MONTH\n                            \n                        \n                        \n                            \n                                Value: current_month\n                            \n                        \n                        \n                            \n                                 LAST_MONTH\n                            \n                        \n                        \n                            \n                                Value: last_month\n                            \n                        \n                        \n                            \n                                 CURRENT_YEAR\n                            \n                        \n                        \n                            \n                                Value: current_year\n                            \n                        \n                        \n                            \n                                 LAST_YEAR\n                            \n                        \n                        \n                            \n                                Value: last_year\n                            \n                        \n            \n        \n\n    projects/helgoland/core/src/lib/presenting/presenter-message-type.ts\n    \n        \n            \n                \n                    \n                        \n                        PresenterMessageType\n                    \n                \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            isGroupFavorite   (projects/.../favorite.service.ts)\n                        \n                        \n                            isSingleFavorite   (projects/.../favorite.service.ts)\n                        \n                        \n                            Mixin   (projects/.../Mixin.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/helgoland/favorite/src/lib/service/favorite.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isGroupFavorite\n                            \n                            \n                        \n                    \n                \n                \n                    \nisGroupFavorite(object: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSingleFavorite\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSingleFavorite(object: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/helgoland/core/src/lib/model/mixins/Mixin.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Mixin\n                            \n                            \n                        \n                    \n                \n                \n                    \nMixin(baseCtors: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        baseCtors\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nhelgoland-toolbox\n\ntools for a sensor observation service based client\n\n\n\nThis project contains Angular based Modules, Components, Injectables to build a sensor observation service based client. \nGetting Started\nDependencies\nNode/NPM\nInstall latest Node and NPM following the instructions. Make sure you have Node version ≥ 7.0 and NPM ≥ 4.\n\nbrew install node for Mac.\n\nInstalling\n\nfork this repository.\nclone your fork to your local environment.\nnpm install to install required dependencies.\n\nBuild the libraries\n\nnpm run build:libs for building the library once\n\nOther commands\nLint the complete code\n\nng lint for performing static code analysis.\n\nGenerate documentation\n\nnpm run compodoc for generating documentation locally\nnpm run gh-pages for generating documentation and uploading it to GitHub Pages\n\nBump library version\n\nnpm version *** to increase library version. More on bumping.\n\n\nPublish library to NPM\n\nyarn lib:publish to publish your library sources on npmjs.com. Once the library is published it will be available for usage in npm packages.\n\n\nUsing demo applications\n\njust start the demo with ng serve and the demo is published \n\n At the moment of publishing this project there is a [bug](https://github.com/angular/angular-cli/issues/3854) exists when using `yarn link` in combination with Angular CLI. The issue is caused by having `node_modules` folder inside linked library. There is a [workaround](https://github.com/angular/angular-cli/issues/3854#issuecomment-274344771) has been provided that suggests to add a `paths` property with all Angular dependencies to the `tsconfig.json` file of the Angular CLI project like it is shown below:\n\n```\n{\n  \"compilerOptions\": {\n    \"paths\": { \"@angular/*\": [\"../node_modules/@angular/*\"] }\n  }\n}\n``` -->\nSupported series API versions mapping\n\n\n\nhelgoland-toolbox version\nseries rest API version\n\n\n\n\nv0.0.1-alpha.53\nv1.10.2\n\n\n\nTroubleshooting while using this library\n\nadd allowSyntheticDefaultImports: true to your tsconfig.json to avoid error messages like ... has no default export\ndon't forget to add styles of nested dependencies\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nApache License\nVersion 2.0, January 2004http://www.apache.org/licenses/>\nTerms and Conditions for use, reproduction, and distribution\n1. Definitions\n“License” shall mean the terms and conditions for use, reproduction, and\ndistribution as defined by Sections 1 through 9 of this document.\n“Licensor” shall mean the copyright owner or entity authorized by the copyright\nowner that is granting the License.\n“Legal Entity” shall mean the union of the acting entity and all other entities\nthat control, are controlled by, or are under common control with that entity.\nFor the purposes of this definition, “control” means (i) the power, direct or\nindirect, to cause the direction or management of such entity, whether by\ncontract or otherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n“You” (or “Your”) shall mean an individual or Legal Entity exercising\npermissions granted by this License.\n“Source” form shall mean the preferred form for making modifications, including\nbut not limited to software source code, documentation source, and configuration\nfiles.\n“Object” form shall mean any form resulting from mechanical transformation or\ntranslation of a Source form, including but not limited to compiled object code,\ngenerated documentation, and conversions to other media types.\n“Work” shall mean the work of authorship, whether in Source or Object form, made\navailable under the License, as indicated by a copyright notice that is included\nin or attached to the work (an example is provided in the Appendix below).\n“Derivative Works” shall mean any work, whether in Source or Object form, that\nis based on (or derived from) the Work and for which the editorial revisions,\nannotations, elaborations, or other modifications represent, as a whole, an\noriginal work of authorship. For the purposes of this License, Derivative Works\nshall not include works that remain separable from, or merely link (or bind by\nname) to the interfaces of, the Work and Derivative Works thereof.\n“Contribution” shall mean any work of authorship, including the original version\nof the Work and any modifications or additions to that Work or Derivative Works\nthereof, that is intentionally submitted to Licensor for inclusion in the Work\nby the copyright owner or by an individual or Legal Entity authorized to submit\non behalf of the copyright owner. For the purposes of this definition,\n“submitted” means any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems, and\nissue tracking systems that are managed by, or on behalf of, the Licensor for\nthe purpose of discussing and improving the Work, but excluding communication\nthat is conspicuously marked or otherwise designated in writing by the copyright\nowner as “Not a Contribution.”\n“Contributor” shall mean Licensor and any individual or Legal Entity on behalf\nof whom a Contribution has been received by Licensor and subsequently\nincorporated within the Work.\n2. Grant of Copyright License\nSubject to the terms and conditions of this License, each Contributor hereby\ngrants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,\nirrevocable copyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the Work and such\nDerivative Works in Source or Object form.\n3. Grant of Patent License\nSubject to the terms and conditions of this License, each Contributor hereby\ngrants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,\nirrevocable (except as stated in this section) patent license to make, have\nmade, use, offer to sell, sell, import, and otherwise transfer the Work, where\nsuch license applies only to those patent claims licensable by such Contributor\nthat are necessarily infringed by their Contribution(s) alone or by combination\nof their Contribution(s) with the Work to which such Contribution(s) was\nsubmitted. If You institute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work or a\nContribution incorporated within the Work constitutes direct or contributory\npatent infringement, then any patent licenses granted to You under this License\nfor that Work shall terminate as of the date such litigation is filed.\n4. Redistribution\nYou may reproduce and distribute copies of the Work or Derivative Works thereof\nin any medium, with or without modifications, and in Source or Object form,\nprovided that You meet the following conditions:\n\n(a) You must give any other recipients of the Work or Derivative Works a copy of\nthis License; and\n(b) You must cause any modified files to carry prominent notices stating that You\nchanged the files; and\n(c) You must retain, in the Source form of any Derivative Works that You distribute,\nall copyright, patent, trademark, and attribution notices from the Source form\nof the Work, excluding those notices that do not pertain to any part of the\nDerivative Works; and\n(d) If the Work includes a “NOTICE” text file as part of its distribution, then any\nDerivative Works that You distribute must include a readable copy of the\nattribution notices contained within such NOTICE file, excluding those notices\nthat do not pertain to any part of the Derivative Works, in at least one of the\nfollowing places: within a NOTICE text file distributed as part of the\nDerivative Works; within the Source form or documentation, if provided along\nwith the Derivative Works; or, within a display generated by the Derivative\nWorks, if and wherever such third-party notices normally appear. The contents of\nthe NOTICE file are for informational purposes only and do not modify the\nLicense. You may add Your own attribution notices within Derivative Works that\nYou distribute, alongside or as an addendum to the NOTICE text from the Work,\nprovided that such additional attribution notices cannot be construed as\nmodifying the License.\n\nYou may add Your own copyright statement to Your modifications and may provide\nadditional or different license terms and conditions for use, reproduction, or\ndistribution of Your modifications, or for any such Derivative Works as a whole,\nprovided Your use, reproduction, and distribution of the Work otherwise complies\nwith the conditions stated in this License.\n5. Submission of Contributions\nUnless You explicitly state otherwise, any Contribution intentionally submitted\nfor inclusion in the Work by You to the Licensor shall be under the terms and\nconditions of this License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify the terms of\nany separate license agreement you may have executed with Licensor regarding\nsuch Contributions.\n6. Trademarks\nThis License does not grant permission to use the trade names, trademarks,\nservice marks, or product names of the Licensor, except as required for\nreasonable and customary use in describing the origin of the Work and\nreproducing the content of the NOTICE file.\n7. Disclaimer of Warranty\nUnless required by applicable law or agreed to in writing, Licensor provides the\nWork (and each Contributor provides its Contributions) on an “AS IS” BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,\nincluding, without limitation, any warranties or conditions of TITLE,\nNON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are\nsolely responsible for determining the appropriateness of using or\nredistributing the Work and assume any risks associated with Your exercise of\npermissions under this License.\n8. Limitation of Liability\nIn no event and under no legal theory, whether in tort (including negligence),\ncontract, or otherwise, unless required by applicable law (such as deliberate\nand grossly negligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special, incidental,\nor consequential damages of any character arising as a result of this License or\nout of the use or inability to use the Work (including but not limited to\ndamages for loss of goodwill, work stoppage, computer failure or malfunction, or\nany and all other commercial damages or losses), even if such Contributor has\nbeen advised of the possibility of such damages.\n9. Accepting Warranty or Additional Liability\nWhile redistributing the Work or Derivative Works thereof, You may choose to\noffer, and charge a fee for, acceptance of support, warranty, indemnity, or\nother liability obligations and/or rights consistent with this License. However,\nin accepting such obligations, You may act only on Your own behalf and on Your\nsole responsibility, not on behalf of any other Contributor, and only if You\nagree to indemnify, defend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason of your\naccepting any such warranty or additional liability.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        EventingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandCachingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandControlModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandCoreModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandD3Module\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandDatasetTableModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandDatasetlistModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandFavoriteModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandFlotModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandLabelMapperModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandMapControlModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandMapModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandMapSelectorModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandMapViewModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandModificationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandPermalinkModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandPlotlyModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandSelectorModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandTimeModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelgolandTimeRangeSliderModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelgolandControlModule\n\n\n\ncluster_HelgolandControlModule_declarations\n\n\n\ncluster_HelgolandControlModule_exports\n\n\n\ncluster_HelgolandCoreModule\n\n\n\ncluster_HelgolandCoreModule_declarations\n\n\n\ncluster_HelgolandCoreModule_exports\n\n\n\ncluster_HelgolandCoreModule_providers\n\n\n\ncluster_HelgolandD3Module\n\n\n\ncluster_HelgolandD3Module_declarations\n\n\n\ncluster_HelgolandD3Module_exports\n\n\n\ncluster_HelgolandDatasetTableModule\n\n\n\ncluster_HelgolandDatasetTableModule_declarations\n\n\n\ncluster_HelgolandDatasetTableModule_exports\n\n\n\ncluster_HelgolandDatasetlistModule\n\n\n\ncluster_HelgolandDatasetlistModule_imports\n\n\n\ncluster_HelgolandDatasetlistModule_providers\n\n\n\ncluster_HelgolandFavoriteModule\n\n\n\ncluster_HelgolandFavoriteModule_providers\n\n\n\ncluster_HelgolandFlotModule\n\n\n\ncluster_HelgolandFlotModule_declarations\n\n\n\ncluster_HelgolandFlotModule_exports\n\n\n\ncluster_HelgolandLabelMapperModule\n\n\n\ncluster_HelgolandLabelMapperModule_declarations\n\n\n\ncluster_HelgolandLabelMapperModule_exports\n\n\n\ncluster_HelgolandLabelMapperModule_providers\n\n\n\ncluster_HelgolandMapControlModule\n\n\n\ncluster_HelgolandMapControlModule_imports\n\n\n\ncluster_HelgolandMapControlModule_providers\n\n\n\ncluster_HelgolandMapModule\n\n\n\ncluster_HelgolandMapModule_providers\n\n\n\ncluster_HelgolandMapSelectorModule\n\n\n\ncluster_HelgolandMapViewModule\n\n\n\ncluster_HelgolandMapViewModule_declarations\n\n\n\ncluster_HelgolandMapViewModule_exports\n\n\n\ncluster_HelgolandModificationModule\n\n\n\ncluster_HelgolandModificationModule_declarations\n\n\n\ncluster_HelgolandModificationModule_exports\n\n\n\ncluster_HelgolandPermalinkModule\n\n\n\ncluster_HelgolandPlotlyModule\n\n\n\ncluster_HelgolandPlotlyModule_declarations\n\n\n\ncluster_HelgolandPlotlyModule_exports\n\n\n\ncluster_HelgolandSelectorModule\n\n\n\ncluster_HelgolandSelectorModule_declarations\n\n\n\ncluster_HelgolandSelectorModule_exports\n\n\n\ncluster_HelgolandSelectorModule_providers\n\n\n\ncluster_HelgolandTimeModule\n\n\n\ncluster_HelgolandTimeRangeSliderModule\n\n\n\ncluster_HelgolandTimeRangeSliderModule_declarations\n\n\n\ncluster_HelgolandTimeRangeSliderModule_exports\n\n\n\ncluster_HelgolandTimeRangeSliderModule_providers\n\n\n\n\nBoolTogglerComponent\n\nBoolTogglerComponent\n\n\n\nHelgolandControlModule\n\nHelgolandControlModule\n\nHelgolandControlModule -->\n\nBoolTogglerComponent->HelgolandControlModule\n\n\n\n\n\nHelgolandDatasetlistModule\n\nHelgolandDatasetlistModule\n\nHelgolandDatasetlistModule -->\n\nBoolTogglerComponent->HelgolandDatasetlistModule\n\n\n\n\n\nHelgolandFavoriteModule\n\nHelgolandFavoriteModule\n\nHelgolandFavoriteModule -->\n\nBoolTogglerComponent->HelgolandFavoriteModule\n\n\n\n\n\nHelgolandMapControlModule\n\nHelgolandMapControlModule\n\nHelgolandMapControlModule -->\n\nBoolTogglerComponent->HelgolandMapControlModule\n\n\n\n\n\nHelgolandMapModule\n\nHelgolandMapModule\n\nHelgolandMapModule -->\n\nBoolTogglerComponent->HelgolandMapModule\n\n\n\n\n\nHelgolandMapSelectorModule\n\nHelgolandMapSelectorModule\n\nHelgolandMapSelectorModule -->\n\nBoolTogglerComponent->HelgolandMapSelectorModule\n\n\n\n\n\nHelgolandPermalinkModule\n\nHelgolandPermalinkModule\n\nHelgolandPermalinkModule -->\n\nBoolTogglerComponent->HelgolandPermalinkModule\n\n\n\n\n\nHelgolandTimeModule\n\nHelgolandTimeModule\n\nHelgolandTimeModule -->\n\nBoolTogglerComponent->HelgolandTimeModule\n\n\n\n\n\nRefreshButtonComponent\n\nRefreshButtonComponent\n\nHelgolandControlModule -->\n\nRefreshButtonComponent->HelgolandControlModule\n\n\n\nHelgolandDatasetlistModule -->\n\nRefreshButtonComponent->HelgolandDatasetlistModule\n\n\n\nHelgolandFavoriteModule -->\n\nRefreshButtonComponent->HelgolandFavoriteModule\n\n\n\nHelgolandMapControlModule -->\n\nRefreshButtonComponent->HelgolandMapControlModule\n\n\n\nHelgolandMapModule -->\n\nRefreshButtonComponent->HelgolandMapModule\n\n\n\nHelgolandMapSelectorModule -->\n\nRefreshButtonComponent->HelgolandMapSelectorModule\n\n\n\nHelgolandPermalinkModule -->\n\nRefreshButtonComponent->HelgolandPermalinkModule\n\n\n\nHelgolandTimeModule -->\n\nRefreshButtonComponent->HelgolandTimeModule\n\n\n\n\n\nStringTogglerComponent\n\nStringTogglerComponent\n\nHelgolandControlModule -->\n\nStringTogglerComponent->HelgolandControlModule\n\n\n\nHelgolandDatasetlistModule -->\n\nStringTogglerComponent->HelgolandDatasetlistModule\n\n\n\nHelgolandFavoriteModule -->\n\nStringTogglerComponent->HelgolandFavoriteModule\n\n\n\nHelgolandMapControlModule -->\n\nStringTogglerComponent->HelgolandMapControlModule\n\n\n\nHelgolandMapModule -->\n\nStringTogglerComponent->HelgolandMapModule\n\n\n\nHelgolandMapSelectorModule -->\n\nStringTogglerComponent->HelgolandMapSelectorModule\n\n\n\nHelgolandPermalinkModule -->\n\nStringTogglerComponent->HelgolandPermalinkModule\n\n\n\nHelgolandTimeModule -->\n\nStringTogglerComponent->HelgolandTimeModule\n\n\n\n\n\nBoolTogglerComponent \n\nBoolTogglerComponent \n\nBoolTogglerComponent  -->\n\nHelgolandControlModule->BoolTogglerComponent \n\n\n\n\n\nRefreshButtonComponent \n\nRefreshButtonComponent \n\nRefreshButtonComponent  -->\n\nHelgolandControlModule->RefreshButtonComponent \n\n\n\n\n\nStringTogglerComponent \n\nStringTogglerComponent \n\nStringTogglerComponent  -->\n\nHelgolandControlModule->StringTogglerComponent \n\n\n\n\n\nDateProxyPipe\n\nDateProxyPipe\n\n\n\nHelgolandCoreModule\n\nHelgolandCoreModule\n\nHelgolandCoreModule -->\n\nDateProxyPipe->HelgolandCoreModule\n\n\n\n\n\nDateProxyPipe \n\nDateProxyPipe \n\nDateProxyPipe  -->\n\nHelgolandCoreModule->DateProxyPipe \n\n\n\n\n\nHelgolandD3Module\n\nHelgolandD3Module\n\nHelgolandD3Module -->\n\nHelgolandCoreModule->HelgolandD3Module\n\n\n\n\n\nHelgolandDatasetTableModule\n\nHelgolandDatasetTableModule\n\nHelgolandDatasetTableModule -->\n\nHelgolandCoreModule->HelgolandDatasetTableModule\n\n\n\nHelgolandDatasetlistModule -->\n\nHelgolandCoreModule->HelgolandDatasetlistModule\n\n\n\nHelgolandMapControlModule -->\n\nHelgolandCoreModule->HelgolandMapControlModule\n\n\n\nHelgolandMapSelectorModule -->\n\nHelgolandCoreModule->HelgolandMapSelectorModule\n\n\n\n\n\nHelgolandModificationModule\n\nHelgolandModificationModule\n\nHelgolandModificationModule -->\n\nHelgolandCoreModule->HelgolandModificationModule\n\n\n\n\n\nHelgolandPlotlyModule\n\nHelgolandPlotlyModule\n\nHelgolandPlotlyModule -->\n\nHelgolandCoreModule->HelgolandPlotlyModule\n\n\n\n\n\nHelgolandSelectorModule\n\nHelgolandSelectorModule\n\nHelgolandSelectorModule -->\n\nHelgolandCoreModule->HelgolandSelectorModule\n\n\n\nHelgolandTimeModule -->\n\nHelgolandCoreModule->HelgolandTimeModule\n\n\n\n\n\nColorService\n\nColorService\n\nHelgolandCoreModule -->\n\nColorService->HelgolandCoreModule\n\n\n\n\n\nDatasetApiMapping\n\nDatasetApiMapping\n\nHelgolandCoreModule -->\n\nDatasetApiMapping->HelgolandCoreModule\n\n\n\n\n\nDefinedTimespanService\n\nDefinedTimespanService\n\nHelgolandCoreModule -->\n\nDefinedTimespanService->HelgolandCoreModule\n\n\n\n\n\nInternalIdHandler\n\nInternalIdHandler\n\nHelgolandCoreModule -->\n\nInternalIdHandler->HelgolandCoreModule\n\n\n\n\n\nLocalStorage\n\nLocalStorage\n\nHelgolandCoreModule -->\n\nLocalStorage->HelgolandCoreModule\n\n\n\n\n\nNotifierService\n\nNotifierService\n\nHelgolandCoreModule -->\n\nNotifierService->HelgolandCoreModule\n\n\n\n\n\nStatusIntervalResolverService\n\nStatusIntervalResolverService\n\nHelgolandCoreModule -->\n\nStatusIntervalResolverService->HelgolandCoreModule\n\n\n\n\n\nTime\n\nTime\n\nHelgolandCoreModule -->\n\nTime->HelgolandCoreModule\n\n\n\n\n\nD3OverviewTimeseriesGraphComponent\n\nD3OverviewTimeseriesGraphComponent\n\nHelgolandD3Module -->\n\nD3OverviewTimeseriesGraphComponent->HelgolandD3Module\n\n\n\n\n\nD3TimeseriesGraphComponent\n\nD3TimeseriesGraphComponent\n\nHelgolandD3Module -->\n\nD3TimeseriesGraphComponent->HelgolandD3Module\n\n\n\n\n\nD3TrajectoryGraphComponent\n\nD3TrajectoryGraphComponent\n\nHelgolandD3Module -->\n\nD3TrajectoryGraphComponent->HelgolandD3Module\n\n\n\n\n\nD3OverviewTimeseriesGraphComponent \n\nD3OverviewTimeseriesGraphComponent \n\nD3OverviewTimeseriesGraphComponent  -->\n\nHelgolandD3Module->D3OverviewTimeseriesGraphComponent \n\n\n\n\n\nD3TimeseriesGraphComponent \n\nD3TimeseriesGraphComponent \n\nD3TimeseriesGraphComponent  -->\n\nHelgolandD3Module->D3TimeseriesGraphComponent \n\n\n\n\n\nD3TrajectoryGraphComponent \n\nD3TrajectoryGraphComponent \n\nD3TrajectoryGraphComponent  -->\n\nHelgolandD3Module->D3TrajectoryGraphComponent \n\n\n\n\n\nDatasetTableComponent\n\nDatasetTableComponent\n\nHelgolandDatasetTableModule -->\n\nDatasetTableComponent->HelgolandDatasetTableModule\n\n\n\n\n\nDatasetTableComponent \n\nDatasetTableComponent \n\nDatasetTableComponent  -->\n\nHelgolandDatasetTableModule->DatasetTableComponent \n\n\n\nBoolTogglerComponent  -->\n\nHelgolandDatasetlistModule->BoolTogglerComponent \n\n\n\nRefreshButtonComponent  -->\n\nHelgolandDatasetlistModule->RefreshButtonComponent \n\n\n\nStringTogglerComponent  -->\n\nHelgolandDatasetlistModule->StringTogglerComponent \n\n\n\n\n\nHelgolandLabelMapperModule\n\nHelgolandLabelMapperModule\n\nHelgolandDatasetlistModule -->\n\nHelgolandLabelMapperModule->HelgolandDatasetlistModule\n\n\n\n\n\nHelgolandFlotModule\n\nHelgolandFlotModule\n\nHelgolandFlotModule -->\n\nHelgolandLabelMapperModule->HelgolandFlotModule\n\n\n\n\n\nLabelMapperComponent \n\nLabelMapperComponent \n\nLabelMapperComponent  -->\n\nHelgolandLabelMapperModule->LabelMapperComponent \n\n\n\nHelgolandSelectorModule -->\n\nHelgolandLabelMapperModule->HelgolandSelectorModule\n\n\n\n\n\nReferenceValueColorCache\n\nReferenceValueColorCache\n\nHelgolandDatasetlistModule -->\n\nReferenceValueColorCache->HelgolandDatasetlistModule\n\n\n\nBoolTogglerComponent  -->\n\nHelgolandFavoriteModule->BoolTogglerComponent \n\n\n\nRefreshButtonComponent  -->\n\nHelgolandFavoriteModule->RefreshButtonComponent \n\n\n\nStringTogglerComponent  -->\n\nHelgolandFavoriteModule->StringTogglerComponent \n\n\n\n\n\nFavoriteService\n\nFavoriteService\n\nHelgolandFavoriteModule -->\n\nFavoriteService->HelgolandFavoriteModule\n\n\n\n\n\nJsonFavoriteExporterService\n\nJsonFavoriteExporterService\n\nHelgolandFavoriteModule -->\n\nJsonFavoriteExporterService->HelgolandFavoriteModule\n\n\n\n\n\nFlotOverviewTimeseriesGraphComponent\n\nFlotOverviewTimeseriesGraphComponent\n\nHelgolandFlotModule -->\n\nFlotOverviewTimeseriesGraphComponent->HelgolandFlotModule\n\n\n\n\n\nFlotTimeseriesGraphComponent\n\nFlotTimeseriesGraphComponent\n\nHelgolandFlotModule -->\n\nFlotTimeseriesGraphComponent->HelgolandFlotModule\n\n\n\n\n\nFlotOverviewTimeseriesGraphComponent \n\nFlotOverviewTimeseriesGraphComponent \n\nFlotOverviewTimeseriesGraphComponent  -->\n\nHelgolandFlotModule->FlotOverviewTimeseriesGraphComponent \n\n\n\n\n\nFlotTimeseriesGraphComponent \n\nFlotTimeseriesGraphComponent \n\nFlotTimeseriesGraphComponent  -->\n\nHelgolandFlotModule->FlotTimeseriesGraphComponent \n\n\n\n\n\nLabelMapperComponent\n\nLabelMapperComponent\n\nHelgolandLabelMapperModule -->\n\nLabelMapperComponent->HelgolandLabelMapperModule\n\n\n\n\n\nLabelMapperService\n\nLabelMapperService\n\nHelgolandLabelMapperModule -->\n\nLabelMapperService->HelgolandLabelMapperModule\n\n\n\nBoolTogglerComponent  -->\n\nHelgolandMapControlModule->BoolTogglerComponent \n\n\n\nRefreshButtonComponent  -->\n\nHelgolandMapControlModule->RefreshButtonComponent \n\n\n\nStringTogglerComponent  -->\n\nHelgolandMapControlModule->StringTogglerComponent \n\n\n\nBoolTogglerComponent  -->\n\nHelgolandMapModule->BoolTogglerComponent \n\n\n\nRefreshButtonComponent  -->\n\nHelgolandMapModule->RefreshButtonComponent \n\n\n\nStringTogglerComponent  -->\n\nHelgolandMapModule->StringTogglerComponent \n\n\n\nHelgolandMapControlModule -->\n\nHelgolandMapModule->HelgolandMapControlModule\n\n\n\nHelgolandMapSelectorModule -->\n\nHelgolandMapModule->HelgolandMapSelectorModule\n\n\n\n\n\nHelgolandMapViewModule\n\nHelgolandMapViewModule\n\nHelgolandMapViewModule -->\n\nHelgolandMapModule->HelgolandMapViewModule\n\n\n\n\n\nLocateService\n\nLocateService\n\nHelgolandMapControlModule -->\n\nLocateService->HelgolandMapControlModule\n\n\n\n\n\nMapCache\n\nMapCache\n\nHelgolandMapModule -->\n\nMapCache->HelgolandMapModule\n\n\n\nBoolTogglerComponent  -->\n\nHelgolandMapSelectorModule->BoolTogglerComponent \n\n\n\nRefreshButtonComponent  -->\n\nHelgolandMapSelectorModule->RefreshButtonComponent \n\n\n\nStringTogglerComponent  -->\n\nHelgolandMapSelectorModule->StringTogglerComponent \n\n\n\n\n\nGeometryMapViewerComponent\n\nGeometryMapViewerComponent\n\nHelgolandMapViewModule -->\n\nGeometryMapViewerComponent->HelgolandMapViewModule\n\n\n\n\n\nGeometryMapViewerComponent \n\nGeometryMapViewerComponent \n\nGeometryMapViewerComponent  -->\n\nHelgolandMapViewModule->GeometryMapViewerComponent \n\n\n\n\n\nAxesOptionsComponent\n\nAxesOptionsComponent\n\nHelgolandModificationModule -->\n\nAxesOptionsComponent->HelgolandModificationModule\n\n\n\n\n\nColorSelectorComponent\n\nColorSelectorComponent\n\nHelgolandModificationModule -->\n\nColorSelectorComponent->HelgolandModificationModule\n\n\n\n\n\nDragOptionsComponent\n\nDragOptionsComponent\n\nHelgolandModificationModule -->\n\nDragOptionsComponent->HelgolandModificationModule\n\n\n\n\n\nMinMaxRangeComponent\n\nMinMaxRangeComponent\n\nHelgolandModificationModule -->\n\nMinMaxRangeComponent->HelgolandModificationModule\n\n\n\n\n\nAxesOptionsComponent \n\nAxesOptionsComponent \n\nAxesOptionsComponent  -->\n\nHelgolandModificationModule->AxesOptionsComponent \n\n\n\n\n\nColorSelectorComponent \n\nColorSelectorComponent \n\nColorSelectorComponent  -->\n\nHelgolandModificationModule->ColorSelectorComponent \n\n\n\n\n\nDragOptionsComponent \n\nDragOptionsComponent \n\nDragOptionsComponent  -->\n\nHelgolandModificationModule->DragOptionsComponent \n\n\n\n\n\nMinMaxRangeComponent \n\nMinMaxRangeComponent \n\nMinMaxRangeComponent  -->\n\nHelgolandModificationModule->MinMaxRangeComponent \n\n\n\nBoolTogglerComponent  -->\n\nHelgolandPermalinkModule->BoolTogglerComponent \n\n\n\nRefreshButtonComponent  -->\n\nHelgolandPermalinkModule->RefreshButtonComponent \n\n\n\nStringTogglerComponent  -->\n\nHelgolandPermalinkModule->StringTogglerComponent \n\n\n\n\n\nPlotlyProfileGraphComponent\n\nPlotlyProfileGraphComponent\n\nHelgolandPlotlyModule -->\n\nPlotlyProfileGraphComponent->HelgolandPlotlyModule\n\n\n\n\n\nPlotlyProfileGraphComponent \n\nPlotlyProfileGraphComponent \n\nPlotlyProfileGraphComponent  -->\n\nHelgolandPlotlyModule->PlotlyProfileGraphComponent \n\n\n\n\n\nDatasetByStationSelectorComponent\n\nDatasetByStationSelectorComponent\n\nHelgolandSelectorModule -->\n\nDatasetByStationSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nListSelectorComponent\n\nListSelectorComponent\n\nHelgolandSelectorModule -->\n\nListSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nMultiServiceFilterSelectorComponent\n\nMultiServiceFilterSelectorComponent\n\nHelgolandSelectorModule -->\n\nMultiServiceFilterSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nServiceFilterSelectorComponent\n\nServiceFilterSelectorComponent\n\nHelgolandSelectorModule -->\n\nServiceFilterSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nServiceSelectorComponent\n\nServiceSelectorComponent\n\nHelgolandSelectorModule -->\n\nServiceSelectorComponent->HelgolandSelectorModule\n\n\n\n\n\nDatasetByStationSelectorComponent \n\nDatasetByStationSelectorComponent \n\nDatasetByStationSelectorComponent  -->\n\nHelgolandSelectorModule->DatasetByStationSelectorComponent \n\n\n\n\n\nListSelectorComponent \n\nListSelectorComponent \n\nListSelectorComponent  -->\n\nHelgolandSelectorModule->ListSelectorComponent \n\n\n\n\n\nMultiServiceFilterSelectorComponent \n\nMultiServiceFilterSelectorComponent \n\nMultiServiceFilterSelectorComponent  -->\n\nHelgolandSelectorModule->MultiServiceFilterSelectorComponent \n\n\n\n\n\nServiceFilterSelectorComponent \n\nServiceFilterSelectorComponent \n\nServiceFilterSelectorComponent  -->\n\nHelgolandSelectorModule->ServiceFilterSelectorComponent \n\n\n\n\n\nServiceSelectorComponent \n\nServiceSelectorComponent \n\nServiceSelectorComponent  -->\n\nHelgolandSelectorModule->ServiceSelectorComponent \n\n\n\n\n\nListSelectorService\n\nListSelectorService\n\nHelgolandSelectorModule -->\n\nListSelectorService->HelgolandSelectorModule\n\n\n\n\n\nServiceSelectorService\n\nServiceSelectorService\n\nHelgolandSelectorModule -->\n\nServiceSelectorService->HelgolandSelectorModule\n\n\n\nBoolTogglerComponent  -->\n\nHelgolandTimeModule->BoolTogglerComponent \n\n\n\nRefreshButtonComponent  -->\n\nHelgolandTimeModule->RefreshButtonComponent \n\n\n\nStringTogglerComponent  -->\n\nHelgolandTimeModule->StringTogglerComponent \n\n\n\n\n\nTimeRangeSliderComponent\n\nTimeRangeSliderComponent\n\n\n\nHelgolandTimeRangeSliderModule\n\nHelgolandTimeRangeSliderModule\n\nHelgolandTimeRangeSliderModule -->\n\nTimeRangeSliderComponent->HelgolandTimeRangeSliderModule\n\n\n\n\n\nTimeRangeSliderComponent \n\nTimeRangeSliderComponent \n\nTimeRangeSliderComponent  -->\n\nHelgolandTimeRangeSliderModule->TimeRangeSliderComponent \n\n\n\n\n\nTimeRangeSliderCache\n\nTimeRangeSliderCache\n\nHelgolandTimeRangeSliderModule -->\n\nTimeRangeSliderCache->HelgolandTimeRangeSliderModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            20 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        40 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        27 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        38 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        92 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            $   (projects/.../flot-timeseries-graph.component.ts)\n                        \n                        \n                            $   (projects/.../label-mapper.service.ts)\n                        \n                        \n                            CACHE_PARAM_FAVORITES_GROUP   (projects/.../favorite.service.ts)\n                        \n                        \n                            CACHE_PARAM_FAVORITES_SINGLE   (projects/.../favorite.service.ts)\n                        \n                        \n                            COMPONENTS   (projects/.../favorite.module.ts)\n                        \n                        \n                            COMPONENTS   (projects/.../permalink.module.ts)\n                        \n                        \n                            COMPONENTS   (projects/.../time.module.ts)\n                        \n                        \n                            COMPONENTS   (projects/.../control.module.ts)\n                        \n                        \n                            COMPONENTS   (projects/.../module.ts)\n                        \n                        \n                            COMPONENTS   (projects/.../module.ts)\n                        \n                        \n                            COMPONENTS   (projects/.../module.ts)\n                        \n                        \n                            COMPONENTS   (projects/.../map.module.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            DEFAULT_BASE_LAYER_ATTRIBUTION   (projects/.../cached-map-component.ts)\n                        \n                        \n                            DEFAULT_BASE_LAYER_NAME   (projects/.../cached-map-component.ts)\n                        \n                        \n                            DEFAULT_BASE_LAYER_URL   (projects/.../cached-map-component.ts)\n                        \n                        \n                            equal   (projects/.../dataset-presenter.component.ts)\n                        \n                        \n                            HTTP_SERVICE_INTERCEPTORS   (projects/.../http.service.ts)\n                        \n                        \n                            ID   (projects/.../notifier.service.ts)\n                        \n                        \n                            INTERNAL_ID_SEPERATOR   (projects/.../internal-id-handler.service.ts)\n                        \n                        \n                            LINE_WIDTH   (projects/.../plotly-profile-graph.component.ts)\n                        \n                        \n                            LINE_WIDTH_SELECTED   (projects/.../plotly-profile-graph.component.ts)\n                        \n                        \n                            LOCATED_MARKER_ID   (projects/.../locate.service.ts)\n                        \n                        \n                            LOCATION_ERROR   (projects/.../locate.service.ts)\n                        \n                        \n                            LOCATION_FOUND_EVENT   (projects/.../locate.service.ts)\n                        \n                        \n                            MARKER_SIZE   (projects/.../plotly-profile-graph.component.ts)\n                        \n                        \n                            MARKER_SIZE_SELECTED   (projects/.../plotly-profile-graph.component.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            TIME_IN_MS   (projects/.../notifier.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/helgoland/flot/src/lib/flot-timeseries-graph/flot-timeseries-graph.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        $:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/depiction/src/lib/label-mapper/label-mapper.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        $:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/favorite/src/lib/service/favorite.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CACHE_PARAM_FAVORITES_GROUP\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CACHE_PARAM_FAVORITES_GROUP:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'GroupFavorites'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CACHE_PARAM_FAVORITES_SINGLE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CACHE_PARAM_FAVORITES_SINGLE:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SingleFavorites'\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/favorite/src/lib/favorite.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  FavoriteTogglerComponent\n]\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/permalink/src/lib/permalink.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  PermalinkInMailComponent,\n  PermalinkNewWindowComponent,\n  PermalinkToClipboardComponent\n]\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/time/src/lib/time.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  PredefinedTimespanSelectorComponent,\n  TimeListSelectorComponent,\n  TimespanShiftSelectorComponent,\n  TimespanButtonComponent\n]\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/control/src/lib/control.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  BoolTogglerComponent,\n  StringTogglerComponent,\n  RefreshButtonComponent\n]\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/depiction/src/lib/datasetlist/module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  TimeseriesEntryComponent,\n  ProfileEntryComponent,\n  TrajectoryEntryComponent\n]\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/map/src/lib/selector/module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    PlatformMapSelectorComponent,\n    StationMapSelectorComponent,\n    ProfileTrajectoryMapSelectorComponent\n]\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/map/src/lib/control/module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  LocateControlComponent,\n  ZoomControlComponent,\n  GeosearchControlComponent,\n  ExtentControlComponent\n]\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/map/src/lib/base/map.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n]\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/map/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/core/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/favorite/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/time/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/flot/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/d3/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/time-range-slider/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/control/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/modification/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/depiction/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/permalink/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/caching/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/plotly/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/eventing/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/selector/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/auth/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/map/src/lib/base/cached-map-component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_BASE_LAYER_ATTRIBUTION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_BASE_LAYER_ATTRIBUTION:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '&copy; OpenStreetMap contributors'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_BASE_LAYER_NAME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_BASE_LAYER_NAME:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'BaseLayer'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_BASE_LAYER_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_BASE_LAYER_URL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/core/src/lib/presenting/dataset-presenter.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            equal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        equal:     \n\n                    \n                \n                    \n                        \n                            Default value : require('deep-equal')\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/core/src/lib/dataset-api/http.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HTTP_SERVICE_INTERCEPTORS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HTTP_SERVICE_INTERCEPTORS:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('HTTP_SERVICE_INTERCEPTORS')\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/core/src/lib/notifier/notifier.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'helgoland-notifier'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TIME_IN_MS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TIME_IN_MS:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 3000\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/core/src/lib/dataset-api/internal-id-handler.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            INTERNAL_ID_SEPERATOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        INTERNAL_ID_SEPERATOR:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '__'\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/plotly/src/lib/plotly-profile-graph/plotly-profile-graph.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LINE_WIDTH\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LINE_WIDTH:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LINE_WIDTH_SELECTED\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LINE_WIDTH_SELECTED:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MARKER_SIZE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MARKER_SIZE:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 6\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MARKER_SIZE_SELECTED\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MARKER_SIZE_SELECTED:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n\n\n            \n        \n\n    projects/helgoland/map/src/lib/control/locate/locate.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LOCATED_MARKER_ID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOCATED_MARKER_ID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'located'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOCATION_ERROR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOCATION_ERROR:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'locationerror'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOCATION_FOUND_EVENT\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOCATION_FOUND_EVENT:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'locationfound'\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/introduction.html":{"url":"additional-documentation/introduction.html","title":"additional-page - Introduction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction\n\ntools for a sensor observation service based client\n\nThis project contains Angular based Modules, Components, Injectables to build a sensor observation service based client. It is divided in different Modules to support specific needs. Currently the toolbox comprise the following modules:\n\ncore - Dataset-Api communication and response model, important services (local storage), important interfaces\ncaching - http request caching for completed and running requests\ncontrol - some ui controls (e.g. toggle button)\ndepiction - components to show data or metadata (e.g. dataset data table, timeseries entry, label-mapper)\nfavorite - components and services to handle datasets in favorites\nmap - components to display leaflet maps for view or selection, and also some map controls (geo-search, locate, zoom)\nmodification - dataset modification (color or other graph represent points)\npermalink - components to generate permalinks and service to resolve them\nselector - components for dataset selection (list, filter, service)\ntime - components to manipulate/select timeperiods or timestamps\nflot - timeseries graph presentation with Flot\nplotly - profile graph presentation with plotly.js\nd3 - timeseries and trajectory graph presentation with D3.js\n\nDataset handling\nInternal dataset id generation\nFor a better handling of datasets of different APIs, there exists an internal strategy to create dataset ids out of the url of an API and the API specific dataset ID.\nThe generation and resolving of this internal ID is handled in the InternalIdHandler\n\nExample: For a dataset with the id 123 of the service api https://www.sample.de/api/v1/ the internal id looks like https://www.sample.de/api/v1/__123\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/how-tos.html":{"url":"additional-documentation/how-tos.html","title":"additional-page - How Tos","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow Tos\nTo get in touch with the helgoland-toolbox, here you will find a list of how tos:\n\nIntegrate a D3 timeseries component\nIntegrate a table component\nExtend a timeseries entry component\n\nPreparing a how to app with angular-cli\nStarting from the very beginning in setting up the ng-app, angular-cli needs to be installed with npm. If you already have a running project skip this step and start with one of the how-tos.\nFollowing the instructions of the angular quickstart guide a new ng-app will be created with its folder-structure.\nOpen a terminal and change the working directory to the supposed location, where you want to create your ng-app with an integrated D3 timeseries component. In this tutorial the new ng-app will be named helgoland-how-to.\n\n\n\n\nCommand\n\n\n\n\nInstall angular-cli\nnpm install -g @angular/cli\n\n\nCreate ng-app\nng new helgoland-how-to\n\n\nChange into app-folder\ncd helgoland-how-to\n\n\nStart app\nng serve\n\n\n\nSuggestions for error handling\n\nCannot find module '@angular-devkit/core' click here\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html":{"url":"additional-documentation/how-tos/integrate-a-d3-timeseries-component.html","title":"additional-page - Integrate a D3 timeseries component","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow to Integrate a D3 timeseries component\nIn this tutorial a stepwise instruction will be given on how to integrate a D3 timeseries component into an angular app (ng-app).\nFirst initialize an app as described in the prepare section here or integrate this component in an existing project.\nStep 1: import helgoland dependencies\nTo start working with the helgoland D3 component a few dependencies are needed: helgoland-d3 and helgoland-core are necessary to provide the D3 timeseries component, in detail, to visualize the diagram containing the dataset graphs and to get accesss via the dataset API. For translations ngx-translate is used and the ngx-translate-http-loader will load the translations.\n\n\n\nInstall dependencies\n\n\n\n\nnpm i @helgoland/core\n\n\nnpm i @helgoland/d3\n\n\nnpm i @ngx-translate/http-loader\n\n\n\nImport dependencies to your ng-app by adding the following javascript code to src/app/app.module.ts:\n// Add dependencies for helgoland components.\nimport { HelgolandD3Module } from '@helgoland/d3';\nimport { DatasetApiInterface, SplittedDataDatasetApiInterface } from '@helgoland/core';\n\n// Add dependencies for translations.\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';Another step is to add the dependencies correctly to the @NgModule. As imports we will define the TranslateModule and the HelgolandD3Module and as providers we need to take the DatasetApiInterface with the SplittedDataDatasetApiInterface as useClass. To use the translation functions we will add a function called HttpLoaderFactory which is to be exported.\nYou can compare your src/app/app.module.ts file with the following code below:\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    HelgolandD3Module\n  ],\n  providers: [\n    {\n      provide: DatasetApiInterface,\n      useClass: SplittedDataDatasetApiInterface\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}Suggestions for error handling\n\nCannot find namespace 'GeoJSON' see below\n\nBy manually adapting the configuration in src/tsconfig.app.js this issue should be solved. But to let the changes be accepted, the app has to be restarted (by executing ng serve). Add to the types-array the type geojson which then should look like this:\n{\n  \"extends\": \"../tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"../out-tsc/app\",\n    \"baseUrl\": \"./\",\n    \"module\": \"es2015\",\n    \"types\": [\"geojson\"]\n  },\n  \"exclude\": [\n    \"test.ts\",\n    \"**/*.spec.ts\"\n  ]\n}Step 2: add code\nNow we will integrate the directive of the D3 timeseries component. Implement the directive of the graph by adding the following code to src/app/app.component.html. All fields in the n52-d3-timeseries-graph-directive are required to provide options, datasets and other information.\nEvery other code that was generated by the app creation is not necessary to run the D3 timeseries component. This can be deleted or kept for further coding.\n\n  \n\nOptional the style can be adapted by adding a css style modification to the directive. For example the following code will change the size:  \n\nThis code is implemented in the helgoland-toolbox github repository and can be viewed here.\nImplement the functionality of the n52-d3-timeseries-graph-directive by adding the following code to the class AppComponent in src/app/app.component.ts:\n\nAttention: If you would like to have pre-selected colors for your graph, you can change and add the color as string in the array of the variable colors. If you do not provide any color-entries in the array or not enough color-entries with this array, all missing colors will be randomly generated in the D3 timeseries component, because each graph needs an own color-entry.\n\n// These variables define the links for accessing the datasets and in which colors they are styled.\npublic datasetIdsMultiple = ['http://www.fluggs.de/sos2/api/v1/__63', 'http://www.fluggs.de/sos2/api/v1/__72'];\npublic colors = ['#123456', '#FF0000'];\n\n// The timespan will be set to the last 28 hours which is calculated in milliseconds (milliseconds*1000 = 100000000).\npublic timespan = new Timespan(new Date().getTime() - 100000000, new Date().getTime());\n\n// These are the plotting options. The boolen of 'togglePanZoom' is set to 'true' to pan the graph.\npublic diagramOptionsD3: D3PlotOptions = {\n    togglePanZoom: true,\n    showReferenceValues: false,\n    generalizeAllways: true\n};\n\n// 'selectedIds' determines the graphs that are visualized with a larger stroke-width. This can be set by clicking on the y-axis.\npublic selectedIds: string[] = [];\npublic datasetOptionsMultiple: Map = new Map();\n\nconstructor() {\n    this.datasetIdsMultiple.forEach((entry, i) => {\n        this.datasetOptionsMultiple.set(entry, new DatasetOptions(entry, this.colors[i]));\n    });\n}\n\n// This function changes the timespan of the graph which is needed for panning (and zooming).\npublic timespanChanged(timespan: Timespan) {\n    this.timespan = timespan;\n}This code is implemented in the helgoland-toolbox github repository and can be viewed here.\nA very important step should not be missedTo use the functionality of the functions in the src/app/app.component.ts we need to add the dependencies to use for example Timespan and D3PlotOptions. This is done by using the following imports:\nimport { DatasetOptions, Timespan } from '@helgoland/core';\nimport { D3PlotOptions } from '@helgoland/d3';Step 3: start working\nNow, that we have added all dependencies and the code to access the functionality of the D3 timeseries component you can start working on your app. If you did not run the app while following this tutorial you should now see the timeseries graph by starting your app with ng serve.\nAdditional Options\nAdd initial min, max value for y axis\nIt is possible to emit a min and max value for the y-axis with the DatasetOptions for each dataset. With these values, the y-axis will only show the selected y-range. Some restrictions are:\n\nIf there is no data provided in the selected timerange and y-axis min/max values, the default min and max range will be used.\nIf the y-axis min and max values are equal, the default min and max range will be used.\n\nZero-based y axis\nIt is possible to set a boolean in the DatasetOptions (zeroBasedYAxis) to show the y axis with minimum as 0, if the data in the selected timerange is above 0, or maximum 0, if the data in the selected timerange is below 0.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/how-tos/integrate-a-table-component.html":{"url":"additional-documentation/how-tos/integrate-a-table-component.html","title":"additional-page - Integrate a table component","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow to integrate a table component\nIn this tutorial a stepwise instruction will be given on how to integrate a table component into an angular app (ng-app).\nA quite similar code is integrated in the helgoland-toolbox github repository and can be viewed here.\nFirst initialize an app as described in the prepare section here or integrate this component in an existing project.\nStep 1: import helgoland dependencies\nTo start working with the table component a few dependencies are needed: helgoland-depiction and helgoland-core are necessary to provide the table component. For translations ngx-translate is used and the ngx-translate-http-loader will load the translations.\n\n\n\nInstall dependencies\n\n\n\n\nnpm i @helgoland/core\n\n\nnpm i @helgoland/depiction\n\n\nnpm i @ngx-translate/http-loader\n\n\n\nImport dependencies to your ng-app by adding the following javascript code to src/app/app.module.ts:\n// Add dependencies for helgoland components.\nimport { HelgolandDatasetTableModule } from '@helgoland/depiction/dataset-table';\nimport { DatasetApiInterface, SplittedDataDatasetApiInterface } from '@helgoland/core';\n\n// Add dependencies for translations.\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';Another step is to add the dependencies correctly to the @NgModule. As imports we will define the TranslateModule and the HelgolandDatasetTableModule and as providers we need to take the DatasetApiInterface with the SplittedDataDatasetApiInterface as useClass. To use the translation functions we will add a function called HttpLoaderFactory which is to be exported.\nYou can compare your src/app/app.module.ts file with the following code below:\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    HelgolandDatasetTableModule\n  ],\n  providers: [\n    {\n      provide: DatasetApiInterface,\n      useClass: SplittedDataDatasetApiInterface\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}Suggestions for error handling\n\nCannot find namespace 'GeoJSON' see below\n\nBy manually adapting the configuration in src/tsconfig.app.js this issue should be solved. But to let the changes be accepted, the app has to be restarted (by executing ng serve). Add to the types-array the type geojson which then should look like this:\n{\n  \"extends\": \"../tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"../out-tsc/app\",\n    \"baseUrl\": \"./\",\n    \"module\": \"es2015\",\n    \"types\": [\"geojson\"]\n  },\n  \"exclude\": [\n    \"test.ts\",\n    \"**/*.spec.ts\"\n  ]\n}Step 2: add code\nNow we will integrate the directive of the table component. Implement the directive of the table by replacing all of src/app/app.component.html with the following code. All fields in the n52-dataset-table-directive are required to provide options, datasets and other information.\nImplement the parameter for the n52-dataset-table-directive by adding the following code to the class AppComponent in src/app/app.component.ts:\n// defines the dataset by internal id structure\npublic datasetIds = [\n  'http://sensorweb.demo.52north.org/sensorwebtestbed/api/v1/__95',\n  'http://sensorweb.demo.52north.org/sensorwebtestbed/api/v1/__96',\n  'http://geo.irceline.be/sos/api/v1/__6941',\n  'http://sensorweb.demo.52north.org/sensorwebtestbed/api/v1/__97'\n];\n\n// defines the timeframe for which data should be fetched\npublic timespan = new Timespan(\n  new Date('2017-10-24T01:49:59.000Z').getTime(),\n  new Date('2017-10-25T01:49:59.000Z').getTime()\n);\n\n// defines the datasetOptions, where the color can be set\npublic datasetOptions: Map = new Map();\n\nconstructor() {\n  let i = 0;\n  // sets the color to the datasetOptions\n  const colors = ['firebrick', 'yellow', 'darkgreen', 'lightblue'];\n  this.datasetIds.forEach((entry) => {\n    this.datasetOptions.set(entry, new DatasetOptions(entry, colors[i++]));\n  });\n}This code is implemented in the helgoland-toolbox github repository and can be viewed here.\nA very important step should not be missedTo use the functionality of the functions in the src/app/app.component.ts we need to add the dependencies to use for example DatasetOptions and Timespan. This is done by using the following imports:\nimport { DatasetOptions, Timespan } from '@helgoland/core';Suggestions for error handling\n\nerror TS2307: Cannot find module '@helgoland/depiction/dataset-table'. Please upgrade the typescript dependency to a least 2.6.0 by npm i typescript@~2.6\n\nStep 3: start working\nNow, that we have added all dependencies and the code to access the functionality of the table component you can start working on your app. If you did not run the app while following this tutorial you should now see the dataset table by starting your app with ng serve.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/how-tos/extend-a-timeseries-entry-component.html":{"url":"additional-documentation/how-tos/extend-a-timeseries-entry-component.html","title":"additional-page - Extend a timeseries entry component","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow to extend a timeseries entry component\nThis tutorial gives a stepwise instruction on how extend a timeseries entry component with a new html-template. This tutorial can be used as a follow up of Integrate a D3 timeseries component.\nStep 1: Preparation to add new components\n\nadd scss support\n\nadjust in .angular-cli.json the parameter defaults.styleExt from css to scss\n\n\nrestucture of the view to have two other divs beside the diagram\n\nchange app.component.html to ```html\n\n    \n\n\n    \n        \n    \n    \n        \n    \n\n```\nrename app.component.css to app.component.scss and adjust it to```scss\n:host {\n    .diagram {\n        height: 500px;\n        flex: 1;\n    }\n    .bottom {\n        display: flex;\n        flex-direction: row;\n        .left,\n        .right {\n            width: 50%;\n        }\n    }\n}\n```\nadjust the import of the styles in app.component.ts to app.component.scss\n\n\n\nStep 2: Add existing timeseries entry component to app\n\ninstall @helgoland/depiction add HelgolandDatasetlistModule to import\ndo a```bash\nnpm i @helgoland/depiction\n```\nadd HelgolandDatasetlistModule in app.modul.ts to the import list therefor you need to import it:```typescript\nimport { HelgolandDatasetlistModule } from '@helgoland/depiction';\n```\nplease check if you use at least typescript v2.6 or greater, otherwise install it with: ```bash\nnpm i typescript@~2.6\n```\n\n\nadd SettingsService to provider\ncreate an Injectable ExtendedSettingsService which will extend a SettingsService in your project and add the missing imports (SettingsService, Settings of @helgoland/core and Injectable of @angular/core)```typescript\n@Injectable()\nexport class ExtendedSettingsService extends SettingsService {\n    constructor() {\n        super();\n        this.setSettings({\n        // TODO add settings here or load it from somewhere else...\n        });\n    }\n}\n```\nadd this ExtendedSettingsService in the list of the providers ```typescript\n{\n    provide: SettingsService,\n    useClass: ExtendedSettingsService\n}\n```\n\n\nadd n52-timeseries-entry to app.component.html (integrate this in the previous created div with the class left)  Common timeseries entries\n  \n      \n  \nadd selectDataset-method to AppComponent class (handles the selection of a dataset triggered inside the timeseries-entry-component)  public selectDataset(selected: boolean, id: string) {\n      if (selected) {\n          this.selectedIds.push(id);\n      } else {\n          this.selectedIds.splice(this.selectedIds.findIndex((entry) => entry === id), 1);\n      }\n  }\nadd isSelected-method to AppComponent class (informs the timeseries-entry-component, if the dataset is selected)\n  public isSelected(id: string) {\n      return this.selectedIds.indexOf(id) > -1;\n  }\nwith a ng serve you should see now the diagram and the listed timeseries entries, by clicking an entry you can highligh it in the diagram\n\n\nStep 3: Extend timeseries entry with new template\n\nadd angular-material in version 5 (see also the here)\ninstall```bash\nnpm i @angular/cdk@^5.0.0 @angular/material@^5.0.0\n```\nadjust app.module.ts with MatCardModule and MatButtonModule in the import list and import them from @angular/material\nadd a style sheet to styles.scss```css\n@import \"~@angular/material/prebuilt-themes/indigo-pink.css\";\n```\n\n\ncreate new component ExtendedTimeseriesEntryComponent - this will generate a component with a basic template an style sheet. The component is also added to the app.module.ts to the declarations list  ng generate component extended-timeseries\nadjust extended-timeseries.component.html to ```html\n\n    \n        \n            \n            {{phenomenonLabel}} - {{uom}}\n            {{platformLabel}}\n        \n        \n            Highlight\n        \n    \n\n```\nadjust extended-timeseries.component.tsexport class ExtendedTimeseriesComponent extends TimeseriesEntryComponent {\n    public changeColor() {\n        this.datasetOptions.color = this.color.getColor();\n        this.onUpdateOptions.emit(this.datasetOptions);\n    }\n}\n\n\n\nStep 4: Add new timeseries entry component to app\n\nadd new component app-extended-timeseries to app.component.html (integrate this in the previous created div with the class right)  Extended timeseries entries\n  \n      \n      \n  \nadd updateOptions-method to AppComponent class (this method is bound with the app-extended-timeseries component and reacts on dataset option changes)  public updateOptions(option: DatasetOptions, id: string) {\n      this.datasetOptionsMultiple.set(id, option);\n  }\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
